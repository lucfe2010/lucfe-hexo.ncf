{"posts":[{"title":"","text":"2023 Global Industry Classification StandardEnergyEnergy_0Energy Equipment &amp; ServicesOil &amp; Gas DrillingDrilling contractors or owners of drilling rigs that contract their services for drilling wells.Oil &amp; Gas Equipment &amp; ServicesManufacturers of equipment, including drilling rigs and equipment, and providers of supplies and services to companies involved in the drilling, evaluation and completion of oil and gas wells. Oil, Gas &amp; Consumable FuelsIntegrated Oil &amp; GasIntegrated oil companies engaged in the exploration &amp; production of oil and gas, as well as at least one other significant activity in either refining, marketing and transportation, or chemicals.Oil &amp; Gas Exploration &amp; ProductionCompanies engaged in the exploration and production of oil and gas not classified elsewhere.Oil &amp; Gas Refining &amp; MarketingCompanies engaged in the refining and marketing of oil, gas and/or refined products not classified in the Integrated Oil &amp; Gas or Independent Power Producers &amp; Energy Traders Sub-Industries.Oil &amp; Gas Storage &amp; TransportationCompanies engaged in the storage and/or transportation of oil, gas and/or refined products. Includes diversified midstream natural gas companies, oil and refined product pipelines, coal slurry pipelines and oil &amp; gas shipping companies.Coal &amp; Consumable FuelsCompanies primarily involved in the production and mining of coal, related products and other consumable fuels related to the generation of energy. Excludes companies primarily producing gases classified in the Industrial Gases Sub-Industry and companies primarily mining for metallurgical (coking) coal used for steel production. MaterialsMaterials_0ChemicalsCommodity ChemicalsCompanies that primarily produce industrial chemicals and basic chemicals. Including but not limited to plastics, synthetic fibers, films, commodity-based paints &amp; pigments, explosives and petrochemicals. Excludes chemical companies classified in the Diversified Chemicals, Fertilizers &amp; Agricultural Chemicals, Industrial Gases, or Specialty Chemicals Sub-Industries.Diversified ChemicalsManufacturers of a diversified range of chemical products not classified in the Industrial Gases, Commodity Chemicals, Specialty Chemicals or Fertilizers &amp; Agricultural Chemicals Sub-Industries.Fertilizers &amp; Agricultural ChemicalsProducers of fertilizers, pesticides, potash or other agriculture-related chemicals not classified elsewhere.Industrial GasesManufacturers of industrial gases.Specialty ChemicalsCompanies that primarily produce high value-added chemicals used in the manufacture of a wide variety of products, including but not limited to fine chemicals, additives, advanced polymers, adhesives, sealants and specialty paints, pigments and coatings. Construction MaterialsConstruction MaterialsManufacturers of construction materials including sand, clay, gypsum, lime, aggregates, cement, concrete and bricks. Other finished or semi-finished building materials are classified in the Building Products Sub-Industry. Containers &amp; PackagingMetal, Glass &amp; Plastic Containers (New Name)Manufacturers of metal, glass or plastic containers. Includes corks and caps.Paper &amp; Plastic Packaging Products &amp; Materials (New Name)Manufacturers of paper and cardboard containers and packaging. Metals &amp; MiningAluminumProducers of aluminum and related products, including companies that mine or process bauxite and companies that recycle aluminum to produce finished or semi-finished products. Excludes companies that primarily produce aluminum building materials classified in the Building Products Sub-Industry.Diversified Metals &amp; MiningCompanies engaged in the diversified production or extraction of metals and minerals not classified elsewhere. Including, but not limited to, nonferrous metal mining (except bauxite), salt and borate mining, phosphate rock mining, and diversified mining operations. Excludes iron ore mining, classified in the Steel Sub-Industry, bauxite mining, classified in the Aluminum Sub-Industry, and coal mining, classified in either the Steel or Coal &amp; Consumable Fuels Sub-Industries.CopperCompanies involved primarily in copper ore mining.GoldProducers of gold and related products, including companies that mine or process gold and the South African finance houses which primarily invest in, but do not operate, gold mines.Precious Metals &amp; MineralsCompanies mining precious metals and minerals not classified in the Gold Sub-Industry. Includes companies primarily mining platinum.SilverCompanies primarily mining silver. Excludes companies classified in the Gold or Precious Metals &amp; Minerals Sub-Industries.SteelProducers of iron and steel and related products, including metallurgical (coking) coal mining used for steel production. Paper &amp; Forest ProductsForest ProductsManufacturers of timber and related wood products. Includes lumber for the building industry.Paper ProductsManufacturers of all grades of paper. Excludes companies specializing in paper packaging classified in the Paper &amp; Plastic Packaging Products &amp; Materials Sub-Industry. IndustrialsCapital GoodsAerospace &amp; DefenseAerospace &amp; DefenseManufacturers of civil or military aerospace and defense equipment, parts or products. Includes defense electronics and space equipment. Building ProductsBuilding ProductsManufacturers of building components and home improvement products and equipment. Excludes lumber and plywood classified under Forest Products and cement and other materials classified in the Construction Materials Sub-Industry. Construction &amp; EngineeringConstruction &amp; EngineeringCompanies engaged in primarily non-residential construction. Includes civil engineering companies and large-scale contractors. Excludes companies classified in the Homebuilding Sub-Industry.Electrical Components &amp; EquipmentCompanies that produce electric cables and wires, electrical components or equipment not classified in the Heavy Electrical Equipment Sub-Industry.Heavy Electrical EquipmentManufacturers of power-generating equipment and other heavy electrical equipment, including power turbines, heavy electrical machinery intended for fixed-use and large electrical systems. Excludes cables and wires, classified in the Electrical Components &amp; Equipment Sub-Industry. Industrial ConglomeratesIndustrial ConglomeratesDiversified industrial companies with business activities in three or more sectors, none of which contributes a majority of revenues. Stakes held are predominantly of a controlling nature and stake holders maintain an operational interest in the running of the subsidiaries. MachineryConstruction Machinery &amp; Heavy Transportation Equipment (New Name)Manufacturers of heavy duty trucks, rolling machinery, earth-moving and construction equipment, and manufacturers of related parts. Includes non-military shipbuilding.Agricultural &amp; Farm MachineryCompanies manufacturing agricultural machinery, farm machinery, and their related parts. Includes machinery used for the production of crops and agricultural livestock, agricultural tractors, planting and fertilizing machinery, fertilizer and chemical application equipment, and grain dryers and blowers.Industrial Machinery &amp; Supplies &amp; Components (New Name)Manufacturers of industrial machinery and industrial components. Includes companies that manufacture presses, machine tools, compressors, pollution control equipment, elevators, escalators, insulators, pumps, roller bearings and other metal fabrications. Trading Companies &amp; DistributorsTrading Companies &amp; DistributorsTrading companies and other distributors of industrial equipment and products. Commercial &amp; Professional ServicesCommercial Services &amp; SuppliesCommercial PrintingCompanies providing commercial printing services. Includes printers primarily serving the media industry.Environmental &amp; Facilities ServicesCompanies providing environmental and facilities maintenance services. Includes waste management, facilities management and pollution control services. Excludes large-scale water treatment systems classified in the Water Utilities Sub-Industry.Office Services &amp; SuppliesProviders of office services and manufacturers of office supplies and equipment not classified elsewhere.Diversified Support ServicesCompanies primarily providing labor oriented support services to businesses and governments. Includes commercial cleaning services, dining &amp; catering services, equipment repair services, industrial maintenance services, industrial auctioneers, storage &amp; warehousing, transaction services, uniform rental services, and other business support services.Security &amp; Alarm ServicesCompanies providing security and protection services to business and governments. Includes companies providing services such as correctional facilities, security &amp; alarm services, armored transportation &amp; guarding. Excludes companies providing security software classified under the Systems Software Sub-Industry and home security services classified under the Specialized Consumer Services Sub-Industry. Also excludes companies manufacturing security system equipment classified under the Electronic Equipment &amp; Instruments Sub-Industry. Professional ServicesHuman Resource &amp; Employment Services (Definition Update)Companies providing business support services relating to human capital management. This Sub-Industry includes employment agencies, employee training, payroll processing, benefit &amp; retirement support services, corporate &amp; job seeker recruitment services, and online job portals generating revenue from fees or commissions for offering recruitment services to companies or job seekers.Research &amp; Consulting ServicesCompanies primarily providing research and consulting services to businesses and governments not classified elsewhere. Includes companies involved in management consulting services, architectural design, business information or scientific research, marketing, and testing &amp; certification services. Excludes companies providing information technology consulting services classified in the IT Consulting &amp; Other Services Sub-Industry.Data Processing &amp; Outsourced Services (Sector Change, New Code &amp; Definition Update)Providers of commercial data processing and/or business process outsourcing services. This Sub-Industry includes companies providing services for customer experience management, back-office automation, call center management, and investor communications. TransportationAir Freight &amp; LogisticsAir Freight &amp; LogisticsCompanies providing air freight transportation, courier and logistics services, including package and mail delivery and customs agents. Excludes those companies classified in the Passenger Airlines, Marine Transportation, Cargo Ground Transportation and Passenger Ground Transportation Sub-Industries. Passenger Airlines (New name)Passenger Airlines (New name)Companies providing primarily passenger air transportation. Marine Transportation (New Name)Marine Transportation (New Name)Companies providing goods or passenger maritime transportation. Excludes cruise-ships classified in the Hotels, Resorts &amp; Cruise Lines Sub-Industry. Ground Transportation (New Name)Rail Transportation (New Name)Companies providing primarily goods and passenger rail transportation.Cargo Ground Transportation (New)Companies providing ground transportation services for goods and freight.Passenger Ground Transportation (New)Companies providing passenger ground transportation and related services, including bus, taxi, vehicle rental, ride sharing and on-demand ride sharing platforms, and other passenger logistics. Transportation InfrastructureAirport ServicesOperators of airports and companies providing related services.Highways &amp; RailtracksOwners and operators of roads, tunnels and railtracks.Marine Ports &amp; ServicesOwners and operators of marine ports and related services. Consumer DiscretionaryAutomobiles &amp; ComponentsAutomobile Components (New Name)Automotive Parts &amp; Equipment (New Name)Manufacturers of parts and accessories for automobiles and motorcycles. Excludes companies classified in the Tires &amp; Rubber Sub-Industry.Tires &amp; RubberManufacturers of tires and rubber. AutomobilesAutomobile ManufacturersCompanies that produce mainly passenger automobiles and light trucks. Excludes companies producing mainly motorcycles and three-wheelers classified in the Motorcycle Manufacturers Sub-Industry and heavy duty trucks classified in the Construction Machinery &amp; Heavy Transportation Equipment Sub-Industry.Motorcycle ManufacturersCompanies that produce motorcycles, scooters or three-wheelers. Excludes bicycles classified in the Leisure Products Sub-Industry. Consumer Durables &amp; ApparelHousehold DurablesConsumer ElectronicsManufacturers of consumer electronics products including TVs, home audio equipment, game consoles, digital cameras, and related products. Excludes personal home computer manufacturers classified in the Technology Hardware, Storage &amp; Peripherals Sub-Industry, and electric household appliances classified in the Household Appliances Sub-Industry.Home FurnishingsManufacturers of soft home furnishings or furniture, including upholstery, carpets and wall-coverings.HomebuildingResidential construction companies. Includes manufacturers of prefabricated houses and semi-fixed manufactured homes.Household AppliancesManufacturers of electric household appliances and related products. Includes manufacturers of power and hand tools, including garden improvement tools. Excludes TVs and other audio and video products classified in the Consumer Electronics Sub-Industry and personal computers classified in the Technology Hardware, Storage &amp; Peripherals Sub-Industry.Housewares &amp; SpecialtiesManufacturers of durable household products, including cutlery, cookware, glassware, crystal, silverware, utensils, kitchenware and consumer specialties not classified elsewhere. Leisure ProductsLeisure ProductsManufacturers of leisure products and equipment including sports equipment, bicycles and toys. Textiles, Apparel &amp; Luxury GoodsApparel, Accessories &amp; Luxury GoodsManufacturers of apparel, accessories &amp; luxury goods. Includes companies primarily producing designer handbags, wallets, luggage, jewelry and watches. Excludes shoes classified in the Footwear Sub-Industry.FootwearManufacturers of footwear. Includes sport and leather shoes.TextilesManufacturers of textile and related products not classified in the Apparel, Accessories &amp; Luxury Goods, Footwear or Home Furnishings Sub-Industries. Consumer ServicesHotels, Restaurants &amp; LeisureCasinos &amp; GamingOwners and operators of casinos and gaming facilities. Includes companies providing lottery and betting services.Hotels, Resorts &amp; Cruise LinesOwners and operators of hotels, resorts and cruise-ships. Includes travel agencies, tour operators and related services not classified elsewhere . Excludes casino-hotels classified in the Casinos &amp; Gaming Sub-Industry.Leisure FacilitiesOwners and operators of leisure facilities, including sport and fitness centers, stadiums, golf courses and amusement parks not classified in the Movies &amp; Entertainment Sub-Industry.RestaurantsOwners and operators of restaurants, bars, pubs, fast-food or take-out facilities. Includes companies that provide food catering services. Diversified Consumer ServicesEducation ServicesCompanies providing educational services, either on-line or through conventional teaching methods. Includes, private universities, correspondence teaching, providers of educational seminars, educational materials and technical education. Excludes companies providing employee education programs classified in the Human Resources &amp; Employment Services Sub-Industry.Specialized Consumer ServicesCompanies providing consumer services not classified elsewhere. Includes residential services, home security, legal services, personal services, renovation &amp; interior design services, consumer auctions and wedding &amp; funeral services. Consumer Discretionary Distribution &amp; Retail (New Name)DistributorsDistributorsDistributors and wholesalers of general merchandise not classified elsewhere. Includes vehicle distributors. Broadline Retail (New Name)Broadline Retail (New)Retailers offering a wide range of consumer discretionary merchandise. This Sub-Industry includes general and discount merchandise retailers, department stores and on-line retailers and marketplaces selling mostly consumer discretionary merchandise. Specialty RetailApparel RetailRetailers specialized mainly in apparel and accessories.Computer &amp; Electronics RetailOwners and operators of consumer electronics, computers, video and related products retail stores.Home Improvement RetailOwners and operators of home and garden improvement retail stores. Includes stores offering building materials and supplies.Other Specialty Retail (New Name)Owners and operators of specialty retail stores not classified elsewhere. Includes jewelry stores, toy stores, office supply stores, health &amp; vision care stores, and book &amp; entertainment stores.Automotive RetailOwners and operators of stores specializing in automotive retail. Includes auto dealers, gas stations, and retailers of auto accessories, motorcycles &amp; parts, automotive glass, and automotive equipment &amp; parts.Homefurnishing RetailOwners and operators of furniture and home furnishings retail stores. Includes residential furniture, homefurnishings, housewares, and interior design. Excludes home and garden improvement stores, classified in the Home Improvement Retail Sub-Industry. Consumer StaplesConsumer Staples Distribution &amp; RetailConsumer Staples Distribution &amp; Retail (New Name)Drug RetailOwners and operators of primarily drug retail stores and pharmacies.Food DistributorsDistributors of food products to other companies and not directly to the consumer.Food RetailOwners and operators of primarily food retail stores.Consumer Staples Merchandise Retail (New Name &amp; Definition Update)Retailers offering a wide range of consumer staples merchandise such as food, household, and personal care products. This Sub-Industry includes hypermarkets, super centers and other consumer staples retailers such as discount retail spaces and on-line marketplaces selling mostly consumer staples goods. Food, Beverage &amp; TobaccoBeveragesBrewersProducers of beer and malt liquors. Includes breweries not classified in the Restaurants Sub-Industry.Distillers &amp; VintnersDistillers, vintners and producers of alcoholic beverages not classified in the Brewers Sub-Industry.Soft Drinks &amp; Non-alcoholic Beverages (New Name)Producers of non-alcoholic beverages including mineral waters. Excludes producers of milk classified in the Packaged Foods &amp; Meats Sub-Industry. Food ProductsAgricultural Products &amp; Services (New Name)Producers of agricultural products. Includes crop growers, owners of plantations and companies that produce and process foods but do not package and market them. Excludes companies classified in the Forest Products Sub-Industry and those that package and market the food products classified in the Packaged Foods &amp; Meats Sub-Industry.Packaged Foods &amp; MeatsProducers of packaged foods including dairy products, fruit juices, meats, poultry, fish and pet foods. TobaccoTobaccoManufacturers of cigarettes and other tobacco products. Household &amp; Personal ProductsHousehold ProductsHousehold ProductsProducers of non-durable household products, including detergents, soaps, diapers and other tissue and household paper products not classified in the Paper Products Sub-Industry. Personal Care Products (New Name)Personal Care Products (New Name)Manufacturers of personal and beauty care products, including cosmetics and perfumes. Health CareHealth Care Equipment &amp; ServicesHealth Care Equipment &amp; SuppliesHealth Care EquipmentManufacturers of health care equipment and devices. Includes medical instruments, drug delivery systems, cardiovascular &amp; orthopedic devices, and diagnostic equipment.Health Care SuppliesManufacturers of health care supplies and medical products not classified elsewhere. Includes eye care products, hospital supplies, and safety needle &amp; syringe devices. Health Care Providers &amp; ServicesHealth Care DistributorsDistributors and wholesalers of health care products not classified elsewhere.Health Care ServicesProviders of patient health care services not classified elsewhere. Includes dialysis centers, lab testing services, and pharmacy management services. Also includes companies providing business support services to health care providers, such as clerical support services, collection agency services, staffing services and outsourced sales &amp; marketing services.Health Care FacilitiesOwners and operators of health care facilities, including hospitals, nursing homes, rehabilitation centers and animal hospitals.Managed Health CareOwners and operators of Health Maintenance Organizations (HMOs) and other managed plans. Health Care TechnologyHealth Care TechnologyCompanies providing information technology services primarily to health care providers. Includes companies providing application, systems and/or data processing software, internet-based tools, and IT consulting services to doctors, hospitals or businesses operating primarily in the Health Care Sector. Pharmaceuticals, Biotechnology &amp; Life SciencesBiotechnologyBiotechnologyCompanies primarily engaged in the research, development, manufacturing and/or marketing of products based on genetic analysis and genetic engineering. Includes companies specializing in protein-based therapeutics to treat human diseases. Excludes companies manufacturing products using biotechnology but without a health care application. PharmaceuticalsPharmaceuticalsCompanies engaged in the research, development or production of pharmaceuticals. Includes veterinary drugs. Life Sciences Tools &amp; ServicesLife Sciences Tools &amp; ServicesCompanies enabling the drug discovery, development and production continuum by providing analytical tools, instruments, consumables &amp; supplies, clinical trial services and contract research services. Includes firms primarily servicing the pharmaceutical and biotechnology industries. FinancialsBanksBanks_0Diversified BanksLarge, geographically diverse banks with a national footprint whose revenues are derived primarily from conventional banking operations, have significant business activity in retail banking and small and medium corporate lending, and provide a diverse range of financial services. Excludes banks classified in the Regional Banks and Commercial &amp; Residential Mortgage Finance Sub-Industries. Also excludes investment banks classified in the Investment Banking &amp; Brokerage Sub-Industry.Regional Banks (Definition Update)Commercial banks, savings banks and thrifts whose business are derived primarily from conventional banking operations such as retail banking, corporate lending and originating various residential and commercial mortgage loans funded mainly through deposits. Regional banks tend to operate in limited geographic regions. Excludes companies classified in the Diversified Banks and Commercial &amp; Residential Mortgage Finance Sub-Industries. Also excludes investment banks classified in the Investment Banking &amp; Brokerage Sub-Industry. Financial Services (New Name)Financial ServicesDiversified Financial Services (New Name)Providers of a diverse range of financial services and/or with some interest in a wide range of financial services including banking, insurance and capital markets, but with no dominant business line. Excludes companies classified in the Regional Banks and Diversified Banks Sub-Industries.Multi-Sector HoldingsA company with significantly diversified holdings across three or more sectors, none of which contributes a majority of profit and/or sales. Stakes held are predominantly of a non-controlling nature. Includes diversified financial companies where stakes held are of a controlling nature. Excludes other diversified companies classified in the Industrials Conglomerates Sub-Industry.Specialized FinanceProviders of specialized financial services not classified elsewhere. Companies in this Sub-Industry derive a majority of revenue from one specialized line of business. Includes, but not limited to, commercial financing companies, central banks, leasing institutions, factoring services, and specialty boutiques. Excludes companies classified in the Financial Exchanges &amp; Data Sub-Industry.Commercial &amp; Residential Mortgage Finance (New)Financial companies providing commercial and residential mortgage financing and related mortgage services. This Sub-Industry includes non-deposit funded mortgage lending institutions, building societies, companies providing real estate financing products, loan servicing, mortgage broker services, and mortgage insurance.Transaction &amp; Payment Processing Services (New)Providers of transaction &amp; payment processing services and related payment services including digital/mobile payment processors, payment service providers &amp; gateways, and digital wallet providers. Consumer FinanceConsumer FinanceProviders of consumer finance services, including personal credit, credit cards, lease financing, travel-related money services and pawn shops. Excludes mortgage lenders classified in the Commercial &amp; Residential Mortgage Finance Sub-Industry. Capital MarketsAsset Management &amp; Custody BanksFinancial institutions primarily engaged in investment management and/or related custody and securities fee-based services. Includes companies operating mutual funds, closed-end funds and unit investment trusts. Excludes banks and other financial institutions primarily involved in commercial lending, investment banking, brokerage and other specialized financial activities.Investment Banking &amp; BrokerageFinancial institutions primarily engaged in investment banking &amp; brokerage services, including equity and debt underwriting, mergers and acquisitions, securities lending and advisory services. Excludes banks and other financial institutions primarily involved in commercial lending, asset management and specialized financial activities.Diversified Capital MarketsFinancial institutions primarily engaged in diversified capital markets activities, including a significant presence in at least two of the following area: large/major corporate lending, investment banking, brokerage and asset management. Excludes less diversified companies classified in the Asset Management &amp; Custody Banks or Investment Banking &amp; Brokerage Sub-Industries. Also excludes companies classified in the Banks or Insurance industry groups or the Consumer Finance Sub-Industry.Financial Exchanges &amp; DataFinancial exchanges for securities, commodities, derivatives and other financial instruments, and providers of financial decision support tools and products including ratings agencies. Mortgage Real Estate InvestmentTrusts (REITs)”Mortgage REITsCompanies or Trusts that service, originate, purchase and/or securitize residential and/or commercial mortgage loans. Includes trusts that invest in mortgage-backed securities and other mortgage related assets. InsuranceInsurance_0Insurance BrokersInsurance and reinsurance brokerage firms.Life &amp; Health InsuranceCompanies providing primarily life, disability, indemnity or supplemental health insurance. Excludes managed care companies classified in the Managed Health Care Sub-Industry.Multi-line InsuranceInsurance companies with diversified interests in life, health and property and casualty insurance.Property &amp; Casualty InsuranceCompanies providing primarily property and casualty insurance.ReinsuranceCompanies providing primarily reinsurance. Information TechnologySoftware &amp; ServicesIT ServicesIT Consulting &amp; Other ServicesProviders of information technology and systems integration services not classified in the Data Processing &amp; Outsourced Services or Internet Software &amp; Services Sub-Industries. Includes information technology consulting and information management services.Internet Services &amp; InfrastructureCompanies providing services and infrastructure for the internet industry including data centers and cloud networking and storage infrastructure. Also includes companies providing web hosting services. Excludes companies classified in the Software Industry. SoftwareApplication SoftwareCompanies engaged in developing and producing software designed for specialized applications for the business or consumer market. Includes enterprise and technical software, as well as cloud-based software. Excludes companies classified in the Interactive Home Entertainment Sub-Industry. Also excludes companies producing systems or database management software classified in the Systems Software Sub-Industry.Systems SoftwareCompanies engaged in developing and producing systems and database management software. Technology Hardware &amp; EquipmentCommunications EquipmentCommunications EquipmentManufacturers of communication equipment and products, including LANs, WANs, routers, telephones, switchboards and exchanges. Excludes cellular phone manufacturers classified in the Technology Hardware, Storage &amp; Peripherals Sub-Industry. Technology Hardware, Storage &amp; PeripheralsTechnology Hardware, Storage &amp; PeripheralsManufacturers of cellular phones, personal computers, servers, electronic computer components and peripherals. Includes data storage components, motherboards, audio and video cards, monitors, keyboards, printers, and other peripherals. Excludes semiconductors classified in the Semiconductors Sub-Industry. Electronic Equipment, Instruments &amp; ComponentsElectronic Equipment &amp; InstrumentsManufacturers of electronic equipment and instruments including analytical, electronic test and measurement instruments, scanner/barcode products, lasers, display screens, point-of-sales machines, and security system equipment.Electronic ComponentsManufacturers of electronic components. Includes electronic components, connection devices, electron tubes, electronic capacitors and resistors, electronic coil, printed circuit board, transformer and other inductors, signal processing technology/components.Electronic Manufacturing ServicesProducers of electronic equipment mainly for the OEM (Original Equipment Manufacturers) markets.Technology DistributorsDistributors of technology hardware and equipment. Includes distributors of communications equipment, computers &amp; peripherals, semiconductors, and electronic equipment and components. Semiconductors &amp; Semiconductor EquipmentSemiconductors &amp; Semiconductor Equipment_0Semiconductor Materials &amp; Equipment (New Name)Manufacturers of semiconductor equipment, including manufacturers of the raw material and equipment used in the solar power industry.SemiconductorsManufacturers of semiconductors and related products, including manufacturers of solar modules and cells. Communication ServicesTelecommunication ServicesDiversified Telecommunication ServicesAlternative CarriersProviders of communications and high-density data transmission services primarily through a high bandwidth/fiber-optic cable network.Integrated Telecommunication ServicesOperators of primarily fixed-line telecommunications networks and companies providing both wireless and fixed-line telecommunications services not classified elsewhere. Also includes internet service providers offering internet access to end users. Wireless Telecommunication ServicesWireless Telecommunication ServicesProviders of primarily cellular or wireless telecommunication services. Media &amp; EntertainmentMediaAdvertisingCompanies providing advertising, marketing or public relations services.BroadcastingOwners and operators of television or radio broadcasting systems, including programming. Includes radio and television broadcasting, radio networks, and radio stations.Cable &amp; SatelliteProviders of cable or satellite television services. Includes cable networks and program distribution.PublishingPublishers of newspapers, magazines and books in print or electronic formats. EntertainmentMovies &amp; EntertainmentCompanies that engage in producing and selling entertainment products and services, including companies engaged in the production, distribution and screening of movies and television shows, producers and distributors of music, entertainment theaters and sports teams. Also includes companies offering and/or producing entertainment content streamed online. Interactive Media &amp; ServicesInteractive Home EntertainmentProducers of interactive gaming products, including mobile gaming applications. Also includes educational software used primarily in the home. Excludes online gambling companies classified in the Casinos &amp; Gaming Sub-Industry.Interactive Media &amp; ServicesCompanies engaging in content and information creation or distribution through proprietary platforms, where revenues are derived primarily through pay-per-click advertisements. Includes search engines, social media and networking platforms, online classifieds, and online review companies. UtilitiesUtilities_0Electric UtilitiesElectric UtilitiesCompanies that produce or distribute electricity. Includes both nuclear and non-nuclear facilities. Gas UtilitiesGas UtilitiesCompanies whose main charter is to distribute and transmit natural and manufactured gas. Excludes companies primarily involved in gas exploration or production classified in the Oil &amp; Gas Exploration &amp; Production Sub-Industry. Also excludes companies engaged in the storage and/or transportation of oil, gas, and/or refined products classified in the Oil &amp; Gas Storage &amp; Transportation Sub-Industry. Multi-UtilitiesMulti-UtilitiesUtility companies with significantly diversified activities in addition to core Electric Utility, Gas Utility and/or Water Utility operations. Water UtilitiesWater UtilitiesCompanies that purchase and redistribute water to the end-consumer. Includes large-scale water treatment systems. Independent Power and Renewable Electricity ProducersIndependent Power Producers &amp; Energy TradersCompanies that operate as Independent Power Producers (IPPs), Gas &amp; Power Marketing &amp; Trading Specialists and/or Integrated Energy Merchants. Excludes producers of electricity using renewable sources, such as solar power, hydropower, and wind power. Also excludes electric transmission companies and utility distribution companies classified in the Electric Utilities Sub-Industry.Renewable ElectricityCompanies that engage in the generation and distribution of electricity using renewable sources, including, but not limited to, companies that produce electricity using biomass, geothermal energy, solar energy, hydropower, and wind power. Excludes companies manufacturing capital equipment used to generate electricity using renewable sources, such as manufacturers of solar power systems, installers of photovoltaic cells, and companies involved in the provision of technology, components, and services mainly to this market. Real EstateEquity Real Estate Investment Trusts (REITs) (New Name)Diversified REITs (New Name)Diversified REITsA company or Trust with significantly diversified operations across two or more property types. Industrial REITs (New)Industrial REITs (New Code)Companies or Trusts engaged in the acquisition, development, ownership, leasing, management and operation of industrial properties. Includes companies operating industrial warehouses and distribution properties. Hotel &amp; Resort REITs (New)Hotel &amp; Resort REITs (New Code)Companies or Trusts engaged in the acquisition, development, ownership, leasing, management and operation of hotel and resort properties. Office REITs (New)Office REITs (New Code)Companies or Trusts engaged in the acquisition, development, ownership, leasing, management and operation of office properties. Health Care REITs (New)Health Care REITs (New Code)Companies or Trusts engaged in the acquisition, development, ownership, leasing, management and operation of properties serving the health care industry, including hospitals, nursing homes, and assisted living properties. Residential REITs (New)Multi-Family Residential REITs (New)Companies or Trusts engaged in the acquisition, development, ownership, leasing, management and operation of apartments and other multi-family housing including student housing.Single-Family Residential REITs (New)Companies or Trusts engaged in the acquisition, development, ownership, leasing, management and operation of single-family residential housing including manufactured homes. Retail REITs (New)Retail REITs (New Code)Companies or Trusts engaged in the acquisition, development, ownership, leasing, management and operation of shopping malls, outlet malls, neighborhood and community shopping centers. Specialized REITs (New)Other Specialized REITs (New Name/ New Code/Definition Update)Companies or Trusts engaged in the acquisition, development, ownership, leasing, management and operation of properties not classified elsewhere. This Sub-Industry includes REITs that manage and own properties such as natural gas and crude oil pipelines, gas stations, fiber optic cables, prisons, automobile parking, and automobile dealerships.Self-Storage REITs (New)Companies or Trusts engaged in the acquisition, development, ownership, leasing, management and operation of self storage properties.Telecom Tower REITs (New)Companies or Trusts engaged in the acquisition, development, ownership, leasing, management and operation of telecom towers and related structures that support wireless telecommunications.Timber REITs (New)Companies or Trusts engaged in the acquisition, development, ownership, leasing, management and operation of timberland and timber-related properties.Data Center REITs (New)Companies or Trusts engaged in the acquisition, development, ownership, leasing, management and operation of data center properties. Real Estate Management &amp; Development (New)Real Estate Management &amp; Development (New Code)Diversified Real Estate Activities (New Code)Companies engaged in a diverse spectrum of real estate activities including real estate development &amp; sales, real estate management, or real estate services, but with no dominant business line.Real Estate Operating Companies (New Code)Companies engaged in operating real estate properties for the purpose of leasing &amp; management.Real Estate Development (New Code)Companies that develop real estate and sell the properties after development. Excludes companies classified in the Homebuilding Sub-Industry.Real Estate Services (New Code)Real estate service providers such as real estate agents, brokers &amp; real estate appraisers.","link":"/%E5%AD%A6%E7%A7%91_%E4%B8%93%E4%B8%9A_%E8%A1%8C%E4%B8%9A_%E5%9B%BE%E4%B9%A6-%E5%88%86%E7%B1%BB/GICS%20Global%20Industry%20Classification%20Standard/"},{"title":"","text":"Library of Congress ClassificationA GENERAL WORKSAC Collections. Series. Collected worksAE EncyclopediasAG Dictionaries and other general reference worksAI IndexesAM Museums. Collectors and collectingAN NewspapersAP PeriodicalsAS Academies and learned societiesAY Yearbooks. Almanacs. DirectoriesAZ History of scholarship and learning. The humanities B Philosophy, Psychology, ReligionB Philosophy (General)BC LogicBD Speculative philosophyBF PsychologyBH AestheticsBJ EthicsBL Religions. Mythology. RationalismBM JudaismBP Islam. Bahaism. Theosophy, etc.BQ BuddhismBR ChristianityBS The BibleBT Doctrinal TheologyBV Practical TheologyBX Christian Denominations C Auxiliary Sciences of HistoryC Auxiliary Sciences of History (General)CB History of CivilizationCC ArchaeologyCD Diplomatics. Archives. SealsCE Technical Chronology. CalendarCJ NumismaticsCN Inscriptions. EpigraphyCR HeraldryCS GenealogyCT Biography D World History and History of Europe, Asia, Africa, Australia, New Zealand, etcD History (General)DA Great BritainDAW Central EuropeDB Austria - Liechtenstein - Hungary - CzechoslovakiaDC France - Andorra - MonacoDD GermanyDE Greco-Roman WorldDF GreeceDG Italy - MaltaDH Low Countries - Benelux Countries (Continued on next page)DJ Netherlands (Holland)DJK Eastern Europe (General)DK Russia. Soviet Union. Former Soviet Republics - PolandDL Northern Europe. ScandinaviaDP Spain - PortugalDQ SwitzerlandDR Balkan PeninsulaDS AsiaDT AfricaDU Oceania (South Seas)DX Romanies E History of AmericaE 11-143 America 151-909 United States F History of the Americas F 1-975 United States local history 1001-1145.2 British America (including Canada) Dutch America 1170 French America 1201-3799 Latin America. Spanish America G Geography, Anthropology, and RecreationG Geography (General). Atlases. MapsGA Mathematical geography. CartographyGB Physical geographyGC OceanographyGE Environmental SciencesGF Human ecology. AnthropogeographyGN AnthropologyGR FolkloreGT Manners and customs (General)GV Recreation. Leisure H Social SciencesH Social sciences (General)HA StatisticsHB Economic theory. DemographyHC Economic history and conditionsHD Industries. Land use. LaborHE Transportation and communicationsHF CommerceHG FinanceHJ Public financeHM Sociology (General)HN Social history and conditions. Social problems. Social reformHQ The family. Marriage. WomenHS Societies: secret, benevolent, etc.HT Communities. Classes. RacesHV Social pathology. Social and public welfare. CriminologyHX Socialism. Communism. Anarchism J Political ScienceJ General legislative and executive papersJA Political science (General)JC Political theoryJF Political institutions and public administrationJJ Political institutions and public administration (North America)JK Political institutions and public administration (United States)JL Political institutions and public administration (Canada, Latin America, etc.)JN Political institutions and public administration (Europe)JQ Political institutions and public administration (Asia, Africa, Australia, PacificJS Local government. Municipal governmentJV Colonies and colonization. Emigration and immigration. International migrationJX International law, see JZ and KZ (obsolete)JZ International relations K LawK Law in general. Comparative and uniform law. JurisprudenceKB Religious law in general. Comparative religious law. JurisprudenceKBM Jewish lawKBP Islamic lawKBR History of canon lawKBU Law of the Roman Catholic Church. The Holy SeeKD-KDK United Kingdom and IrelandKDZ America. North AmericaKE CanadaKF United StatesKG Latin America - Mexico and Central America West Indies. Caribbean areaKH South AmericaKJ-KKZ EuropeKL-KWX Asia and Eurasia, Africa, Pacific Area, and AntarcticaKZ Law of nations L EducationL Education (General)LA History of educationLB Theory and practice of educationLC Special aspects of educationLD Individual institutions - United StatesLE Individual institutions - America (except United States)LF Individual institutions - EuropeLG Individual institutions - Asia, Africa, Indian Ocean islands, Australia,New Zealand,LH College and school magazines and papersLJ Student fraternities and societies, United StatesLT Textbooks M MusicM MusicML Literature on musicMT Instruction and study N Fine ArtsN Visual artsNA ArchitectureNB SculptureNC Drawing. Design. IllustrationND PaintingNE Print mediaNK Decorative artsNX Arts in general P Language and LiteratureP Philology. LinguisticsPA Greek language and literature. Latin language and literaturePB Modern languages. Celtic languagesPC Romance languagesPD Germanic languages. Scandinavian languagesPE English languagePF West Germanic languagesPG Slavic languages. Baltic languages. Albanian languagePH Uralic languages. Basque languagePJ Oriental languages and literaturesPK Indo-Iranian languages and literaturesPL Languages and literatures of Eastern Asia, Africa, OceaniaPM Hyperborean, Indian, and artificial languagesPN Literature (General)PQ French literature - Italian literature - Spanish literature - Portuguese literaturePR English literaturePS American literaturePT German literature - Dutch literature - Flemish literature since 1830 - Afrikaans literature -Scandinavian literature - Old Norse literature: Old Icelandic and Old Norwegian - Modern Icelandic literature -PZ Fiction and juvenile belles lettres Q ScienceQ Science (General)QA MathematicsQB AstronomyQC PhysicsQD ChemistryQE GeologyQH Natural history - BiologyQK BotanyQL ZoologyQM Human anatomyQP PhysiologyQR Microbiology R MedicineR Medicine (General)RA Public aspects of medicineRB PathologyRC Internal medicineRD SurgeryRE OphthalmologyRF OtorhinolaryngologyRG Gynecology and obstetricsRJ PediatricsRK DentistryRL DermatologyRM Therapeutics. PharmacologyRS Pharmacy and materia medicaRT NursingRV Botanic, Thomsonian, and eclectic medicineRX HomeopathyRZ Other systems of medicine S AgricultureS Agriculture (General)SB Plant cultureSD ForestrySF Animal cultureSH Aquaculture. Fisheries. AnglingSK Hunting sports T TechnologyT Technology (General)TA Engineering (General). Civil engineeringTC Hydraulic engineering. Ocean engineeringTD Environmental technology. Sanitary engineeringTE Highway engineering. Roads and pavementsTF Railroad engineering and operationTG Bridge engineeringTH Building constructionTJ Mechanical engineering and machineryTK Electrical engineering. Electronics. Nuclear engineeringTL Motor vehicles. Aeronautics. AstronauticsTN Mining engineering. MetallurgyTP Chemical technologyTR PhotographyTS ManufacturesTT Handicrafts. Arts and craftsTX Home economics U Military ScienceU Military science (General)UA Armies: Organization, distribution, military situationUB Military administrationUC Maintenance and transportationUD InfantryUE Cavalry. ArmorUF ArtilleryUG Military engineering. Air forcesUH Other services V Naval ScienceV Naval science (General)VA Navies: Organization, distribution, naval situationVB Naval administrationVC Naval maintenanceVD Naval seamenVE MarinesVF Naval ordnanceVG Minor services of naviesVK Navigation. Merchant marineVM Naval architecture. Shipbuilding. Marine engineering Z Bibliography, Library Science, and General Information ResourcesZ Books (General). Writing. Paleography. Book industries and trade. Libraries.ZA Information resources (General)","link":"/%E5%AD%A6%E7%A7%91_%E4%B8%93%E4%B8%9A_%E8%A1%8C%E4%B8%9A_%E5%9B%BE%E4%B9%A6-%E5%88%86%E7%B1%BB/LCS%20library%20of%20Congress%20Classification/"},{"title":"","text":"academic fieldsHumanities and social sciencesAnthropologyAnthropological criminologyAnthropological linguistics Synchronic linguistics (or Descriptive linguistics) Diachronic linguistics (or Historical linguistics) Ethnolinguistics Semiotic anthropology Sociolinguistics AnthrozoologyBiological anthropology Gene-culture coevolution Evolutionary anthropology Forensic anthropology Human behavioral ecology Human evolution Medical anthropology Molecular anthropology Neuroanthropology Nutritional anthropology Paleoanthropology Population genetics Primatology Biocultural anthropologyCultural anthropology Anthropology of development Anthropology of religion Applied anthropology Cognitive anthropology Cyborg anthropology Digital anthropology Digital culture Ecological anthropology Economic anthropology Environmental anthropology Ethnobiology Ethnobotany Ethnography Ethnohistory Ethnology Ethnomuseology Ethnomusicology Feminist anthropology Folklore Kinship Legal anthropology Mythology Missiology Political anthropology Political economic anthropology Psychological anthropology Public anthropology Symbolic anthropology Transpersonal anthropology Urban anthropology Linguistic anthropologySocial anthropology Anthropology of art Anthropology of institutions Anthropology of media Visual anthropology Archaeology Aerial archaeology Aviation archaeology Anthracology Archaeo-optics Archaeoacoustics Archaeoastronomy Archaeogeography Archaeological culture Archaeological theory Great ages archaeology Functionalism Processualism Post-processualism Cognitive archaeology Gender archaeology Feminist archaeology Archaeometry Archaeogenetics Bioarchaeology Computational archaeology Dendrochronology Geoarchaeology Isotope analysis Palynology Radiocarbon dating Zooarchaeology Archaeology of religion and ritual Archaeology of trade Archaeomythology Architectural analytics Battlefield archaeology Calceology Conflict archaeology Data archaeology Digital archaeology Experimental archaeology Environmental archaeology Ethnoarchaeology Forensic archaeology Glyptology History of archaeology Household archaeology Landscape archaeology and Landscape history Manuscriptology Maritime archaeology Media archaeology Modern archaeology Settlement archaeology Music archaeology Osteology Palaeoarchaeology Paleoanthropology Paleoethnobotany Paleopathology Paleoradiology Taphonomy Urban archaeology Historical archaeology Prehistoric archaeology protohistoric archaeology Biblical archaeology Classical archaeology Egyptology Assyriology Etruscology Near Eastern archaeology Medieval archaeology Post-medieval archaeology Industrial archaeology Contemporary archaeology African archaeology Australian archaeology European archaeology Russian archaeology Archaeology of the Americas Archaeology of China Archaeology of Israel HistoryAfrican history South African history Egyptian history East and Central African history Nigerian history Pan-American history North American history American history Canadian history Mexican history Cuban history South American history Latin American history Brazilian history Colombian history Venezuelan history Peruvian history Argentine history Pre-Columbian era Mayan history Aztec history Inca history Mississippian culture Ancient history Ancient Greek history (outline) Ancient Roman history (outline) History of the Roman Republic History of the Roman Empire Ancient Egyptian history (outline) Ancient Chinese history (outline) Ancient Middle Eastern history Asian history Chinese history Japanese history Korean history Mongolian history Indian history (outline) Turkish history Iranian history Philippine history Indonesian history European history British history French history German history Dutch history Italian history Spanish history Portuguese history Polish history Balkan history Scandinavian history Swedish history Norwegian history Danish history Finnish history Icelandic history Russian history Australian historyEconomic historyEnvironmental historyIntellectual historyModern historyPolitical historyScientific historyTechnological historyWorld historyPublic historyLinguistics and languagesClassics (outline)Languages Business English Classical language Modern language Standard English World Englishes Applied linguisticsComics studiesComposition studiesComputational linguisticsDiscourse analysisEnglish studiesEtymologyGrammarHistorical linguisticsHistory of linguisticsInterlinguisticsLexicologyLinguistic typologyMorphologyNatural language processingPhilologyPhoneticsPhonologyPragmaticsPsycholinguisticsSemanticsSemiotics (outline)SociolinguisticsSyntaxTerminology scienceRhetoricUsageWord usagePhilosophyMeta-philosophyMetaphysics (outline) Ontology Teleology Philosophy of mind Philosophy of artificial intelligence Philosophy of perception Philosophy of pain Philosophy of space and time Philosophy of action Determinism and Free will Epistemology (outline) Justification Reasoning errors Ethics (outline) Meta-ethics Normative ethics Virtue ethics Applied ethics Animal rights Bioethics Environmental ethics Moral psychology, Descriptive ethics, Value theory Aesthetics (outline) / Philosophy of artSocial philosophy and Political philosophy Anarchism (outline) Feminist philosophy Libertarianism (outline) Marxism Philosophical traditions and schools Platonism Aristotelianism Analytic philosophy Continental philosophy Eastern philosophy Feminist philosophy History of philosophy Ancient philosophy Medieval philosophy Scholasticism Humanism (outline) Modern philosophy Contemporary philosophy Logic (outline) Philosophical logic Mathematical logic Applied philosophy Philosophy of education Philosophy of history Philosophy of religion Philosophy of language Philosophy of law Philosophy of mathematics Philosophy of music Philosophy of science Philosophy of social science Philosophy of physics Philosophy of biology Philosophy of chemistry Philosophy of economics Philosophy of psychology Philosophy of engineering Systems philosophy ReligionAbrahamic religions Christianity (outline) Christian theology (outline) Islam (outline)/ Islamic studies Judaism (outline)/ Jewish studies ApologeticsIndian religions Buddhism (outline)/ Buddhist studies Hinduism (outline) Jainism Sikhism (outline) East Asian religions Chinese folk religion Confucianism Shinto Daoism (outline) I-Kuan Tao Caodaism Chondogyo Tenrikyo Oomoto Other religions African religions Ancient Egyptian religion Native American religions Gnosticism Occult Esotericism Mysticism Spirituality New religious movements Sumerian religion Zoroastrianism Comparative religionMythology and FolkloreTheismIrreligion Agnosticism Atheism (outline) and religious humanism Nontheism The artsCulinary arts Acquired taste Aftertaste Appetite Artisanal food Cooking Cuisine Culinary arts Culinary tourism Delicacy Diet Flavor Food choice Food pairing Food photography Food preparation Food presentation Food safety Food security Food studies Gastronomy Gourmet Palatability Specialty foods Traditional food Literature Poetry Comparative literature English literature World literature American literature British literature History of literature Medieval literature Post-colonial literature Post-modern literature Literary theory Critical theory (outline) Literary criticism Poetics Rhetoric Literary genre Creative writing Creative nonfiction Fiction writing (outline) Non-fiction writing Literary journalism Poetry Screenwriting Playwrighting Performing arts Music (outline) Accompanying Chamber music Church music Musical composition Conducting Choral conducting Orchestral conducting Wind ensemble conducting Early music Jazz studies (outline) Music education Music history Music genre Music theory Musicology Historical musicology Systematic musicology Ethnomusicology Organology Organ and historical keyboards Piano Strings, harp, oud, and guitar (outline) Singing Woodwinds, brass, and percussion Recording Orchestral studies Dance (outline) Choreography Dance notation Ethnochoreology History of dance Television (outline) Television studies Theatre (outline) History Acting Directing Stage design Puppetry Dramaturgy Scenography Musical theatre Film (outline) Animation Live action Filmmaking Film criticism Film genre Film studies Film theory Oral literature Public speaking Performance poetry Spoken word Storytelling Electronic game Arcade game Audio game Outline of video games Visual arts Craft Fine arts Forgery Graphic design[1][2][3] Graphic arts Drawing (outline) Painting (outline) Photography (outline) Sculpture (outline) EconomicsAgricultural economicsAnarchist economicsApplied economicsBehavioural economicsBioeconomicsBusinessComplexity economicsComputational economicsConsumer economicsDevelopment economicsDigital economyEcological economicsEconometricsEconomic geographyEconomic historyEconomic sectorEconomic sociologyEconomic systemsEconomic valueEnergy economicsEntrepreneurial economicsEnvironmental economicsEvolutionary economicsExperimental economicsFeminist economicsFinancial economicsFinancial econometricsGreen economicsGrowth economicsHuman development theoryIndustrial organizationInformation economicsInstitutional economicsInternational economicsIslamic economicsJEL classification codes in searching for articles by fields in economics journalsKnowledge economyLabor economicsLaw and economicsMacroeconomicsManagerial economicsMarket economyMarxian economicsMathematical economicsMicroeconomicsMonetary economicsNeuroeconomicsParticipatory economicsPolitical economyPublic financePublic economicsReal estate economicsResource economicsSocial choice theorySocialist economicsSocioeconomicsTransport economicsWelfare economicsGeographyCartography (outline)NavigationHuman geography Cultural geography Feminist geography Economic geography Development geography Historical geography Time geography Political geography &amp; geopolitics Military geography Strategic geography Population geography Social geography Behavioral geography Children’s geographies Health geography Tourism geography Urban geography Environmental geographyPhysical geography Biogeography Climatology Palaeoclimatology Coastal geography Geomorphology Geodesy Hydrology/Hydrography Glaciology Limnology Biogeochemistry Oceanography Landscape ecology Palaeogeography Regional geographyRemote sensingInterdisciplinary studiesArea studies African studies American studies Appalachian studies Canadian studies Latin American studies Asian studies Central Asian studies East Asian studies Iranian studies Japanology (Japanese studies) Korean studies Sinology (outline) (Chinese studies) South Asian studies (Indology) Dravidology Pakistan studies Sindhology Southeast Asian studies European studies Celtic studies German studies Indo-European studies Scandinavian studies Slavic studies Australian studies Pacific studies Middle East studies Russian and Eastern European studies Ethnic and cultural studies Cultural studies Ethnic studies Ethnology Culturology Cross-cultural studies Organizational studies Business economics Business ethics Business studies Decision science Entrepreneurship Human resources management Industrial organization Management Organizational behavior Organization theory Project management Quality control Strategy Political scienceAmerican politicsCanadian politicsCivicsComparative politicsEuropean studiesGeopolitics (Political geography)International relationsInternational organizationsNationalism studiesPeace and conflict studiesPolicy studiesPolitical behaviorPolitical culturePolitical economyPolitical historyPolitical philosophyPsephologyPublic administration Nonprofit administration Non-governmental organization (NGO) administration Public policySocial choice theoryPsychologyAbnormal psychologyApplied psychologyAsian psychologyBiological psychologyBlack psychologyClinical psychologyClinical neuropsychologyCognitive psychologyCommunity psychologyComparative psychologyConservation psychologyConsumer psychologyCounseling psychologyCriminal psychologyCultural psychologyDevelopmental psychologyDifferential psychologyEcological psychologyEducational psychologyEnvironmental psychologyEvolutionary psychologyExperimental psychologyGroup psychologyFamily psychologyFeminine psychologyForensic psychologyForensic developmental psychologyHealth psychologyHumanistic psychologyIndigenous psychologyLegal psychologyMathematical psychologyMedia psychologyMedical psychologyMilitary psychologyMoral psychology and Descriptive ethicsMusic psychologyNeuropsychologyOccupational psychologyOccupational health psychologyOrganizational psychologyParapsychology (outline)Pediatric psychologyPedology (children study)Personality psychologyPhenomenologyPolitical psychologyPositive psychologyProblem solvingPsychoanalysisPsychobiologyPsychometricsPsychology of religionPsychopathology Child psychopathology PsychophysicsQuantitative psychologyRehabilitation psychologySchool psychologySocial psychologySport psychologyTraffic psychologyTranspersonal psychologyTravel psychologySociologyAnalytical sociologyApplied sociology Political sociology Public sociology Social engineering Leisure studies Architectural sociologyBehavioral sociologyChinese sociologyCollective behavior Activism Social movements Social phenomenonCommunity informatics Social network analysis Comparative sociologyConflict theoryCritical sociologyCultural sociologyCultural studiesCriminology/Criminal justice (outline)Critical management studiesDemography/PopulationDigital sociologyDramaturgical sociologyEconomic sociologyEducational sociologyEmpirical sociologyEnvironmental sociologyEvolutionary sociologyFeminist sociologyFigurational sociologyFutures studies (outline)Historical sociologyHuman ecologyHumanistic sociologyIndustrial sociologyInteractionismInternet sociologyInterpretive sociology Phenomenology Ethnomethodology Symbolic interactionism Social constructionism Jealousy sociologyMacrosociologyMarxist sociologyMathematical sociologyMedical sociologyMesosociologyMicrosociologyMilitary sociologyNatural resource sociologyOrganizational studiesPhenomenological sociologyPolicy sociologyPolish sociologyPsychoanalytic sociologyScience studies/Science and technology studiesSexologySocial capitalSocial changeSocial conflict theorySocial control Pure sociology Social economySocial philosophySocial psychologySocial policySocial researchSocial transformation Computational sociology Economic sociology/Socioeconomics Economic development Social development Sociology of agingSociology of agricultureSociology of artSociology of autismSociology of childhoodSociology of conflictSociology of cultureSociology of cyberspaceSociology of devianceSociology of developmentSociology of disasterSociology of educationSociology of emotionsSociology of fatherhoodSociology of filmSociology of financeSociology of foodSociology of genderSociology of generationsSociology of globalizationSociology of governmentSociology of health and illnessSociology of human consciousnessSociology of immigrationSociology of knowledgeSociology of languageSociology of lawSociology of leisureSociology of literatureSociology of marketsSociology of marriageSociology of motherhoodSociology of musicSociology of natural resourcesSociology of organizationsSociology of peace, war, and social conflictSociology of punishmentSociology of race and ethnic relationsSociology of religionSociology of riskSociology of scienceSociology of scientific knowledgeSociology of social changeSociology of social movementsSociology of spaceSociology of sportSociology of technologySociology of terrorismSociology of the bodySociology of the familySociology of the history of scienceSociology of the InternetSociology of workSocial theorySocial stratificationSociological theorySociobiologySociocyberneticsSociolinguisticsSociomusicologyStructural sociologyTheoretical sociologyUrban studies or Urban sociology/Rural sociologyVictimologyVisual sociologyNatural sciencesBiologyAerobiologyAnatomy Comparative anatomy Human anatomy (outline) BacteriologyBiochemistry (outline)BioinformaticsBiophysics (outline)Biotechnology (outline)Botany (outline) Ethnobotany Phycology Cell biology (outline)ChronobiologyCognitive biologyComputational biologyConservation biologyCryobiologyDevelopmental biology Embryology Gerontology Teratology Ecology (outline) Agroecology Ethnoecology Human ecology Landscape ecology Forensic biologyGenetics (outline) Behavioural genetics Molecular genetics Population genetics GeobiologyEndocrinologyEvolution (outline) Systematics Taxonomy HistologyHuman biologyImmunology (outline)LimnologyLinnaean taxonomyMarine biologyMathematical biologyMicrobiologyMolecular biologyMycologyNeuroscience (outline) Behavioral neuroscience Neurophysics Computational Neuroscience Nutrition (outline)Paleobiology Paleontology ParasitologyPathology Anatomical pathology Clinical pathology Dermatopathology Forensic pathology Hematopathology Histopathology Molecular pathology Surgical pathology Phytopathology Physiology Human physiology Exercise physiology Population biologyPsychobiologyQuantum biologySociobiologyStructural BiologySystems biologyTheoretical biologyToxicologyVirology Molecular virology XenobiologyZoology (outline) Animal communications Apiology Arachnology Arthropodology Batrachology Bryozoology Carcinology Cetology Cnidariology Entomology Forensic entomology Ethnozoology Ethology Helminthology Herpetology Ichthyology (outline) Invertebrate zoology Mammalogy Cynology Felinology Malacology Conchology Limacology Teuthology Myriapodology Myrmecology (outline) Nematology Neuroethology Oology Ornithology (outline) Planktology Primatology Zootomy Zoosemiotics ChemistryAgrochemistryAnalytical chemistryAstrochemistryAtmospheric chemistryBiochemistry (outline)CatalystsChemical engineering (outline)Chemical biologyChemical physicsCheminformaticsComputational chemistryCosmochemistryEnvironmental chemistryFemtochemistryFlavorFlow chemistryForensic chemistryGeochemistryGreen chemistryHistochemistryHydrogenationImmunochemistryInorganic chemistryMarine chemistryMathematical chemistryMechanochemistryMedicinal chemistryMolecular biologyMolecular mechanicsNanotechnologyNatural product chemistryNeurochemistryNuclear chemistryOenologyOrganic chemistry (outline)Organometallic chemistryPetrochemistryPharmacologyPhotochemistryPhysical chemistry Electrochemistry Physical organic chemistry PhytochemistryPolymer chemistryQuantum chemistryRadiochemistrySoil chemistrySolid-state chemistrySonochemistrySupramolecular chemistrySurface chemistrySynthetic chemistrySystems chemistryTheoretical chemistryThermochemistryEarth sciencesAtmospheric scienceClimatologyEcologyEdaphologyEnvironmental scienceEnvironmental chemistryForensic geologyGemologyGeobiologyGeodesyGeography (outline)Geology (outline)GeochemistryGeomorphologyGeophysics (outline)GlaciologyHydrogeologyHydrology (outline)Meteorology (outline)MineralogyLimnologyOceanographyPedologyPaleontology Paleobiology Paleoecology PetrologyPlanetary science (alternatively, a part of space science)SedimentologySeismologySoil scienceSpeleologyTectonicsVolcanologyPhysicsAcoustics (outline) Quantum acoustics AgrophysicsApplied physics (outline) Accelerator physics Communication physics AstrophysicsAtmospheric physics Atmospheric electricity Atomic, molecular, and optical physicsAtomic physicsBiophysics (outline) Neurophysics Chemical physicsClassical physicsComputational physicsCondensed matter physicsCryogenicsDigital physicsDynamics Analytical dynamics Astrodynamics Brownian dynamics File dynamics Flight dynamics Fluid dynamics Aerodynamics Hydrodynamics Fractional dynamics Geodynamics Molecular dynamics Newtonian dynamics Langevin dynamics Quantum chromodynamics Quantum electrodynamics Relativistic dynamics Stellar dynamics System dynamics Thermodynamics Vehicle dynamics EconophysicsElectromagnetism Electricity Electrostatic Magnetism Engineering physicsExperimental physicsGeophysics (outline) Biogeophysics Geomagnetism Kinematics Fluid kinematics Relativistic kinematics Kinetics Electrokinetics Homeokinetics Laser physicsMaterials physicsMathematical physicsMedical physicsMechanics Analytical mechanics Applied mechanics Ballistics Biomechanics Celestial mechanics Classical mechanics Continuum mechanics Fluid mechanics Compressible flow Gas mechanics Fracture mechanics Hamiltonian mechanics Hydraulics Lagrangian mechanics Matrix mechanics Molecular mechanics Optomechanics Particle mechanics Quantum mechanics Relativistic mechanics Relativistic quantum mechanics Soil mechanics Solid mechanics Statistical mechanics Quantum statistical mechanics Mineral physicsMolecular physicsNuclear physicsOptics Geometrical optics Physical optics Quantum optics Particle physicsPetrophysicsPhotonicsPhysical chemistryPlasma physicsPolymer physicsQuantum physics Quantum technology RadiophysicsRelativity General relativity Special relativity Social physicsSoil physicsSolid state physicsSpintronicsStatics Fluid statics Statistical physicsSurface physicsTheoretical physics Quantum field theory Quantum gravity Thermal physicsSpace sciencesAerospace engineering Aerospace architecture Aerospace physiology Aerospace manufacturing Astronautics Space architecture Space colonization Space commercialization Space-based economy Space industry Space manufacturing Space tourism Space environment Space logistics Space food Space medicine Neuroscience in space Space religion Space sex Space survival Space warfare Space writing Aeronautics Control engineering Human spaceflight Robotic spacecraft Space corrosion Space technology Space telescopes Space-based radar Space-based solar power Spacecraft design Spacecraft propulsion Asteroid-impact avoidanceAstrobiologyAstrobotanyAstrochemistry Theoretical astronomy CosmochemistryCosmology Physical cosmology Micro-g environment researchRemote sensingSpace archaeologySpace explorationSpace lawSpace nuclear powerAstronomyAstronomy (outline) Archaeoastronomy Astrometry Amateur astronomy Forensic astronomy Extragalactic astronomy Galactic astronomy High-energy astronomy Observational astronomy Radio astronomy Microwave astronomy Submillimetre astronomy Infrared astronomy Optical astronomy UV astronomy X-ray astronomy Gamma-ray astronomy Cosmic-ray astronomy Neutrino astronomy Gravitational wave astronomy Photometry Spectroscopy Stellar astronomy Solar astronomy Astrophysics Celestial mechanics Compact objects Computational astrophysics Gravitational astronomy Black holes Interstellar medium Numerical simulations Astrophysical plasma Galaxy formation and evolution High-energy astrophysics Hydrodynamics Magnetohydrodynamics Star formation Orbital mechanics Physical cosmology Relativistic astrophysics Stellar astrophysics Helioseismology Solar physics Stellar evolution Stellar nucleosynthesis Space plasma physics Planetary science (alternatively, a part of earth science) Atmospheric science Exoplanetology Planetary formation Planetary rings Magnetospheres Planetary geology Planetary surfaces Small Solar System bodies Formal sciencesComputer sciencesTheory of computation Automata theory (Formal languages) Computability theory Computational complexity theory Concurrency theory VLSI designOperating systemsAlgorithms Randomized algorithms Distributed algorithms Parallel algorithms Computational geometry DatabaseData structuresComputer architectureComputer communications (networks) Information theory Internet, World Wide Web Wireless computing (Mobile computing) Ubiquitous computing Cloud computing Computer programComputer programmingComputer security and reliability Cryptanalysis Cryptography Fault-tolerant computing Distributed computing Grid computing Parallel computing High-performance computing Quantum computingComputer graphics Image processing Scientific visualization Software engineering Formal methods (Formal verification) Programming languages Programming paradigms Imperative programming Object-oriented programming Functional programming Logic programming Concurrent programming Program semantics Type theory Compilers Human–computer interactionInformation science (outline) Data management Data mining Database (outline) Relational database Distributed database Object database Information retrieval Information management Information system Information technology Knowledge management Multimedia, hypermedia Sound and music computing Quantum information Theoretical computer scienceArtificial intelligence (outline) Cognitive science Automated reasoning Machine learning Artificial neural network Support vector machine Natural language processing (Computational linguistics) Computer vision (outline) Expert systems Robotics (outline) Computing in mathematics, natural sciences, engineering, and medicine Numerical analysis Algebraic (symbolic) computation Computational number theory Computational mathematics Scientific computing (Computational science) Computational biology (bioinformatics) Computational physics Computational chemistry Computational neuroscience Computer-aided engineering Finite element analysis Computational fluid dynamics Computing in social sciences, arts, humanities, and professions Computational economics Computational sociology Computational finance Digital humanities (Humanities computing) History of computer hardware History of computer science (outline) Humanistic informatics Community informatics LogicMathematical logic Set theory Proof theory Model theory Recursion theory Modal logic Intuitionistic logic Philosophical logic Logical reasoning Modal logic Deontic logic Doxastic logic #### Logic in computer science Programming language semantics Formal methods (Formal verification) Type theory Logic programming Multi-valued logic Fuzzy logic MathematicsPure mathematics Algebra (outline) Group theory Ring theory Commutative algebra Field theory Linear algebra (Vector space) Multilinear algebra Universal algebra Homological algebra Differential algebra Lattice theory (Order theory) Representation theory K-theory Category theory Topos theory Analysis Real analysis Calculus (outline) Complex analysis Functional analysis Operator theory Non-standard analysis Harmonic analysis Fourier analysis p-adic analysis Ordinary differential equations Partial differential equations Probability theory Measure theory Integral geometry Ergodic theory Stochastic process Geometry (outline) and Topology General topology Algebraic topology Geometric topology Differential topology Algebraic geometry Projective geometry Affine geometry Non-Euclidean geometry Convex geometry Discrete geometry Integral geometry Euclidean geometry Finite geometry Galois geometry Noncommutative geometry Solid geometry Trigonometry Number theory Analytic number theory Algebraic number theory Geometric number theory Arithmetic Arithmetic combinatorics Logic and Foundations of mathematics Set theory Proof theory Model theory Recursion theory Modal logic Intuitionistic logic Applied mathematics Approximation theory Computational mathematics Numerical analysis Operations research Mathematical optimization Linear programming Dynamic programming Assignment problem Decision analysis Inventory theory Scheduling Real options analysis Systems analysis Stochastic processes Optimal maintenance Dynamical systems Chaos theory Fractal geometry Mathematical physics Quantum mechanics Quantum field theory Quantum gravity String theory Statistical mechanics Theory of computation Computational complexity theory Information theory Cryptography Steganography Combinatorics (outline) Coding theory Graph theory Game theory Statistics Mathematical statistics Econometrics Actuarial science Demography Computational statistics Data mining Regression (outline) Simulation Bootstrap (statistics) Design of experiments Block design and Analysis of variance Response surface methodology Sample Survey Sampling theory Statistical modelling Biostatistics Epidemiology Multivariate analysis Structural equation model Time series Reliability theory Quality control Statistical theory Decision theory Mathematical statistics Probability (outline) Survey methodology Systems scienceNetwork scienceChaos theoryConceptual systemsCommunications systemComplex systemsComplex systemCybernetics Biocybernetics Engineering cybernetics Management cybernetics Medical cybernetics New cybernetics Second-order cybernetics Sociocybernetics Control theory Affect control theory Control engineering Control systems Dynamical systems Perceptual control theory Operations researchSystems biology Computational systems biology Synthetic biology Systems immunology Systems neuroscience Systems chemistrySystem dynamics Social dynamics Systems ecology Ecosystem ecology Systems engineering Biological systems engineering Earth systems engineering and management Enterprise systems engineering Systems analysis Systems theory in anthropologySystems psychology Ergonomics Family systems theory Systemic therapy Systems theory Biochemical systems theory Ecological systems theory Developmental systems theory General systems theory Living systems theory LTI system theory Sociotechnical systems theory Mathematical system theory World-systems theory Professions and applied sciencesAgricultureAeroponicsAgroecologyAgrologyAgronomyAnimal husbandry (Animal science) Beekeeping (Apiculture) AnthroponicsAgricultural economicsAgricultural engineering Biological systems engineering Food engineering AquacultureAquaponicsEnologyEntomologyFogponicsFood science Culinary arts ForestryHorticultureHydrology (outline)HydroponicsPedologyPlant science (outline) Pomology Pest controlPurificationViticultureArchitecture and designArchitecture (outline) Interior architecture Landscape architecture Architectural analyticsHistoric preservationInterior design (interior architecture)Landscape architecture (landscape planning)Landscape designUrban planning (urban design)Visual communication Graphic design Type design Technical drawing Industrial design (product design) Ergonomics (outline) Toy and amusement design User experience design Interaction design Information architecture User interface design User experience evaluation Decorative artsFashion designTextile designBusinessAccounting Accounting research Accounting scholarship Business administrationBusiness analysisBusiness ethicsBusiness lawE-BusinessEntrepreneurshipFinance (outline)Industrial and labor relations Collective bargaining Human resources Organizational studies Labor economics Labor history Information systems (Business informatics) Management information systems Health informatics Information technology (outline)International tradeManagement (outline)Marketing (outline)Operations managementPurchasingRisk management and insuranceSystems scienceDivinityCanon lawChurch historyField ministry Pastoral counseling Pastoral theology Religious education techniques Homiletics Liturgy Sacred music Missiology HermeneuticsScriptural study and languages Biblical Hebrew Biblical studies/Sacred scripture Vedic Study New Testament Greek Latin Old Church Slavonic Theology (outline) Dogmatic theology Ecclesiology Sacramental theology Systematic theology Christian ethics Hindu ethics Moral theology Historical theology EducationComparative educationCritical pedagogyCurriculum and instruction Alternative education Early childhood education Elementary education Secondary education Higher education Mastery learning Cooperative learning Agricultural education Art education Bilingual education Chemistry education Counselor education Language education Legal education Mathematics education Medical education Military education and training Music education Nursing education Outdoor education Peace education Physical education/Sports coaching Physics education Reading education Religious education Science education Special education Sex education Sociology of education Technology education Vocational education Educational leadershipEducational philosophyEducational psychologyEducational technologyDistance educationEngineering and technologyChemical engineering Biocatalysts Bioengineering Biochemical engineering Biomolecular engineering Bionics Catalysis Materials engineering Molecular engineering Nanotechnology Polymer engineering Process design Petroleum engineering Nuclear engineering Food engineering Process engineering Reaction engineering Thermodynamics Transport phenomena Civil engineering Agricultural engineering Coastal engineering Construction Earthquake engineering Ecological engineering Environmental engineering Geotechnical engineering Engineering geology Hydraulic engineering Infrastructure Mining engineering Transportation engineering Highway engineering Structural engineering Architectural engineering Structural mechanics Surveying Electrical engineering Applied physics Computer engineering (outline) Computer science Control systems engineering Control theory Electronic engineering Electronics Instrumentation engineering Engineering physics Photonics Information theory Mechatronics Power engineering Robotics (outline) Microbotics Semiconductors Telecommunications engineering Quantum computing Materials science and engineering Biomaterials Ceramic engineering Corrosion engineering Crystallography Nanomaterials Photonics Physical metallurgy Polymer engineering Polymer science Semiconductors Mechanical engineering Aerospace engineering Aeronautics Astronautics Acoustical engineering Automotive engineering Biomedical engineering Biomechanical engineering Continuum mechanics Fluid mechanics Heat transfer Industrial engineering Manufacturing engineering Marine engineering Mass transfer Mechatronics Nanoengineering Ocean engineering Optical engineering Robotics Thermal engineering Thermodynamics Environmental studies and forestryEnvironmental management Coastal management Fisheries management Land management Natural resource management Waste management Wildlife management Environmental policyWildlife observationRecreation ecologySilvicultureSustainability studies Sustainable development ToxicologyEcologyFamily and consumer scienceConsumer educationHousingInterior designNutrition (outline) Foodservice management TextilesHuman physical performance and recreationBiomechanics / Sports biomechanicsSports coachingEscapologyErgonomicsPhysical fitness Aerobics Personal trainer / Personal fitness training Game designExercise physiologyKinesiology / Exercise physiology / Performance scienceLeisure studiesNavigationOutdoor activityPhysical activityPhysical education / PedagogySociology of sportSexologySports / exerciseSports journalism / sportscastingSport management Athletic director Sport psychologySports medicine Athletic training Survival skills Batoning Bushcraft Scoutcraft Woodcraft Toy and amusement designJournalism, media studies and communicationJournalism (outline) Broadcast journalism Digital journalism Literary journalism New media journalism Print journalism Sports journalism / sportscasting Media studies (Mass media) Newspaper Magazine Radio (outline) Television (outline) Television studies Film (outline) Film studies Game studies Fan studies Narratology Internet (outline) Communication studies Advertising Animal communication Communication design Conspiracy theory Digital media Electronic media Environmental communication Hoax Information theory Intercultural communication Marketing (outline) Mass communication Nonverbal communication Organizational communication Popular culture studies Propaganda Public relations (outline) Speech communication Technical writing Translation LawLegal management (academic discipline) Corporate law Mercantile law Business law Administrative lawCanon lawComparative lawConstitutional lawCompetition lawCriminal law Criminal procedure Criminal justice (outline) Police science Forensic science (outline) Islamic lawJewish law (outline)Jurisprudence (Philosophy of Law)Civil law Admiralty law Animal law/Animal rights Common law Corporations Civil procedure Contract law Environmental law Family law Federal law International law Public international law Supranational law Labor law Paralegal studies Property law Tax law Tort law (outline) Law enforcement (outline)Procedural lawSubstantive lawLibrary and museum studiesArchival scienceArchivistBibliographic databasesBibliometricsBookmobileCataloging Citation analysis CategorizationClassification Library classification Taxonomic classification Scientific classification Statistical classification Security classification Film classification Collections careCollection managementCollection Management PolicyConservation scienceConservation and restoration of cultural heritageCuratorData storageDatabase managementData modelingDigital preservationDisseminationFilm preservationFive laws of library scienceHistoric preservationHistory of library scienceHuman-computer interactionIndexerInformaticsInformation architectureInformation brokerInformation literacyInformation retrievalInformation science (outline)Information systems and technologyIntegrated library systemInterlibrary loanKnowledge engineeringKnowledge managementLibraryLibrary bindingLibrary circulationLibrary instructionLibrary portalLibrary technical servicesManagementMass deacidificationMuseologyMuseum educationMuseum administrationObject conservationPreservationProspect researchReaders’ advisoryRecords managementReferenceReference deskReference management softwareRegistrarResearch methodsSlow fireSpecial libraryStatisticsMedicineAlternative medicineAnesthesiologyCleaningClinical laboratory sciences/Clinical pathology/Laboratory medicine Clinical biochemistry Cytogenetics Cytohematology Cytology (outline) Haemostasiology Histology Clinical immunology Clinical microbiology Molecular genetics Parasitology Clinical physiologyCosmetologyDecontaminationDentistry (outline) Dental hygiene and epidemiology Dental surgery Endodontics Orthodontics Oral and maxillofacial surgery Periodontics Prosthodontics Implantology DermatologyEmergency medicine (outline)Health informatics/Clinical informaticsMusic therapyNursingNutrition (outline) and dieteticsOptometryOrthopticsOsteopathyPhysiotherapyOccupational therapySpeech and language pathologyInternal medicine Preventive medicine Cardiology Cardiac electrophysiology Dermatology Pulmonology Medical toxicology Endocrinology Gastroenterology Hepatology Oncology Geriatrics Gynaecology Hematology Infectious disease Nephrology Neurology Neurosurgery Obstetrics (outline) Ophthalmology Neuro-ophthalmology Orthopedic surgery Otolaryngology Pathology Pediatrics PharmacyPharmaceutical sciencesPharmacognosyPhysical fitness Aerobics Personal fitness training Kinesiology / Exercise physiology / Performance science Physical therapyPodiatryPrimary care General practice Psychiatry (outline)Psychology (outline)PsychosomaticPsychotherapyPublic healthRadiologyRecreation therapyRehabilitation medicineRespiratory medicine Pulmonology Sleep medicine Respiratory therapyRheumatologySports medicineSterilization (microbiology)Surgery Bariatric surgery Cardiothoracic surgery Neurosurgery Plastic surgery Trauma surgery Traumatology Traditional medicineTherapyUrology Andrology Veterinary medicineMilitary sciencesAmphibious warfareArtilleryBattlespace Air Information Land Sea Space CampaigningMilitary engineeringDoctrineEspionageGame theoryGrand strategy Containment Limited war Military science (outline) Philosophy of war Strategic studies Total war War (outline) LeadershipLogistics Materiel Supply chain management Military operationMilitary history Prehistoric Ancient Medieval Early modern Industrial Modern Fourth-generation warfare Military intelligenceMilitary lawMilitary medicineNaval science Naval engineering Naval tactics Naval architecture Organization Command and control Doctrine Education and training Engineers Intelligence Ranks Staff Technology and equipment Military exercises Military simulation Military sports Strategy Attrition Deception Defensive Offensive Counter-offensive Maneuver Goal Naval Tactics Aerial Battle Cavalry Charge Counter-attack Counter-insurgency Counter-intelligence Counter-terrorism Foxhole Endemic warfare Guerrilla warfare Infiltration Irregular warfare Morale Naval tactics Siege Surgical strike Tactical objective Trench warfare Military weapons Armor Artillery Biological Cavalry Conventional Chemical Cyber Economic Electronic Infantry Nuclear Psychological Unconventional Other Military Arms control Arms race Assassination Asymmetric warfare Civil defense Clandestine operation Collateral damage Cold war (general term) Combat Covert operation Cyberwarfare Defense industry Disarmament Intelligence agency Laws of war Mercenary Military campaign Military operation Mock combat Network-centric warfare Paramilitary Principles of war Private defense agency Private military company Proxy war Religious war Security Special forces Special operations Theater (warfare) Theft Undercover War crimes Warrior Public administrationCivil serviceCorrectionsConservation biologyCriminal justice (outline)Disaster researchDisaster responseEmergency managementEmergency servicesFire safety (Structural fire protection)Fire ecology (Wildland fire management)Governmental affairsInternational affairsLaw enforcementPeace and conflict studiesPolice sciencePolicy studies Policy analysis Public administration Nonprofit administration Non-governmental organization (NGO) administration Public policy doctrine Public policy school Regulation Public safetyPublic servicePublic policy Agricultural policy Commercial policy Cultural policy Domestic policy Drug policy Drug policy reform Economic policy Fiscal policy Incomes policy Industrial policy Investment policy Monetary policy Tax policy Education policy Energy policy Nuclear energy policy Renewable energy policy Environmental policy Food policy Foreign policy Health policy Pharmaceutical policy Vaccination policy Housing policy Immigration policy Knowledge policy Language policy Military policy Science policy Climate change policy Stem cell research policy Space policy Technology policy Security policy Social policy Public policy by country Social workChild welfareCommunity practice Community organizing Social policy Human ServicesCorrectionsGerontologyMedical social workMental healthSchool social workTransportationHighway safetyInfographicsIntermodal transportation studiesLogisticsMarine transportation Port management Seafaring Operations researchMass transitTravelVehicles","link":"/%E5%AD%A6%E7%A7%91_%E4%B8%93%E4%B8%9A_%E8%A1%8C%E4%B8%9A_%E5%9B%BE%E4%B9%A6-%E5%88%86%E7%B1%BB/wiki_academic_field/"},{"title":"","text":"行业分类 industry (economics)service sector 服务行业saletransport &amp; storage cargo Air cargo Intermodal Intermodal freight(to send or carry goods by air, sea or train) transport involves the transportation of freight in an intermodal container or vehicle, using multiple modes of transportation (e.g., rail, ship, aircraft, and truck), without any handling of the freight itself when changing modes. Mail Moving company A moving company, removalist or van line is a company that helps people and businesses move their goods from one place to another. It offers all-inclusive services for relocations, like packing, loading, moving, unloading, unpacking, and arranging of items to be shifted. Rail Trucking passenger transport warehousing hospitalityThe hospitality industry is a broad category of fields within the service industry that includes lodging, food and beverage service, event planning, theme parks, travel agency, tourism, hotels, restaurants and bars. lodging Lodging refers to the use of a short-term dwelling, usually by renting the living space or sometimes through some other arrangement. People who travel and stay away from home for more than a day need lodging for sleep, rest, food, safety, shelter from cold temperatures or rain, storage of luggage and access to common household functions. dwelling In law, a dwelling (also known as a residence, abode or domicile) is a self-contained unit of accommodation used by one or more households as a home - such as a house, apartment, mobile home, houseboat, recreational vehicle, or other “substantial” structure. Event management Event management is the application of project management to the creation and development of small and/or large-scale personal or corporate events such as festivals, conferences, ceremonies, weddings, formal parties, concerts, or conventions. convention A convention, in the sense of a meeting, is a gathering of individuals who meet at an arranged place and time in order to discuss or engage in some common interest. The most common conventions are based upon industry, profession, and fandom. bar A bar, also known as a saloon, a tavern or tippling house, or sometimes as a pub or club, is a retail business establishment that serves alcoholic beverages, such as beer, wine, liquor, cocktails, and other beverages such as mineral water and soft drinks. Bars often also sell snack foods, such as crisps or peanuts, for consumption on their premises. Wine is an alcoholic drink typically made from fermented grapes. Liquor (/ˈlɪkər/ LIK-ər) is an alcoholic drink produced by the distillation of grains, fruits, vegetables, or sugar that have already gone through alcoholic fermentation. asset managementprofessionalhealthcareentertainment &amp; leisure Gambling Sport Venues Arcades 游戏机厅; 电动游乐场 An amusement arcade, also known as a video arcade, amusements, arcade, or penny arcade (an older term), is a venue where people play arcade games, including arcade video games, pinball machines, electro-mechanical games, redemption games, merchandisers (such as claw cranes), or coin-operated billiards or air hockey tables. A merchandiser is a type of arcade gaming device, which features a machine that contains a display of merchandise, which can be won by playing the game. Claw cranes, often containing plush toys, are a common type of merchandiser. Amusement parks An amusement park is a park that features various attractions, such as rides and games, as well as other events for entertainment purposes. A theme park is a type of amusement park that bases its structures and attractions around a central theme, often featuring multiple areas with different themes. Fairgrounds A fair (archaic: faire or fayre) is a gathering of people for a variety of entertainment or commercial activities. Fairs are typically temporary with scheduled times lasting from an afternoon to several weeks. Fairs showcase a wide range of goods, products, and services, and often include competitions, exhibitions, and educational activities. Fairs can be thematic, focusing on specific industries or interests. Nightclubs otheradministrative Customer service Customer service is the assistance and advice provided by a company to those people who buy or use its products or services. Leasing Renting Staffing Private investigation security maintenance Janitor A janitor (American English), also known as a janny, custodian, porter, cleanser, cleaner or caretaker, is a person who cleans and maintains buildings. landscaping Landscape maintenance (or groundskeeping) is the art and vocation of keeping a landscape healthy, clean, safe and attractive, typically in a garden, yard, park, institutional(机构的；慈善机构的 connected with an institution) setting or estate. repairpersonal services Beauty Dry cleaning Funeral Maid service Maid service, cleaning service, apartment cleaning and janitorial service are terms more modernly describing a specialized outside service, providing a specific service to individuals, businesses, fraternal clubs and associations as well residential premises(房屋建筑及附属场地). Maids, per se, perform typical domestic chores(Chores are tasks such as cleaning, washing, and ironing that have to be done regularly at home.) such as cooking, ironing(熨烫 the task of pressing clothes, etc. with an iron to make them smooth), washing, cleaning, folding clothes, grocery shopping, walking the family dog and taking care of children. Some maid services offer hourly, daily, weekly, bi-weekly, and monthly work as well. A fraternity (from Latin frater: “brother”; whence, “brotherhood”) or fraternal organization is an organization, society, club or fraternal order traditionally of men associated together for various religious or secular aims. Secularity, also the secular or secularness (from Latin saeculum, “worldly” or “of a generation”), is the state of being unrelated or neutral in regards to religion. Pet care Sex povertyThe terms poverty industry or poverty business refer to a wide range of money-making activities that attract a large portion of their business from the poor. Businesses in the poverty industry often include payday loan centers, pawnshops, rent-to-own centers, casinos, liquor stores, lotteries, tobacco stores, credit card companies, and bail-bond services. travel Business travel Business travel is travel undertaken for work or business purposes, as opposed to other types of travel, such as for leisure purposes or regularly commuting between one’s home and workplace. Cruise lines Tourism","link":"/%E5%AD%A6%E7%A7%91_%E4%B8%93%E4%B8%9A_%E8%A1%8C%E4%B8%9A_%E5%9B%BE%E4%B9%A6-%E5%88%86%E7%B1%BB/wiki_industry%20classification/"},{"title":"","text":"textbookmiddle schoolmath math 6 pre-algebra algebra advanced algebra geometry science earth science life science physical science chemistry social studieshistory - world culturesgeographyamerican history universitybusiness &amp; financecomputer scienceengineering civil engineering environmental engineering chemical engineering electrical &amp; electronic enginerring 电气与电子工程,电工电子 电的；用电的；发电的connected with electricity; using or producing electricity 电；电能a form of energy from charged elementary particles , usually supplied as electric current through cables, wires, etc. for lighting, heating, driving machines, etc. 电子的；电子器件的having or using many small parts, such as microchips , that control and direct a small electric current the distinction between electrical engineering and electronics is usually based on the comparative strength of the electric currents used. In this sense, electrical engineering is the branch dealing with “heavy current”—that is, electric light and power systems and apparatuses—whereas electronics engineering deals with such “light current” applications as telephone and radio communication, computers, radar, and automatic control systems. mechanical engineering aeronautical engineering —航空（学）的；飞机制造学的 Aeronautical means involving or relating to the design and construction of aeroplanes. industrial engineering —工业工程the branch of engineering that deals with the creation and management of systems that integrate people and materials and energy in productive ways science &amp; mathematics chemistry biology &amp; life sicences agriculture —the science or practice of farming environmental studies earth sciences astronomy &amp; astrophysics 天文学 the scientific study of the sun, moon, stars, planets, etc. 天体物理学 the scientific study of the physical and chemical structure of the stars, planets, etc. mathematics physics mechanics 力学;机械学Mechanics is the part of physics that deals with the natural forces that act on moving or stationary objects. medicine &amp; healthlawsocial science anthropology 人类学 the study of the human race, especially of its origins, development, customs and beliefs geography political science psychology sociology humanities architecture design history philosophy art visual arts performing arts art history 大学自动化专业大一 高等数学 线性代数 工程图学 C/C++语言程序设计 大学物理 概率论与数理统计 复变函数与积分变换 电路分析基础 大二 电子技术基础 计算机辅助设计 软件技术基础 电机及拖动基础 Matlab应用实践 传感器与检测技术 DSP原理及应用 微机原理与接口技术 电器与PLC控制 电力电子技术 自动控制理论 大三 数据通信与网络 信号分析与处理 嵌入式系统 计算机控制技术 运动控制系统 现代控制理论基础 人工智能基础 控制系统仿真与实践 工业机器人技术 过程控制与仪表 机器视觉 最优控制基础 智能控制原理 系统工程导论 automation Mathematics I Digital and Embedded Systems Introduction to Systems Engineering Software Modelling, Analysis and Control Physical Systems —In the autumn semester mechanical and electrical-mechanical systems will be introduced. In the second semester the mechanical theme will continue with rotational systems, and then introduce thermodynamic systems as well as flow systems.Introduction to Electric and Electronic Circuits Mathematics II Engineering Statics—Two-dimensional statics are covered including force and moment systems, free body diagrams, equilibrium, friction, and the application to structures (such as beams, frames and trusses) that will be encountered in aerospace engineering applications. Dynamics I —-In Dynamics you will learn how objects move in 2 and 3 dimensions, and how to calculate trajectories and forces.Control Systems Design and Analysis Mechatronics—represent, analyse and design mechanical, electrical and computational systems and their integration into mechatronics systems. Signals, Systems, and Communications Object Oriented Programming State-Space Control Design Robotics","link":"/%E5%AD%A6%E7%A7%91_%E4%B8%93%E4%B8%9A_%E8%A1%8C%E4%B8%9A_%E5%9B%BE%E4%B9%A6-%E5%88%86%E7%B1%BB/textbook/"},{"title":"","text":"The most common systems in English-speaking countries areDewey Decimal Classification (DDC) The 15th edition, edited by Milton Ferguson, implemented the growing concept of the “standard edition”, designed for the majority of general libraries but not attempting to satisfy the needs of the very largest or of special libraries.[23] It also reduced the size of the Dewey system by over half, from 1,900 to 700 pages. Library of Congress Classification (LCC) Libraries in the United States generally use either the Library of Congress Classification System (LC) or the Dewey Decimal Classification System to organize their books. Most academic libraries use LC, and most public libraries and K-12 school libraries use Dewey. Colon classification (CC) he first edition of colon classification was published in 1933,[1] followed by six more editions. It is especially used in libraries in India. Universal Decimal Classification (UDC) In 1933, the bibliographic edition became the Universal Decimal Classification, which left the library and abridged versions as the formal Dewey Decimal Classification editions. The Universal Decimal Classification (UDC) is a bibliographic and library classification representing the systematic arrangement of all branches of human knowledge organized as a coherent system in which knowledge fields are related and inter-linked. EUROPE (41) A Albania, Andorra, Bosnia and Herzegovina, Bulgaria, Croatia, Czech Repubic, Estonia, Hungary, Latvia, Liechtenstein, Lithuania, Macedonia, Moldova, Montenegro, Poland, Portugal, Romania, Serbia, Slovakia, Slovenia, Spain, UkraineB Belarus, Belgium, Denmark, Finland, France, Norway, Russian Federation, Sweden, SwitzerlandC Austria, Faroe Islands, Germany, Greece, Iceland, Ireland, Italy, Malta, The Netherlands, United Kingdom","link":"/%E5%AD%A6%E7%A7%91_%E4%B8%93%E4%B8%9A_%E8%A1%8C%E4%B8%9A_%E5%9B%BE%E4%B9%A6-%E5%88%86%E7%B1%BB/library%20classification%20system/"},{"title":"","text":"Outline of academic disciplinesHumanitiesPerforming artsVisual artsLiteratureHistoryPhilosophyReligious StudiesDivinitythe study of the nature of God and religious belief Theologythe study of religion and beliefs Social scienceAnthropologythe study of the human race, especially of its origins, development, customs and beliefs Archaeologythe study of cultures of the past, and of periods of history by examining the remains of buildings and objects found in the ground EconomicsGeographythe scientific study of the earth’s surface, physical features, divisions, products, population, etc. Linguistics and languagesconnected with language or the scientific study of language language: the system of communication in speech and writing that is used by people of a particular country or area Political sciencePsychologySociologythe scientific study of the nature and development of society and social behaviour Natural scienceBiologyChemistryEarth sciencegeology: the scientific study of the earth, including the origin and history of the rocks and soil of which the earth is made Astronomythe scientific study of the sun, moon, stars, planets, etc. PhysicsFormal scienceComputer scienceMathematicsSystems scienceApplied scienceAgricultureArchitecture and designBusinessEducationEngineering and technologychemical engineering civil engineering Civil engineering is the planning, design, and building of roads, bridges, harbours, and public buildings. electrical engineering materials science and engineering mechanical engineering systems science Environmental studies and forestryforestry: the science or practice of planting and taking care of trees and forests Family and consumer scienceHome economics, also called domestic science or family and consumer sciences (often shortened to FCS or FACS), is a subject concerning human development, personal and family finances, consumer issues, housing and interior design, nutrition and food preparation, as well as textiles and apparel. textile纺织品any type of cloth made by weaving or knitting weave编织If you weave cloth or a carpet, you make it by crossing threads over and under each other using a frame or machine called a loom.编织被定义为通过线的交织来创建织物的过程。有两组用于交织的纱线。它们被称为经纱，即垂直纱，和纬纱，即水平纱。用这两组纱线制成机织织物。 loom织布机a machine for making cloth by twisting threads between other threads which go in a different direction knit针织to make clothes, etc. from wool or cotton thread using two long thin knitting needles or a machine 在针的帮助下，纱线被用于连接的线圈。 编织中的胎面相互垂直移动。针织中的线彼此平行。 编织织造需要两套纱线。针织织时只需要一套纱线。 编织织造织物结构紧凑。针织面料结构松散。 编织更耐用。针织不太耐用。 apparel/əˈpærəl/服装clothing, when it is being sold in shops/stores Human physical performance and recreationJournalism, media studies and communicationLawLibrary and museum studiesMedicine and healthMilitary sciencesPublic administration and Public policySocial workSocial work (SW) is an academic discipline and practice-based profession concerned with meeting the basic needs of individuals, families, groups, communities, and society as a whole to enhance their individual and collective well-being. Fields of employmentChild and women protection services, non-profit organizations, government agencies, disadvantaged groups centers, hospitals, schools, churches, shelters, community agencies, social planning services, think tanks, correctional services, labor and industry services Transportation","link":"/%E5%AD%A6%E7%A7%91_%E4%B8%93%E4%B8%9A_%E8%A1%8C%E4%B8%9A_%E5%9B%BE%E4%B9%A6-%E5%88%86%E7%B1%BB/wiki_outline%20of%20academic%20disciplines/"},{"title":"","text":"上市公司行业分类农、林、牧、渔业农业 指对各种农作物的种植 林业 畜牧业 指为了获得各种畜禽产品而从事的动物饲养、捕捉活动 渔业农、林、牧、渔服务业 采矿业 本门类包括06～12大类，采矿业指对固体（如煤和矿物）、液体（如原油）或气体（如天然气）等自然产生的矿物的采掘；包括地下或地上采掘、矿井的运行，以及一般在矿址或矿址附近从事的旨在加工原材料的所有辅助性工作，例如碾磨、选矿和处理，均属本类活动；还包括使原料得以销售所需的准备工作；不包括水的蓄集、净化和分配，以及地质勘查、建筑工程活动 煤炭开采和洗选业 指对各种煤炭的开采、洗选、分级等生产活动；不包括煤制品的生产和煤炭勘探活动 石油和天然气开采业 指在陆地或海洋，对天然原油、液态或气态天然气的开采，对煤矿瓦斯气（煤层气）的开采；为运输目的所进行的天然气液化和从天然气田气体中生产液化烃的活动，还包括对含沥青的页岩或油母页岩矿的开采，以及对焦油沙矿进行的同类作业 黑色金属矿采选业有色金属矿采选业 指对常用有色金属矿、贵金属矿，以及稀有稀土金属矿的开采、选矿活动 非金属矿采选业开采辅助活动 指为煤炭、石油和天然气等矿物开采提供的服务 其他采矿业 制造业 本门类包括13～43大类，指经物理变化或化学变化后成为新的产品，不论是动力机械制造，还是手工制作；也不论产品是批发销售，还是零售，均视为制造 建筑物中的各种制成品、零部件的生产应视为制造，但在建筑预制品工地，把主要部件组装成桥梁、仓库设备、铁路与高架公路、升降机与电梯、管道设备、喷水设备、暖气设备、通风设备与空调设备，照明与安装电线等组装活动，以及建筑物的装置，均列为建筑活动 本门类包括机电产品的再制造，指将废旧汽车零部件、工程机械、机床等进行专业化修复的批量化生产过程，再制造的产品达到与原有新产品相同的质量和性能 农副食品加工业 指直接以农、林、牧、渔业产品为原料进行的谷物磨制、饲料加工、植物油和制糖加工、屠宰及肉类加工、水产品加工，以及蔬菜、水果和坚果等食品的加工 食品制造业酒、饮料和精制茶制造业烟草制品业纺织业纺织服装、服饰业皮革、毛皮、羽毛及其制品和制鞋业木材加工和木、竹、藤、棕、草制品业家具制造业 指用木材、金属、塑料、竹、藤等材料制作的，具有坐卧、凭倚、储藏、间隔等功能，可用于住宅、旅馆、办公室、学校、餐馆、医院、剧场、公园、船舰、飞机、机动车等任何场所的各种家具的制造 造纸和纸制品业印刷和记录媒介复制业文教、工美、体育和娱乐用品制造业石油加工、炼焦和核燃料加工业化学原料和化学制品制造业医药制造业化学纤维制造业橡胶和塑料制品业非金属矿物制品业黑色金属冶炼和压延加工业有色金属冶炼和压延加工业金属制品业通用设备制造业专用设备制造业汽车制造业铁路、船舶、航空航天和其他运输设备制造业电气机械和器材制造业计算机、通信和其他电子设备制造业仪器仪表制造业其他制造业废弃资源综合利用业 指废弃资源和废旧材料回收加工 金属制品、机械和设备修理业 电力、热力、燃气及水生产和供应业电力、热力生产和供应业燃气生产和供应业水的生产和供应业 建筑业房屋建筑业土木工程建筑业 指土木工程主体的施工活动；不包括施工前的工程准备活动 建筑安装业 指建筑物主体工程竣工后，建筑物内各种设备的安装活动，以及施工中的线路敷设和管道安装活动；不包括工程收尾的装饰，如对墙面、地板、天花板、门窗等处理活动 建筑装饰和其他建筑业 批发和零售业批发业 指向其他批发或零售单位（含个体经营者）及其他企事业单位、机关团体等批量销售生活用品、生产资料的活动，以及从事进出口贸易和贸易经纪与代理的活动，包括拥有货物所有权，并以本单位(公司)的名义进行交易活动,也包括不拥有货物的所有权，收取佣金的商品代理、商品代售活动；本类还包括各类商品批发市场中固定摊位的批发活动，以及以销售为目的的收购活动 零售业 指百货商店、超级市场、专门零售商店、品牌专卖店、售货摊等主要面向最终消费者（如居民等）的销售活动，以互联网、邮政、电话、售货机等方式的销售活动，还包括在同一地点，后面加工生产，前面销售的店铺（如面包房）；谷物、种子、饲料、牲畜、矿产品、生产用原料、化工原料、农用化工产品、机械设备（乘用车、计算机及通信设备除外）等生产资料的销售不作为零售活动；多数零售商对其销售的货物拥有所有权，但有些则是充当委托人的代理人，进行委托销售或以收取佣金的方式进行销售 交通运输、仓储和邮政业铁路运输业 指铁路客运、货运及相关的调度、信号、机车、车辆、检修、工务等活动；不包括铁路系统所属的机车、车辆及信号通信设备的制造厂（公司）、建筑工程公司、商店、学校、科研所、医院等活动 道路运输业水上运输业航空运输业管道运输业装卸搬运和运输代理业仓储业 指专门从事货物仓储、货物运输中转仓储，以及以仓储为主的货物送配活动，还包括以仓储为目的的收购活动 邮政业 住宿和餐饮业住宿业 指为旅行者提供短期留宿场所的活动，有些单位只提供住宿，也有些单位提供住宿、饮食、商务、娱乐一体的服务，本类不包括主要按月或按年长期出租房屋住所的活动 餐饮业 指通过即时制作加工、商业销售和服务性劳动等，向消费者提供食品和消费场所及设施的服务 信息传输、软件和信息技术服务业电信、广播电视和卫星传输服务互联网和相关服务软件和信息技术服务业 指对信息传输、信息制作、信息提供和信息接收过程中产生的技术问题或技术需求所提供的服务 金融业货币金融服务资本市场服务保险业其他金融业 房地产业房地产业 租赁和商务服务业租赁业商务服务业 科学研究和技术服务业研究和试验发展 指为了增加知识（包括有关自然、工程、人类、文化和社会的知识），以及运用这些知识创造新的应用，所进行的系统的、创造性的活动；该活动仅限于对新发现、新理论的研究，新技术、新产品、新工艺的研制研究与试验发展，包括基础研究、应用研究和试验发展 专业技术服务业科技推广和应用服务业 水利、环境和公共设施管理业水利管理业生态保护和环境治理业公共设施管理业 居民服务、修理和其他服务业居民服务业机动车、电子产品和日用产品修理业其他服务业 教育教育卫生和社会工作卫生社会工作 文化、体育和娱乐业新闻和出版业广播、电视、电影和影视录音制作业 指对广播、电视、电影、影视录音内容的制作、编导、主持、播出、放映等活动；不包括广播电视信号的传输和接收活动 文化艺术业体育娱乐业 综合综合","link":"/%E5%AD%A6%E7%A7%91_%E4%B8%93%E4%B8%9A_%E8%A1%8C%E4%B8%9A_%E5%9B%BE%E4%B9%A6-%E5%88%86%E7%B1%BB/%E4%B8%8A%E5%B8%82%E5%85%AC%E5%8F%B8%E8%A1%8C%E4%B8%9A%E5%88%86%E7%B1%BB/"},{"title":"","text":"1Humanities 艺术学 Arts文学 Literature历史学 History哲学 Philosophy宗教学 Religious Social science 人类学与考古学 Anthropology and Archaeology经济管理学 Business and Economics语言学 Linguistics and languages政治学 Political science心理学 Psychology社会学 Sociology Natural science 生物学 Biology化学 Chemistry地球科学 Earth science天文学 Astronomy物理学 Physics Formal science 计算机科学技术 Computer science数学 Mathematics系统科学 Systems science Applied science农业学 Agriculture环境与资源科学技术 Environmental studies教育学 Education新闻学与传播学 Journalism media and communication法学 Law图书馆 情报与文献学 Library and museum studies医学 Medicine and health军事学 Military sciences 工程与技术科学 Engineering and technology 化学工程 Chemical engineering电气与电子工程 Electrical &amp; Electronic Engineering材料科学 Materials science and engineering机械工程 Mechanical engineering土木建筑工程学 Architecture and Civil engineering交通运输工程 Transportation A自然科学,生物学,化学,地球科学,天文学,物理学,B人文科学,艺术学,文学,历史学,哲学,宗教学,C社会科学,人类学与考古学,经济管理学,语言学,政治学,心理学,社会学,D Formal science,数学,计算机科学技术,系统科学,E应用科学,农学,教育学,医学,法学,环境与资源科学技术,新闻学与传播学,图书馆、情报与文献学,军事学,F工程与技术科学,机械工程,材料科学,土木建筑工程学,化学工程,电气与电子工程,交通运输工程","link":"/%E5%AD%A6%E7%A7%91_%E4%B8%93%E4%B8%9A_%E8%A1%8C%E4%B8%9A_%E5%9B%BE%E4%B9%A6-%E5%88%86%E7%B1%BB/%E4%B8%AA%E4%BA%BA%E5%AD%A6%E7%A7%91%E7%9B%AE%E5%BD%95_%E4%B8%AD%E8%8B%B1/"},{"title":"","text":"中国固书馆分类法A 马克思主义、列宁主义、毛泽东思想、邓小平理论A1 马克思、恩格斯著作A2 列宁著作A3 斯大林著作A4 毛泽东著作A49 邓小平著作A5 马克思、恩格斯、列宁、斯大林、毛泽东、邓小平著作汇编A7 马克思、恩格斯、列宁、斯大林、毛泽东、邓小平生平和传记A8 马克思主义、列宁主义、毛泽东思想、邓小平理论的学习和研究B 哲学、宗教BO 哲学理论B1 世界哲学B2 中国哲学B3 亚洲哲学B4 非洲哲学B5 欧洲哲学B6 大洋洲哲学B7 美洲哲学B80 思维科学B81 逻辑学（论理学）B82 伦理学（道德哲学）B83 美学B84 心理学B9 宗教C 社会科学总论C0 社会科学理论与方法论C1 社会科学概况、现状、进展C2 社会科学机构、团体、会议C3 社会科学研究方法C4 社会科学教育与普及C5 社会科学丛书、文版物C6 社会科学参考工具书[C7] 社会科学文献检索工具书C79 非书资料、视听资料C8 统计学C91 社会学C92 人口学C93 管理学[C94] 系统科学C95 民族学、文化人类学C96 人才学C97 劳动科学D 政治、法律DO 政治学、政治理论D1 国际共产主义运动D2 中国共产党D33/37 各国共产党D4 工人、农D5 世界政治D6 中国政治D73/77 各国政治D8 外交、国际关系D9 法律DF 法律E 军事E0 军事理论E1 世界军事E2 中国军事E3/7 各国军事E8 战略学、战役学、战术学E9 军事技术E99 军事地形学、军事地理学F 经济F0 经济学F1 世界各国经济概况、经济史、经济地理F2 经济管理F3 农业经济F4 工业经济F49 信息产业经济F5 交通运输经济F59 旅游经济F6 邮电通信经济F7 贸易经济F8 财政、金融G 文化、科学、教育、体育GO 文化理论G1 世界各国文化与文化事业G2 信息与知识传播G3 科学、科学研究G4 教育G8 体育H 语言、文字HO 语言学HI 汉语H2 中国少数民族语言H3 常用外国语H4 汉藏语系H5 阿尔泰语系（突厥-蒙古-通古斯语系）H61 南亚语系（澳斯特罗-亚细亚语系）H62 南印语系（达罗毗荼语系、德拉维达语系）H63 南岛语系（马来亚-玻里尼西亚语系）H64 东北亚诸语言H65 高加索语系（伊比利亚-高加索语系）H66 乌拉尔语系（芬兰-乌戈尔语系）H67 闪-含语系（阿非罗-亚细亚语系）H7 印欧语系H81 非洲诸语言H83 美洲诸语言H84 大洋洲诸语言H9 国际辅助语I 文学I0 文学理论I1 世界文学I2 中国文学I3日 各国文学J 艺术J0 艺术理论J1 世界各国艺术概况J19 专题艺术与现代边缘艺术J2 绘画J29 书法、篆刻J3 雕塑J4 摄影艺术J5 工艺美术[J59] 建筑艺术J6 曰尔J7 舞蹈J8 戏剧、曲艺、杂技艺术J9 电影、电视艺术K 历史、地理K0 史学理论K1 世界史K2 中国史K3 亚洲史K4 非洲史K5 欧洲史K6 大洋洲史K7 美洲史K81 传记K85 文物考古K89 风俗习惯K9 地理N 自然科学总论NO 自然科学理论与方法论N1 自然科学概况、现状、进展N2 自然科学机构、团体、会议N3 自然科学研究方法N4 自然科学教育与普及N5 自然科学丛书、文集、连续性出版物N6 自然科学参考工具书[N7] 自然科学文献检索工具N79 非书资料、视听资料N8 自然科学调查、考察N91 自然研究、自然历史N93 非线性科学N94 系统科学[N99] 情报学、情报工作O 数理科学和化学O1 数学O3 力学O4 物理学O6 化学07 晶体学P 天文学、地球科学P1 天文学P2 测绘学P3 地球物理学P4 大气科学（气象学）P5 地质学P7 海洋学P9 自然地理学Q 生物科学Q1 普通生物学Q2 细胞生物学Q3 遗传学Q4 生理学Q5 生物化学Q6 生物物理学Q7 分子生物学Q81 生物工程学（生物技术）[Q89] 环境生物学Q91 古生物学Q93 微生物学Q94 植物学Q95 动物学Q96 昆虫学Q98 人类学R 医药、卫生R1 预防医学、卫生学R2 中国医学R3 基础医学R4 临床医学R5 内科学R6 外科学R71 妇产科学R72 儿科学R73 肿瘤学R74 神经病学与精神病学R75 皮肤病学与性病学R76 耳鼻咽喉科学R77 眼科学R78 口腔科学R79 外国民族医学R8 特种医学R9 药学S 农业科学S1 农业基础科学S2 农业工程S3 农学（农艺学）S4 植物保护S5 农作物S6 园艺S7 林业S8 畜牧、动物医学、狩猎、蚕、蜂S9 水产、渔业T 工业技术TB 一般工业技术TD 矿业工程TE 石油、天然气工业TF 冶金工业TG 金属学与金属工艺TH 机械、仪表工业TJ 武器工业TK 能源与动力工程TL 原子能技术TM 电工技术TN 电子技术、通信技术TP 自动化技术、计算机技术TP3TP31 计算机软件 TP311 程序设计 、数据库 、软件工程TP311.1 程序设计TP311.11 程序设计方法TP311.12 数据结构TP311.13 数据库理论与系统TP311.5 软件工程 TP312 程序语言、算法语言TP312.8 算法语言 TP313 汇编语言、汇编程序 TP314 编译程序、解释程序 TP315 管理程序 、管理系统 TP316 操作系统TP316.1 分时操作系统TP316.2 实时操作系统TP316.3 批处理TP316.4 分布式操作系统 、并行式操作系统TP316.5 多媒体操作系统TP316.6 D O S操作系统TP316.7 Windows操作系统TP316.8 网络操作系统 (服务器操作系统)TP316.9 中文操作系统 TP317 应用软件 (程序包)TP317.1 办公自动化系统TP317.2 文字处理软件TP317.3 表处理软件TP317.4 图形图像处理软件TP317.5 多媒体软件TP317.6 游戏软件 TP319 专用软件 TP39 计算机的应用 TP391 信息处理 (信息加工) TP393 计算机网络 TQ 化学工业TS 轻工业、手工业、生活服务业TU 建筑科学TV 水利工程U 交通运输U1 综合运输U2 铁路运输U4 公路运输U6 水路运输[U8] 航空运输V 航空、航天VI 航空、航天技术的研究与探索V2 航空V4 航天（宇宙航行）[V7] 航空、航天医学X 环境科学、安全科学X1 环境科学基础理论X2 社会与环境X3 环境保护管理X4 灾害及其防治X5 环境污染及其防治X7 行业污染、废物处理与综合利用X8 环境质量评价与环境监测X9 安全科学Z 综合性图书Z1 丛书Z2 百科全书、类书Z3 辞典Z4 论文集、全集、选集、杂著Z5 年鉴、年刊Z6 期刊、连续性出版物Z8 图书报刊目录、文摘、索引","link":"/%E5%AD%A6%E7%A7%91_%E4%B8%93%E4%B8%9A_%E8%A1%8C%E4%B8%9A_%E5%9B%BE%E4%B9%A6-%E5%88%86%E7%B1%BB/%E4%B8%AD%E5%9B%BD%E5%9B%BA%E4%B9%A6%E9%A6%86%E5%88%86%E7%B1%BB%E6%B3%95/"},{"title":"学科分类与代码Classification and code of disciplines","text":"GB中华人民共和国国家标准GB/T137452009代替GB/T13745-1992学科分类与代码Classification and code of disciplines2009-05-06发布2009-11-01实施中华人民共和国国家质量监督检验检疫总局中国国家标准化管理委员会发布 前言本标准代替GB/T13745一1992《学科分类与代码》。本标准与GB/T13745-1992相比，主要变化如下： 增加了前言、引言和附录A；在标准的结构和格式编排方面，按照GB/T1.1-2000的规定进行了更新； 对学科代码的形式作出了修改，取消了十进制分类符号的点“.”，以便于信息处理；增设了“信息与系统科学相关工程与技术”等3个一级学科群，调整二级学科“心理学”为一级学科； 增设了“医学史”、“重症医学”、“光学工程”、“兵器科学与技术”等39个二级学科，调整“天文地球动力学”等13个三级学科为二级学科，变更了“生物工程”、“仪器仪表技术”等10个二级学科的类别归属； 增设了“基因组学”、“月球科学”、“术语学”等337个三级学科，调整“传染病学”等4个二级学科为三级学科，变更了“密码学”等65个三级学科的类别归属； 取消了“理论统计学”等4个二级学科及“普通心理学”等25个三级学科； 调整变更各级学科名称67项，如“货币银行学”更名为“金融学”等。上述关于学科增减、变更的详细资料见附录A。本标准的附录A为资料性附录。本标准由中国标准化研究院提出。本标准由全国信息分类编码标准化技术委员会归口。本标准主要起草单位：中国标准化研究院、中国科学院计划财务局。本标准主要起草人：李小林、邢立强、江洲、孙广芝、刘学英、刘植婷、史立武。本标准于1992年首次发布，本次为第一次修订。 引言人类的活动产生经验，经验的积累和消化形成认识，认识通过思考、归纳、理解、抽象而上升成为知识，知识在经过运用并得到验证后进一步发展到科学层面上形成知识体系，处于不断发展和演进的知识体系根据某些共性特征进行划分而成学科。学科是相对独立的知识体系，这里“相对”、“独立”和“知识体系”三个概念是本标准定义学科的基础。“相对”强调了学科分类具有不同的角度和侧面，“独立”则使某个具体学科不可被其他学科所替代，“知识体系”使“学科”区别于具体的“业务体系”或“产品”。本标准中出现了一些学科与专业、行业、产品名称相同的情况，是出于使学科名称简明的目的，其内在涵义是不同的。由于应用目的的不同，会产生不同的学科分类体系，本标准建立的学科分类体系是直接为科技政策和科技发展规划以及科研项目、科研成果统计和管理服务的，因此主要收录已经形成的学科，而对于成熟度不够，或者尚在酝酿发展有可能形成学科的雏形则暂不收录，待经过时间考验后下一次修订本标准时再酌情收录。 范围本标准规定了学科分类原则、学科分类依据、编码方法，以及学科的分类体系和代码。本标准适用于基于学科的信息分类、共享与交换，亦适用于国家宏观管理和部门应用。本标准的分类对象是学科，不同于专业和行业。本标准的分类不能代替文献、情报、图书分类及学术上的各种观点。 术语和定义下列术语和定义适用于本标准。 学科 discipline 相对独立的知识体系。 学科群 discipline group具有某一共同属性的一组学科。每个学科群包含了若干个分支学科。 学科分类原则 科学性原则根据学科所具备的客观的、本质的属性特征及其相互之间的联系，划分不同的从属关系和并列次序，组成一个有序的学科分类体系。 实用性原则对学科进行分类和编码，应以满足国家宏观管理的应用需求为基本目标，列入到分类体系内的学科覆盖领域应全面、适中。 简明性原则对学科层次的划分和组合，力求简单明了。 兼容性原则考虑国内传统分类体系的继承性和实际使用的延续性，并注意提高国际可比性。 扩延性原则根据现代科学技术体系具有高度动态性的特征，应为萌芽中的新兴学科留有余地，以便在分类体系相对稳定的情况下得到扩充和延续。 唯一性原则在学科分类体系中，一个学科只能用一个名称、一个代码。某学科被调整变更后，其原有的分类代码撤销，不得再赋予其他学科使用。 学科分类依据本标准主要依据学科的研究对象，学科的本质属性或特征，学科的研究方法，学科的派生来源，学科研究的目的与目标等五方面进行划分。 学科分类代码体系的说明 本标准所列学科应具备其理论体系和专门方法的形成；有关科学家群体的出现；有关研究机构和教学单位以及学术团体的建立并开展有效的活动；有关专著和出版物的问世等条件。 本标准仅将学科分类定义到一、二、三级，共设62个一级学科或学科群、676个二级学科或学科群、2382个三级学科。一级学科之上可归属到科技统计使用的门类，门类不在标准中出现。门类排列顺序是：A自然科学，代码为110190；B农业科学，代码为210240；C医药科学，代码为310360；D工程与技术科学，代码为410630；E人文与社会科学，代码为710~910。 本标准中学科排列次序和级别与学科重要程度无关。 本标准纳人了成长中的新兴学科，萌芽中的新兴学科暂不纳人。 在本分类体系，尤其在工程与技术科学分类体系中，出现的学科与专业、行业、产品名称相同，但其涵义不同. 分类体系中的名称，原则上用学科名称，考虑实际应用及学科分类层次的需要，有少量“学科群”名称出现。 一级学科根据情况，分别选用XX学”、“××科学”、“××科学技术”、“××工程”、“××工程技术科学”五种名称。 交叉或具有多重归属的学科，可在多处列类，只在一处赋予代码，其他相关位置不给代码，而在说明栏注“见×××××××(代码)”或”参见(代码)”~ 一级学科下的分支学科，根据确进字制置的不国特征进行划分，原则上取一个特征，考虑学科特点及使用需要，对有些学科用两种或内种以特征划分。 本分类体系的学科遵循从理论到应用：从一般到个别，从抽象到具体，从通用到专用，从简单到复杂，从低级到高级，从宏观到微观的排列顺序。 标准中出现的学科分类层次和数量分布小均衡现象各学科发展不平衡的客观实际所决定的。 本标准对某些横断学科、综合学科及某些特殊学科的处理方法 分类表中的信息科学”是指小概念，不包括“计算机科学”“信息科学与系统科学”的理论和技术部分，其性质与数学类似，排列在数学之后，考返其发展前景，设为一级学科。“信息科学”和“系统科学”都以“控制论”、“系统论”和“信息论为础理论，很难分开，故暂列在一类。 考虑到工程与技术科学门类特创然科学及生产应用的映射关系，在该门类中设立“信息与系统科学相关工程与技术”、自然科学相人罐与技术“产品应用相关工程与技术”等三个一级学科群，以归入基于自然科学或生产应用而派生出的各类工程技术学科或学科群，但早已形成的传统工程与技术一级学科(如化学工程、矿山工程技术、测绘科学技术等)则不在此列. “环境科学技术及资源科学技术”、“安全科学技术”、“管理学”三个一级学科(群)属综合学科，本学科列在自然科学和社会科学之间、 根据我国实际情况，将“地理学“列入“地球科学”下二级学科，“人文地理学”列人“地球科学”，属特例。 编码方法 本标准的学科分类划分为一、二、三级学科三个层次，用阿拉伯数字表示。一级学科用三位数字表示，二、三级学科分别用两位数字表示，代码结构见图XXX XX XX 三级学科 二级学科(或学科群)一级学科(或学科群) 二、三级学科设“群体学科”，用数字“99”表示。 标准中所有代码，仅表示该学科在本分类体系中的级别和位置，不表示其他含义。 学科分类代码表 A自然科学数学数学史asdf 数理逻辑与数学基础演绎逻辑学 亦称符号逻辑学证明论 亦称元数学 递归论模型论公理集合论数学基础数理逻辑与数学基础其他学科 数论初等数论解析数论代数数论超越数论 去番图逼近数的几何 概率数论计算数论数论其他学科 代数学线性代数群论域论 李群李代数 Kac-Moody代数环论 包括交换环与交换代数，结合环与结合代数，非结合环与非结合代数等 模论 格论泛代数理论 范畴论同调代数 代数K理论微分代数 代数编码理论代数学其他学科 代数几何学几何学几何学基础 欧氏几何学非欧几何学球面几何学向量和张量分析仿射几何学包括黎曼几何学等射影几何学 微分几何学分数维几何计算几何学 几何学其他学科 拓扑学点集拓扑学代数拓扑学同伦论 低维拓扑学同调论维数论格上拓扑学纤维丛论 几何拓扑学奇点理论 微分拓扑学拓扑学其他学科 数学分析微分学积分学级数论 数学分析其他学科 非标准分析函数论实变函数论 单复变函数论多复变函数论函数逼近论 调和分析 复流形 特殊函数论函数论其他学科 常微分方程定性理论稳定性理论解析理论常微分方程其他学科 偏微分方程椭圆型偏微分方程双曲型偏微分方程抛物型偏微分方程非线性偏微分方程偏微分方程其他学科 动力系统微分动力系统拓扑动力系统 复动力系统动力系统其他学科 积分方程泛函分析线性算子理论 变分法拓扑线性空间希尔伯特空间函数空间 巴拿赫空间算子代数测度与积分广义函数论 非线性泛函分析泛函分析其他学科 计算数学常微分方程数值解偏微分方程数值解积分变换与积分方程数值方法数值代数 优化计算方法 数值逼近与计算几何随机数值方法与统计计算 并行计算算法 误差分析与区间算法小波分析与傅立叶分析的数值方法反问题计算方法符号计算与计算机推理计算数学其他学科 概率论几何概率概率分布极限理论 随机过程 包括正态过程与平稳过程、点过程等 随机分析 鞅论应用概率论概率论其他学科具体应用入有关学科 数理统计学抽样理论假设检验非参数统计方差分析包括抽样分布、抽样调查等 相关回归分析充计推断 贝叶斯统计试验设计多元分析包括参数估计等 统计判决理论时间序列分析 空间统计数理统计学其他学科 应用统计数学统计质量控制可靠性数学保险数学 统计计算统计模拟 应用统计数学其他学科 运筹学线性规划非线性规划动态规划组合最优化参数规划整数规划 随机规划排队论对策论库存论决策论搜索论图论 亦称博弈论 统筹论最优化 运筹学其他学科 组合数学离散数学模糊数学计算机数学应用数学 具体应用人有关学科数学其他学科信息科学与系统科学信息科学与系统科学基础学科信息论控制论系统论信息科学与系统科学基础学科其他学科 运筹学系统学微分动力系统 混沌 一般系统论耗散结构理论协同学 突变论超循环论复杂系统与复杂性科学系统学其他学科 控制理论大系统理论系统辨识 状态估计鲁棒控制 控制理论其他学科 系统评估与可行性分析系统工程方法论系统建模 决策分析 决策支持系统管理信息系统 系统工程方法论其他学科 信息科学与系统科学其他学科力学基础力学理论力学理性力学 非线性力学连续介质力学 柔性多体力学陀螺力学 飞行力学 基础力学其他学科 固体力学弹性力学塑性力学包括弹塑性力学粘弹性、粘塑性力学蠕变 界面力学与表面力学 疲劳损伤力学断裂力学散体力学细观力学 微观力学电磁固体力学材料力学 结构力学计算固体力学实验固体力学固体力学其他学科 振动与波线性振动力学非线性振动力学弹性体振动力学 随机振动力学振动控制理论 固体中的波 流体一固体耦合振动振动与波其他学科 流体力学理论流体力学水动力学气体动力学空气动力学 悬浮体力学湍流理论粘性流体力学多相流体力学 渗流力学物理一化学流体力学等离子体动力学电磁流体力学非牛顿流体力学 流体机械流体力学旋转与分层流体力学辐射流体力学 计算流体力学实验流体力学环境流体力学微流体力学 流体力学其他学科 流变学爆炸力学爆轰与爆燃理论爆炸波、冲击波、应力波高速碰撞动力学爆炸力学其他学科 物理力学高压固体物理力学稠密流体物理力学高温气体物理力学 多相介质物理力学临界现象与相变原子与分子动力学物理力学其他学科 生物力学 包括生物流体力学与生物流变学等统计力学应用力学 具体应用人有关学科力学其他学科物理学物理学史物理学 理论物理学数学物理 电磁场理论经典场论相对论 量子力学统计物理学理论物理学其他学科 声学普通线性声学 含射线声学、波动声学、大气声学、声波反射、散射、衍射、干涉、传播衰减。 非线性声学流体动力声学 含航空声学、流体运动与声波相互作用、流体声辐射、燃烧声学等 超声学、量子声学和声学效应次声学 水声和海洋声学 结构声学和振动噪声、噪声效应及其控制建筑声学与电声学 声学信号处理生理、心理声学和生物声学语言声学和语音信号处理音乐声学 声学换能器、声学测量及方法声学测量方法声学材料信息科学中的声学问题 含通信声学、声学微机电系统、声学信道 与声学有关的其他物理问题和交叉学科 热学热力学热物性学传热学 热学其他学科 光学几何光学物理光学非线性光学 光谱学量子光学 信息光学导波光学发光学 红外物理 激光物理光子学与集成光学应用光学具体应用人有关学科 大气光学 环境光学海洋光学光学遥感超快激光及应光学其他学科 电磁学电学磁学 静电学静磁学 电动力学电磁学其他学科 无线电物理电磁波物理量子无线电物理微波物理学 超高频无线电物理 统计无线电物理无线电物理其他学科 电子物理学量子电子学 电子离子与真空物理 带电粒子光学电子物理学其他学科 凝聚态物理学凝聚态理论金属物理学 半导体物理学电介质物理学晶体学包括晶体生长、晶体化学等 非晶态物理学软物质物理学 薄膜物理学低维物理 表面与界面物理学固体发光 磁学超导物理学低温物理学 高压物理学摩擦学 介观物理学量子调控凝聚态物理学其他学科 等离子体物理学热核聚变等离子体物理学低温等离子体物理学等离子体诊断学 凝聚态等离子体物理学等离子体物理学其他学科 原子分子物理学原子与分子理论原子光谱学分子光谱学波谱学 原子与分子碰撞过程 玻色一爱因斯坦凝聚和冷原子物理原子分子物理学其他学科 原子核物理学核结构 核能谱学低能核反应 中子物理学裂变物理学 聚变物理学 轻粒子核物理学 重离子核物理学中高能核物理学原子核物理学其他学科 高能物理学粒子物理学宇宙线物理学 粒子加速器物理学高能物理实验 粒子宇宙学 高能物理学其他学科 计算物理学应用物理学 具体应用人有关学科物理学其他学科化学化学史无机化学元素化学配位化学同位素化学 无机固体化学无机合成化学无机分离化学 物理无机化学生物无机化学无机化学其他学科 有机化学元素有机化学 包括金属有机化学等天然产物有机化学 有机固体化学有机合成化学有机光化学物理有机化学 包括理论有机化学、立体化学等生物有机化学 金属有机光化学有机化学其他学科 分析化学化学分析 包括定性分析、定量分析等电化学分析光谱分析 波谱分析 质谱分析热化学分析色谱分析光度分析放射分析 状态分析与物相分析分析化学计量学分析化学其他学科 物理化学化学热力学化学动力学 包括分子反应动力学等结构化学 包括表面化学、结构分析等量子化学 胶体化学与界面化学催化化学 热化学光化学 包括超分子光化学、光电化学、激光化学、感光化学等 电化学磁化学 高能化学 包括辐射化学、等离体化学计算化学物理化学其他学科 化学物理学高分子物理高分子化学无机高分子化学 天然高分子化学功能高分子 包括液晶高分子化学高分子合成化学高分子物理化学高分子光化学 高分子化学其他学科 核化学放射化学 核反应化学裂变化学 聚变化学重离子核化学核转变化学 环境放射化学 应用化学化学生物学材料化学具体应用人有关学科 软化学碳化学纳米化学 材料化学其他学科 化学其他学科天文学天文学史天体力学摄动理论 天体力学定性理论天体形状与自转理论天体力学数值方法天文动力学 包括人造卫星、宇宙飞船动力学等历书天文学 天体力学其他学科 天体物理学理论天体物理学相对论天体物理学磁流体力学 等离子体动力学高能天体物理学 包括天体核物理学 实测天体物理学天体物理学其他学科 宇宙化学空间化学天体元素学 月球与行星化学宇宙化学其他学科 天体测量学基本天体测量学照相天体测量学射电天体测量学 空间天体测量学方位天文学 实用天文学天体测量学其他学科 射电天文学射电天体物理学射电天文方法射电天文学其他学科 空间天文学红外天文学紫外天文学 X射线天文学 Y射线天文学中微子天文学 空间天文学其他学科 天体演化学 各层次天体形成与演化人各学科星系与宇宙学星系动力学 星系天文学运动宇宙学星系际物质 大爆炸宇宙论星系形成与演化宇宙大尺度结构起源与演化星系与宇宙学其他学科 恒星与银河系恒星物理学恒星天文学 恒星形成与演化星际物质物理学银河系结构与运动恒星与银河系其他学科 太阳与太阳系太阳物理学太阳系物理学太阳系形成与演化行层物理学 行星际物理学陨星学 比较行星学 月球科学太阳与太阳系其他学科 天体生物学天文地球动力学时间测量学时间尺度时间测量与方法 守时理论授时理论与方法 时间测量学其他学科 天文学其他学科地球科学地球科学史大气科学大气物理学 包括大气光学、大气声学、大气电学、中层物理学等 大气化学大气环境学 包括大气遥感 大气探测动力气象学 包括数值天气预报与数值模拟等天气学 气候学 大气边界层物理学应用气象学 具体应用人有关学科大气科学其他学科 固体地球物理学地球动力学 亦有“大陆动力学，大地构造物理学，地质物理”等名称 地球重力学地球流体力学 地壳与地形变地球内部物理学地声学 地热学 地电学 地磁学放射性地球物理学 地震学勘探地球物理学计算地球物理学 实验地球物理学固体地球物理学其他学科 空间物理学电离层物理学高层大气物理学磁层物理学空间物理探测 空间环境学空间物理学其他学科 地球化学元素地球化学有机地球化学放射性地球化学 同位素地球化学生物地球化学地球内部化学 同位素地质年代学成矿地球化学勘探地球化学 实验地球化学 能源地球化学 地球化学其他学科 大地测量学地球形状学 几何大地测量学物理大地测量学动力大地测量学空间大地测量学行星大地测量学 大地测量学其他学科 地图学地理学自然地理学 包括生态地理学、冰川学、冻土学、沙漠学、岩 溶学等 生物地理学土壤地理学化学地理学地貌学 人文地理学区域地理学城市地理学 人口地理学旅游地理学经济地理学世界地理学 历史地理学 地理学其他学科 地质学数学地质学地质力学 动力地质学矿物学 包括放射性矿物学 矿床学与矿相学 包括放射性矿床学，不包括石油、天然气和煤岩石学 岩土力学沉积学 古地理学 古生物学地层学与地史学 前寒武纪地质学第四纪地质学构造地质学 包括显微构造学等大地构造学 勘查地质学水文地质学 包括放射性水文地质学遥感地质学 区域地质学 火山学 石油与天然气地质学含天然气水合物地质学 煤田地质学 实验地质学工程地质学 地质学其他学科 水文学 水文物理学 水文化学 水文地理学 水文气象学 水文测量 水文图学 湖沼学 河流学与河口水文学 地下水文学 区域水文学 生态水文学 水文学其他学科 海洋科学 海洋物理学 海洋化学 海洋地球物理学 海洋气象学 海洋地质学 物理海洋学 海洋生物学 海洋地理学和河口海岸学原名为“河口、海岸学” 海洋调查与监测海洋工程 海洋测绘学 遥感海洋学亦名卫星海洋学 海洋生态学 环境海洋学 海洋资源学 极地科学 海洋科学其他学科 地球科学其他学科 生物学生物数学 生物物理学 生物信息论与生物控制论 理论生物物理学 生物声学与声生物物理学 生物光学与光生物物理学 生物电磁学 生物能量学 低温生物物理学 分子生物物理学与结构生物学原名为“分子生物物理学” 空间生物物理学 仿生学 系统生物物理学 生物影像学 生物物理学其他学科生物力学 生物化学 多肽与蛋白质生物化学 核酸生物化学 多糖生物化学 脂类生物化学 酶学 膜生物化学 激素生物化学 生殖生物化学 免疫生物化学 毒理生物化学 比较生物化学生物化学工程 应用生物化学具体应用人有关学科 生物化学其他学科 细胞生物学 细胞生物物理学 细胞结构与形态学 细胞生理学 细胞进化学 细胞免疫学 细胞病理学 膜生物学 干细胞生物学 细胞生物学其他学科 免疫学 分子免疫学细胞免疫学 肿瘤免疫学 免疫病理学 免疫治疗学 疫苗学免疫遗传学 人体免疫学 免疫学其他学科 生理学形态生理学新陈代谢与营养生理学心血管生理学呼吸生理学 消化生理学血液生理学泌尿生理学内分泌生理学感官生理学生殖生理学骨骼生理学 肌肉生理学皮肤生理学 循环生理学 比较生理学年龄生理学 特殊环境生理学语言生理学生理学其他学科 发育生物学动物发育生物学植物发育生物学比较发育生物学 演化发育生物学繁殖生物学 发育生物学其他学科 古生物学遗传学数量遗传学 生化遗传学 细胞遗传学 体细胞遗传学发育遗传学亦称发生遗传学 分子遗传学辐射遗传学 进化遗传学生态遗传学 免疫遗传学毒理遗传学行为遗传学群体遗传学表观遗传学 遗传学其他学科 放射生物学放射生物物理学细胞放射生物学放射生理学 分子放射生物学放射免疫学 放射毒理学放射生物学其他学科 分子生物学基因组学包括结构基因组学、营养基因组学核糖核酸组学蛋白质组学 代谢组学 生物信息学分子生物学其他学科 专题生物学研究水生生物学 保护生物学 计算生物学营养生物学包括生化营养学、动物营养学、植物营养学、微生物营养学等 专题生物学研究其他学科 生物进化论生态学数学生态学化学生态学 生理生态学进化生态学分子生态学行为生态学 生态毒理学区域生态学 种群生态学 群落生态学生态系统生态学 生态工程学恢复生态学 景观生态学水生生态学与湖泊生态学海洋生态学 生态学其他学科 神经生物学神经生物物理学神经生物化学 神经形态学细胞神经生物学神经生理学 发育神经生物学分子神经生物学比较神经生物学 系统神经生物学神经生物学其他学科 植物学植物化学 植物生物物理学植物生物化学植物形态学植物解剖学植物细胞学 植物生理学植物生殖生物学植物发育学包括植物营养学 包括植物泡粉学植物遗传学植物引种驯化植物生态学 植物病理学植物地理学 植物群落学植物分类学 实验植物学民族植物学植物寄生虫学植物学其他学科 昆虫学昆虫生物化学昆虫形态学昆虫组织学昆虫生理学昆虫生态学 昆虫病理学昆虫毒理学昆虫行为学昆虫分类学实验昆虫学昆虫病毒学昆虫学其他学科 动物学动物生物物理学动物生物化学 动物形态学动物解剖学动物组织学动物细胞学动物生理学 动物生殖生物学动物生长发育学包括动物繁殖学包括动物胎学动物遗传学动物生态学动物病理学 动物行为学动物地理学含动物驯化学含昆虫生物地理学 动物分类学实验动物学 动物寄生虫学动物病毒学 动物学其他学科 微生物学微生物生物化学 微生物生理学微生物遗传学微生物生态学 微生物免疫学微生物分类学 真菌学细菌学 应用与环境微生物学微生物学其他学科具体应用入有关学科 病毒学普通病毒学病毒生物化学 分子病毒学病毒生态学病毒分类学噬菌体学 植物病毒学昆虫病毒学 动物病毒学 医学病毒学病毒学其他学科 人类学人类起源与演化学 人类形态学人类遗传学分子人类学 人类生态学心理人类学古人类学亦称“人文生态学” 人种学人体测量学人类学其他学科， 生物学其他学科B农业科学农学农业史农业科技史农业经济史农村社会史农业文化史农业史其他学科 农业基础学科农业数学 农业气象学与农业气候学农业生物物理学农业生物化学农业生态学 农业植物学农业微生物学 植物营养学 农业基础学科其他学科 农艺学作物形态学作物生理学 作物遗传学作物生态学种子学作物育种学包括航天育种学 良种繁育学作物栽培学 作物耕作学作物种质资源学农艺学其他学科 园艺学果树学瓜果学 蔬菜学茶学包括茶加工等 观赏园艺学园艺学其他学科 农产品贮藏与加工农产品贮藏与加工粮油产品贮藏与加工 果蔬贮藏与加工 畜产品贮藏与加工 土特产品贮藏与加工农副产品综合利用农产品贮藏与加工其他学科 土壤学土壤物理学土壤化学 土壤地理学土壤生物学土壤生态学 土壤耕作学土壤改良学土壤肥料学 土壤分类学土壤环境学 土壤调查与评价土壤修复 土壤学其他学科 植物保护学植物检疫学植物免疫学植物病理学植物药理学农业昆虫学植物病毒学 植物真菌学植物细菌学 植物线虫学农药学有害生物监测预警抗病虫害育种有害生物化学防治有害生物生物防治有害生物综合防治有害生物生态调控 农业转基因生物安全学 杂草防除鸟兽、鼠害防治植物保护学其他学科 农学其他学科 林学林业基础学科森林气象学森林地理学 森林水文学森林土壤学 森林生态学森林植物学 林业基础学科其他学科 林木遗传育种学林木育种学林木遗传学林木遗传育种学其他学科 森林培育学种苗学造林学包括治沙造林学 水土保持学 森林培育学其他学科 森林经理学森林测计学 森林测量学林业遥感林业信息管理林业系统工程森林经理学其他学科 森林保护学森林病理学森林昆虫学森林防火学 森林保护学其他学科 野生动物保护与管理防护林学经济林学园林学园林植物学风景园林工程 风景园林经营与管理园林学其他学科 林业工程森林采运学林业机械 林业机械化与电气化木材学木材加工与人造板工艺学包括家具设计与制造等 木材防腐学林产化学加工学林业工程其他学科 森林统计学林业经济学林学其他学科畜牧、兽医科学畜牧、兽医科学基础学科家畜生物化学家畜生理学 家畜遗传学家畜生态学家畜微生物学畜牧、兽医科学基础学科其他学科 畜牧学农业动物资源学家畜遗传育种学家畜繁殖学 动物营养学饲料学 家畜饲养管理学 特种经济动物饲养学家畜行为学家畜卫生学草原学 包括牧草学、牧草育种学、牧草栽培学、草地生 态学、草地保护学等 畜产品贮藏与加工畜牧机械化养禽学养蜂学养蚕学 畜牧经济学畜牧学其他学科 兽医学预防兽医学兽医病原学兽医流行学 家畜解剖学与组织学 家畜生理学 家畜组织胚胎学动物分子病原学兽医免疫学亦称兽医病理学 家畜病理学 兽医药理学与毒理学兽医临床学兽医卫生检疫学家畜寄生虫学家畜传染病学家畜病毒学中兽医学 兽医器械学兽医学其他学科 畜牧、兽医科学其他学科水产学水产学基础学科 水产化学 水产地理学水产生物学 水产遗传育种学水产动物医学 水域生态学 水产学基础学科其他学科 水产增殖学水产养殖学水产饲料学水产保护学捕捞学水产品贮藏与加工水产工程学水产资源学水产经济学水产学其他学科C医药科学基础医学医学史医学生物化学人体解剖学系统解剖学局部解剖学 人体解剖学其他学科 医学细胞生物学人体生理学人体组织胚胎学医学遗传学放射医学人体免疫学医学寄生虫学医学寄生虫免疫学医学昆虫学 医学蠕虫学医学原虫学 医学寄生虫学其他学科 医学微生物学医学病毒学病理学病理生物学病理解剖学病理生理学 免疫病理学 实验病理学比较病理学 系统病理学环境病理学分子病理学 病理学其他学科 药理学基础药理学临床药理学 生化药理学 分子药理学免疫药理学 药理学其他学科 医学实验动物学医学心理学医学统计学基础医学其他学科临床医学临床诊断学症状诊断学 物理诊断学 机能诊断学医学影像学包括放射诊断学、同位素诊断学、超声诊断学等 临床放射学实验诊断学临床诊断学其他学科 保健医学康复医学运动医学包括力学运动医学等老年医学包括老年基础医学和老年临床医学 保健医学其他学科 理疗学麻醉学麻醉生理学 麻醉药理学麻醉应用解剖学麻醉学其他学科 内科学心血管病学 呼吸病学 结核病学消化病学 血液病学肾脏病学 内分泌病学与代谢病学风湿病学与自体免疫病学 变态反应学感染性疾病学传染病学 内科学其他学科 外科学普通外科学显微外科学神经外科学颅脑外科学胸外科学 心血管外科学泌尿外科学骨外科学 烧伤外科学 整形外科学器官移植外科学实验外科学 小儿外科学包括小儿普通外科学、小儿骨外科学、小儿胸外科学、小儿心血管外科学、小儿烧伤外科学、小儿整形外科学、小儿神经外科学、新生儿外科学等 外科学其他学科 妇产科学妇科学产科学 围产医学助产学亦称围生医学胎儿学 妇科产科手术学妇产科学其他学科 儿科学小儿外科学小儿内科学 儿科学其他学科 眼科学耳鼻咽喉科学口腔医学口腔解剖生理学口腔组织学与口腔病理学口腔材料学口腔影像诊断学 口腔内科学 口腔颌面外科学口腔矫形学 口腔正畸学口腔病预防学口腔医学其他学科 皮肤病学性医学神经病学精神病学重症医学急诊医学核医学包括精神卫生及行为医学等 含放射治疗学 全科医学肿瘤学肿瘤免疫学肿瘤病因学肿瘤病理学 肿瘤诊断学肿瘤治疗学 肿瘤预防学实验肿瘤学 肿瘤学其他学科 护理学基础护理学专科护理学特殊护理学护理心理学护理伦理学护理管理学 护理学其他学科临床医学其他学科 预防医学与公共卫生学营养学毒理学消毒学流行病学媒介生物控制学环境医学亦为环境卫生学职业病学地方病学热带医学社会医学卫生检验学食品卫生学儿少与学校卫生学妇幼卫生学环境卫生学劳动卫生学放射卫生学卫生工程学卫生经济学卫生统计学计划生育学优生学健康促进与健康教育学卫生管理学卫生监督学卫生政策学卫生法学 卫生信息管理学卫生管理学其他学科 预防医学与公共卫生学其他学科军事医学与特种医学军事医学野战外科学和创伤外科学军队流行病学 军事环境医学军队卫生学军队卫生装备学军事人机工效学核武器医学防护学化学武器医学防护学生物武器医学防护学激光与微波医学防护学军事医学其他学科 特种医学航空航天医学潜水医学 航海医学法医学高压氧医学 特种医学其他学科 军事医学与特种医学其他学科药学药物化学生物药物学 包括天然药物化学等微生物药物学放射性药物学药剂学药效学医药工程药物管理学药物统计学药学其他学科中医学与中药学中医学 中医基础理论包括经络学等中医诊断学中医内科学中医外科学 中医骨伤科学 中医妇科学中医儿科学中医眼科学中医耳鼻咽喉科学 中医口腔科学中医老年病学针灸学 t包括针刺镇痛与麻醉等包括气功研究等：按摩推拿学中医养生康复学中医护理学 中医食疗学方剂学 中医文献学中医学其池学科包括难经、内经、伤寒论、金匮要略、腧穴学等 民族医学藏医药学 蒙医药学维吾尔医药学民族草药学 民族医学其他学科 中西医结合医学 中西医结合基础医学中西医结合医学导论中西医结合预防医学 中西医结合临床医学中西医结合护理学 中西医结合康复医学中西医结合养生保健医学中西医结合医学其他学科 中药学中药化学 中药药理学本草学 药用植物学中药鉴定学中药炮制学中药药剂学中药资源学 中药管理学中药学其他学科中医学与中药学其他学科 D工程与技术科学工程与技术科学基础学科工程数学 工程控制论工程力学 工程物理学工程地质学工程水文学工程仿生学工程心理学标准科学技术 又名标准学 标准原理与方法包括标准原理、标准体系、标准一致性测试、标准统计方法、标准化认证与认可方法、标准规程与格式等方面的研究 标准基础学包括标准化发展史、标准经济学、术语标准化、信息分类编码标准化、图形符号标准化、标准物质研究、标准文献学等标准工程与应用包括标准化机制与体制研究、标准管理学、质量控制与评价标准化、人类工效标准化等 标准科学技术其他学科计量学 工程图学 勘查技术 工程通用技术 密封技术粉末技术 真空技术薄膜技术 包装技术 照相技术物料搬运技术 工程通用技术其他学科 工业工程学亦称工程系统工程 工程与技术科学基础学科其他学科 信息与系统科学相关工程与技术控制科学与技术 自动控制应用理论包括线性、非线性、随机控制，最优控制，自适应控制系统，分布式控制系统，柔性控制系统等。 指挥与控制系统工程控制系统仿真技术 导航制导与控制机电一体化技术流体传动与控制自动化仪器仪表与装置机器人控制包括惯性导航与惯性制导 自动化技术应用具体应用入有关学科。 控制科学与技术其他学科仿真科学技术 仿真科学技术基础学科仿真建模理论与技术仿真系统理论与技术控制系统仿真技术 仿真应用具体应用人有关学科仿真科学技术其他学科信息安全技术 密码学 安全协议系统安全 网络安全软件安全 信息隐藏 安全测评 信息安全工程信息安全其他学科信息技术系统性应用 地理信息系统全球定位系统 海洋信息技术信息技术系统性应用其他学科信息与系统科学相关工程与技术其他学科 自然科学相关工程与技术物理学相关工程与技术 同步辐射及实验技术 物理学相关工程与技术其他学科光学工程 海洋工程与技术 海洋工程结构与施工 海底矿产开发海水资源利用海洋环境工程海岸工程 近海工程 深海工程 海洋资源开发利用技术包括海洋矿产资源、海水资源、海洋生物、海洋能开发技术等包括海洋水下技术、海洋观测技术、海洋遥感 海洋观测预报技术技术、海洋预报预测技术等 海洋环境保护技术海洋工程与技术其他学科 生物工程基因工程亦称生物技术。亦称遗传工程。 细胞工程蛋白质工程 代谢工程酶工程：发酵工程 亦称微生物工程，生物传感技术纳米生物分析技术生物工程其他学科 农业工程 农业机械学包括农业机械制造等。 农业机械化 农业电气化与自动化农田水利 包括灌溉工程、排水工程等。 水土保持学农田测量包括土壤侵蚀学、水土保持监测、水土保持生态学、水土保持工程、荒漠化防治等。 农业环保工程农业区划 含农业土地利用学。农业系统工程 农业工程其他学科生物医学工程学 生物医学电子学临床工程学 康复工程学 生物医学测量学 人工器官与生物医学材料学于细胞与组织工程学 医学成像技术生物医学工程学其他学科 测绘科学技术大地测量技术 大地测量定位重力测量测量平差 大地测量技术其他学科摄影测量与遥感技术 地物波谱学近景摄影测量航空摄影测量 遥感信息工程摄影测量与遥感技术其他学科地图制图技术 地图投影学 地图设计与编绘图形图像复制技术地图制图技术其他学科工程测量技术 地籍测量精密工程测量矿山测量 土木建筑工程测量 水利工程测量 工程测量技术其他学科：-海洋测绘 海洋大地测量 海洋重力测量海洋磁力测量 海洋跃层测量海洋声速测量 海道测量 海底地形测量 海图制图 海洋工程测量 海洋测绘其他学科测绘仪器测绘科学技术其他学科 材料科学材料科学基础学科 材料力学相图与相变包括合金化等材料的组织、结构、缺陷与性能计算材料学金属学 陶瓷学高分子材料学材料科学基础学科其他学科 材料表面与界面包括表面优化技术 材料失效与保护材料检测与分析技术材料实验包括材料腐蚀、磨损、老化、断裂及其控制等 材料合成与加工工艺金属材料 黑色金属及其合金有色金属及其合金非晶、微晶金属材料低维金属材料 包括准晶和纳米晶材料等 包括薄膜、纤维和零维金属材料等特种功能金属材料金属材料其他学科无机非金属材料玻璃与非晶无机非金属材料低维无机非金属材料人工晶体 包括生物玻璃材料 包括薄膜、纤维和零维非金属材料等陶瓷材料包括陶瓷膜材料、多孔陶瓷材料、生物陶瓷材料、耐火材料等。 特种功能无机非金属材料无机非金属材料其他学科有机高分子材料 塑料、橡胶和纤维 功能高分子材料高性能高分子材料高分子液晶材料有机高分子材料其他学科复合材料 金属基复合材料包括多相复合材料等无机非金属基复合材料聚合物基复合材料包括无机多相复合材料等包括有机多相复合材料等又名混杂复合材料 有机-无机杂化复合材料生物复合材料功能复合材料 复合材料其他学科生物材料 组织工程材料医学工程材料 环境友好材料生物材料其他学科纳米材料 包括纳米光电材料、纳米信息材料、纳米存储材料等专用材料各专用材料人有关学科 材料科学其他学科 矿山工程技术矿山地质学矿山测量矿山设计 地下矿设计 露天矿设计矿山设计其他学科矿山地面工程井巷工程 矿山压力工程矿山支护工程井巷工程其他学科采矿工程 煤矿开采煤及油母页岩地下气化金属矿开采非金属矿开采采矿工程其他学科选矿工程 选矿理论选矿技术矿石处理选矿工程其他学科钻井工程 油气田井开发工程 石油、天然气储存与运输工程矿山机械工程 采矿机械选矿机械矿山运输机械矿山机械工程其他学科矿山电气工程 采矿环境工程矿山安全 矿山综合利用工程矿山工程技术其他学科 冶金工程技术冶金物理化学冶金反应工程 冶金原料与预处理冶金热能工程冶金燃料 燃烧理论 燃烧计算 冶金分析冶金热能工程其他学科 冶金技术 提炼冶金粉末冶金真空冶金电磁冶金原子能冶金湿法冶金纤维冶金卤素冶金微生物冶金冶金技术其他学科钢铁冶金- 炼铁 炼钢 铁合金冶炼钢铁冶金其他学科 有色金属冶金轧制冶金机械及自动化冶金工程技术其他学科 机械工程机械史机械学 机械原理与机构学机械动力学与振动机械强度 机械摩擦、磨损及润滑机械学其他学科机械设计 机械零件及传动机械公差、配合与技术测量机械制图 机械设计其他学科 计算机辅助设计 机械制造工艺与设备铸造工艺与设备 焊接工艺与设备包括连接工艺与设备塑性加工工艺与设备热处理工艺与设备切削加工工艺 特种加工工艺 机器装配工艺非金属加工工艺机械制造工艺与设备其他学科刀具技术 切削理论切削刀具 磨削工具 刀具技术其他学科机床技术 机床基础理论金属切削机床 数字控制机床特种加工机床 机床技术其他学科流体传动与控制机械制造自动化包括气动液压控制技术等 成组技术 数控技术机器人技术包括工业机器人、智能机器人、服务机器人 计算机辅助制造机械制造自动化其他学科机械工程其他学科 动力与电气工程工程热物理工程热力学 工程传热、传质学燃烧学· 多相流动 微尺度热物理学工程热物理其他学科热工学 热工测量与仪器仪表供热工程工业锅炉 热工学其他学科动力机械工程 包括锅炉、蒸汽机、汽轮机等 蒸汽工程内燃机工程包括汽油机、柴油机、气体燃料发动机等 流体机械及流体动力工程喷气推进机与涡轮机械微动力工程 动力机械工程其他学科制冷与低温工程 制冷工程 低温工程热泵与空调制冷与低温工程其他学科电气工程 电工学电路理论电磁场理论 电磁测量技术及其仪器电工材料 电机学 电源技术电器学 电力电子技术高电压工程 绝缘技术电热与高频技术超导电工技术发电工程 包括水力、热力、风力、磁流体发电工程等 输配电工程电力系统及其自动化 电力拖动及其自动化用电技术包括节电技术亦可称作微细加工技术 电加工技术脉冲功率技术 放电理论与发电等离子体技术电磁环境与电磁兼容生物与医学电工技术可再生能源发电技术分布式电力技术 电气化交通技术强磁场技术 电气工程其他学科动力与电气工程其他学科 能源科学技术能源化学 能源地理学 能源计算与测量 储能技术节能技术包括工业节能、生活节能、建筑节能等 一次能源煤炭能 石油、天然气能水能包括海洋能等 风能地热能生物能太阳能即城市生活垃圾能源生活固体废弃物能 核能天然气水合物能一次能源其他学科 二次能源 煤气能电能 蒸汽能沼气能 氢能激光能 二次能源其他学科能源系统工程能源经济学 能源科学技术其他学科 核科学技术辐射物理与技术核探测技术与核电子学放射性计量学核仪器、仪表 核材料与工艺技术 核燃料与工艺技术核材料与工艺技术其他学科粒子加速器 粒子加速器物理学 粒子加速器工程技术 粒子加速器应用粒子加速器其他学科 裂变堆工程技术 裂变堆物理裂变堆热工与水力裂变堆控制裂变堆结构 裂变堆屏蔽与防护裂变堆建造技术裂变堆工程技术其他学科核聚变工程技术磁约束聚变技术 惯性约束聚变技术聚变堆工程：一- 聚变裂变混合堆工程核聚变工程技术其他学科核动力工程技术 舰船核动力空间核动力核电站 核动力运行技术核动力工程技术其他学科同位素技术 同位素分离技术同位素制备技术 同位素应用技术 同位素技术其他学科核爆炸工程核安全包括核电站安全 乏燃料后处理技术辐射防护技术 核设施退役技术放射性三废处理、处置技术核科学技术其他学科 电子与通信技术电子技术 电子电路天线电波传播 无线电技术微波技术· 敏感电子学微电子学 ：–仿真技术超导电子技术 电子元件与器件技术电子束、离子束技术 红外与夜视技术 电子技术其他学科 光电子学与激光技术半导体技术 半导体测试技术 半导体材料半导体器件与技术传感器技术 集成电路技术半导体加工技术 半导体技术其他学科信息处理技术 信号检测 参数估计数据处理语音处理 图像处理、 信息处理技术其他学科通信技术 有线通信技术无线通信技术 包括微波通信、卫星通信、激光通信技术等光纤通信技术 通信传输技术通信网络技术 通信终端技术电信邮政 邮电通信管理工程通信技术其他学科 广播与电视工程技术雷达工程电子与通信技术其他学科 计算机科学技术计算机科学技术基础学科自动机理论 可计算性理论 计算机可靠性理论算法理论 数据结构数据安全与计算机安全 计算机科学技术基础学科其他学科人工智能 人工智能理论自然语言处理 机器翻译模式识别 计算机感知 计算机神经网络知识工程包括专家系统 人工智能其他学科计算机系统结构 计算机系统设计 并行处理分布式处理系统计算机网络 计算机运行测试与性能评价计算机系统结构其他学科 计算机软件 软件理论操作系统与操作环境程序设计及其语言 编译系统 数据库软件开发环境与开发技术软件工程 计算机软件其他学科计算机工程 计算机元器件计算机处理器技术 计算机存储技术计算机外围设备 计算机制造与检测 计算机高密度组装技术计算机工程其他学科计算机应用具体应用人有关学科包括汉字信息处理 中国语言文字信息处理计算机仿真 计算机图形学计算机图像处理 计算机辅助设计计算机过程控制 计算机信息管理系统计算机决策支持系统 计算机应用其他学科计算机科学技术其他学科 化学工程化学工程基础学科化工热力学 化工流体力学 化工流变学 颗粒学化学工程基础学科其他学科化工测量技术与仪器仪表 化工传递过程化学分离工程 蒸馏吸收萃取 吸附与离子交换膜分离 蒸发与结晶干燥 化学分离工程其他学科化学反应工程 催化反应工程催化剂工程 固定床反应工程多相流反应工程 生化反应工程聚合化学反应工程电学反应工程 化学反应工程其他学科化工系统工程 化工过程动态学化工过程控制与模拟化工系统优化化工系统工程其他学科化工机械与设备 无机化学工程 酸碱盐工程技术硅酸盐工程技术放射化工 化肥工程技术化学冶金 无机化学工程其他学科有机化学工程 电化学工程电解 电镀电池 腐蚀与防腐化学电化学工程其他学科 高聚物工程 煤化学工程石油化学工程天然气化学工程 精细化学工程表面活性剂 香料学化妆品学染料颜料与涂料学粘合剂亦称胶粘剂精细化学工程其他学科造纸技术 毛皮与制革工程 制药工程医药工程农药工程兽药工程 制药工程其他学科生物化学工程 化学工程其他学科 产品应用相关工程与技术仪器仪表技术 仪器仪表基础理论仪器仪表材料 传感器技术 精密仪器制造测试计量仪器光学技术与仪器 天文仪器 地球科学仪器大气仪器仪表 仪器仪表技术其他学科兵器科学与技术 兵器科学与技术基础学科兵器系统与运用工程 兵器结构、动力、传动与平台技术弹道学 含发射、推进与毁伤兵器识别、导引与控制技术军用光学与光电子技术 军事信息工程与信息对抗技术含能材料技术兵器制造技术兵器材料科学与工程兵器测试与实验技术 兵器科学与技术其他学科 产品应用专用性技术印刷、复制技术 产品应用专用性技术其他学科产品应用相关工程与技术其他学科 纺织科学技术纺织科学技术基础学科 纺织化学 纺织美学与色彩学纺织科学技术基础学科其他学科纺织材料 纤维制造技术纺织技术 纺织品结构与设计 棉纺学棉织学 麻纺织毛方织 丝纺织化学纤维纺织新型纺纱、无纺布与特种织物针织 纺织技术其他学科染整技术 染炼技术印花技术染色技术 整理技术 染整技术其他学科服装技术 服装设计服装加工 服装技术其他学科纺织机械与设备纺织器材设计与制造 纺织机械设计与制造纺织机械与设备其他学科 纺织科学技术其他学科 食品科学技术食品科学技术基础学科食品化学 食品营养学食品检验学食品微生物学 食品生物技术谷物化学 油脂化学食品科学技术基础学科其他学科食品加工技术 食用油脂加工技术制糖技术肉加工技术乳加工技术蛋加工技术水果、蔬菜加工技术食品发酵与酿造技术烘焙食品加工技术调味品加工技术食品添加剂技术饮料冷食制造技术罐头技术 包括食盐加工技术等 米面制品加工技术植物蛋白加工技术包括其他粮食加工技术 食品加工技术其他学科食品包装与储藏 食品机械食品加工的副产品加工与利用食品工业企业管理学 食品工程与粮油工程食品工程 粮油工程食品科学技术其他学科 土木建筑工程建筑史土木建筑工程基础学科工程数学工程力学 建筑光学建筑声学 建筑气象学土木建筑工程基础学科其他学科土木建筑工程测量建筑材料 金属建筑材料非金属建筑材料 复合建筑材料特种建筑材料包括隔音、防水、防火、绝热、耐震、防蚀、装修材料等 建筑材料其他学科 工程结构杆件结构 薄壳结构悬索与张拉结构 实体结构结构设计 工程结构其他学科土木建筑结构 木结构 砖结构 金属结构混凝土与钢筋混凝土结构喷锚结构 复合结构特种结构土木建筑结构其他学科土木建筑工程设计 建筑设计方法与理论城乡规划方法与理论 建筑美学建筑室内设计建筑室外环境设计土木工程设计 土木建筑工程设计其他学科土木建筑工程施工地基基础工程地面工程 地下工程墙体工程 土木施工电器工程装饰工程 土木建筑工程施工其他学科土木工程机械与设备 起重机械 土木工程运输机械土方机械 桩工机械石料开采加工机械 钢筋混凝土机械装修机械土木工程机械与设备其他学科园林学 市政工程 城市给水排水工程 通风与空调工程供热与供燃气工程电讯管道工程 城市系统工程 市政工程其他学科 建筑经济学土木建筑工程其他学科 水利工程水利工程基础学科 水力学河流与海岸动力学 工程水文学 水利工程基础学科其他学科水利工程测量 水工材料水工结构亦称水工建筑物 一般水工建筑物专门水工建筑物水工结构其他学科水力机械水利工程施工水利建筑工程施工 水工设备安装包括水工金属结构安装等：不包括废水处理 水利工程施工其他学科 水处理 给水处理水处理其他学科河流泥沙工程学水沙动力学， 河工学 河流泥沙工程学其他学科农田水利 水土保持学环境水利 环境水利与评价包括水资源评价；水环境评价 区域环境水利水资源保护 环境水利其他学科水利管理 水利工程管理包括水利调度、水利施工管理、养护等 水利工程检查观测水利管理自动化系统水利管理其他学科防洪工程 防汛 防凌防洪工程其他学科水利经济学 水利工程其他学科 交通运输工程道路工程路基工程 桥涵工程隧道工程 道路工程其他学科公路运输车辆工程 公路标志、信号、监控工程公路运输管理 公路运输其他学科 铁路运输 铁路电气化工程 铁路通信信号工程铁路机车车辆工程 铁路运输管理铁路运输其他学科 水路运输 航海技术与装备工程 船舶通信与导航工程航道工程 港口工程疏浚工程水路运输管理救助、打捞与潜水作业工程海事技术与装备工程水路运输其他学科 船舶、舰船工程航空运输机场工程 航空运输管理航空运输其他学科 交通运输系统工程 交通运输安全工程 交通运输经济学 交通运输工程其他学科 航空、航天科学技术航空、航天科学技术基础学科大气层飞行力学 空气动力学 航天动力学 飞行器结构力学 热力学传热学 燃烧学 航天摩擦学飞行原理又称空间摩擦学航空、航天科学技术基础学科其他学科 航空器结构与设计气球、飞艇 定翼机旋翼机航空器结构与设计其他学科航天器结构与设计 火箭、导弹人造地球卫星 空间探测器宇宙飞船 航天站航天飞机航天器结构与设计其他学科航空、航天推进系统飞行器仪表、设备 飞行器控制、导航技术航空、航天材料 航空、航天金属材料 航空、航天非金属材料航空、航天复合材料航空、航天燃料与润滑剂 航空、航天材料失效与保护航空、航天材料其他学科飞行器制造技术 航空器制造工艺 航天器制造工艺飞行器制造技术其他学科飞行器试验技术航空器地面试验航空器飞行试验 航天器地面试验 航天器飞行试验飞行器试验技术其他学科 飞行器发射与回收、飞行技术 飞行器发射与回收飞行事故 飞行器发射与回收、飞行技术其他学科航空航天地面设施、技术保障 发射场、试验场航天测控系统航空地面设施 航空地面技术保障航空航天地面设施、技术保障其他学科航空、航天系统工程 航空系统工程航天系统工程 航空、航天可靠性工程航空、航天系统工程其他学科航空、航天科学技术其他学科 环境科学技术及资源科学技术环境科学技术基础学科环境物理学包括环境声学等 环境化学环境生物学环境气象学环境地学 包括环境地球化学、环境地质学等 环境生态学环境毒理学环境医学 自然环境保护学环境管理学环境经济学 环境法学 环境科学技术基础学科其他学科环境学 大气环境学水体环境学 包括海洋环境学土壤环境学区域环境学 城市环境学 环境学其他学科环境工程学 环境保护工程大气污染防治工程水污染防治工程 固体污染防治工程三废处理与综合利用 噪声与震动控制环境质量监测与评价环境规划 环境系统工程环境修复工程包括水环境修复工程 环境工程学其他学科资源科学技术 包括资源管理 环境科学技术及资源科学技术其他学科 安全科学技术安全科学技术基础学科 安全哲学 安全史安全科学学 灾害学包括灾害物理、灾害化学、灾害毒理等 安全学 安全科学技术基础学科其他学科安全社会科学 安全社会学运筹学安全法学，包括安全法规体系研究 安全经济学安全管理学 安全教育学 安全伦理学安全文化学 安全社会科学其他学科安全物质学 安全人体学安全生理学 安全心理学安全人机学 安全人体学其他学科安全系统学安全运筹学 安全信息论安全控制论 安全模拟与安全仿真学安全系统学其他学科 安全工程技术科学 安全工程理论 火灾科学与消防工程 爆炸安全工程安全设备工程 含安全特种设备工程安全机械工程安全电气工程 安全人机工程 安全系统工程含安全运筹工程、安全控制工程、安全信息工程 安全工程技术科学其他学科安全卫生工程技术 防尘工程技术 防毒工程技术通风与空调工程噪声与振动控制辐射防护技术 个体防护工程安全卫生工程技术其他学科安全社会工程 安全管理工程 安全经济工程 安全教育工程安全社会工程其他学科部门安全工程理论公共安全各部门安全工程人有关学科 公共安全信息工程 公共安全风险评估与规划 公共安全检测检验公共安全监测监控 公共安全预测预警应急决策指挥 应急救援公共安全其他学科安全科学技术其他学科 管理学管理思想史管理理论管理哲学 组织理论行为科学 决策理论 系统管理理论管理理论其他学科管理心理学 管理计量学管理经济学 部门经济管理区域经济管理科学学与科技管理科学社会学各部门经济管理人有关学科 科技政策学科学体系学 科学心理学科学计量学 科技管理学科学学与科技管理其他学科 企业管理生产管理 经营管理财务管理成本管理劳动人事管理 技术管理营销管理 物资管理设备管理质量管理 企业管理其他学科公共管理 行政管理 危机管理也称“应急管理”公共管理其他学科 管理工程 生产系统管理研究与开发管理 质量控制与可靠性管理 物流系统管理战略管理 决策分析决策支持系统管理信息系统 管理系统仿真工效学 部门管理工程管理工程其他学科各部门管理工程人有关学科人力资源开发与管理人力资源开发战略 人才学 人力资源开发与管理其他学科未来学 理论预测学预测评价学技术评估学 全球未来学未来学其他学科可持续发展管理管理学其他学科 E人文与社会科学马克思主义马、恩、列、斯思想研究毛泽东思想研究 马克思主义思想史科学社会主义 社会主义运动史包括国际共产主义运动国外马克思主义研究马克思主义其他学科 哲学马克思主义哲学辩证唯物主义 历史唯物主义马克思主义哲学史马克思主义哲学其他学科自然辩证法亦称科学技术哲学 自然观科学哲学技术哲学 专门自然科学哲学包括人工智能哲学、数学哲学、物理哲学等 自然辩证法其他学科中国哲学史 先秦哲学秦汉哲学 魏晋南北朝哲学隋唐五代哲学宋元明清哲学 中国近代哲学 中国现代哲学中国少数民族哲学思想中国哲学史其他学科东方哲学史 印度哲学 伊斯兰哲学日本哲学东方哲学史其他学科西方哲学史 古希腊罗马哲学中世纪哲学文艺复兴时期哲学十七、十八世纪欧洲哲学德国古典哲学俄国哲学包括俄国革命民主主义者的哲学西方哲学史其他学科现代外国哲学 十九世纪末至二十世纪中叶西方哲学分析哲学 欧洲大陆人文哲学 解释学符号学实用主义哲学现代外国哲学其他学科逻辑学 逻辑史包括中国逻辑史、西方逻辑史、印度逻辑史等形式逻辑亦传统逻辑 数理逻辑哲理逻辑 包括模态、多值、构造、时态、模糊逻辑等 语言逻辑归纳逻辑辩证逻辑逻辑学其他学科 伦理学 伦理学原理中国伦理思想史 东方伦理思想史西方伦理思想史马克思主义伦理思想史职业伦理学 医学伦理学教育伦理学 政治伦理学家庭伦理学 生命伦理学生态伦理学 环境伦理学 伦理学其他学科美学 美学原理 中国美学史东方美学史西方美学史 西方现代美学 马克思主义美学艺术美学 包括音乐、影视美学、建筑美学等 技术美学美学其他学科 哲学其他学科 宗教学宗教学理论马克思主义宗教学 宗教史学宗教哲学 宗教社会学宗教心理学比较宗教学 宗教地理学宗教文学艺术宗教文献学 神话学 宗教学理论其他学科无神论 无神论史中国无神论外国无神论 无神论其他学科原始宗教古代宗教中国古代宗教 外国古代宗教 古代宗教其他学科佛教 佛教哲学佛教因明佛教艺术 佛教文献佛教史 佛教宗派学佛教其他学科 基督教 圣经学基督教哲学 基督教伦理学基督教史 基督教艺术基督教其他学科伊斯兰教 伊斯兰教义学伊斯兰教法学伊斯兰教哲学古兰学圣训学伊斯兰教史伊斯兰教艺术伊斯兰教其他学科道教 道教哲学道教文献 道教艺术道教史 道教其他学科 印度教犹太教袄教 摩尼教 锡克教耆那教神道教 中国民间宗教与民间信仰中国少数民族宗教、 当代宗教 中国当代宗教世界当代宗教新兴宗教 当代宗教其他学科宗教学其他学科 语言学普通语言学语音学 语法学语义学 词汇学语用学方言学 修辞学文字学语源学 普通语言学其他学科比较语言学历史比较语言学 类型比较语言学双语对比语言学 比较语言学其他学科 语言地理学社会语言学心理语言学应用语言学 语言教学 话语语言学 实验语音学数理语言学 计算语言学 翻译学术语学 应用语言学其他学科汉语研究 普通话汉语方言汉语语音 汉语音韵 汉语语法汉语词汇汉语训诂 汉语修辞汉字规范 汉语史 汉语研究其他学科中国少数民族语言文字蒙古语文 藏语文 维吾尔语文哈萨克语文满语文 朝鲜语文傣族语文 彝族语文壮语文 苗语文瑶语文 柯尔克孜语文锡伯语文 中国少数民族语言文字其他学科外国语言 英语德语 瑞典语丹麦语、挪威语、冰岛语 拉丁语意大利语 法语西班牙语、葡萄牙语 罗马尼亚语俄语 波兰语、捷克语 塞尔维亚语、保加利亚语 希腊语阿尔巴尼亚语 匈牙利语芬兰语 爱沙尼亚语、拉脱维亚语、立陶宛语 梵语、印地语、乌尔都语、僧伽罗语 波斯语土耳其语 阿拉伯语希伯莱语 豪萨语斯瓦希里语 越南语、柬埔寨语印度尼西亚语、菲律宾国语、马来语缅甸语 泰语、老挝语日语 朝鲜语和韩国语世界语 外国语言其他学科语言学其他学科 文学文学理论文艺美学文学批评比较文学中国古代文学周秦汉文学魏晋文学 南北朝文学隋唐五代文学宋代文学辽金文学 元代文学明代文学清代文学 中国古代文学其他学科 中国近代文学 中国现代文学中国各体文学包括当代文学 中国诗歌文学中国戏剧文学 中国小说文学中国散文文学 中国各体文学其他学科中国民间文学 中国儿童文学 中国少数民族文学 蒙古族文学 藏族文学维吾尔族文学哈萨克族文学朝鲜族文学 中国少数民族文学其他学科世界文学史 古代世界文学史中世纪世界文学史近代世界文学史 现代世界文学史包括当代世界文学史世界文学史其他学科东方文学 印度文学 日本文学东方文学其他学科俄国文学包括原苏联文学 英国文学法国文学德国文学 意大利文学美国文学北欧文学 东欧文学拉美文学非洲文学大洋洲文学文学其他学科套笨美学 艺术学艺术美学艺术心理学音乐 包括绘画心理学、书法心理学、音乐心理学 音乐学包括音乐史、音乐美学等作曲与作曲理论 音乐表演艺术音乐其他学科 戏剧 戏剧史 戏剧理论戏剧其他学科 戏曲 戏曲史 戏曲理论戏曲表演 戏曲其他学科舞蹈 舞蹈史舞蹈理论 舞蹈编导舞蹈表演 舞蹈其他学科电影 电影史电影理论电影艺术 电影其他学科 广播电视文艺美术美术史 美术理论绘画艺术雕塑艺术美术其他学科工艺美术 工艺美术史工艺美术理论环境艺术 工艺美术其他学科书法 书法史书法理论书法其他学科摄影 摄影史摄影理论 摄影其他学科艺术学其他学科 历史学史学史中国史学史外国史学史史学理论 马克思主义史学理论中国传统史学理论 外国史学理论历史文献学 中国通史中国古代史先秦史 秦汉史魏晋南北朝史 隋唐五代十国史宋史 辽金史元史 明史清史 中国古文字包括甲骨文、金文等包括敦煌学、明清契约文书研究、鱼鳞册研究等中国古代契约文书 中国古代史其他学科中国近代史、现代史 鸦片战争史太平天国史 洋务运动史戊戌政变史 义和团运动史晚清政治史辛亥革命史五四运动史新民主主义革命史 抗日战争史 中国共产党史中国国民党史 中国民主党派史中华民国史中华人民共和国史 近代经济史近代思想文化史 近代社会史中国近代史、现代史其他学科世界通史 原始社会史世界古代史世界中世纪史世界近代史世界现代史国际关系史 世界通史其他学科亚洲史 日本史印度史 东北亚史东南亚史南亚史 中亚史 西亚史 亚洲史其他学科非洲史 北非史 撒哈拉以南非洲史埃及史南非联邦史非洲史其他学科 美洲史 美洲古代文明史美国史 加拿大史拉丁美洲史美洲史其他学科 欧洲史 俄国史包括原苏联史英国史法国史 德国史意大利史西班牙史 中东欧国家史 北欧国家史 欧洲史其他学科澳洲、大洋洲史专门史 经济史 政治史思想史文化史科技史社会史城市史中外文化交流史 中外关系史军事史 历史地理学 方志学人物研究谱牒学专门史其他学科 历史学其他学科简帛学 考古学考古理论考古学史考古技术 考古发掘考古修复 考古年代测定考古技术其他学科中国考古 旧石器时代考古新石器时代考古商周考古 秦汉考古三国两晋、南北朝、隋唐考古宋元明考古 中国考古其他学科 外国考古 亚洲考古欧洲考古非洲考古美洲考古 大洋洲考古外国考古其他学科 专门考古 金石学铭刻学甲骨学 古钱学 古陶瓷学美术考古宗教考古水下考古 专门考古其他学科 考古学其他学科 经济学政治经济学 资本主义政治经济学社会主义政治经济学政治经济学其他学科 宏观经济学西方宏观经济学 社会主义宏观经济学微观经济学 西方微观经济学社会主义微观经济学比较经济学 经济地理学发展经济学包括工业地理学、农业地理学等 生产力经济学经济思想史 中国经济思想史 外国经济思想史马克思主义经济思想史 经济思想史其他学科经济史 世界经济史中国经济史 经济史其他学科世界经济学亦称国际经济学 国际经济关系国际贸易学包括国际市场营销学、国际商品学 国际货币经济学国际金融学、 国际投资学国际收支理论 美国经济日本经济德国经济法国经济英国经济 俄罗斯经济欧洲经济 中东欧经济北美经济亚太经济拉美经济非洲经济 中亚经济西亚经济 世界经济统计世界经济学其他学科 国民经济学 国民经济计划学区域经济学 消费经济学投资经济学 国民经济学其他学科管理经济学数量经济学 数理经济学 经济计量学 数量经济学其他学科会计学 工业会计学农业会计学商业会计学银行会计学交通运输会计学会计学其他学科审计学技术经济学技术经济理论与方法 工程经济学工业技术经济学农业技术经济学能源技术经济学交通运输技术经济学建筑技术经济学 物流技术经济学贸易技术经济学技术进步经济学资源开发利用技术经济学环境保护技术经济学生产力布局技术经济学消费技术经济学服务业技术经济学技术经济学其他学科生态经济学 农业生态经济学森林生态经济学草原生态经济学 水域生态经济学 城市生态经济学区域生态经济学 生态经济学其他学科劳动经济学 就业经济学包括劳动市场经济学 教育经济学 健康经济学劳动经济史劳动经济学其他学科 城市经济学城市经济管理学 含城市经济理论城市土地经济学市政经济学房地产经济学城郊经济学 城市经济学其他学科资源经济学 海洋资源经济学生物资源经济学矿产资源经济学能源经济学 资源开发与利用资源经济学其他学科 环境经济学可持续发展经济学物流经济学 物流经济理论物流管理学 物流经济学其他学科工业经济学 工业发展经济学工业企业经营管理学工业经济地理 工业部门经济学工业经济史 工业经济学其他学科农村经济学 农村宏观经济学农村产业经济学农村区域经济学农村经济学其他学科农业经济学 农业生态经济学农业生产经济学 土地经济学农业经济史包括国土经济学、农业资源经济学等农业企业经营管理 合作经济 世界农业经济农业区划 林业经济学畜牧经济学 水产经济学 种植业经济学 农业经济学其他学科交通运输经济学 城市运输经济学铁路运输经济学 航空运输经济学公路运输经济学水路运输经济学·综合运输经济学 交通运输经济学其他学科建筑经济学商业经济学商业经济学原理 商业企业管理学商品流通经济学 市场学商业心理学 商业社会学商品学包括商品包装与技术 商业物流学商业经济史广告学 服务经济学 商业经济学其他学科价格学 价格学原理 部门价格学广义价格学 成本管理学价格史比较价格学 价格学其他学科 旅游经济学 旅游经济学理论旅游经济管理学旅游企业管理学 旅游事业史旅游经济学其他学科 信息经济学财政学理论财政学 比较财政学财政思想史财政史财政管理学税务管理学 财政学其他学科金融学 货币经济学货币史 含国际货币体系史 货币思想史银行学 金融风险管理学金融资产管理学信贷理论 含金融投资学 投资理论含货币市场学、资本市场学、国际金融市场学金融市场公司金融学 房地产金融学农村金融学 开发性金融学国际金融学 金融史、银行史含金融法制史金融发展学金融工程学金融制度学 又可称为结构金融学含金融体制比较 金融学其他学科 保险学 保险史含保险思想史 保险管理保险学其他学科 国防经济学 经济学其他学科 政治学政治学理论比较政治学 政治社会学 政治心理学地缘政治学中外政治学说史 政治学方法论政治学理论其他学科 政治制度 政治制度理论议会制度 行政制度 司法制度政党制度 选举制度中国政治制度 外国政治制度比较政治制度中国政治制度史外国政治制度史政治制度其他学科行政学 行政理论行政组织人事行政 财务行政行政决策行政学其他学科 国际政治学 国际关系理论国际关系史 国际组织外交学 外交史国际比较政治美国政治 英国政治法国政治德国政治日本政治 俄罗斯政治欧洲政治中东欧政治 北美政治亚太政治 拉美政治非洲政治中亚政治 西亚政治国际政治学其他学科政治学其他学科 法学理论法学法理学 法哲学比较法学 法社会学立法学 法律逻辑学法律教育学 法律心理学理论法学其他学科法律史学 中国法律思想史外国法律思想史法律制度史 法律史学其他学科部门法学 宪法学行政法学 民法学经济法学劳动法学婚姻法学民事诉讼法学 行政诉讼法学刑事诉讼法学 刑法学刑事侦查学 司法鉴定学军事法学卫生法学环境法学安全法学知识产权法学、宗教法学部门法学其他学科国际法学 国际公法学国际私法学国际刑法学 国际经济法学 国际环境法学国际知识产权法学国际法学其他学科 法学其他学科 军事学军事理论马、恩、列、斯军事理论毛泽东军事思想 军事理论其他学科军事史 中国古代战争史中国近代战争史 中国现代战争史世界战争史军事思想史军事技术史 军事史其他学科军事心理学战略学战略学理论 核战略学战略学其他学科 战役学 合同战役学 海军战役学空军战役学导弹部队战役学陆军战役学 包括炮兵战役学、装甲兵战役学战役学其他学科 战术学 合同战术学陆军战术学包括炮兵战术学、装甲兵战术学、工程兵战术学、通信兵战术学、防化兵战术学等 海军战术学 空军战术学导弹部队战术学战术学其他学科 军队指挥学作战指挥 军事系统工程军事通信学亦称军事运筹学 军事情报学密码学 军队指挥学其他学科军制学 军事组织体制 军事装备学军队管理学军制学其他学科 军队政治工作学 军队思想教育工作学军队组织工作学 军队政治工作学其他学科军事后勤学 后勤组织指挥 后方专业勤务军事后勤学其他学科 军事地学中国军事地理 世界军事地理军事地形学 军事测绘学军事气象学军事水文学 军事地学其他学科军事技术军事学其他学科 心理学心理学史科学心理学 心理学国际传播心理学理论 包括西方心理学流派 认知心理学知觉阅读心理学心理语言学认知神经科学色彩心理学认知心理学其他学科 社会心理学家庭心理学婚姻心理学人际心理学 道德心理学社会心理学其他学科 实验心理学心理学研究方法实验心理学其他学科 发展心理学婴儿心理学儿童心理学妇女心理学 老年心理学包括长寿心理学 发展心理学其他学科 医学心理学护理心理学 医患心理学健康心理学 医学心理学其他学科 人格心理学异常心理学 人格心理学其他学科 临床与咨询心理学咨询心理技术 员工援助技术 临床与咨询心理学其他学科 心理测量心理测量理论心理测量技术 心理统计心理统计原理 心理统计方法 生理心理学感觉心理学 比较心理学心理神经免疫学心理药理学 生理心理学其他学科 工业心理学工效学 工程心理学交通心理学 安全心理学消费心理学 营销心理学劳动心理学 经济心理学包括市场心理学、投资心理学工业心理学其他学科 管理心理学干部心理学绩效评估技术 管理心理学其他学科 应用心理学艺术心理学 宗教心理学心理人类学 应用心理学其他学科 教育心理学学习心理学学校心理学 教育心理学其他学科 法制心理学罪犯心理学 证人心理学法制心理学其他学科 心理学其他学科社会学社会学史中国社会学史 外国社会学史 社会学史其他学科社会学理论 社会学原理社会思想史 社会学理论其他学科社会学方法 社会调查方法社会统计学 社会学方法其他学科实验社会学 数理社会学 应用社会学 职业社会学工业社会学劳动社会学 医学社会学教育社会学 商业社会学 城市社会学农村社会学环境社会学家庭社会学 青年社会学老年社会学犯罪社会学 越轨社会学 妇女问题研究种族问题研究社会问题研究 社会群体及分层问题研究 社区研究社会保障研究社会工作 应用社会学其他学科比较社会学 社会地理学政治社会学文化社会学 艺术社会学知识社会学宗教社会学法社会学 道德社会学文化社会学其他学科历史社会学科学社会学 经济社会学军事社会学社会心理学公共关系学 社会人类学组织社会学 发展社会学福利社会学人口学 人口理论 人口经济学人口社会学包括老年人口学、妇女人口学、发展人口学等 人口学说史历史人口 人口统计学 人口地理学人口生态学区域人口学 人口系统工程人口预测学人口规划学人口政策 计划生育学人口学其他学科劳动科学 劳动经济学劳动管理学劳动统计学劳动社会学 劳动心理学 社会保险学职业安全卫生科学技术劳动科学其他学科 社会学其他学科 民族学与文化学民族问题理论 民族问题与民族政策民族关系 民族经济民族教育 民族法制民族心理学 少数民族政治制度民族问题理论其他学科民族史学 民族史 民族关系史民族史学其他学科中国少数民族语言文字蒙古学 藏学新疆民族研究文化人类学与民俗学世界民族研究文化学含维吾尔学 文化发展史文化地理学 文化心理学文化遗产学 文化学其他学科民族和文化学其他学科 新闻学与传播学新闻理论 新闻学马克思主义新闻理论 西方新闻理论新闻法 舆论学 新闻伦理学新闻社会学新闻心理学比较新闻学 新闻理论其他学科新闻史 中国新闻事业史世界新闻事业史 新闻思想史传播技术史 新闻史其他学科 新闻业务 新闻采访新闻写作 新闻编辑新闻评论新闻摄影新闻业务其他学科新闻事业经营管理传媒经济 传媒管理 新闻事业经营管理其他学科广播与电视 广播电视史 ‘广播电视理论广播电视业务包括广播电视采访、写作、编辑等广播电视播音广播与电视其他学科 传播学 传播史 传播理论传播技术组织传播学 传播与社会发展 人际传播国际传播 跨文化传播网络传播 新媒介传播传播学其他学科 新闻学与传播学其他学科 图书馆、情报与文献学图书馆学 图书馆学史包括图书馆事业史比较图书馆学 图书馆社会学图书馆管理学图书馆建筑学包括图书馆统计学、图书馆经济学等 图书采访学图书分类学图书编目学目录学 包括目录组织法、文献著录方法、计算机编目等包括普通目录学、专科目录、目录学史等包括读者心理学、读者咨询学等 图书馆服务学 图书馆学其他学科文献学 文献类型学文献计量学文献检索学图书史 版本学 校勘学文献学其他学科 情报学 情报学史包括情报事业史 情报社会学比较情报学 情报计量学情报心理学 情报管理学情报服务学情报经济学 包括情报用户研究等 情报检索学情报系统理论包括情报检索语言等包括情报系统分析与设计、情报网络建设理论等 情报技术 科学技术情报学社会科学情报学 情报学其他学科档案学 档案学史包括档案事业史 档案管理学 档案保护技术学档案编纂学 档案学其他学科 博物馆学图书馆、情报与文献学其他学科 教育学教育学原理教学论 德育原理教育社会学 教育心理学教育经济学教育统计学教育管理学比较教育学教育技术学军事教育学学前教育学普通教育学高等教育学成人教育学职业技术教育学特殊教育学教育学其他学科 包括初等教育学、中等教育学等 体育科学 体育史 体育理论 运动生物力学运动生理学运动心理学运动生物化学体育保健学包括运动解剖学等 运动训练学 体育教育学 武术理论与方法体育管理学 体育经济学体育科学其他学科 统计学统计学史数理统计学抽样理论 假设检验非参数统计方差分析 相关回归分析统计推断贝叶斯统计试验设计 多元分析 统计判决理论时间序列分析空间统计 应用统计数学统计质量控制 可靠性数学保险数学统计计算统计模拟 经济统计学 国民经济核算经济统计分析经济计量学 经济统计学其他学科科学技术统计学 社会统计学 教育统计学文化与体育统计学司法统计学 劳动统计学 社会保障统计学生活质量统计学社会统计学其他学科 人口统计学环境与生态统计学 资源统计学 环境统计学生态统计学 环境与生态统计学其他学科生物与医学统计学生物统计学 医学统计学 卫生统计学 生物与医学统计学其他学科 统计学其他学科","link":"/%E5%AD%A6%E7%A7%91_%E4%B8%93%E4%B8%9A_%E8%A1%8C%E4%B8%9A_%E5%9B%BE%E4%B9%A6-%E5%88%86%E7%B1%BB/%E5%AD%A6%E7%A7%91%E5%88%86%E7%B1%BB%E4%B8%8E%E4%BB%A3%E7%A0%81/"},{"title":"","text":"普通高等学校本科专业目录哲学哲学类哲学逻辑学宗教学伦理学 经济学经济学类经济学经济统计学国民经济管理资源与环境经济学商务经济学能源经济劳动经济学经济工程数字经济 财政学类财政学税收学国际税收 金融学类金融学金融工程保险学投资学金融数学信用管理经济与金融精算学互联网金融金融科技金融审计 经济与贸易类国际经济与贸易贸易经济国际经济发展合作 法学法学类法学知识产权监狱学信用风险管理与法律防控国际经贸规则司法警察学社区矫正纪检监察国际法司法鉴定学 政治学类政治学与行政学国际政治外交学国际事务与国际关系政治学、经济学与哲学国际组织与全球治理 社会学类社会学社会工作人类学女性学家政学老年学社会政策 民族学类民族学 马克思主义理论类科学社会主义中国共产党历史思想政治教育马克思主义理论工会学 公安学类治安学侦查学边防管理禁毒学警犬技术经济犯罪侦查边防指挥消防指挥警卫学公安情报学犯罪学公安管理学涉外警务国内安全保卫警务指挥与战术技术侦查学海警执法公安政治工作移民管理出入境管理反恐警务消防政治工作铁路警务 教育学教育学类教育学科学教育人文教育教育技术学艺术教育学前教育小学教育特殊教育华文教育教育康复学卫生教育认知科学与技术融合教育劳动教育家庭教育孤独症儿童教育 体育学类体育教育运动训练社会体育指导与管理武术与民族传统体育运动人体科学运动康复休闲体育体能训练冰雪运动电子竞技运动与管理智能体育工程体育旅游运动能力开发 文学中国语言文学类汉语言文学汉语言汉语国际教育中国少数民族语言文学古典文献学应用语言学秘书学中国语言与文化手语翻译数字人文 外国语言文学类英语俄语德语法语西班牙语阿拉伯语日语波斯语朝鲜语菲律宾语梵语巴利语印度尼西亚语印地语柬埔寨语老挝语缅甸语马来语蒙古语僧伽罗语泰语乌尔都语希伯来语越南语豪萨语斯瓦希里语阿尔巴尼亚语保加利亚语波兰语捷克语斯洛伐克语罗马尼亚语葡萄牙语瑞典语塞尔维亚语土耳其语希腊语匈牙利语意大利语泰米尔语普什图语世界语孟加拉语尼泊尔语克罗地亚语荷兰语芬兰语乌克兰语挪威语丹麦语冰岛语爱尔兰语拉脱维亚语立陶宛语斯洛文尼亚语爱沙尼亚语马耳他语哈萨克语乌兹别克语祖鲁语拉丁语翻译商务英语阿姆哈拉语吉尔吉斯语索马里语土库曼语加泰罗尼亚语约鲁巴语亚美尼亚语马达加斯加语格鲁吉亚语阿塞拜疆语阿非利卡语马其顿语塔吉克语茨瓦纳语恩德贝莱语科摩罗语克里奥尔语绍纳语提格雷尼亚语白俄罗斯语毛利语汤加语萨摩亚语库尔德语比斯拉马语达里语德顿语迪维希语斐济语库克群岛毛利语隆迪语卢森堡语卢旺达语纽埃语皮金语切瓦语塞苏陀语桑戈语语言学塔玛齐格特语爪哇语旁遮普语 新闻传播学类新闻学广播电视学广告学传播学编辑出版学网络与新媒体数字出版时尚传播国际新闻与传播会展 历史学历史学类历史学世界史考古学文物与博物馆学文物保护技术外国语言与外国历史文化遗产古文字学科学史 理学数学类数学与应用数学信息与计算科学数理基础科学数据计算及应用 物理学类物理学应用物理学核物理声学系统科学与工程量子信息科学 化学类化学应用化学化学生物学分子科学与工程能源化学化学测量学与技术资源化学 天文学类天文学 地理科学类地理科学自然地理与资源环境人文地理与城乡规划地理信息科学 大气科学类大气科学应用气象学气象技术与工程地球系统科学 海洋科学类海洋科学海洋技术海洋资源与环境军事海洋学 地球物理学类地球物理学空间科学与技术防灾减灾科学与工程行星科学 地质学类地质学地球化学地球信息科学与技术古生物学 生物科学类生物科学生物技术生物信息学生态学整合科学神经科学 心理学类心理学应用心理学 统计学类统计学应用统计学数据科学生物统计学 力学类理论与应用力学工程力学 工学机械类工程力学机械工程机械设计制造及其自动化材料成型及控制工程机械电子工程工业设计过程装备与控制工程车辆工程汽车服务工程机械工艺技术微机电系统工程机电技术教育汽车维修工程教育智能制造工程智能车辆工程仿生科学与工程新能源汽车工程增材制造工程智能交互设计应急装备技术与工程 仪器类测控技术与仪器精密仪器智能感知工程 材料类材料科学与工程材料物理材料化学冶金工程金属材料工程无机非金属材料工程高分子材料与工程复合材料与工程粉体材料科学与工程宝石及材料工艺学焊接技术与工程功能材料纳米材料与技术新能源材料与器件材料设计科学与工程复合材料成型工程智能材料与结构光电信息材料与器件生物材料 能源动力类能源与动力工程能源与环境系统工程新能源科学与工程储能科学与工程能源服务工程氢能科学与工程可持续能源 电气类电气工程及其自动化智能电网信息工程光源与照明电气工程与智能控制电机电器智能化电缆工程能源互联网工程智慧能源工程电动载运工程 电子信息类电子信息工程电子科学与技术通信工程微电子科学与工程光电信息科学与工程信息工程广播电视工程水声工程电子封装技术集成电路设计与集成系统医学信息工程电磁场与无线技术电波传播与天线电子信息科学与技术电信工程及管理应用电子技术教育人工智能海洋信息工程柔性电子学智能测控工程 自动化类自动化轨道交通信号与控制机器人工程邮政工程核电技术与控制工程智能装备与系统工业智能智能工程与创意设计 计算机类计算机科学与技术软件工程网络工程信息安全物联网工程数字媒体技术智能科学与技术空间信息与数字技术电子与计算机工程数据科学与大数据技术网络空间安全新媒体技术电影制作保密技术服务科学与工程虚拟现实技术区块链工程密码科学与技术 土木类土木工程建筑环境与能源应用工程给排水科学与工程建筑电气与智能化城市地下空间工程道路桥梁与渡河工程铁道工程智能建造土木、水利与海洋工程土木、水利与交通工程城市水系统工程智能建造与智慧交通 水利类水利水电工程水文与水资源工程港口航道与海岸工程水务工程水利科学与工程智慧水利 测绘类测绘工程遥感科学与技术导航工程地理国情监测地理空间信息工程 化工与制药类化学工程与工艺制药工程资源循环科学与工程能源化学工程化学工程与工业生物工程化工安全工程涂料工程精细化工 地质类地质工程勘查技术与工程资源勘查工程地下水科学与工程旅游地学与规划工程智能地球探测资源环境大数据工程 矿业类采矿工程石油工程矿物加工工程油气储运工程矿物资源工程海洋油气工程智能采矿工程碳储科学与工程 纺织类纺织工程服装设计与工程非织造材料与工程服装设计与工艺教育丝绸设计与工程 轻工类轻化工程包装工程印刷工程香料香精技术与工程化妆品技术与工程生物质能源与材料 交通运输类交通运输交通工程航海技术轮机工程飞行技术交通设备与控制工程救助与打捞工程船舶电子电气工程轨道交通电气与控制邮轮工程与管理智慧交通智能运输工程 海洋工程类船舶与海洋工程海洋工程与技术海洋资源开发技术海洋机器人智慧海洋技术 航空航天类航空航天工程飞行器设计与工程飞行器制造工程飞行器动力工程飞行器环境与生命保障工程飞行器质量与可靠性飞行器适航技术飞行器控制与信息工程无人驾驶航空器系统工程智能飞行器技术空天智能电推进技术飞行器运维工程 兵器类武器系统与工程武器发射工程探测制导与控制技术弹药工程与爆炸技术特种能源技术与工程装甲车辆工程信息对抗技术智能无人系统技术 核工程类核工程与核技术辐射防护与核安全工程物理核化工与核燃料工程 农业工程类农业工程农业机械化及其自动化农业电气化农业建筑环境与能源工程农业水利工程土地整治工程农业智能装备工程 林业工程类森林工程木材科学与工程林产化工家具设计与工程木结构建筑与材料 环境科学与工程类环境科学与工程环境工程环境科学环境生态工程环保设备工程资源环境科学水质科学与技术 生物医学工程类生物医学工程假肢矫形工程临床工程技术康复工程 食品科学与工程类食品科学与工程食品质量与安全粮食工程乳品工程酿酒工程葡萄与葡萄酒工程食品营养与检验教育烹饪与营养教育食品安全与检测食品营养与健康食用菌科学与工程白酒酿造工程 建筑类建筑学城乡规划风景园林历史建筑保护工程人居环境科学与技术城市设计智慧建筑与建造 安全科学与工程类安全工程应急技术与管理职业卫生工程安全生产监管 生物工程类生物工程生物制药合成生物学 公安技术类刑事科学技术消防工程交通管理工程安全防范工程公安视听技术抢险救援指挥与技术火灾勘查网络安全与执法核生化消防海警舰艇指挥与技术数据警务技术食品药品环境犯罪侦查技术 交叉工程类未来机器人 农学植物生产类农学园艺植物保护植物科学与技术种子科学与工程设施农业科学与工程茶学烟草应用生物科学农艺教育园艺教育智慧农业菌物科学与工程农药化肥生物农药科学与工程生物育种科学 自然保护与环境生态类农业资源与环境野生动物与自然保护区管理水土保持与荒漠化防治生物质科学与工程土地科学与技术湿地保护与恢复国家公园建设与管理 动物生产类动物科学蚕学蜂学经济动物学马业科学饲料工程 动物医学类智慧牧业科学与工程动物医学动物药学动植物检疫实验动物学中兽医学兽医公共卫生 林学类林学园林森林保护经济林智慧林业 水产类水产养殖学海洋渔业科学与技术水族科学与技术水生动物医学 草学类医学基础医学类草业科学草坪科学与工程 基础医学生物医学生物医学科学 临床医学类临床医学麻醉学医学影像学眼视光医学精神医学放射医学儿科学 口腔医学类口腔医学 公共卫生与预防医学类预防医学食品卫生与营养学妇幼保健医学卫生监督全球健康学运动与公共健康 中医学类中医学针灸推拿学藏医学蒙医学维医学壮医学哈医学傣医学回医学中医康复学中医养生学中医儿科学中医骨伤科学 中西医结合类中西医临床医学 药学类药学药物制剂临床药学药事管理药物分析药物化学海洋药学化妆品科学与技术 中药学类中药学中药资源与开发藏药学蒙药学中药制药中草药栽培与鉴定 法医学类法医学 医学技术类医学检验技术医学实验技术医学影像技术眼视光学康复治疗学口腔医学技术卫生检验与检疫听力与言语康复学康复物理治疗康复作业治疗智能医学工程生物医药数据科学智能影像工程医工学 护理学类护理学助产学 管理学管理科学与工程类管理科学信息管理与信息系统工程管理房地产开发与管理工程造价保密管理邮政管理大数据管理与应用工程审计计算金融应急管理 工商管理类工商管理市场营销会计学财务管理国际商务人力资源管理审计学资产评估物业管理文化产业管理劳动关系体育经济与管理财务会计教育市场营销教育零售业管理创业管理海关稽查 农业经济管理类农林经济管理农村区域发展乡村治理 公共管理类公共事业管理行政管理劳动与社会保障土地资源管理城市管理海关管理交通管理海事管理公共关系学健康服务与管理海警后勤管理医疗产品管理医疗保险养老服务管理海关检验检疫安全海外安全管理自然资源登记与管理慈善管理航空安防管理无障碍管理 图书情报与档案管理类图书馆学档案学信息资源管理 物流管理与工程类物流管理物流工程采购管理供应链管理 工业工程类工业工程标准化工程质量管理工程 电子商务类电子商务电子商务及法律跨境电子商务 旅游管理类旅游管理酒店管理会展经济与管理旅游管理与服务教育 艺术学艺术学理论类艺术史论艺术管理非物质文化遗产保护 音乐与舞蹈学类音乐表演音乐学作曲与作曲技术理论舞蹈表演舞蹈学舞蹈编导舞蹈教育航空服务艺术与管理流行音乐音乐治疗流行舞蹈音乐教育 戏剧与影视学类表演戏剧学电影学戏剧影视文学广播电视编导戏剧影视导演戏剧影视美术设计录音艺术播音与主持艺术动画影视摄影与制作影视技术戏剧教育曲艺音乐剧 美术学类美术学绘画雕塑摄影书法学中国画实验艺术跨媒体艺术文物保护与修复漫画纤维艺术科技艺术美术教育 设计学类艺术设计学视觉传达设计环境设计产品设计服装与服饰设计公共艺术工艺美术数字媒体艺术艺术与科技陶瓷艺术设计新媒体艺术包装设计珠宝首饰设计与工艺","link":"/%E5%AD%A6%E7%A7%91_%E4%B8%93%E4%B8%9A_%E8%A1%8C%E4%B8%9A_%E5%9B%BE%E4%B9%A6-%E5%88%86%E7%B1%BB/%E6%9C%AC%E7%A7%91%E4%B8%93%E4%B8%9A%E7%9B%AE%E5%BD%95/"},{"title":"","text":"国民经济行业分类A 农、林、牧、渔业本门类包括 01～05 大类 01 农业指对各种农作物的种植 011 谷物种植指以收获籽实为主的农作物的种植，包括稻谷、小麦、玉米等农作物的种植和作为饲料和工业原料的谷物的种植 0111 稻谷种植 0112 小麦种植 0113 玉米种植 0119 其他谷物种植 012 豆类、油料和薯类种植 0121 豆类种植 0122 油料种植 菜籽油是一种常见的油料作物，它是大宗油料作物之一。菜籽油的产量很高，主要用于生产食用植物油。菜籽油的生产属于草本植物，一般为一年生作物。 0123 薯类种植 013 棉、麻、糖、烟草种植 0131 棉花种植 0132 麻类种植 排在首位的必须是亚麻/Linum usitatissimum，亚麻属。一年生草本，叶型修长秀美，身材亭亭玉立，再加上蓝紫色的精致小花，盘靓条顺，麻类的颜值担当。起源于高加索一带，利用史可上溯至三万年前的旧石器时代，栽培史一万年起步，目前是栽培最广的麻，在麻界的地位相当于燃灯古佛+如来佛，堪称万麻之祖、麻中至尊。 0133 糖料种植 指用于制糖的甘蔗和甜菜的种植 0134 烟草种植 014 蔬菜、食用菌及园艺作物种植 0141 蔬菜种植 0142 食用菌种植 0143 花卉种植 0149 其他园艺作物种植 015 水果种植 0151 仁果类和核果类水果种植 指苹果、梨、桃、杏、李子等水果种植 0152 葡萄种植 0153 柑橘类种植 0154 香蕉等亚热带水果种植 指香蕉、菠萝、芒果等亚热带水果种植 0159 其他水果种植 016 坚果、含油果、香料和饮料作物种植 0161 坚果种植 0162 含油果种植 指油茶、橄榄、油棕榈、油桐籽、椰子等种 植 油茶（Camellia oleifera Abel）是山茶科山茶属小乔木或灌木。因其种子可榨油(茶油)供食用，故名“油茶”。 油棕榈，是棕榈科油棕榈属两种产油植物的统称，属于经济作物。分为两种，一种是原产于西非的非洲油棕榈，分布范围为安哥拉至冈比亚的西非地区、以及马来西亚和印度尼西亚。另一种是中美洲和南美洲北部的美洲油棕榈（又称黑果棕榈）。 油桐籽：木油桐的种子，属大戟科落叶乔木。因果皮有皱纹，所以又称龟背桐，寓意长命百岁。油桐籽榨出的油叫木油，熟称桐油，是重要工业用油，用于制造油漆和涂料，经济价值很高。桐油色泽金黄或棕黄，是优良的干性油，有光泽，不能食用，具有不透水、不透气、不传电、抗酸碱、防腐蚀、耐冷热等特点。广泛用于制漆、塑料、电器、人造橡胶、人造皮革、人造汽油、油墨等制造业。 0163 香料作物种植 0164 茶叶种植 0169 其他饮料作物种植 017 中药材种植指主要用于中药配制以及中成药加工的药材作物的种植 0171 中草药种植 指主要用于中药配制以及中成药加工的各种中草药材作物的种植 0179 其他中药材种植 018 草种植及割草 0181 草种植 指人工种植收获牧草 0182 天然草原割草 指天然草原刈割收获牧草 019 0190 其他农业02 林业021 林木育种和育苗 0211 林木育种 指应用遗传学原理选育、繁殖林木良种和繁殖林木新品种核心的栽植材料的林木遗传改良活动 0212 林木育苗 指通过人为活动将种子、穗条或植物其他组织培育成苗木的活动 022 0220 造林和更新指在宜林荒山荒地荒沙、采伐迹地、火烧迹地、疏林地、灌木林地等一切可造林的土地上通过人工造林、人工更新、封山育林、飞播造林等方式培育和恢复森林的活动 023 森林经营、管护和改培 0231 森林经营和管护 指为促进林木生长发育，在林木生长的不同时期进行的促进林木生长发育的活动 0232 森林改培 指为调整林分结构和树种组成，形成密度合理、物种丰富、功能完备的优质、高产、高效林而采取林分抚育、补植、补播等人工措施的活动 024 木材和竹材采运指对林木和竹木的采伐，并将其运出山场至贮木场的生产活动 0241 木材采运 0242 竹材采运 025 林产品采集指在天然林地和人工林地进行的各种林木产品和其他野生植物的采集等活动 0251 木竹材林产品采集 0252 非木竹材林产品采集 指在天然林地和人工林地进行的除木材、竹材产品外的其他各种林产品的采集活动 03 畜牧业指为了获得各种畜禽产品而从事的动物饲养、捕捉活动 031 牲畜饲养 0311 牛的饲养 0312 马的饲养 0313 猪的饲养 0314 羊的饲养 0315 骆驼饲养 0319 其他牲畜饲养 032 家禽饲养 0321 鸡的饲养 0322 鸭的饲养 0323 鹅的饲养 0329 其他家禽饲养 033 0330 狩猎和捕捉动物指对各种野生动物的捕捉以及与此相关的活动 039 其他畜牧业 0391 兔的饲养 0392 蜜蜂饲养 0399 其他未列明畜牧业 04 渔业041 水产养殖 0411 海水养殖 指利用海水对各种水生动植物的养殖 0412 内陆养殖 指在内陆水域进行的各种水生动植物的养殖 042 水产捕捞 0421 海水捕捞 指在海洋中对各种天然水生动植物的捕捞 0422 内陆捕捞 指在内陆水域对各种天然水生动植物的捕捞 05 农、林、牧、渔专业及辅助性活动051 农业专业及辅助性活动指对农业提供的各种专业及辅助性生产活动，不包括各种科学技术和专业技术服务 0511 种子种苗培育活动 0512 农业机械活动 指为农业生产提供农业机械并配备操作人员 的活动 0513 灌溉活动 指对农业生产灌溉排水系统的经营与管理 0514 农产品初加工活动 指对各种农产品（包括天然橡胶、纺织纤维原料）进行脱水、凝固、打蜡、去籽、净化、分类、晒干、剥皮、初烤、沤软或大批包装以提供初级市场的服务，以及其他农产品的初加工；其中棉花等纺织纤维原料加工指对棉纤维、短绒剥离后的棉籽以及棉花秸秆、铃壳等副产品的综合加工和利用活动 沤的意思：本义为用水浸泡待加工的食物，引申义为长时间浸泡在水里。 棉铃：棉桃的同义词。棉花的果实，初长时形状像铃叫棉铃，长成后像桃叫棉桃，一般不加分别。 0515 农作物病虫害防治活动 指从事农作物重大病虫害防治等活动 0519 其他农业专业及辅助性活动 指代耕代种代收、大田托管等其他农业活动 052 林业专业及辅助性活动指为林业生产提供的林业有害生物防治、林地防火等各种辅助性活动 0521 林业有害生物防治活动 0522 森林防火活动 0523 林产品初级加工活动 指对各种林产品进行去皮、打枝或去料、净化、初包装提供至贮木场或初级加工活动 打枝是指通过剪除植物的一些枝条来控制植物的生长和形状。这可以帮助植物更好地利用养分和水分,从而促进它们的生长和健康。 0529 其他林业专业及辅助性活动 053 畜牧专业及辅助性活动指提供牲畜繁殖、圈舍清理、畜产品生产、初级加工、动物免疫接种、标识佩戴和动物诊疗等活动 0531 畜牧良种繁殖活动 0532 畜禽粪污处理活动 0539 其他畜牧专业及辅助性活动 054 渔业专业及辅助性活动指对渔业生产提供的各种活动，包括鱼苗及鱼种场、水产良种场和水产增殖场等活动 0541 鱼苗及鱼种场活动 0549 其他渔业专业及辅助性活动 B 采矿业本类包括 06～12 大类，采矿业指对固体（如煤和矿物）、液体（如原油）或气体（如天然气）等自然产生的矿物的采掘；包括地下或地上采掘、矿井的运行，以及一般在矿址或矿址附近从事的旨在加工原材料的所有辅助性工作，例如碾磨、选矿和处理，均属本类活动；还包括使原料得以销售所需的准备工作；不包括水的蓄集、净化和分配，以及地质勘查、建筑工程活动 06 煤炭开采和洗选业指对各种煤炭的开采、洗选、分级等生产活动；不包括煤制品的生产和煤炭勘探活动 061 0610 烟煤和无烟煤开采洗选指对地下或露天烟煤、无烟煤的开采，以及对采出的烟煤、无烟煤及其他硬煤进行洗选、分级等提高质量的活动 烟煤由褐煤经变质作用转变而成的煤种。煤化程度高于褐煤而低于无烟煤。 无烟煤，俗称白煤或红煤，煤化程度最大。挥发分产率低，含量小于等于10%，密度大，硬度大，燃点高，燃烧时不冒烟，储藏时不易自燃，便于长途运输。 062 0620 褐煤开采洗选指对褐煤——煤化程度较低的一种燃料的地下或露天开采，以及对采出的褐煤进行洗选、分级等提高质量的活动 069 0690 其他煤炭采选指对生长在古生代地层中的含碳量低、灰分高的煤炭资源（如石煤、泥炭）的开采 07 石油和天然气开采业指在陆地或海洋，对天然原油、液态或气态天然气的开采，对煤矿瓦斯气（煤层气）的开采；为运输目的所进行的天然气液化和从天然气田气体中生产液化烃的活动，还包括对含沥青的页岩或油母页岩矿的开采，以及对焦油沙矿进行的同类作业 071 石油开采 0711 陆地石油开采 0712 海洋石油开采 072 天然气开采 0721 陆地天然气开采 0722 海洋天然气及可燃冰开采 08 黑色金属矿采选业081 0810 铁矿采选指对铁矿石的采矿、选矿活动 082 0820 锰矿、铬矿采选089 0890 其他黑色金属矿采选指对钒矿等钢铁工业黑色金属辅助原料矿的采矿、选矿活动 09 有色金属矿采选业指对常用有色金属矿、贵金属矿，以及稀有稀土金属矿的开采、选矿活动，包括深海有色金属矿开采 091 常用有色金属矿采选指对铜、铅锌、镍钴、锡、锑、铝、镁、汞、镉、铋等常用有色金属矿的采选 0911 铜矿采选 0912 铅锌矿采选 0913 镍钴矿采选 0914 锡矿采选 0915 锑矿采选 0916 铝矿采选 0917 镁矿采选 0919 其他常用有色金属矿采选 092 贵金属矿采选指对在地壳中含量极少的金、银和铂族元素（铂、铱、锇、钌、钯、铑）矿的采选 0921 金矿采选 0922 银矿采选 0929 其他贵金属矿采选 093 稀有稀土金属矿采选指对在自然界中含量较小，分布稀散或难以从原料中提取，以及研究和使用较晚的金属矿开采、精选 0931 钨钼矿采选 0932 稀土金属矿采选 指镧系金属及与镧系金属性质相近的金属矿 的采选 0933 放射性金属矿采选 指对主要含钍和铀的矿石开采，以及对这类 矿石的精选 0939 其他稀有金属矿采选 指对稀有轻金属矿、稀有高熔点金属矿、稀散金属矿采选活动，以及其他稀有金属矿的采选 10 非金属矿采选业101 土砂石开采 1011 石灰石、石膏开采 指对石灰、石膏，以及石灰石助熔剂的开采 石灰石主要成分碳酸钙（CaCO3），可以直接加工成石料和烧制成生石灰。 石膏是单斜晶系矿物，主要化学成分为硫酸钙（CaSO4）的水合物。可用于水泥缓凝剂、石膏建筑制品、模型制作、医用食品添加剂、硫酸生产、纸张填料、油漆填料等。 石灰是一种以氧化钙为主要成分的气硬性无机胶凝材料。石灰是用石灰石、白云石、白垩、贝壳等碳酸钙含量高的产物，经900～1100℃煅烧而成。 1012 建筑装饰用石开采 指通常在采石场切制加工各种纪念碑及建筑用石料的活动 1013 耐火土石开采 1019 粘土及其他土砂石开采 指用于建筑、陶瓷等方面的粘土开采，以及用于铺路和建筑材料的石料、石渣、砂的开采 黏土是含砂粒很少、有黏性的土壤，水分不容易从中通过而具有较好可塑性。一般的黏土都由硅酸盐矿物在地球表面风化后形成，一般在原地风化，颗粒较大而成分接近原来石块的，称为原生黏土或者是一次黏土。这种黏土的成分主要为氧化硅与氧化铝，色白而耐火，为配制瓷土之主要原料。 102 1020 化学矿开采指对化学矿和肥料矿物的开采，包括海底化学矿开采 103 1030 采盐指通过以海水（含沿海浅层地下卤水）为原料晒制，或以钻井汲取地下卤水，或注水溶解地下岩盐为原料，经真空蒸发干燥，以及从盐湖中采掘制成的以氯化钠为主要成分的盐产品的开采、粉碎和筛选 109 石棉及其他非金属矿采选指对石棉、石墨、贵重宝石、金刚石、天然磨料及其他矿石的开采 1091 石棉、云母矿采选 云母是一种硅酸盐矿物，主要成分是硅酸镁铝钾。而石棉则是一种纤维结构的矿物质，主要成分是硅酸镁。石棉具有纤维状结构，而云母则是晶体状. 石棉具有高度耐火性、电绝缘性和绝热性，是重要的防火、绝缘和保温材料。但是由于石棉纤维能引起石棉肺、胸膜间皮瘤等疾病，许多国家选择了全面禁止使用这种危险性物质。角闪石石棉因为具有较强致癌性，中国已于2002年禁止生产和使用。 云母具有非常高的绝缘、绝热性能，化学稳定性好，具有抗强酸、强碱和抗压能力，所以是制造电气设备的重要原材料 1092 石墨、滑石采选 指对天然石墨、滑石的开采 滑石是热液蚀变矿物。 热液蚀变:以水为主的深源热液携带了大量可溶物质，其组成与围岩的成分差异较大，两者间处于明显的不平衡状态，引起彼此间的物质成分交换。 1093 宝石、玉石采选 指对贵重宝石、玉石、彩石的开采 1099 其他未列明非金属矿采选 11 开采专业及辅助性活动指为煤炭、石油和天然气等矿物开采提供的活动 111 1110 煤炭开采和洗选专业及辅助性活动112 1120 石油和天然气开采专业及辅助性活动119 1190 其他开采专业及辅助性活动12 其他采矿业120 1200 其他采矿业指对地热资源、矿泉水资源以及其他未列明的自然资源的开采，但不包括利用这些资源建立的热电厂和矿泉水厂的活动 C 制造业本门类包括 13～43 大类，指经物理变化或化学变化后成为新的产品，不论是动力机械制造或手工制作，也不论产品是批发销售或零售，均视为制造；建筑物中的各种制成品、零部件的生产应视为制造，但在建筑预制品工地，把主要部件组装成桥梁、仓库设备、铁路与高架公路、升降机与电梯、管道设备、喷水设备、暖气设备、通风设备与空调设备，照明与安装电线等组装活动，以及建筑物的装置，均列为建筑活动；本门类包括机电产品的再制造，指将废旧汽车零部件、工程机械、机床等进行专业化修复的批量化生产过程，再制造的产品达到与原有新产品相同的质量和性能 13 农副食品加工业指直接以农、林、牧、渔业产品为原料进行的谷物磨制、饲料加工、植物油和制糖加工、屠宰及肉类加工、水产品加工，以及蔬菜、水果和坚果等食品的加工 131 谷物磨制也称粮食加工，指将稻谷、小麦、玉米、谷子、高粱等谷物去壳、碾磨，加工为成品粮的生产活动 1311 稻谷加工 指将稻谷去壳、碾磨成大米的生产活动 1312 小麦加工 指将小麦碾磨成小麦粉的生产活动 1313 玉米加工 指将玉米碾碎或碾磨成玉米碴或玉米粉的生产活动，不含以玉米为原料的饲料加工、淀粉及淀粉制品制造、酒精制造等 1314 杂粮加工 指将谷子、高粱、绿豆、红小豆等小宗谷类、豆类作物进行清理去壳、碾磨，加工为成品粮的生产活动 1319 其他谷物磨制 132 饲料加工 1321 宠物饲料加工 指专门为合法饲养的猫、狗、鱼、鸟等小动物提供食物的加工 1329 其他饲料加工 指适用于农场、农户饲养牲畜、家禽、水产品的饲料生产加工和用低值水产品及水产品加工废弃物（如鱼骨、内脏、虾壳）等为主要原料的饲料加工 133 植物油加工 1331 食用植物油加工 指用各种食用植物油料生产油脂，以及精制食用油的加工 1332 非食用植物油加工 指用各种非食用植物油料生产油脂的活动 134 1340 制糖业指以甘蔗、甜菜等为原料制作成品糖，以及以原糖或砂糖为原料精炼加工各种精制糖的生产活动 135 屠宰及肉类加工 1351 牲畜屠宰 指对各种牲畜进行宰杀，以及鲜肉冷冻等保鲜活动，但不包括商业冷藏活动 1352 禽类屠宰 指对各种禽类进行宰杀，以及鲜肉冷冻等保鲜活动，但不包括商业冷藏活动 1353 肉制品及副产品加工 指主要以各种畜、禽肉及畜、禽副产品为原料加工成熟肉制品 136 水产品加工 1361 水产品冷冻加工 指为了保鲜，将海水、淡水养殖或捕捞的鱼类、虾类、甲壳类、贝类、藻类等水生动物或植物进行的冷冻加工，但不包括商业冷藏活动 1362 鱼糜制品及水产品干腌制加工 指鱼糜制品制造，以及水产品的干制、腌制等加工活动 糜:粉碎,捣烂 1363 鱼油提取及制品制造 指从鱼或鱼肝中提取油脂，并生产制品的活动 1369 其他水产品加工 指对水生动植物进行的其他加工 137 蔬菜、菌类、水果和坚果加工指用脱水、干制、冷藏、冷冻、腌制等方法，对蔬菜、菌类、水果、坚果的加工 1371 蔬菜加工 1372 食用菌加工 1373 水果和坚果加工 139 其他农副食品加工 1391 淀粉及淀粉制品制造 指用玉米、薯类、豆类及其他植物原料制作淀粉和淀粉制品的生产；还包括以淀粉为原料，经酶法或酸法转换得到的糖品生产活动 1392 豆制品制造 指以大豆、小豆、绿豆、豌豆、蚕豆等豆类为主要原料，经加工制成食品的活动 1393 蛋品加工 1399 其他未列明农副食品加工 14 食品制造业141 焙烤食品制造 1411 糕点、面包制造 指用米粉、小麦粉、豆粉为主要原料，配以辅料，经成型、油炸、烤制而成的各种食品生产活动 1419 饼干及其他焙烤食品制造 指以小麦粉（或糯米粉）、糖和油脂为主要原料，配以奶制品、蛋制品等辅料，经成型、焙烤制成的各种饼干，以及用薯类、谷类、豆类等制作的各种易于保存、食用方便的焙烤食品生产活动 142 糖果、巧克力及蜜饯制造 1421 糖果、巧克力制造 糖果制造指以砂糖、葡萄糖浆或饴糖为主要原料，加入油脂、乳品、胶体、果仁、香料、食用色素等辅料制成甜味块状食品的生产活动；巧克力制造指以浆状、粉状或块状可可、可可脂、可可酱、砂糖、乳品等为主要原料加工制成巧克力及巧克力制品的生产活动 1422 蜜饯制作 指以水果、坚果、果皮及植物的其他部分制作糖果蜜饯的活动 143 方便食品制造指以米、小麦粉、杂粮等为主要原料加工制成，只需简单烹制即可作为主食，具有食用简便、携带方便，易于储藏等特点的食品制造 1431 米、面制品制造 指以大米、小麦粉、杂粮等为主要原料，经加工制成各种未经蒸煮类米面制品的生产活动 1432 速冻食品制造 指以米、小麦粉、杂粮等为主要原料，以肉类、蔬菜等为辅料，经加工制成各类烹制或未烹制的主食食品后，立即采用速冻工艺制成的，并可以在冻结条件下运输储存及销售的各类主食食品的生产活动 1433 方便面制造 1439 其他方便食品制造 指用米、杂粮等为主要原料加工制成的，可以直接食用或只需简单蒸煮即可作为主食的各种方便主食食品的生产活动，以及其他未列明的方便食品制造 144 乳制品制造指以生鲜牛（羊）乳及其制品为主要原料，经加工制成的液体乳及固体乳（乳粉、炼乳、乳脂肪、干酪等）制品的生产活动；不包括含乳饮料和植物蛋白饮料生产活动 1441 液体乳制造 1442 乳粉制造 1449 其他乳制品制造 145 罐头食品制造指将符合要求的原料经处理、分选、修整、烹调（或不经烹调）、装罐、密封、杀菌、冷却（或无菌包装）等罐头生产工艺制成的，达到商业无菌要求，并可以在常温下储存的罐头食品的制造 1451 肉、禽类罐头制造 1452 水产品罐头制造 1453 蔬菜、水果罐头制造 1459 其他罐头食品制造 指婴幼儿辅助食品类罐头、米面食品类罐头（如八宝粥罐头等）及上述未列明的罐头食品制造 146 调味品、发酵制品制造 1461 味精制造 指以淀粉或糖蜜为原料，经微生物发酵、提取、精制等工序制成的，谷氨酸钠含量在 80％及以上的鲜味剂的生产活动 1462 酱油、食醋及类似制品制造 指以大豆和（或）脱脂大豆，小麦和（或）麸皮为原料，经微生物发酵制成的各种酱油和酱类制品，以及以单独或混合使用各种含有淀粉、糖的物料或酒精，经微生物发酵酿制的酸性调味品的生产活动 1469 其他调味品、发酵制品制造 149 其他食品制造 1491 营养食品制造 指以新食品原料和其他富含营养成分的传统食材为原料，经各种常规食品制造技术生产的特殊医学用途配方食品、婴幼儿配方食品和其他适用于特定人群的主辅食品的生产活动 1492 保健食品制造 指标明具有特定保健功能的食品，适用于特定人群食用，具有调节机体功能，不以治疗为目的，对人体不产生急性、亚急性或慢性危害，以补充维生素、矿物质为目的的营养素补充等保健食品制造 1493 冷冻饮品及食用冰制造 指以砂糖、乳制品、豆制品、蛋制品、油脂、果料和食用添加剂等经混合配制、加热杀菌、均质、老化、冻结（凝冻）而成的冷食饮品的制造，以及食用冰的制造 1494 盐加工 指以原盐为原料，经过化卤、蒸发、洗涤、粉碎、干燥、脱水、筛分等工序，或在其中添加碘酸钾及调味品等加工制成盐产品的产活动 1495 食品及饲料添加剂制造 指增加或改善食品特色的化学品，以及补充动物饲料的营养成分和促进生长、防治疫病的制剂的生产活动 1499 其他未列明食品制造 15 酒、饮料和精制茶制造业151 酒的制造指酒精、白酒、啤酒及其专用麦芽、黄酒、葡萄酒、果酒、配制酒以及其他酒的生产 1511 酒精制造 指用玉米、小麦、薯类等淀粉质原料或用糖蜜等含糖质原料，经蒸煮、糖化、发酵及蒸馏等工艺制成的酒精产品的生产活动 1512 白酒制造 指以高粱等粮谷为主要原料，以大曲、小曲或麸曲及酒母等为糖化发酵剂，经蒸煮、糖化、发酵、蒸馏、陈酿、勾兑而制成的蒸馏酒产品的生产活动 1513 啤酒制造 指以麦芽（包括特种麦芽）、水为主要原料，加啤酒花，经酵母发酵酿制而成，含二氧化碳、起泡、低酒精度的发酵酒产品（包括无醇啤酒，也称脱醇啤酒）的生产活动，以及啤酒专用原料麦芽的生产活动 1514 黄酒制造 指以稻米、黍米、黑米、小麦、玉米等为主要原料，加曲、酵母等糖化发酵剂发酵酿制而成的发酵酒产品的生产活动 1515 葡萄酒制造 指以新鲜葡萄或葡萄汁为原料，经全部或部分发酵酿制而成，含有一定酒精度的发酵酒产品的生产活动 1519 其他酒制造 指除葡萄酒以外的果酒、配制酒以及上述未列明的其他酒产品的生产活动 152 饮料制造 1521 碳酸饮料制造 指在一定条件下充入二氧化碳气的饮用品制造，其成品中二氧化碳气的含量（20℃时的体积倍数）不低于 2.0 倍 1522 瓶（罐）装饮用水制造 指以地下矿泉水和符合生活饮用水卫生标准的水为水源加工制成的，密封于塑料瓶（罐）、玻璃瓶或其他容器中，不含任何添加剂，可直接饮用的水的生产活动 1523 果菜汁及果菜汁饮料制造 指以新鲜或冷藏水果和蔬菜为原料，经加工制得的果菜汁液制品生产活动，以及在果汁或浓缩果汁、蔬菜汁中加入水、糖液、酸味剂等，经调制而成的可直接饮用的饮品（果汁含量不低于 10％）的生产活动 1524 含乳饮料和植物蛋白饮料制造 指以鲜乳或乳制品为原料（经发酵或未经发酵），加入水、糖液等调制而成的可直接饮用的含乳饮品的生产活动，以及以蛋白质含量较高的植物的果实、种子或核果类、坚果类的果仁等为原料，在其加工制得的浆液中加入水、糖液等调制而成的可直接饮用的植物蛋白饮品的生产活动 1525 固体饮料制造 指以糖、食品添加剂、果汁或植物抽提物等为原料，加工制成粉末状、颗粒状或块状制品[其成品水分(质量分数)不高于 5％]的生产活动 1529 茶饮料及其他饮料制造 指茶饮料、特殊用途饮料以及其他未列明的饮料制造 153 1530 精制茶加工指对毛茶或半成品原料茶进行筛分、轧切、风选、干燥、匀堆、拼配等精制加工茶叶的生产活动 16 烟草制品业161 1610 烟叶复烤指在原烟（初烤）基础上进行第二次烟叶水分调整的活动 162 1620 卷烟制造指各种卷烟生产，但不包括生产烟用滤嘴棒的纤维丝束原料的制造 169 1690 其他烟草制品制造17 纺织业171 棉纺织及印染精加工指棉、棉型化纤（化纤短丝）纺织及印染精加工 1711 棉纺纱加工 指以棉及棉型化学纤维为主要原料进行的纺纱加工 1712 棉织造加工 指以棉纱、混纺纱、化学纤维纱为主要原料进行的机织物织造加工 1713 棉印染精加工 指对非自产的棉和化学纤维织物进行漂白、染色、印花、轧光、起绒、缩水等工序的加工 172 毛纺织及染整精加工 1721 毛条和毛纱线加工 指以毛及毛型化学纤维为原料进行梳条的加工，按毛纺工艺（精梳、粗梳、半精梳）进行纺纱的加工 1722 毛织造加工 指以毛及毛型化学纤维纱线为原料进行的机织物织造加工 1723 毛染整精加工 指对非自产的毛织物进行漂白、染色、印花等工序的染整精加工 173 麻纺织及染整精加工 1731 麻纤维纺前加工和纺纱 指以苎麻、亚麻、大麻、黄麻、剑麻、罗布麻等为原料的纺前纤维加工和纺纱加工 1732 麻织造加工 指以苎麻、亚麻、大麻、黄麻、剑麻、罗布麻纤维纱线等为主要原的机织物织造加工 1733 麻染整精加工 指对非自产的麻织物进行漂白、染色、印花等工序的染整精加工 174 丝绢纺织及印染精加工 1741 缫丝加工 指由蚕茧经过加工缫制成丝的活动 1742 绢纺和丝织加工 指以丝为主要原料进行的丝织物织造加工 1743 丝印染精加工 指对非自产的丝织物进行漂白、染色、印花、轧光、起绒、缩水等工序的加工 175 化纤织造及印染精加工指经纬双向或经向以化纤长丝(不包括化纤短纤）为主要原料生产的机织物 1751 化纤织造加工 指以化纤长丝(含有色长丝)为主要原料生产的机织坯布、色织布 1752 化纤织物染整精加工 指对化纤长丝坯布进行漂白、染色、印花、轧光、起绒、缩水等染整工序的加工 176 针织或钩针编织物及其制品制造 1761 针织或钩针编织物织造 指采用经编、纬编、横编及钩针编工艺进行的针织物织造加工 1762 针织或钩针编织物印染精加工 指对非自产的针织品进行漂白、染色、印花、轧光、起绒、缩水等工序的加工 1763 针织或钩针编织品制造 指除针织或钩针编织服装以外的其他针织品或钩针编织品的加工 177 家用纺织制成品制造1771 床上用品制造 指以棉、麻、竹、丝、毛、化学纤维等纤维及纺织品为主要原料，加工制造床上用品（包括含有填充物的被子、睡袋、枕头等类产品）的生产活动 1772 毛巾类制品制造 指以棉、麻、竹、丝及化学纤维等为主要原料，加工制造毛巾类产品的生产活动 1773 窗帘、布艺类产品制造 指以棉、麻、丝、毛及化学纤维等为主要原料，加工制造窗帘、各种装饰罩（套）、靠垫、坐垫、贮物袋等生活用布艺产品的生产活动 1779 其他家用纺织制成品制造 指以棉、麻、丝、毛及化学纤维等为主要原料，加工制造毛毯、桌布、台布、餐巾、擦布、洗碗巾等餐厨生活制品的其他家用纺织制成品生产活动 178 产业用纺织制成品制造也称产业用纺织制成品制造（包括帐篷等户外及庭院休闲用品制造） 1781 非织造布制造 指定向或随机排列的纤维，通过摩擦、抱合或粘合，或者这些方法的组合而相互结合制成的片状物、纤网或絮垫的生产活动；所用纤维可以是天然纤维、化学纤维和无机纤维，也可以是短纤维、长丝或直接形成的纤维状物 1782 绳、索、缆制造 指用天然纤维和化学纤维制造绳、索具、缆绳、合股线的生产活动 1783 纺织带和帘子布制造 指帘子布、复合材料用基布、输送带基布、传送带和胶管等增强材料的生产活动 1784 篷、帆布制造 指车用篷布、帐篷布、鞋用纺织材料、灯箱布等纺织材料的生产活动 1789 其他产业用纺织制成品制造 指革基布，过滤、防护用纺织品，工业用毡、呢，建筑用纺织品，交通运输用纺织品，包装用纺织品，文体用纺织品，绝缘隔热纺织品，农业用纺织品，渔业用纺织品，造纸用纺织品等其他产业用纺织制成品的生产活动 18 纺织服装、服饰业181 机织服装制造指以机织面料为主要原料，缝制各种男、女服装，以及儿童成衣的活动；包括非自产原料制作的服装，以及固定生产地点的服装制作活动 1811 运动机织服装制造 指运动服、滑雪服、登山服、游泳衣等服装制造 1819 其他机织服装制造 指除运动机织服装以外的其他机织服装制造 182 针织或钩针编织服装制造指以针织、钩针编织面料为主要原料，经裁剪后缝制各种男、女服装，以及儿童成衣的活动 1821 运动休闲针织服装制造 指针织 T 恤、针织休闲衫、针织运动类服装制造 1829 其他针织或钩针编织服装制造 指除运动休闲针织服装以外其他针织或钩织编织服装制造 183 1830 服饰制造指帽子、手套、围巾、领带、领结、手绢，以及袜子等服装饰品的加工 19 皮革、毛皮、羽毛及其制品和制鞋业191 1910 皮革鞣制加工指动物生皮经脱毛、鞣制等物理和化学方法加工，再经涂饰和整理，制成具有不易腐烂、柔韧、透气等性能的皮革生产活动 192 皮革制品制造 1921 皮革服装制造 指全部或大部分用皮革、人造革、合成革为面料，制作各式服装的活动 1922 皮箱、包（袋）制造 指全部或大部分用皮革、人造革、合成革为材料，或者以塑料、纺织物为材料，制作各种用途的皮箱、皮包(袋)，或其他材料的箱、包(袋)等制作活动 1923 皮手套及皮装饰制品制造 指全部或大部分用皮革、人造革、合成革为材料制成的皮手套、皮带，以及皮领带等皮装饰制品的生产活动 1929 其他皮革制品制造 指全部或大部分用皮革、人造革、合成革为材料制成上述未列明的其他各种皮革制品的生产活动 193 毛皮鞣制及制品加工 1931 毛皮鞣制加工 指带毛动物生皮经鞣制等化学和物理方法处理后，保持其绒毛形态及特点的毛皮(又称裘皮)的生产活动 1932 毛皮服装加工 指用各种动物毛皮和人造毛皮为面料或里料，加工制作毛皮服装的生产活动 1939 其他毛皮制品加工 指用各种动物毛皮和人造毛皮为材料，加工制作上述类别未列明的其他各种用途毛皮制品的生产活动 194 羽毛(绒)加工及制品制造 1941 羽毛（绒）加工 指对鹅、鸭等禽类羽毛进行加工成标准毛的生产活动 1942 羽毛（绒）制品加工 指用加工过的羽毛(绒)作为填充物制作各种用途的羽绒制品(如羽绒服装、羽绒寝具、羽绒睡袋等)的生产活动 195 制鞋业指纺织面料鞋、皮鞋、塑料鞋、橡胶鞋及其他各种鞋的生产活动 1951 纺织面料鞋制造 指用各种纺织面料、木材、棕草等原料缝制、模压或编制各种鞋的生产活动 1952 皮鞋制造 指全部或大部分用皮革、人造革、合成革为面料，以橡胶、塑料或合成材料等为外底，按缝绱、胶粘、模压、注塑等工艺方法制作各种皮鞋的生产活动 1953 塑料鞋制造 指以聚氯乙烯、聚乙烯、聚氨酯和乙烯醋酸乙烯等树脂为原料生产发泡或不发泡的塑料鞋类制品的活动 1954 橡胶鞋制造 指以橡胶作为鞋底、鞋帮的运动鞋及其他橡胶鞋和橡胶鞋部件的生产活动 1959 其他制鞋业 20 木材加工和木、竹、藤、棕、草制品业201 木材加工 2011 锯材加工 指以原木为原料，利用锯木机械或手工工具将原木纵向锯成具有一定断面尺寸（宽、厚度）的木材加工生产活动，用防腐剂和其他物质浸渍木料或对木料进行化学处理的加工，以及地板毛料的制造 2012 木片加工 指利用森林采伐、造材、加工等剩余物和定向培育的木材，经削（刨）片机加工成一定规格的产品生产活动 2013 单板加工 指用于胶合板、细工木板、木质重组装饰材、装饰单板（厚度 0.55mm 以下)、单层板积材（LVL）、纺织用木质层压板、电工层压板和木质层积塑料等材料的生产活动 2019 其他木材加工 指对木材进行干燥、防腐、改性、染色加工等活动 202 人造板制造指用木材及其剩余物、棉秆、甘蔗渣和芦苇等植物纤维为原料，加工成符合国家标准的胶合板、纤维板、刨花板、细木工板和木丝板等产品的生产活动，以及人造板二次加工装饰板的制造 2021 胶合板制造 指具有一定规格的原木经旋（刨）切成单板，再经干燥、涂胶、组坯、热压而成的符合国家标准及供需双方协定标准的产品生产活动 2022 纤维板制造 指用木材碎料（包括木片）、棉秆、甘蔗渣、芦苇等植物纤维作原料，经削片纤维分离，铺装成型，热压而成的产品生产活动 2023 刨花板制造 指用木材碎料（包括木片）和其他植物纤维作原料，制成刨花，经干燥、施胶，铺装成型，热压而成的产品生产活动 2029 其他人造板制造 包括非木质人造板、细工木板、胶合木等其他各类人造板的制造 203 木质制品制造指以木材为原料加工成建筑用木料和木材组件、木容器、软木制品及其他木制品的生产活动，但不包括木质家具的制造 2031 建筑用木料及木材组件加工 指主要用于建筑施工工程的木质制品，如建筑施工用的大木工或其他支撑物，以及建筑木工的生产活动 2032 木门窗制造 2033 木楼梯制造 2034 木地板制造 2035 木制容器制造 2039 软木制品及其他木制品制造 指天然软木除去表皮，经初加工后获得的结块软木及其制品的生产活动，以及其他未列明的木质产品的生产活动，包括整体定制家具制造的活动 204 竹、藤、棕、草等制品制造指除木材以外，以竹、藤、棕、草等天然植物为原料生产制品的活动，但不包括家具的制造 2041 竹制品制造 指竹胶合板、竹地板、竹丝板、竹梯子、竹键盘、竹篮子、竹筷子、竹席、高温竹炭制品等竹制工业用品、建筑用品、包装用品、保健品和生活日用品的制造 2042 藤制品制造 2043 棕制品制造 2049 草及其他制品制造 21 家具制造业指用木材、金属、塑料、竹、藤等材料制作的，具有坐卧、凭倚、储藏、间隔等功能，可用于住宅、旅馆、办公室、学校、餐馆、医院、剧场、公园、船舰、飞机、机动车等任何场所的各种家具的制造 211 2110 木质家具制造指以天然木材和木质人造板为主要材料，配以其他辅料（如油漆、贴面材料、玻璃、五金配件等）制作各种家具的生产活动 212 2120 竹、藤家具制造指以竹材和藤材为主要材料，配以其他辅料制作各种家具的生产活动 213 2130 金属家具制造指支(框)架及主要部件以铸铁、钢材、钢板、钢管、合金等金属为主要材料，结合使用木、竹、塑等材料，配以人造革、尼龙布、泡沫塑料等其他辅料制作各种家具的生产活动 214 2140 塑料家具制造指用塑料管、板、异型材加工或用塑料、玻璃钢（即增强塑料）直接在模具中成型的家具的生产活动 219 2190 其他家具制造指主要由弹性材料(如弹簧、蛇簧、拉簧等)和软质材料(如棕丝、棉花、乳胶海绵、泡沫塑料等)，辅以绷结材料(如绷绳、绷带、麻布等)和装饰面料及饰物(如棉、毛、化纤织物及牛皮、羊皮、人造革等)制成的各种软家具；以玻璃为主要材料，辅以木材或金属材料制成的各种玻璃家具，以及其他未列明的原材料制作各种家具的生产活动 22 造纸和纸制品业221 纸浆制造指经机械或化学方法加工纸浆的生产活动 2211 木竹浆制造 2212 非木竹浆制造 222 造纸指用纸浆或其他原料（如矿渣棉、云母、石棉等）悬浮在流体中的纤维，经过造纸机或其他设备成型，或手工操作而成的纸及纸板的制造 2221 机制纸及纸板制造 2222 手工纸制造 指采用手工操作成型，制成纸的生产活动 2223 加工纸制造 指对原纸及纸板进一步加工的生产活动 223 纸制品制造指用纸及纸板为原料，进一步加工制成纸制品的生产活动 2231 纸和纸板容器制造 2239 其他纸制品制造 指符合出售规格或包装要求的纸制品，以及其他未列明的纸制品的制造 23 印刷和记录媒介复制业231 印刷 2311 书、报刊印刷 2312 本册印制 指由各种纸及纸板制作的，用于书写和其他用途的本册生产活动 2319 包装装潢及其他印刷 指根据一定的商品属性、形态，采用一定的包装材料，经过对商品包装的造型结构艺术和图案文字的设计与安排来装饰美化商品的印刷，以及其他印刷活动 232 2320 装订及印刷相关服务指专门企业从事的装订、压印媒介制造等与印刷有关的服务 233 2330 记录媒介复制指将母带、母盘上的信息进行批量翻录的生产活动 24 文教、工美、体育和娱乐用品制造业241 文教办公用品制造 2411 文具制造 指办公、学习等使用的各种文具的制造 2412 笔的制造 指用于学习、办公或绘画等用途的各种笔制 品的制造 2413 教学用模型及教具制造 指主要用于教学的各种专用模型、标本及教 具的制造 2414 墨水、墨汁制造 2419 其他文教办公用品制造 指上述未列明的文教办公类用品的制造 242 乐器制造指中国民族乐器、西乐器等各种乐器及乐器零部件和配套产品的制造，但不包括玩具乐器的制造 2421 中乐器制造 2422 西乐器制造 2423 电子乐器制造 2429 其他乐器及零件制造 指其他未列明的乐器、乐器零件及配套产品 的制造 243 工艺美术及礼仪用品制造 2431 雕塑工艺品制造 指以玉石、宝石、象牙、角、骨、贝壳等硬质材料，木、竹、椰壳、树根、软木等天然植物，以及石膏、泥、面、塑料等为原料，经雕刻、琢、磨、捏或塑等艺术加工而制成的各种供欣赏、实用和礼仪用的工艺品制作活动 2432 金属工艺品制造 指以金、银、铜、铁、锡等各种金属为原料，经过制胎、浇铸、锻打、錾刻、搓丝、焊接、纺织、镶嵌、点兰、烧制、打磨、电镀等各种工艺加工制成的造型美观、花纹图案精的各种供欣赏、实用和礼仪用的工艺美术品制作活动 2433 漆器工艺品制造 指将半生漆、腰果漆加工调配成各种鲜艳的漆料，以木、纸、塑料、铜、布等作胎，采用推光、雕填、彩画、镶嵌、刻灰等传统工艺和现代漆器工艺进行的各种供欣赏、实用和礼仪用的工艺制品制作活动 2434 花画工艺品制造 指以绢、丝、绒、纸、涤纶、塑料、羽毛、通草以及鲜花草等为原料，经造型设计、模压、剪贴、干燥等工艺精制而成的花、果、叶等人造花类工艺品，以画面出现、可以挂或摆的具有欣赏性、装饰性和礼仪用的画类工艺品制作活动 2435 天然植物纤维编织工艺品制造 指以竹、藤、棕、草、柳、葵、麻等天然植物纤维为材料，经编织或镶嵌而成具有造型艺术或图案花纹，以欣赏为主的工艺陈列品、礼仪用品以及工艺实用品的制作活动 2436 抽纱刺绣工艺品制造 指以棉、麻、丝、毛及人造纤维纺织品等为主要原料，经设计、刺绣、抽、拉、钩等工艺加工各种生活装饰用品，以及以纺织品为主要原料，经特殊手工工艺或民间工艺方法加工成各种具有较强装饰效果的生活用纺织品和礼仪用品的制作活动 2437 地毯、挂毯制造 指以羊毛、丝、棉、麻及人造纤维等为原料，经手工编织、机织、栽绒等方式加工而成的各种具有装饰性的地面覆盖物或可用于悬挂、垫坐等用途的生活装饰用品和礼仪用品的制作活动 2438 珠宝首饰及有关物品制造 指以金、银、铂等贵金属及其合金以及钻石、宝石、玉石、翡翠、珍珠等为原料，经金属加工和连结组合、镶嵌等工艺加工制作各种图案的装饰品和礼仪用品的制作活动 2439 其他工艺美术及礼仪用品制造 244 体育用品制造 2441 球类制造 指各种皮制、胶制、革制的可充气的运动用球，以及其他材料制成的各种运动用硬球、软球等球类产品的生产活动 2442 专项运动器材及配件制造 指各项竞技比赛和训练用器材及用品，体育场馆设施及器件的生产活动 2443 健身器材制造 指供健身房、家庭或体育训练用的健身器材及运动物品的制造 2444 运动防护用具制造 指用各种材质，为各项运动特制手套、鞋、帽和护具的生产活动 2449 其他体育用品制造 指钓鱼专用的各种用具及用品，以及上述未列明的体育用品制造 245 玩具制造指以儿童为主要使用者，用于玩耍、智力开发等娱乐器具的制造 2451 电玩具制造 指制造供 14 岁以下儿童玩耍的、至少有一种玩耍功能需要使用额定电压小于或等于 24V 的玩具产品 2452 塑胶玩具制造 指制造供 14 岁以下儿童玩耍的、玩具主体或主要玩耍部分由塑胶制成的，非预定承载儿童体重的非电玩具产品 2453 金属玩具制造 指制造供 14 岁以下儿童玩耍的、玩具主体或主要玩耍部分由金属材料制成的，非预定承载儿童体重的非电玩具产品 2454 弹射玩具制造 指制造供 14 岁以下儿童玩耍的，各种材质的通过可贮存和释放能量的弹射机构发射弹射物的蓄能弹射玩具和由儿童给予的能量发射弹射物的非蓄能弹射玩具的玩具产品 2455 娃娃玩具制造 指制造供 14 岁以下儿童玩耍的、至少头部和四肢由非纺织物材质的聚合材料制成，并带有服装或身体由软性材料填充的非电的婴儿娃娃或人物娃娃玩具产品 2456 儿童乘骑玩耍的童车类产品制造 指制造供儿童乘骑玩耍的童车类产品（含儿童推车、婴儿学步车） 2459 其他玩具制造 246 游艺器材及娱乐用品制造 2461 露天游乐场所游乐设备制造 指主要安装在公园、游乐园、水上乐园、儿童乐园等露天游乐场所的电动及非电动游乐设备和游艺器材的制造 2462 游艺用品及室内游艺器材制造 指主要供室内、桌上等游艺及娱乐场所使用的游乐设备、游艺器材和游艺娱乐用品，以及主要安装在室内游乐场所的电子游乐设备的制造 2469 其他娱乐用品制造 25 石油、煤炭及其他燃料加工业251 精炼石油产品制造 2511 原油加工及石油制品制造 指从天然原油、人造原油中提炼液态或气态燃料以及石油制品的生产活动 2519 其他原油制造 指采用油页岩、油砂、焦油以及一氧化碳、氢等气体等加工得到的类似天然石油的液体燃料的生产活动 252 煤炭加工2521 炼焦 指主要从硬煤和褐煤中生产焦炭、干馏炭及煤焦油或沥青等副产品的炼焦炉的操作活动 2522 煤制合成气生产 2523 煤制液体燃料生产 指通过化学加工过程把固体煤炭转化成为液体燃料、化工原料和产品的活动，如煤制甲醇、煤制烯烃等 2524 煤制品制造 指用烟煤、无烟煤、褐煤及其他各种煤炭制成的煤砖、煤球等固体燃料制品的活动 2529 其他煤炭加工 指煤质活性炭等其他煤炭加工活动 253 2530 核燃料加工指从沥青铀矿或其他含铀矿石中提取铀、浓缩铀的生产，对铀金属的冶炼、加工，以及其他放射性元素、同位素标记、核反应堆燃料件的制造，还包括与核燃料加工有关的核废物处置活动 254 生物质燃料加工 2541 生物质液体燃料生产 指利用农作物秸秆和农业加工剩余物、薪材及林业加工剩余物、禽畜粪便、工业有机废水和废渣、城市生活垃圾和能源植物等生物质资源作为原料转化为液体燃料的活动 2542 生物质致密成型燃料加工 包括对下列生物质燃料的加工活动：林木致密成型燃料，秸秆致密成型燃料，废物、废料致密成型燃料，其他生物致密成型燃料；不包括：木炭、竹炭加工 26 化学原料和化学制品制造业261 基础化学原料制造 2611 无机酸制造 2612 无机碱制造 指烧碱、纯碱等生产活动 2613 无机盐制造 2614 有机化学原料制造 2619 其他基础化学原料制造 262 肥料制造指化学肥料、有机肥料及微生物肥料的制造 2621 氮肥制造 指矿物氮肥及用化学方法制成含有作物营养 元素氮的化肥的生产活动 2622 磷肥制造 指以磷矿石为主要原料，用化学或物理方法制成含有作物营养元素磷的化肥的生产活动 2623 钾肥制造 指用天然钾盐矿经富集精制加工制成含有作物营养元素钾的化肥的生产活动 2624 复混肥料制造 指经过化学或物理方法加工制成的，含有两种以上作物所需主要营养元素（氮、磷、钾）的化肥的生产活动；包括通用型复混肥料和专用型复混肥料 2625 有机肥料及微生物肥料制造 指来源于动植物，经发酵或腐熟等化学处理后，适用于土壤并提供植物养分供给的，其主要成分为含氮物质的肥料制造 2629 其他肥料制造 指上述未列明的微量元素肥料及其他肥料的生产 263 农药制造指用于防治农业、林业作物的病、虫、草、鼠和其他有害生物，调节植物生长的各种化学农药、微生物农药、生物化学农药，以及仓储、农林产品的防蚀、河流堤坝、铁路、机场、建筑物及其他场所用药的原药和制剂的生产活动 2631 化学农药制造 指化学农药原药，以及经过机械粉碎、混合或稀释制成粉状、乳状和水状的化学农药制剂的生产活动 2632 生物化学农药及微生物农药制造 指由细菌、真菌、病毒和原生动物或基因修饰的微生物等自然产生，以及由植物提取的防治病、虫、草、鼠和其他有害生物的农药制剂生产活动 264 涂料、油墨、颜料及类似产品制造 2641 涂料制造 指在天然树脂或合成树脂中加入颜料、溶剂和辅助材料，经加工后制成的覆盖材料的生产活动 2642 油墨及类似产品制造 指由颜料、联接料（植物油、矿物油、树脂、溶剂）和填充料经过混合、研磨调制而成，用于印刷的有色胶浆状物质，以及用于计算机打印、复印机用墨等生产活动 2643 工业颜料制造 指用于陶瓷、搪瓷、玻璃等工业的无机颜料及类似材料的生产活动 2644 工艺美术颜料制造 指油画、水粉画、广告等艺术用颜料的制造 2645 染料制造 指有机合成、植物性或动物性色料，以及有机颜料的生产活动 2646 密封用填料及类似品制造 指用于建筑涂料、密封和漆工用的填充料，以及其他类似化学材料的制造 265 合成材料制造 2651 初级形态塑料及合成树脂制造 也称初级塑料或原状塑料的生产活动，包括通用塑料、工程塑料、功能高分子塑料的制造 2652 合成橡胶制造 指用一种或多种单体为原料进行聚合生产合成橡胶或高分析弹性体的生产活动 2653 合成纤维单（聚合）体制造 指以石油、天然气、煤等为主要原料，用有机合成的方法制成合成纤维单体或聚合体的生产活动 2659 其他合成材料制造 指陶瓷纤维等特种纤维及其增强的复合材料的生产活动；其他专用合成材料的制造 266 专用化学产品制造 2661 化学试剂和助剂制造 指各种化学试剂、催化剂及专用助剂的生产 活动 2662 专项化学用品制造 指水处理化学品、造纸化学品、皮革化学品、油脂化学品、油田化学品、生物工程化学品、日化产品专用化学品等产品的生产活动 2663 林产化学产品制造 指以林产品为原料，经过化学和物理加工方法生产产品的活动，包括木炭、竹炭生产活动 2664 文化用信息化学品制造 指电影、照相、幻灯及投影用感光材料、冲洗套药，磁、光记录材料，光纤维通讯用辅助材料，及其专用化学制剂的制造 2665 医学生产用信息化学品制造 指医学和其他生产用感光材料、冲洗套药等化学制剂制造 2666 环境污染处理专用药剂材料制造 指对水污染、空气污染、固体废物、土壤污染等污染物处理所专用的化学药剂及材料的制造 2667 动物胶制造 指以动物骨、皮为原料，经一系列工艺处理制成有一定透明度、黏度、纯度的胶产品的生产活动 2669 其他专用化学产品制造 指其他各种用途的专用化学用品的制造 267 炸药、火工及焰火产品制造 2671 炸药及火工产品制造 指各种军用和生产用炸药、雷管及类似的火工产品的制造 2672 焰火、鞭炮产品制造 指节日、庆典用焰火及民用烟花、鞭炮等产品的制造 268 日用化学产品制造 2681 肥皂及洗涤剂制造 指以喷洒、涂抹、浸泡等方式施用于肌肤、器皿、织物、硬表面，即冲即洗，起到清洁、去污、渗透、乳化、分散、护理、消毒除菌等功能，广泛用于家居、个人清洁卫生、织物清洁护理、工业清洗、公共设施及环境卫生清洗等领域的产品（固、液、粉、膏、片状等），以及中间体表面活性剂产品的制造 2682 化妆品制造 指以涂抹、喷洒或者其他类似方法，撒布于人体表面任何部位（皮肤、毛发、指甲、口唇等），以达到清洁、消除不良气味、护肤、美容和修饰目的的日用化学工业产品的制造 2683 口腔清洁用品制造 指用于口腔或牙齿清洁卫生制品的生产活动 2684 香料、香精制造 指具有香气和香味，用于调配香精的物质——香料的生产，以及以多种天然香料和合成香料为主要原料，并与其他辅料一起按合理的配方和工艺调配制得的具有一定香型的复杂混合物，主要用于各类加香产品中的香精的生产活动 2689 其他日用化学产品制造 指室内散香或除臭制品，光洁用品，擦洗膏及类似制品，动物用化妆盥洗品，火柴，蜡烛及类似制品等日用化学产品的生产活动 27 医药制造业271 2710 化学药品原料药制造指供进一步加工化学药品制剂、生物药品制剂所需的原料药生产活动 272 2720 化学药品制剂制造指直接用于人体疾病防治、诊断的化学药品制剂的制造 273 2730 中药饮片加工指对采集的天然或人工种植、养殖的动物、植物和矿物的药材部位进行加工、炮制，使其符合中药处方调剂或中成药生产使用的活动 274 2740 中成药生产以中药材为原料，在中医药理论指导下，为了预防及治疗疾病的需要，按规定的处方和制剂工艺将其加工制成一定剂型的中药制品的生产活动 275 2750 兽用药品制造指用于动物疾病防治医药的制造 276 生物药品制品制造指利用生物技术生产生物化学药品、基因工程药物和疫苗的制剂生产活动 2761 生物药品制造 指利用生物技术生产生物化学药品的生产活 动 2762 基因工程药物和疫苗制造 277 2770 卫生材料及医药用品制造 指卫生材料、外科敷料以及其他内、外科用医药制品的制造 278 2780 药用辅料及包装材料制造指药品用辅料和包装材料等制造 28 化学纤维制造业281 纤维素纤维原料及纤维制造 2811 化纤浆粕制造 指纺织生产用粘胶纤维的基本原料生产活动 2812 人造纤维（纤维素纤维）制造 指用化纤浆粕经化学加工生产纤维的活动 282 合成纤维制造指以石油、天然气、煤等为主要原料，用有机合成的方法制成单体，聚合后经纺丝加工生产纤维的活动 2821 锦纶纤维制造 也称聚酰胺纤维制造，指由尼龙 66 盐和聚己内酰胺为主要原料生产合成纤维的活动 2822 涤纶纤维制造 是聚酯纤维制造的一种，指以聚对苯二甲酸乙二醇酯为原料生产合成纤维的活动 2823 腈纶纤维制造 也称聚丙烯腈纤维制造，指以丙烯腈为主要原料（含丙烯腈 85%以上）生产合成纤维的活动 2824 维纶纤维制造 也称聚乙烯醇纤维制造，指以聚乙烯醇为主要原料生产合成纤维的活动 2825 丙纶纤维制造 也称聚丙烯纤维制造，指以聚丙烯为主要原料生产合成纤维的活动 2826 氨纶纤维制造 也称聚氨酯纤维制造，指以聚氨基甲酸酯为主要原料生产合成纤维的活动 2829 其他合成纤维制造 283 生物基材料制造 2831 生物基化学纤维制造 指以生物单体或天然有机高分子为原料生产纤维的活动，除天然动植物纤维外，特指生物基再生纤维、生物基合成纤维等 2832 生物基、淀粉基新材料制造 指使用可再生生物资源（如玉米、木薯、秸秆等）经过糖化、发酵、聚合等步骤制成的聚乳酸等生物基、淀粉基材料的活动 29 橡胶和塑料制品业291 橡胶制品业指以天然及合成橡胶为原料生产各种橡胶制品的活动，还包括利用废橡胶再生产橡胶制品的活动；不包括橡胶鞋制造 2911 轮胎制造 2912 橡胶板、管、带制造 指用未硫化的、硫化的或硬质橡胶生产橡胶板状、片状、管状、带状、棒状和异型橡胶制品的活动，以及以橡胶为主要成分，用橡胶灌注、涂层、覆盖或层叠的纺织物、纱绳、钢丝（钢缆）等制作的传动带或输送带的生产活动 2913 橡胶零件制造 指各种用途的橡胶异形制品、橡胶零配件制品的生产活动 2914 再生橡胶制造 指用废橡胶生产再生橡胶的活动 2915 日用及医用橡胶制品制造 2916 运动场地用塑胶制造 指运动场地、操场及其他特殊场地用的合成材料跑道面层制造和其他塑胶制造 2919 其他橡胶制品制造 292 塑料制品业 指以合成树脂（高分子化合物）为主要原料经采用挤塑、注塑、吹塑、压延、层压等工艺加工成型的各种制品的生产，以及利用回收的废旧塑料加工再生产塑料制品的活动；不包括塑料鞋制造 2921 塑料薄膜制造 指用于农业覆盖，工业、商业及日用包装薄膜的制造 2922 塑料板、管、型材制造 指各种塑料板、管及管件、棒材、薄片等生产活动，以及以聚氯乙烯为主要原料，经连续挤出成型的塑料异型材的生产活动 2923 塑料丝、绳及编织品制造 指塑料制丝、绳、扁条，塑料袋及编织袋、编织布等生产活动 2924 泡沫塑料制造 指以合成树脂为主要原料，经发泡成型工艺加工制成内部具有微孔的塑料制品的生产活动 2925 塑料人造革、合成革制造 指外观和手感似皮革，其透气、透湿性虽然略逊色于天然革，但具有优异的物理、机械性能，如强度和耐磨性等，并可代替天然革使用的塑料人造革的生产活动；模拟天然人造革的组成和结构，正反面都与皮革十分相似，比普通人造革更近似天然革，并可代替天然革的塑料合成革的生产活动 2926 塑料包装箱及容器制造 指用吹塑或注塑工艺等制成的，可盛装各种物品或液体物质，以便于储存、运输等用途的塑料包装箱及塑料容器制品的生产活动 2927 日用塑料制品制造 指塑料制餐、厨用具，卫生设备、洁具及其配件，塑料服装，日用塑料装饰品，以及其他日用塑料制品的生产活动 2928 人造草坪制造 指采用合成纤维，植入在机织的基布上，并具有天然草运动性能的人造草制造 2929 塑料零件及其他塑料制品制造 指塑料制绝缘零件、密封制品、紧固件，以及汽车、家具等专用零配件的制造，以及上述未列明的其他各类非日用塑料制品的生产活动 30 非金属矿物制品业301 水泥、石灰和石膏制造 3011 水泥制造 指以水泥熟料加入适量石膏或一定混合材，经研磨设备（水泥磨）磨制到规定的细度，制成水凝水泥的生产活动，还包括水泥熟料的生产活动 3012 石灰和石膏制造 302 石膏、水泥制品及类似制品制造 3021 水泥制品制造 指水泥制管、杆、桩、砖、瓦等制品制造 3022 砼结构构件制造 指用于建筑施工工程的水泥混凝土预制构件 的生产活动 3023 石棉水泥制品制造 3024 轻质建筑材料制造 指石膏板、石膏制品及类似轻质建筑材料的 制造 3029 其他水泥类似制品制造 指玻璃纤维增强水泥制品，以及其他未列明的水泥制品的制造 303 砖瓦、石材等建筑材料制造指粘土、陶瓷砖瓦的生产，建筑用石的加工，用废料或废渣生产的建筑材料，以及其他建筑材料的制造 3031 粘土砖瓦及建筑砌块制造 指用粘土和其他材料生产的砖、瓦及建筑砌块的活动 3032 建筑用石加工 指用于建筑、筑路、墓地及其他用途的大理石板、花岗岩等石材的切割、成形和修饰活动 3033 防水建筑材料制造 指以沥青或类似材料为主要原料制造防水材料的活动 3034 隔热和隔音材料制造 指用于隔热、隔音、保温的岩石棉、矿渣棉、膨胀珍珠岩、膨胀蛭石等矿物绝缘材料及其制品的制造，但不包括石棉隔热、隔音材料的制造 3039 其他建筑材料制造 304 玻璃制造指任何形态玻璃的生产，以及利用废玻璃再生产玻璃活动，包括特制玻璃的生产 3041 平板玻璃制造 指用浮法、垂直引上法、压延法等生产平板玻璃原片的活动 3042 特种玻璃制造 指具有钢化、单向透视、耐高压、耐高温、隔音、防紫外线、防弹、防爆、中空、夹层、变形、超厚、超薄等某一种特殊功能或特殊工艺的玻璃制造 3049 其他玻璃制造 指未列明的玻璃制造 305 玻璃制品制造指任何形态玻璃制品的生产，以及利用废玻璃再生产玻璃制品的活动 3051 技术玻璃制品制造 指用于建筑、工业生产的技术玻璃制品的制造 3052 光学玻璃制造 指用于放大镜、显微镜、光学仪器等方面的光学玻璃，日用光学玻璃，钟表用玻璃或类似玻璃，光学玻璃眼镜毛坯的制造，以及未进行光学加工的光学玻璃元件的制造 3053 玻璃仪器制造 指实验室、医疗卫生用各种玻璃仪器和玻璃器皿以及玻璃管的制造 3054 日用玻璃制品制造 指餐厅、厨房、卫生间、室内装饰及其他生活用玻璃制品的制造 3055 玻璃包装容器制造 指主要用于产品包装的各种玻璃容器的制造 3056 玻璃保温容器制造 指玻璃保温瓶和其他个人或家庭用玻璃保温容器的制造 3057 制镜及类似品加工 指以平板玻璃为材料，经对其进行镀银、镀铝，或冷、热加工后成型的镜子及类似制品的制造 3059 其他玻璃制品制造 306 玻璃纤维和玻璃纤维增强塑料制品制造 3061 玻璃纤维及制品制造 3062 玻璃纤维增强塑料制品制造 也称玻璃钢，指用玻璃纤维增强热固性树脂生产塑料制品的活动 307 陶瓷制品制造 3071 建筑陶瓷制品制造 指用于建筑物的内、外墙及地面装饰或耐酸腐蚀的陶瓷材料（不论是否涂釉）生产活动，以及水道、排水沟的陶瓷管道及配件的制造 3072 卫生陶瓷制品制造 指卫生和清洁盥洗用的陶瓷用具的生产活动 3073 特种陶瓷制品制造 指专为工业、农业、实验室等领域的各种特定用途和要求，采用特殊生产工艺制造陶瓷制品的生产活动 3074 日用陶瓷制品制造 指以粘土、瓷石、长石、石英等为原料，经破碎、制泥、成型、烧炼等工艺制成，主要供日常生活用的各种瓷器、炻器、陶器等陶瓷制品的制造 3075 陈设艺术陶瓷制造 指以粘土、瓷土、瓷石、长石、石英等为原料，经制胎、施釉、装饰、烧制等工艺制成，主要供欣赏、装饰的陶瓷工艺美术品制造 3076 园艺陶瓷制造 指专门为园林、公园、室外景观的摆设或具有一定功能的大型陶瓷制造 3079 其他陶瓷制品制造 指以石英、长石、瓷土等为原料，经制胎、施釉、装饰、烧成等工艺制成的实用陶瓷的制造，以及其他未列明的陶瓷制品的制造 308 耐火材料制品制造 3081 石棉制品制造 指以石棉或其他矿物纤维素为基础，制造摩擦制品、石棉纺织制品、石棉橡胶制品、石棉保温隔热材料制品的生产活动 3082 云母制品制造 3089 耐火陶瓷制品及其他耐火材料制造 指用硅质、粘土质、高铝质等石粉成形的陶 瓷隔热制品的制造 309 石墨及其他非金属矿物制品制造 3091 石墨及碳素制品制造 指以炭、石墨材料加工的特种石墨制品、石墨烯、碳素制品、异形制品，以及用树脂和各种有机物浸渍加工而成的碳素异形产品的制造 3099 其他非金属矿物制品制造 31 黑色金属冶炼和压延加工业311 3110 炼铁指用高炉法、直接还原法、熔融还原法等，将铁从矿石等含铁化合物中还原出来的生产活动 312 3120 炼钢指利用不同来源的氧（如空气、氧气）来氧化炉料（主要是生铁）所含杂质的金属提纯活动 313 3130 钢压延加工指通过热轧、冷加工、锻压和挤压等塑性加工使连铸坯、钢锭产生塑性变形，制成具有一定形状尺寸的钢材产品的生产活动 314 3140 铁合金冶炼指铁与其他一种或一种以上的金属或非金属元素组成的合金生产活动 32 有色金属冶炼和压延加工业321 常用有色金属冶炼指通过熔炼、精炼、电解或其他方法从有色金属矿、废杂金属料等有色金属原料中提炼常用有色金属的生产活动 3211 铜冶炼 指对铜精矿等矿山原料、废杂铜料进行熔炼、 精炼、电解等提炼铜的生产活动 3212 铅锌冶炼 3213 镍钴冶炼 3214 锡冶炼 3215 锑冶炼 3216 铝冶炼 指对铝矿山原料通过冶炼、电解、铸型，以 及对废杂铝料进行熔炼等提炼铝的生产活动 3217 镁冶炼 3218 硅冶炼 3219 其他常用有色金属冶炼 322 贵金属冶炼指对金、银及铂族金属的提炼活动 3221 金冶炼 指用金精（块）矿、阳极泥（冶炼其他有色金属时回收的阳极泥含金）、废杂金提炼黄金的生产活动 3222 银冶炼 指用银精（块）矿、阳极泥（冶炼其他有色金属时回收的阳极泥含银）、废杂银提炼白银的生产活动 3229 其他贵金属冶炼 323 稀有稀土金属冶炼指钨钼、稀有轻金属、稀有高熔点金属、稀散金属、稀土金属及其他稀有稀土金属冶炼活动，但不包括钍和铀等放射性金属的冶炼加工 3231 钨钼冶炼 3232 稀土金属冶炼 3239 其他稀有金属冶炼 324 3240 有色金属合金制造指以有色金属为基体，加入一种或几种其他元素所构成的合金生产活动 325 有色金属压延加工 3251 铜压延加工 指铜及铜合金的压延加工生产活动 3252 铝压延加工 指铝及铝合金的压延加工生产活动 3253 贵金属压延加工 指对金、银及铂族等贵金属，进行轧制、拉 制或挤压加工的生产活动 3254 稀有稀土金属压延加工 指对钨、钼、钽等稀有金属材的加工 3259 其他有色金属压延加工 33 金属制品业331 结构性金属制品制造 3311 金属结构制造 指以铁、钢或铝等金属为主要材料，制造金属构件、金属构件零件、建筑用钢制品及类似品的生产活动，这些制品可以运输，并便于装配、安装或竖立 3312 金属门窗制造 指用金属材料（铝合金或其他金属）制作建筑物用门窗及类似品的生产活动 332 金属工具制造 3321 切削工具制造 指手工或机床用可互换的切削工具的制造 3322 手工具制造 指在生产和日常生活中，进行装配、安装、维修时使用的手工工具的制造 3323 农用及园林用金属工具制造 指主要用于农牧业生产的小农具，园艺或林业作业用金属工具的制造 3324 刀剪及类似日用金属工具制造 指日常生活用刀剪、刀具、指甲钳等类似金属工具的制造 3329 其他金属工具制造 指上述类别未包括的用于各种用途的金属工具的制造 333 集装箱及金属包装容器制造 3331 集装箱制造 指专门设计，可长期反复使用，不用换箱内货物，便可从一种运输方式转移到另一种运输方式的放置货物的钢质箱体（其容积大于 1m3）的生产活动 3332 金属压力容器制造 指用于存装压缩气体、液化气体及其他具有一定压力的液体物质的金属容器（不论其是否配有顶盖、塞子，或衬有除铁、钢、铝以外的材料）的制造 3333 金属包装容器及材料制造 指主要为商品运输或包装而制作的金属包装容器及附件的制造 334 3340 金属丝绳及其制品制造335 建筑、安全用金属制品制造 3351 建筑、家具用金属配件制造 指用于建筑物、家具、交通工具或其他场所和用具的金属装置、锁及其金属配件的制造 3352 建筑装饰及水暖管道零件制造 指用于建筑方面的金属装饰材料，以及建筑工程对中性介质（如水、油、蒸汽、空气、煤气等没有腐蚀性的气体和液体物质）在低压下进行工作的设备和管道上所使用的金属附件的制造 3353 安全、消防用金属制品制造 指安全、消防用金属保险柜、保险箱、消防梯等金属制品的制造 3359 其他建筑、安全用金属制品制造 336 3360 金属表面处理及热处理加工指对外来的金属物件表面进行的电镀、镀层、抛光、喷涂、着色等专业性作业加工 337 搪瓷制品制造指在金属坯体表面涂搪瓷釉制成的，具有金属机械强度和瓷釉物化特征，及可装饰性的制品制造 3371 生产专用搪瓷制品制造 指专为工业生产设备、工业产品及家电配套的各种搪瓷制品的制造 3372 建筑装饰搪瓷制品制造 指用于建筑及其装饰方面的搪瓷制品和搪瓷制建筑材料的制造 3373 搪瓷卫生洁具制造 指卫生用和清洁盥洗用搪瓷用具的生产活动 3379 搪瓷日用品及其他搪瓷制品制造 指金属薄板经过成型、搪烧制成的日用品及其他搪瓷制品的制造 338 金属制日用品制造指以不锈钢、铝等金属为主要原材料，加工制作各种日常生活用金属制品的生产活动 3381 金属制厨房用器具制造 指厨房烹制、调理用各种金属器具、用具的生产活动 3382 金属制餐具和器皿制造 3383 金属制卫生器具制造 指卫生用和清洁盥洗用的各种金属器具、用具的生产活动 3389 其他金属制日用品制造 339 铸造及其他金属制品制造 3391 黑色金属铸造 指铸铁件、铸钢件等各种成品、半成品的制造 3392 有色金属铸造指有色金属及其合金铸造的各种成品、半成品的制造 3393 锻件及粉末冶金制品制造 指通过对金属坯料进行锻造变形而得到的工件或毛坯，或者将金属粉末和与非金属粉末的混合物通过压制变形、烘焙制作制品和材料的活动，包括自由锻件、模锻件、特殊成形锻件、冷锻件、温锻件、粉末冶金件等制造 3394 交通及公共管理用金属标牌制造 3399 其他未列明金属制品制造 指其他上述未包括的金属制品的制造；本类别还包括武器弹药的制造 34 通用设备制造业341 锅炉及原动设备制造 3411 锅炉及辅助设备制造 指各种蒸汽锅炉、汽化锅炉，以及除同位素分离器以外的各种核反应堆的制造 3412 内燃机及配件制造 指用于移动或固定用途的往复式、旋转式、火花点火式或压燃式内燃机及配件的制造，但不包括飞机、汽车和摩托车发动机的制造 3413 汽轮机及辅机制造 指汽轮机和燃气轮机（蒸汽涡轮机）的制造 3414 水轮机及辅机制造 3415 风能原动设备制造 指风能发电设备及其他风能原动设备制造 3419 其他原动设备制造 342 金属加工机械制造 3421 金属切削机床制造 指用于加工金属的各种切削加工数控机床及普通机床的制造 3422 金属成形机床制造 指以锻压、锤击和模压方式加工金属的机床，或以弯曲、折叠、矫直、剪切、冲压、开槽、拉丝等方式加工金属的数控机床及普通机床的制造 3423 铸造机械制造 指金属铸件（机械零件毛坯件）铸造用专用设备及其专门配套件的制造，普通铸造设备、制芯设备、砂处理设备、清理设备和特种铸造设备等制造 3424 金属切割及焊接设备制造 指将电能及其他形式的能量转换为切割、焊接能量对金属进行切割、焊接设备的制造 3425 机床功能部件及附件制造 指实现机床核心功能的零件和部件的制造，以及扩大机床加工性能和使用范围的附属装置的制造 3429 其他金属加工机械制造 343 物料搬运设备制造指在工厂、仓库、码头、站台及其他场地，进行起重、输送、装卸、搬运、堆码、存储等作业的机械设备以及车辆及其专门配套件的制造 3431 轻小型起重设备制造 指结构轻巧、动作简单、可在狭小场地升降或移动重物的简易起重设备及器具的制造；包括起重滑车、手动葫芦、电动葫芦、普通卷扬机、千斤顶、汽车举升机、单轨小车等制造 3432 生产专用起重机制造 指具有起升、行走等主要工作机构的各种起重机及其专门配套件的制造 3433 生产专用车辆制造 指用于生产企业内部，进行装卸、堆跺或短距离搬运、牵引、顶推等作业的无轨车辆及其专门配套件的制造；包括电动叉车、内燃叉车、集装箱正面吊运机、短距离牵引车及固定平台搬运车、跨运车，以及手动搬运、堆跺车等制造 3434 连续搬运设备制造 指在同一方向上，按照规定的线路连续或间歇地运送或装卸散状物料和成件物品的搬运设备及其专门配套件的制造；包括输送机械、装卸机械、给料机械等三类产品及其专门配套件的制造 3435 电梯、自动扶梯及升降机制造 指各种电梯、自动扶梯及自动人行道、升降机及其专门配套件的制造 3436 客运索道制造 指动力驱动，利用柔性绳索牵引箱体等运载工具运送人员的机电设备，包括客运架空索道、客运缆车、客运拖牵索道等制造 3437 机械式停车设备制造 指采用机械方法存取、停放汽车的机械装置或设备系统的制造，包括平面移动类、巷道堆垛类、垂直升降类、升降横移类、简易升降类停车设备 3439 其他物料搬运设备制造 指除上述以外的其他物料搬运设备及其专门配套件的制造 344 泵、阀门、压缩机及类似机械制造指泵、真空设备、压缩机，液压和气压动力机械及类似机械和阀门的制造 3441 泵及真空设备制造 指用以输送各种液体、液固混合体、液气混合体及其增压、循环、真空等用途的设备制造 3442 气体压缩机械制造 指对气体进行压缩，使其压力提高到 340kPa以上的压缩机械的制造 3443 阀门和旋塞制造 指通过改变其流道面积的大小，用以控制流体流量、压力和流向的装置制造 3444 液压动力机械及元件制造 指以液体为工作介质，依靠液体压力能，来进行能量转换、传递、控制和分配的元件和装置制造 3445 液力动力机械及元件制造 指以液体为工作介质，依靠液体动量矩，来进行能量转换、传递、控制和分配的元件和装置制造 3446 气压动力机械及元件制造 指以气体为工作介质，靠气压动力来传送能量的装置制造 345 轴承、齿轮和传动部件制造 3451 滚动轴承制造 指将运转的轴与轴座之间的滑动摩擦变为滚动摩擦，从而减少摩擦损失的一种精密的机械元件的制造 3452 滑动轴承制造 指在滑动摩擦下工作的轴承制造 3453 齿轮及齿轮减、变速箱制造 指用于传递动力和转速的齿轮和齿轮减(增）速箱（机、器）、齿轮变速箱的制造；不包括汽车变速箱等制造 3459 其他传动部件制造 指除齿轮及齿轮减、变速箱以外的其他相关传动装置制造；包括链传动、带传动、离合器、联轴节、制动器、平衡系统及其配套件制造 346 烘炉、风机、包装等设备制造 3461 烘炉、熔炉及电炉制造 指使用液体燃料、粉状固体燃料（焚化炉）或气体燃料，进行煅烧、熔化或其他热处理用的非电力熔炉、窑炉和烘炉等燃烧器的制造，以及工业或实验室用电炉及零件的制造 3462 风机、风扇制造 指用来输送各种气体，以及气体增压、循环、通风换气、排尘等设备的制造 3463 气体、液体分离及纯净设备制造 指对气体进行杂质的去除，提高气体的纯度的气体净化设备制造；仅对气、液混合物进行分离，不改变气体、液体性质的气、液分离设备制造；对各种混合气体进行分离及液化的气体分离成套设备制造 3464 制冷、空调设备制造 指用于专业生产、商业经营等方面的制冷设备和空调设备的制造，但不包括家用空调设备的制造 3465 风动和电动工具制造 指带有电动机、非电力发动机或风动装置的手工操作加工工具的制造 3466 喷枪及类似器具制造 3467 包装专用设备制造 指对瓶、桶、箱、袋或其他容器的洗涤、干燥、装填、密封和贴标签等专用包装机械的制造 347 文化、办公用机械制造 3471 电影机械制造 指各种类型或用途的电影摄影机、电影录音摄影机、影像放映机及电影辅助器材和配件的制造 3472 幻灯及投影设备制造 指通过媒体将在电子成像器件上的文字图像、胶片上的文字图像、纸张上的文字图像及实物投射到银幕上的各种设备、器材及零配件的制造 3473 照相机及器材制造 指各种类型或用途的照相机的制造；包括用以制备印刷板，用于水下或空中照相的照相机制造，以及照相机用闪光装置、摄影暗室装置和零件的制造 3474 复印和胶印设备制造 指各种用途的复印设备和集复印、打印、扫描、传真为一体的多功能一体机的制造；以及主要用于办公室的胶印设备、文字处理设备及零件的制造 3475 计算器及货币专用设备制造 指金融、商业、交通及办公等使用的电子计算器、具有计算功能的数据记录、重现和显示机器的制造；以及货币专用设备及类似机械的制造 3479 其他文化、办公用机械制造 348 通用零部件制造 3481 金属密封件制造 指以金属为原料制作密封件的生产活动 3482 紧固件制造 3483 弹簧制造 3484 机械零部件加工 指对专用和通用机械零部件的加工 3489 其他通用零部件制造 349 其他通用设备制造业 3491 工业机器人制造 指用于工业自动化领域的工业机器人的制造 3492 特殊作业机器人制造 指用于特殊性作业的机器人制造，如水下、危险环境、高空作业、国防、科考、特殊搬运、农业等特殊作业机器人制造 3493 增材制造装备制造 指以增材制造技术进行加工的设备制造和零部件制造 3499 其他未列明通用设备制造业 35 专用设备制造业351 采矿、冶金、建筑专用设备制造 3511 矿山机械制造 指用于各种固体矿物及石料的开采和洗选的机械设备及其专门配套设备的制造；包括建井设备，采掘、凿岩设备，矿山提升设备，矿物破碎、粉磨设备，矿物筛分、洗选设备，矿用牵引车及矿车等产品及其专用配套件的制造 3512 石油钻采专用设备制造 指对陆地和近海石油、天然气等专用开采设备的制造；不包括深海石油、天然气勘探开采平台及相关漂浮设备的制造 3513 深海石油钻探设备制造 指对 1500 米以上海洋的石油、天然气等专用开采设备的制造；不包括 1500 米以下浅海和陆地石油、天然气勘探开采平台及相关漂浮设备的制造 3514 建筑工程用机械制造 指建筑施工及市政公共工程用机械的制造，包括土方机械、筑路机械、具有回转、变幅功能的工程起重机、建筑起重机等 3515 建筑材料生产专用机械制造 指生产水泥、水泥制品、玻璃及玻璃纤维、建筑陶瓷、砖瓦等建筑材料所使用的各种生产、搅拌成型机械的制造 3516 冶金专用设备制造 指金属冶炼、锭坯铸造、轧制及其专用配套设备等生产专用设备的制造 3517 隧道施工专用机械制造 指用于地下非开挖施工专用机械的制造，包括隧道掘进机（盾构机和硬岩掘进机）、顶管机、水平定向钻等 352 化工、木材、非金属加工专用设备制造 3521 炼油、化工生产专用设备制造 指炼油、化学工业生产专用设备的制造，但不包括包装机械等通用设备的制造 3522 橡胶加工专用设备制造 指加工橡胶，或以橡胶为材料生产橡胶制品的专用机械制造 3523 塑料加工专用设备制造 指塑料加工工业中所使用的各类专用机械和装置的制造 3524 木竹材加工机械制造 指在木竹材、木竹质板材、木制品及竹制品加工过程中的各类机械和设备的制造 3525 模具制造 指金属铸造用模具、矿物材料用模具、橡胶或塑料用模具及其他用途的模具的制造 3529 其他非金属加工专用设备制造 353 食品、饮料、烟草及饲料生产专用设备制造 3531 食品、酒、饮料及茶生产专用设备制造 指主要用于食品、酒、饮料生产及茶制品加工等专用设备的制造 3532 农副食品加工专用设备制造 指对谷物、干豆类等农作物的筛选、碾磨、储存等专用机械，糖料和油料作物加工机械，畜禽屠宰、水产品加工及盐加工机械的制造 3533 烟草生产专用设备制造 3534 饲料生产专用设备制造 354 印刷、制药、日化及日用品生产专用设备制造 3541 制浆和造纸专用设备制造 指在制浆、造纸、纸加工及纸制品的生产过程中所用的各类机械和设备的制造 3542 印刷专用设备制造 指使用印刷或其他方式将图文信息转移到承印物上的专用生产设备的制造 3543 日用化工专用设备制造 指日用化学工业产品，如洗涤用品、口腔清洁用品、化妆品、香精、香料、动物胶、感光材料及其他日用化学制品专用生产设备的制造 3544 制药专用设备制造 指化学原料药和药剂、中药饮片及中成药专用生产设备的制造 3545 照明器具生产专用设备制造 指用于生产各种类型电光源产品和各种照明器具产品的专用生产设备的制造 3546 玻璃、陶瓷和搪瓷制品生产专用设备制造 指用于生产加工玻璃制品、玻璃器皿的专用机械，陶瓷器等类似产品的加工机床和生产专用机械，以及搪瓷制品生产设备的制造 3549 其他日用品生产专用设备制造 指上述未列明的日用品、工艺美术品的生产专用机械设备的制造 355 纺织、服装和皮革加工专用设备制造 3551 纺织专用设备制造 指纺织纤维预处理、纺纱、织造和针织机械的制造 3552 皮革、毛皮及其制品加工专用设备制造 指在制革、毛皮鞣制及其制品的加工生产过程中所使用的各种专用设备的制造 3553 缝制机械制造 指用于服装、鞋帽、箱包等制作的专用缝纫机械制造，以及生产加工各种面料服装、鞋帽所包括的铺布、裁剪、整烫、输送管理等机械和羽绒加工设备的制造 3554 洗涤机械制造 指洗衣店等专业洗衣机械的制造；不包括家用洗衣机的制造 356 电子和电工机械专用设备制造 3561 电工机械专用设备制造 指电机、电线、电缆等电站、电工专用机械及器材的生产设备的制造 3562 半导体器件专用设备制造 指生产集成电路、二极管（含发光二极管）、三极管、太阳能电池片的设备的制造 3563 电子元器件与机电组件设备制造 指生产电容、电阻、电感、印制电路板、电声元件、锂离子电池电子元器件与机电组件的设备的制造 3569 其他电子专用设备制造 指电子（气）物理设备及其他未列明的电子设备的制造 357 农、林、牧、渔专用机械制造 3571 拖拉机制造 3572 机械化农业及园艺机具制造 指用于土壤处理，作物种植或施肥，种植物收割的农业、园艺或其他机械的制造 3573 营林及木竹采伐机械制造 3574 畜牧机械制造 指草原建设、管理，畜禽养殖及畜禽产品采集等专用机械的制造 3575 渔业机械制造 指渔业养殖、渔业捕捞等专用设备的制造 3576 农林牧渔机械配件制造 指拖拉机配件和其他农林牧渔机械配件的制造 3577 棉花加工机械制造 指棉花加工专用机械制造，棉花加工成套设备的制造和安装 3579 其他农、林、牧、渔业机械制造 指用于农产品初加工机械，以及其他未列明的农、林、牧、渔业机械的制造 358 医疗仪器设备及器械制造 3581 医疗诊断、监护及治疗设备制造 指用于内科、外科、眼科、妇产科等医疗专用诊断、监护、治疗等方面的设备制造 3582 口腔科用设备及器具制造 指用于口腔治疗、修补设备及器械的制造 3583 医疗实验室及医用消毒设备和器具制造 指医疗实验室或医疗用消毒、灭菌设备及器具的制造 3584 医疗、外科及兽医用器械制造 指各种手术室、急救室、诊疗室等医疗专用及兽医用手术器械、医疗诊断用品和医疗用具的制造 3585 机械治疗及病房护理设备制造 指各种治疗设备、病房护理及康复专用设备的制造 3586 康复辅具制造 指用于改善、补偿、替代人体功能和辅助性治疗康复辅助器具的制造，适用于残疾人和老年人生活护理、运动康复、教育和就业辅助、残疾儿童康复等；主要包括假肢、矫形器、轮椅和助行器、助听器和人工耳蜗等产品和零部件的制造，也包括智能仿生假肢、远程康复系统、虚拟现实康复训练设备等其他康复类产品的制造 3587 眼镜制造 指眼镜成镜、眼镜框架和零配件、眼镜镜片、角膜接触镜（隐形眼镜）及护理产品的制造 3589 其他医疗设备及器械制造 指外科、牙科等医疗专用及兽医用家具器械的制造和人工器官及植（介）入器械制造，以及其他未列明的医疗设备及器械的制造 359 环保、邮政、社会公共服务及其他专用设备制造 3591 环境保护专用设备制造 指用于大气污染防治、水污染防治、固体废弃物处理、土壤修复和抽样、噪声与振动控制、环境应急等环境污染防治专用设备制造 3592 地质勘查专用设备制造 指地质勘查（勘探）专用设备的制造；不包括通用钻采、挖掘机械的制造 3593 邮政专用机械及器材制造 3594 商业、饮食、服务专用设备制造 3595 社会公共安全设备及器材制造 指公安、消防、安全等社会公共安全设备及器材的制造和加工 3596 交通安全、管制及类似专用设备制造 指除铁路运输以外的道路运输、水上运输及航空运输等有关的管理、安全、控制专用设备的制造；不包括电气照明设备、信号设备的制造 3597 水资源专用机械制造 指水利工程管理、节水工程及水的生产、供应专用设备的制造 3599 其他专用设备制造 指上述类别中未列明的其他专用设备的制造，包括同位素设备的制造 36 汽车制造业361 汽车整车制造 3611 汽柴油车整车制造 指由传统燃料动力装置驱动，具有四个以上车轮的非轨道、无架线的车辆，并主要用于载送人员和（或）货物、牵引输送人员和（或）货物的车辆制造 3612 新能源车整车制造 指采用新型动力系统，完全或主要依靠新型能源驱动的汽车，包括插电式混合动力（含增程式）汽车、纯电动汽车和燃料电池电动汽车等 362 3620 汽车用发动机制造363 3630 改装汽车制造指利用外购汽车底盘改装各类汽车的制造 364 3640 低速汽车制造指最高时速限制在规定范围内的农用三轮或四轮等载货汽车的制造 365 3650 电车制造指以电作为动力，以屏板或可控硅方式控制的城市内交通工具和专用交通工具的制造 366 3660 汽车车身、挂车制造指其设计和技术特性需由汽车牵引，才能正常行驶的一种无动力的道路车辆的制造 367 3670 汽车零部件及配件制造指机动车辆及其车身的各种零配件的制造 37 铁路、船舶、航空航天和其他运输设备制造业371 铁路运输设备制造 3711 高铁车组制造 指以外来电源或以蓄电池驱动的，或以压燃式发动机及其他方式驱动的，能够牵引高速铁路车辆的动力机车、高铁车组、铁路动车组的制造 3712 铁路机车车辆制造 指非高铁、动车机组的铁路机车制造，以及用于运送旅客和用以装运货物的客车、货车及其他铁路专用车辆的制造 3713 窄轨机车车辆制造 指可用于交通运输的窄轨内燃机车、电力机车和窄轨非机动车的制造 3714 高铁设备、配件制造 3715 铁路机车车辆配件制造 指铁道或有轨机车及其拖拽车辆的专用零配件的制造 3716 铁路专用设备及器材、配件制造 指铁路安全或交通控制设备的制造，以及其他铁路专用设备及器材、配件的制造 3719 其他铁路运输设备制造 372 3720 城市轨道交通设备制造373 船舶及相关装置制造 3731 金属船舶制造 指以钢质、铝质等各种金属为主要材料，为民用或军事部门建造远洋、近海或内陆河湖的金属船舶的制造 3732 非金属船舶制造 指以各种木材、水泥、玻璃钢等非金属材料，为民用或军事部门建造船舶的活动 3733 娱乐船和运动船制造 指游艇和用于娱乐或运动的其他船只的制造 3734 船用配套设备制造 指船用主机、辅机设备的制造 3735 船舶改装 指按规范要求对船舶船体、设备、系统、结构等改装 3736 船舶拆除 3737 海洋工程装备制造 指海上工程、海底工程、近海工程的专用设备制造，不含港口工程设备以及船舶、潜水、救捞等设备制造 3739 航标器材及其他相关装置制造 指用于航标的各种器材，以及不以航行为主的船只的制造，不含海上浮动装置的制造 374 航空、航天器及设备制造 3741 飞机制造 指在大气同温层以内飞行的用于运货或载客，用于国防，以及用于体育运动或其他用途的各种飞机及其零件的制造，包括飞机发动机的制造 3742 航天器及运载火箭制造 3743 航天相关设备制造 包括航天试验专用设备设施（宇航模拟设备、航天风洞、电磁、真空专用设备设施、其他航天试验专用设备设施）和总装调试测试设备（航天器总装调试测试设备、运载火箭总装调试测试设备）等专用设备、设施的制造 3744 航空相关设备制造 3749 其他航空航天器制造 375 摩托车制造 3751 摩托车整车制造 指不论是否装有边斗的摩托车制造，包括摩托车发动机的制造 3752 摩托车零部件及配件制造 376 自行车和残疾人座车制造 3761 自行车制造 指未装马达，主要以脚蹬驱动，装有一个或多个轮子的脚踏车辆及其零件的制造 3762 残疾人座车制造 377 3770 助动车制造指以出行代步为主要功能，主要以蓄电池等作为辅助能源，具有两个、三个、四个车轮，电动或电动助力功能的特种助力车及其零件的制造 378 3780 非公路休闲车及零配件制造指以运动休闲娱乐为主要功能，包括运动休闲车（不含跑车、山地车和越野车）、一轮、两轮、四轮休闲车、滑板车、草地车、观光车等制造 379 潜水救捞及其他未列明运输设备制造 3791 潜水装备制造 指潜水装置的制造 3792 水下救捞装备制造 指水下作业、救捞装备的制造 3799 其他未列明运输设备制造 指手推车辆、牲畜牵引车辆的制造，以及上述未列明的交通运输设备的制造 38 电气机械和器材制造业381 电机制造 3811 发电机及发电机组制造 指发电机及其辅助装置、发电成套设备的制造 3812 电动机制造 指交流或直流电动机及零件的制造 3813 微特电机及组件制造 指微型特种电机、减速器及零组件的制造 3819 其他电机制造 382 输配电及控制设备制造 3821 变压器、整流器和电感器制造 指变压器、静止式变流器等电力电子设备和互感器的制造 3822 电容器及其配套设备制造 指电力电容器及其配套装置和电容器零件的制造 3823 配电开关控制设备制造 指用于电压超过 1000V 的，诸如一般在配电系统中使用的接通及断开或保护电路的电器，以及用于电压不超过 1000V 的，如在住房、工业设备或家用电器中使用的配电开关控制设备及其零件的制造 3824 电力电子元器件制造 指用于电能变换和控制（从而实现运动控制）的电子元器件的制造 3825 光伏设备及元器件制造 指太阳能组件（太阳能电池）、控制设备及其他太阳能设备和元器件制造；不包括太阳能用蓄电池制造 3829 其他输配电及控制设备制造 指开关设备和控制设备内部的元器件之间，以及与外部电路之间的电连接所需用的器件和配件的制造 383 电线、电缆、光缆及电工器材制造 3831 电线、电缆制造 指在电力输配、电能传送，声音、文字、图像等信息传播，以及照明等各方面所使用的电线电缆的制造 3832 光纤制造 指将电的信号变成光的信号，进行声音、文字、图像等信息传输的光纤的制造 3833 光缆制造 指利用置于包覆套中的一根或多根光纤作为传输媒质并可以单独或成组使用的光缆的制造 3834 绝缘制品制造 指电气绝缘子、电机或电气设备用的绝缘零件，以及带有绝缘材料的金属制电导管及接头的制造，但不包括玻璃、陶瓷绝缘体和绝缘漆制品的制造 3839 其他电工器材制造 384 电池制造指以正极活性材料、负极活性材料，配合电介质，以密封式结构制成的，并具有一定公称电压和额定容量的化学电源的制造；包括一次性、不可充电和二次可充电，重复使用的干电池、蓄电池（含太阳能用蓄电池）的制造，以及利用氢与氧的合成转换成电能的装置，即燃料电池制造；不包括利用太阳光转换成电能的太阳能电池制造 3841 锂离子电池制造 指以锂离子嵌入化合物为正极材料电池的制造 3842 镍氢电池制造 指以储氢合金为负极材料，氢氧化镍为正极材料，电解液是含氢氧化锂（LiOH）的氢氧化钾（KOH）水溶液的电池的制造 3843 铅蓄电池制造 指以铅及氧化物为正负极材料，电解液为硫酸水溶液的电池制造 3844 锌锰电池制造 指以二氧化锰为正极，锌为负极的原电池的制造 3849 其他电池制造 385 家用电力器具制造指使用交流电源或电池的各种家用电器的制造 3851 家用制冷电器具制造 3852 家用空气调节器制造 指使用交流电源(制冷量 14000W 及以下)，调节室内温度、湿度、气流速度和空气洁净度的房间空气调节器的制造 3853 家用通风电器具制造 指由单相交流电动机驱动扇叶旋转，产生强制气流，以改善人体与周围空气间的热交换条件的电器制造 3854 家用厨房电器具制造 指家庭厨房用的电热蒸煮器具、电热烘烤器具、电热水和饮料加热器具、电热煎炒器具、家用电灶、家用食品加工电器具、家用厨房电清洁器具等电器具的制造 3855 家用清洁卫生电器具制造 指家用洗衣机、吸尘器等电力器具的制造 3856 家用美容、保健护理电器具制造 3857 家用电力器具专用配件制造 指家用电力器具专用配件的制造，不包括通用零部件制造 3859 其他家用电力器具制造 386 非电力家用器具制造 3861 燃气及类似能源家用器具制造 指以液化气、天然气、人工煤气、沼气作燃料，以马口铁、搪瓷、不锈钢等为材料加工制成的家用器具的生产活动 3862 太阳能器具制造 3869 其他非电力家用器具制造 387 照明器具制造 3871 电光源制造 指将电能转变为光的器件的制造，按发光原理可分为白炽灯（指对灯丝通电加热到白炽状态，利用热辐射发出可见光的电光源）；气体放电灯（指通过气体放电将电能转换为光的一种电光源）；半导体照明等固态光源（通过半导体芯片作为发光材料，将电能转换为光的一种电光源） 3872 照明灯具制造 指将起支撑、固定和保护作用的零部件与能反射、透过、分配、控制或改变一个或多个电光源发出的光的零部件以及所必需的电路辅助装置组合在一起的制造，包括室内外建筑照明、道路照明、生产照明、运输设备照明及特种照明等各种灯具的制造，不包括舞台及场地用灯制造 3873 舞台及场地用灯制造 指演出舞台、演出场地、运动场地、大型活动场地用灯制造 3874 智能照明器具制造 指利用计算机、无线通讯数据传输、扩频电力载波通讯技术、计算机智能化信息处理及节能型电器控制等技术组成的分布式无线遥测、遥控、遥讯控制系统，具有灯光亮度的强弱调节、灯光软启动、定时控制、场景设置等功能的照明器具制造 3879 灯用电器附件及其他照明器具制造 指用于生产各种电光源用电器附件以及为各类电光源配套的灯座及其他照明器具的制造 389 其他电气机械及器材制造 3891 电气信号设备装置制造 指交通运输工具（如机动车、船舶、铁道车辆等）专用信号装置及各种电气音响或视觉报警、警告、指示装置的制造，以及其他电气声像信号装置的制造 3899 其他未列明电气机械及器材制造 指上述未列明的电气机械及器材的制造 39 计算机、通信和其他电子设备制造业391 计算机制造 3911 计算机整机制造 指将可进行算术或逻辑运算的中央处理器和外围设备集成计算整机的制造，也包括硬件与软件集成计算机系统的制造，还包括来件组装计算机的加工 3912 计算机零部件制造 指组成电子计算机的内存、板卡、硬盘、电源、机箱、显示器等部件的制造 3913 计算机外围设备制造 指计算机外围设备及附属设备的制造；包括输入设备、输出设备和外存储设备等制造 3914 工业控制计算机及系统制造 是一种采用总线结构，对生产过程及机电设备、工艺装备进行检测与控制的工具总称；工控机具有重要的计算机属性和特征，如具有计算机 CPU、硬盘、内存、外设及接口，并有操作系统、控制网络和协议、计算能力、友好的人机界面；工控行业的产品和技术非常特殊，属于中间产品，是为其他各行业提供可靠、嵌入式、智能化的工业计算机制造 3915 信息安全设备制造 指用于保护网络和计算机中信息和数据安全的专用设备的制造，包括边界安全、通信安全、身份鉴别与访问控制、数据安全、基础平台、内容安全、评估审计与监控、安全应用设备等制造 3919 其他计算机制造 指计算机应用电子设备（以中央处理器为核心，配以专业功能模块、外围设备等构成各行业应用领域专用的电子产品及设备，如金融电子、汽车电子、医疗电子、工业控制计算机及装置、信息采集及识别设备、数字化 3C 产品等），以及其他未列明计算机设备的制造 392 通信设备制造 3921 通信系统设备制造 指固定或移动通信接入、传输、交换设备等通信系统建设所需设备的制造 3922 通信终端设备制造 指固定或移动通信终端设备的制造 393 广播电视设备制造 3931 广播电视节目制作及发射设备制造 指广播电视节目制作、发射设备及器材的制造 3932 广播电视接收设备制造 指专业广播电视接收设备的制造，但不包括家用广播电视接收设备的制造 3933 广播电视专用配件制造 指专业用录像重放及其他配套的广播电视设备的制造，但不包括家用广播电视装置的制造 3934 专业音响设备制造 指广播电视、影剧院、各种场地等专业用录音、音响设备及其他配套设备的制造 3939 应用电视设备及其他广播电视设备制造 指应用电视设备、其他广播电视设备和器材的制造 394 3940 雷达及配套设备制造指雷达整机及雷达配套产品的制造 395 非专业视听设备制造 3951 电视机制造 指非专业用电视机制造 3952 音响设备制造 指非专业用智能音响、无线电收音机、收录音机、唱机等音响设备的制造 3953 影视录放设备制造 指非专业用智能机顶盒、录像机、摄像机、激光视盘机等影视设备整机及零部件的制造，包括教学用影视设备的制造，但不包括广播电视等专业影视设备的制造 396 智能消费设备制造 3961 可穿戴智能设备制造 指由用户穿戴和控制，并且自然、持续地运行和交互的个人移动计算设备产品的制造，包括可穿戴运动监测设备制造 3962 智能车载设备制造 指包含具备汽车联网、自动驾驶、车内及车际通讯、智能交通基础设施通信等功能要素，融合了传感器、雷达、卫星定位、导航、人工智能等技术，使汽车具备智能环境感知能力，自动分析汽车行驶的安全及危险状态目的的车载终端产品及相关配套设备的制造 3963 智能无人飞行器制造 指按照国家有关安全规定标准，经允许生产并主要用于娱乐、科普等的智能无人飞行器的制造 3964 服务消费机器人制造 指除工业和特殊作业以外的各种机器人，包括用于个人、家庭及商业服务类机器人，如家务机器人、餐饮用机器人、宾馆用机器人、销售用机器人、娱乐机器人、助老助残机器人、医疗机器人、清洁机器人等 3969 其他智能消费设备制造 指其他未列明的智能消费设备的制造 397 电子器件制造 3971 电子真空器件制造 指电子热离子管、冷阴极管或光电阴极管及其他真空电子器件，以及电子管零件的制造 3972 半导体分立器件制造 3973 集成电路制造 指单片集成电路、混合式集成电路的制造 3974 显示器件制造 指基于电子手段呈现信息供视觉感受的器件及模组的制造，包括薄膜晶体管液晶显示器件（TN/STN-LCD、TFT-LCD）、场发射显示器件（FED）、真空荧光显示器件（VFD）、有机发光二极管显示器件（OLED）、等离子显示器件（PDP）、发光二极管显示器件（LED）、曲面显示器件以及柔性显示器件等 3975 半导体照明器件制造 指用于半导体照明的发光二极管（LED）、有机发光二极管（OLED）器件等制造 3976 光电子器件制造 指利用半导体光—电子（或电—光子）转换效应制成的各种功能器件制造 3979 其他电子器件制造 指其他未列明的电子器件的制造 398 电子元件及电子专用材料制造 3981 电阻电容电感元件制造 指电容器（包括超级电容器）、电阻器、电位器、电感器件、电子变压器件的制造 3982 电子电路制造 指在绝缘基材上采用印制工艺形成电气电子连接电路，以及附有无源与有源元件的制造，包括印刷电路板及附有元器件构成电子电路功能组合件 3983 敏感元件及传感器制造 指按一定规律，将感受到的信息转换成为电信号或其他所需形式的信息输出的敏感元件及传感器的制造 3984 电声器件及零件制造 指扬声器、送受话器、耳机、音箱及零件等制造 3985 电子专用材料制造 指用于电子元器件、组件及系统制备的专用电子功能材料、互联与封装材料、工艺及辅助材料的制造，包括半导体材料、光电子材料、磁性材料、锂电池材料、电子陶瓷材料、覆铜板及铜箔材料、电子化工材料等 3989 其他电子元件制造 指未列明的电子元件及组件的制造 399 3990 其他电子设备制造指电子（气）物理设备及其他未列明的电子设备的制造 40 仪器仪表制造业401 通用仪器仪表制造 4011 工业自动控制系统装置制造 指用于连续或断续生产制造过程中，测量和控制生产制造过程的温度、压力、流量、物位等变量或者物体位置、倾斜、旋转等参数的工业用计算机控制系统、检测仪表、执行机构和装置的制造 4012 电工仪器仪表制造 指用于电压、电流、电阻、功率等电磁量的测量、计量、采集、监测、分析、处理、检验与控制用仪器仪表及系统装置的制造 4013 绘图、计算及测量仪器制造 指供设计、制图、绘图、计算、测量，以及学习或办公、教学等使用的测量和绘图用具、器具及量仪的制造 4014 实验分析仪器制造 指利用物质的物理、化学、电学等性能对物质进行定性、定量分析和结构分析，以及湿度、黏度、质量、比重等性能测定所使用的仪器的制造；用于对各种物体在温度、湿度、光照、辐射等环境变化后适应能力的实验装置的制造；各种物体物化特性参数测量的仪器、实验装置及相关器具的制造 4015 试验机制造 指测试、评定和研究材料、零部件及其制成品的物理性能、机械（力学）性能、工艺性能、安全性能、舒适性能的实验仪器和设备的制造 4016 供应用仪器仪表制造 指电、气、水、油和热等类似气体或液体的供应过程中使用的计量仪表、自动调节或控制仪器及装置的制造 4019 其他通用仪器制造 指其他未列明的通用仪器仪表和仪表元器件的制造 402 专用仪器仪表制造 4021 环境监测专用仪器仪表制造 指对环境中的污染物、噪声、放射性物质、电磁波等进行监测和监控的专用仪器仪表及系统装置的制造 4022 运输设备及生产用计数仪表制造 指汽车、船舶及工业生产用转数计、生产计数器、里程记录器及类似仪表的制造 4023 导航、测绘、气象及海洋专用仪器制造 指用于气象、海洋、水文、天文、航海、航空等方面的导航、测绘、制导、测量仪器和仪表及类似装置的制造 4024 农林牧渔专用仪器仪表制造 指农、林、牧、渔生产专用仪器、仪表及类似装置的制造 4025 地质勘探和地震专用仪器制造 指地质勘探、钻采、地震等地球物理专用仪器、仪表及类似装置的制造 4026 教学专用仪器制造 指专供教学示范或展览，而无其他用途的专用仪器的制造 4027 核子及核辐射测量仪器制造 指专门用于核离子射线的测量或检验的仪器、装置，核辐射探测器等核专业用仪器仪表的制造 4028 电子测量仪器制造 指用电子技术实现对被测对象（电子产品）的电参数定量检测装置的制造 4029 其他专用仪器制造 指用于纺织、电站热工仪表等其他未列明的专用仪器的制造 403 4030 钟表与计时仪器制造指各种钟、表、钟表机芯、时间记录装置、计时器的制造，还包括装有钟表机芯或同步马达，用以测量、记录或指示时间间隔的装置、定时开关、卫星导航时间频率原子钟，以及钟表零配件的制造 404 4040 光学仪器制造指用玻璃或其他材料（如石英、萤石、塑料或金属）制作的光学配件、装配好的光学元件、组合式光学显微镜，以及军用望远镜等光学仪器的制造 405 4050 衡器制造指用来测定物质重量的各种机械、电子或机电结合的装置或设备的生产活动 409 4090 其他仪器仪表制造业指上述未列明的仪器、仪表的制造 41 其他制造业411 日用杂品制造 4111 鬃毛加工、制刷及清扫工具制造 指用原毛加工成生产刷子类产品的成品毛的生产，或以成品毛和棕、金属丝、塑料丝等为原料加工制刷的生产，以及其他清扫工具的制造 4119 其他日用杂品制造 指制伞及其他未列明的各种日常生活用杂品的生产活动 412 4120 核辐射加工指核技术与同位素技术的应用，由核辐照站利用核技术对原有产品改良、改变性质并使其增值的加工活动 419 4190 其他未列明制造业42 废弃资源综合利用业指废弃资源和废旧材料回收加工 421 4210 金属废料和碎屑加工处理指从各种废料［包括固体废料、废水（液）、废气等］中回收，并使之便于转化为新的原材料，或适于进一步加工为金属原料的金属废料和碎屑的再加工处理活动，包括废旧电器、电子产品拆解回收 422 4220 非金属废料和碎屑加工处理指从各种废料［包括固体废料、废水（液）、废气等］中回收，或经过分类，使其适于进一步加工为新原料的非金属废料和碎屑的再加工处理活动 43 金属制品、机械和设备修理业431 4310 金属制品修理432 4320 通用设备修理433 4330 专用设备修理434 铁路、船舶、航空航天等运输设备修理 4341 铁路运输设备修理 不包括火车机车回厂修理和发动机修理活动 4342 船舶修理 不包括船舶回厂修复、发动机修理以及船舶 拆除活动 4343 航空航天器修理 不包括航空航天器回厂修理和发动机修理活动 4349 其他运输设备修理 435 4350 电气设备修理436 4360 仪器仪表修理439 4390 其他机械和设备修理业D 电力、热力、燃气及水生产和供应业本门类包括 44～46 大类 44 电力、热力生产和供应业441 电力生产 4411 火力发电 不包括既发电又提供热力的活动 4412 热电联产 指既发电又提供热力的生产活动 4413 水力发电 指通过建设水电站、水利枢纽、航电枢纽等工程、将水能转换成电能的生产活动 4414 核力发电 指利用核反应堆中重核裂变所释放出的热能转换成电能的生产活动 4415 风力发电 4416 太阳能发电 4417 生物质能发电 指主要利用农业、林业和工业废弃物、甚至城市垃圾为原料，采取直接燃烧或气化等方式的发电活动 4419 其他电力生产 指利用地热、潮汐能、温差能、波浪能及其他未列明的能源的发电活动 442 4420 电力供应指利用电网出售给用户电能的输送与分配活动，以及供电局的供电活动 443 4430 热力生产和供应指利用煤炭、油、燃气等能源，通过锅炉等装置生产蒸汽和热水，或外购蒸汽、热水进行供应销售、供热设施的维护和管理的活动，包括利用地热和温泉供应销售的活动 45 燃气生产和供应业451 燃气生产和供应业指利用煤炭、油、燃气等能源生产燃气，或外购液化石油气、天然气等燃气，并进行输配，向用户销售燃气的活动，以及对煤气、液化石油气、天然气输配及使用过程中的维修和管理活动 4511 天然气生产和供应业 4512 液化石油气生产和供应业 4513 煤气生产和供应业 452 4520 生物质燃气生产和供应业指利用农作物秸秆、林木废弃物、食用菌渣、禽畜粪便等生物质资源作为原料转化为可燃性气体能源 46 水的生产和供应业461 4610 自来水生产和供应指将天然水（地下水、地表水）经过蓄集、净化达到生活饮用水或其他用水标准，并向居民家庭、企业和其他用户供应的活动 462 4620 污水处理及其再生利用指对污水污泥的处理和处置，及净化后的再利用活动 463 4630 海水淡化处理指将海水淡化处理，达到可以使用标准的生产活动 469 4690 其他水的处理、利用与分配指对雨水、微咸水等类似水进行收集、处理和利用活动 E 建筑业本门类包括 47～50 大类 47 房屋建筑业指房屋主体工程的施工活动；不包括主体工程施工前的工程准备活动 471 4710 住宅房屋建筑472 4720 体育场馆建筑指体育馆工程服务、体育及休闲健身用房屋建设活动 479 4790 其他房屋建筑业48 土木工程建筑业指土木工程主体的施工活动；不包括施工前的工程准备活动 481 铁路、道路、隧道和桥梁工程建筑 4811 铁路工程建筑 4812 公路工程建筑 4813 市政道路工程建筑 4814 城市轨道交通工程建筑 4819 其他道路、隧道和桥梁工程建筑 482 水利和水运工程建筑 4821 水源及供水设施工程建筑 4822 河湖治理及防洪设施工程建筑 4823 港口及航运设施工程建筑 483 海洋工程建筑指海上工程、海底工程、近海工程建筑活动，不含港口工程建筑活动 4831 海洋油气资源开发利用工程建筑 4832 海洋能源开发利用工程建筑 4833 海底隧道工程建筑 4834 海底设施铺设工程建筑 4839 其他海洋工程建筑 484 4840 工矿工程建筑指除厂房、电力工程外的非节能环保型矿山和工厂生产设施、设备的施工和安装 485 架线和管道工程建筑指建筑物外的架线、管道和设备的施工活动 4851 架线及设备工程建筑 指敷设于地面以上的电力、通信、广播电视等线缆、杆塔等工程建筑 4852 管道工程建筑 指供水、排水、燃气、集中供热、线缆排管、工业和长输等管道工程建筑 4853 地下综合管廊工程建筑 指建于城市地下用于容纳两类及以上城市工程管线的构筑物及其附属设施，如水管网、燃气网、电信网等 486 节能环保工程施工 4861 节能工程施工 4862 环保工程施工 4863 生态保护工程施工 487 电力工程施工 4871 火力发电工程施工 4872 水力发电工程施工 4873 核电工程施工 4874 风能发电工程施工 4875 太阳能发电工程施工 4879 其他电力工程施工 489 其他土木工程建筑 4891 园林绿化工程施工 4892 体育场地设施工程施工 指田径场、篮球场、足球场、网球场、高尔夫球场、跑马场、赛车场、卡丁车赛场、全民体育健身工程设施等室内外场地设施的工程施工 4893 游乐设施工程施工 4899 其他土木工程建筑施工 49 建筑安装业指建筑物主体工程竣工后，建筑物内各种设备的安装活动，以及施工中的线路敷设和管道安装活动；不包括工程收尾的装饰，如对墙面、地板、天花板、门窗等处理活动 491 4910 电气安装指建筑物及土木工程构筑物内电气系统（含电力线路）的安装活动 492 4920 管道和设备安装指管道、取暖及空调系统等安装活动 499 其他建筑安装业 4991 体育场地设施安装 指运动地面（如足球场、篮球场、网球场等）、滑冰、游泳设施（含可拼装设施、健身步道）的安装等 4999 其他建筑安装 包括智能化安装、救援逃生设备安装及其他未列明的安装活动 50 建筑装饰、装修和其他建筑业501 建筑装饰和装修业指对建筑工程后期的装饰、装修、维护和清理活动，以及对居室的装修活动 5011 公共建筑装饰和装修 5012 住宅装饰和装修 5013 建筑幕墙装饰和装修 502 建筑物拆除和场地准备活动指房屋、土木工程建筑施工前的准备活动 5021 建筑物拆除活动 5022 场地准备活动 503 5030 提供施工设备服务指为建筑工程提供配有操作人员的施工设备的服务 509 5090 其他未列明建筑业指上述未列明的其他工程建筑活动 F 批发和零售业本门类包括 51 和 52 大类，指商品在流通环节中的批发活动和零售活动 51 批发业指向其他批发或零售单位（含个体经营者）及其他企事业单位、机关团体等批量销售生活用品、生产资料的活动，以及从事进出口贸易和贸易经纪与代理的活动，包括拥有货物所有权，并以本单位(公司)的名义进行交易活动,也包括不拥有货物的所有权，收取佣金的商品代理、商品代售活动；本类还包括各类商品批发市场中固定摊位的批发活动，以及以销售为目的的收购活动 511 农、林、牧、渔产品批发指未经过加工的农作物、林产品及牲畜、畜产品、鱼苗的批发和进出口活动，但不包括蔬菜、水果、肉、禽、蛋、奶及水产品的批发和进出口活动，包括以批发为目的的农副产品收购活动 5111 谷物、豆及薯类批发 5112 种子批发 5113 畜牧渔业饲料批发 不包括宠物 5114 棉、麻批发 5115 林业产品批发 指林木种苗、采伐产品及采集产品等批发和进出口活动 5116 牲畜批发 5117 渔业产品批发 5119 其他农牧产品批发 512 食品、饮料及烟草制品批发指经过加工和制造的食品、饮料及烟草制品的批发和进出口活动，以及蔬菜、水果、肉、禽、蛋、奶及水产品的批发和进出口活动 5121 米、面制品及食用油批发 5122 糕点、糖果及糖批发 5123 果品、蔬菜批发 5124 肉、禽、蛋、奶及水产品批发 5125 盐及调味品批发 5126 营养和保健品批发 5127 酒、饮料及茶叶批发 指可直接饮用或稀释、冲泡后饮用的饮料、酒及茶叶的批发和进出口活动 5128 烟草制品批发 指经过加工、生产的烟草制品的批发和进出口活动 5129 其他食品批发 513 纺织、服装及家庭用品批发指纺织面料、纺织品、服装、鞋、帽及日杂品、家用电器、家具等生活日用品的批发和进出口活动 5131 纺织品、针织品及原料批发 5132 服装批发 5133 鞋帽批发 5134 化妆品及卫生用品批发 5135 厨具卫具及日用杂品批发 指灶具、炊具、厨具、餐具及各种容器、器皿等批发和进出口活动；卫生间的用品用具和生活用清洁、清扫用品、用具等批发和进出口活动 5136 灯具、装饰物品批发 5137 家用视听设备批发 5138 日用家电批发 5139 其他家庭用品批发 指上述未列明的其他生活日用品的批发和进出口活动 514 文化、体育用品及器材批发指各类文具用品、体育用品、图书、报刊、音像制品、电子出版物、数字出版物、首饰、工艺美术品、收藏品及其他文化用品、器材的批发和进出口活动 5141 文具用品批发 5142 体育用品及器材批发 5143 图书批发 5144 报刊批发 5145 音像制品、电子和数字出版物批发 5146 首饰、工艺品及收藏品批发 5147 乐器批发 5149 其他文化用品批发 515 医药及医疗器材批发指各种化学药品、生物药品、中药及医疗器材的批发和进出口活动；包括兽用药的批发和进出口活动 5151 西药批发 指人用化学药品和生物药品的批发与进出口活动 5152 中药批发 指人用中成药、中药材中药饮片（含中药配方颗粒）的批发和进出口活动 5153 动物用药品批发 5154 医疗用品及器材批发 516 矿产品、建材及化工产品批发指煤及煤制品、石油制品、矿产品及矿物制品、金属材料、建筑和装饰装修材料以及化工产品的批发和进出口活动 5161 煤炭及制品批发 5162 石油及制品批发 5163 非金属矿及制品批发 5164 金属及金属矿批发 5165 建材批发 指建筑用材料和装饰装修材料的批发和进出口活动 5166 化肥批发 5167 农药批发 5168 农用薄膜批发 5169 其他化工产品批发 517 机械设备、五金产品及电子产品批发指提供通用机械、专用设备、交通运输设备、电气机械、五金、交通器材、电料、计算机备、通讯设备、电子产品、仪器仪表及办公用机械的批发和进出口活动 5171 农业机械批发 5172 汽车及零配件批发 5173 摩托车及零配件批发 5174 五金产品批发 指小五金、工具、水暖部件及材料的批发和进出口活动，不包括自行车及零配件的批发和进出口 5175 电气设备批发 5176 计算机、软件及辅助设备批发 5177 通讯设备批发 指电信设备的批发和进出口活动 5178 广播影视设备批发 指广播影视设备的批发和进出口活动 5179 其他机械设备及电子产品批发 518 贸易经纪与代理指代办商、商品经纪人、拍卖商的活动；专门为某一生产企业做销售代理的活动；为买卖双方提供贸易机会或代表委托人进行商品交易代理活动 5181 贸易代理 指不拥有货物的所有权，为实现供求双方达成交易，按协议收取佣金的贸易代理 5182 一般物品拍卖 5183 艺术品、收藏品拍卖 5184 艺术品代理 指艺术品、收藏品销售代理，以及画廊艺术经纪代理 5189 其他贸易经纪与代理 519 其他批发业指上述未包括的批发和进出口活动 5191 再生物资回收与批发 指将可再生的废旧物资回收，并批发给制造企业作初级原料的活动 5192 宠物食品用品批发 5193 互联网批发 指通过互联网电子商务平台开展的商品批发活动 5199 其他未列明批发业 52 零售业指百货商店、超级市场、专门零售商店、品牌专卖店、售货摊等主要面向最终消费者（如居民等）的销售活动，以互联网、邮政、电话、售货机等方式的销售活动，还包括在同一地点，后面加工生产，前面销售的店铺（如面包房）；谷物、种子、饲料、牲畜、矿产品、生产用原料、化工原料、农用化工产品、机械设备（乘用车、计算机及通信设备除外）等生产资料销售不作为零售活动；多数零售商对其销售的货物拥有所有权，但有些则是充当委托人的代理人，进行委托销售或以收取佣金的方式进行销售；零售业按销售渠道分为有店铺零售和无店铺零售，其中有店铺零售分为综合零售和专门零售 521 综合零售 5211 百货零售 指经营的商品品种较齐全，经营规模较大的综合零售活动 5212 超级市场零售 指经营生鲜、食品、日用品等大众化实用品的超级市场的综合零售活动 5213 便利店零售 指以满足顾客便利性需求为主要目的，以小型超市形式的零售活动 5219 其他综合零售 指日用杂品综合零售活动；在街道、社区、乡镇、农村、工矿区、校区、交通要道口等人口稠密地区开办的小型综合零售店的活动；农村供销社的零售活动；不包括便利店零售 522 食品、饮料及烟草制品专门零售指专门经营粮油、食品、饮料及烟草制品的店铺零售活动 5221 粮油零售 5222 糕点、面包零售 5223 果品、蔬菜零售 5224 肉、禽、蛋、奶及水产品零售 5225 营养和保健品零售 5226 酒、饮料及茶叶零售 指专门经营酒、茶叶及各种饮料的店铺零售活动 5227 烟草制品零售 5229 其他食品零售 指上述未列明的店铺食品零售活动 523 纺织、服装及日用品专门零售指专门经营纺织面料、纺织品、服装、鞋、帽及各种生活日用品的店铺零售活动 5231 纺织品及针织品零售 5232 服装零售 5233 鞋帽零售 5234 化妆品及卫生用品零售 5235 厨具卫具及日用杂品零售 指专门经营炊具、厨具、餐具、日用陶瓷、日用玻璃器皿、塑料器皿、清洁用具和用品的店铺零售活动，以及各种材质其他日用杂品的零售活动 5236 钟表、眼镜零售 5237 箱包零售 5238 自行车等代步设备零售 包括自行车、助动自行车（包括电力助动自行车和燃油助动自行车）以及平衡车、老年代步车、三轮车等汽车、摩托车以外的代步车及零配件零售 5239 其他日用品零售 指专门经营小饰物、礼品花卉及其他未列明日用品的店铺零售活动 524 文化、体育用品及器材专门零售指专门经营文具、体育用品、图书、报刊、音像制品、电子出版物、数字出版物、首饰、工艺美术品、收藏品、照相器材及其他文化用品的店铺零售活动 5241 文具用品零售 5242 体育用品及器材零售 5243 图书、报刊零售 5244 音像制品、电子和数字出版物零售 5245 珠宝首饰零售 5246 工艺美术品及收藏品零售 指专门经营具有收藏价值和艺术价值的工艺品、艺术品、古玩、字画、邮品等店铺零售活动 5247 乐器零售 5248 照相器材零售 5249 其他文化用品零售 指专门经营游艺用品及其他未列明文化用品的店铺零售活动 525 医药及医疗器材专门零售指专门经营各种化学药品、生物药品、中药、医疗用品及器材的店铺零售活动 5251 西药零售 指人用化学药品和生物药品的零售活动 5252 中药零售 指人用中成药、中药材中药饮片的零售活动 5253 动物用药品零售 指畜牧业、渔业及禽类等动物用药品的零售 5254 医疗用品及器材零售 5255 保健辅助治疗器材零售 526 汽车、摩托车、零配件和燃料及其他动力销售 指专门经营汽车、摩托车、汽车部件、汽车零配件及燃料、燃气的零售活动以及汽车充电桩服务 5261 汽车新车零售 5262 汽车旧车零售 5263 汽车零配件零售 5264 摩托车及零配件零售 5265 机动车燃油零售 指专门经营机动车燃油及相关产品（润滑油）的店铺零售活动 5266 机动车燃气零售 5267 机动车充电销售 527 家用电器及电子产品专门零售指专门经营家用电器和计算机、软件及辅助设备、电子通信设备、电子元器件及办公设备的店铺零售活动 5271 家用视听设备零售 指专门经营电视、音响设备、摄录像设备等店铺零售活动 5272 日用家电零售 指专门经营冰箱、洗衣机、空调、吸尘器及其他家用电器设备的店铺零售活动 5273 计算机、软件及辅助设备零售 5274 通信设备零售 不包括专业通信设备的销售 5279 其他电子产品零售 528 五金、家具及室内装饰材料专门零售指专门经营五金用品、家具和装修材料的店铺零售活动，以及在家具、家居装饰、建材城（中心）及展销会上设摊位的销售活动 5281 五金零售 5282 灯具零售 5283 家具零售 5284 涂料零售 5285 卫生洁具零售 5286 木质装饰材料零售 指专门经营木质地板、门、窗等店铺零售活动，不包括板材销售活动 5287 陶瓷、石材装饰材料零售 指专门经营陶瓷、石材制地板砖、壁砖等店铺零售活动 5289 其他室内装饰材料零售 529 货摊、无店铺及其他零售业 5291 流动货摊零售 5292 互联网零售 指零售商通过电子商务平台开展销售的活动，不包括仅提供网络支付的活动，以及仅建立或提供网络交易平台和接入的活动 5293 邮购及电视、电话零售 指通过寄递及电视、电话等方式进行销售，并送货上门的零售活动 5294 自动售货机零售 5295 旧货零售 5296 生活用燃料零售 指从事生活用煤、煤油、酒精、薪柴、木炭以及罐装液化石油气等专门零售活动 5297 宠物食品用品零售 5299 其他未列明零售业 G 交通运输、仓储和邮政业本门类包括 53～60 大类 53 铁路运输业指铁路的安全管理、调度指挥、行车组织、客运组织、货运组织，以及机车车辆、线桥隧涵、牵引供电、通信信号、信息系统的用及维修养护；不包括铁路机车车辆、线桥隧涵、牵引供电、通信信号、信息系统设备的制造厂（公司）、建筑工程公司、商店、学校、科研所、医院等活动 531 铁路旅客运输 5311 高速铁路旅客运输 5312 城际铁路旅客运输 5313 普通铁路旅客运输 532 5320 铁路货物运输533 铁路运输辅助活动 5331 客运火车站 5332 货运火车站（场） 5333 铁路运输维护活动 指车辆运用及维护、线桥遂涵运用及维护、牵引供电运用及维护、通信信号运用及维护、铁路专用线运用及维护等 5339 其他铁路运输辅助活动 指除铁路旅客和货物公共运输、专用铁路运输和为其服务的铁路场站、机车车辆、线桥隧涵、牵引供电、通信信号的运用及维修养护，以及铁路专用线外的运输辅助活动 54 道路运输业541 城市公共交通运输指城市旅客运输活动 5411 公共电汽车客运 5412 城市轨道交通 指城市地铁、轻轨、有轨电车等活动 5413 出租车客运 指出租车公司以及与出租车公司签协议的出租车驾驶员的服务，还包括网络约车公司以及承揽网络预约客运的驾驶员的服务 5414 公共自行车服务 指政府或社会机构以低价格为居民提供的自行车出行服务 5419 其他城市公共交通运输 指其他未列明的城市旅客运输活动 542 公路旅客运输指城市以外道路的旅客运输活动 5421 长途客运 指由始发站至终点站定线、定站、定班运行 和停靠的旅客运输 5422 旅游客运 指专门为观光消遣为目的的团体或个人提供 的，或者在特定旅游线路上提供的客运服务 5429 其他公路客运 指其他未列明的公路旅客运输活动 543 道路货物运输指所有道路的货物运输活动 5431 普通货物道路运输 指对运输、装卸、保管没有特殊要求的道路货物运输活动 5432 冷藏车道路运输 指农产品、食品、植物等货物始终处于适宜温度环境下，保证产品质量的配有专门运输设备的道路货物运输活动 5433 集装箱道路运输 指以集装箱为承载货物容器的道路运输活动 5434 大型货物道路运输 指具备长度超过 6m，高度超过 2.7m，宽度超过 2.5m，质量超过 4t 中一个及以上条件货物的道路运输活动 5435 危险货物道路运输 指具有燃烧、爆炸、腐蚀、有毒、放射性等物质，在运输、装卸、保管过程中可能引起人身伤亡和财产毁损而需要特别防护的货物道路运输活动 5436 邮件包裹道路运输 5437 城市配送 指服务于城区以及市近郊的货物配送活动的货物临时存放地，在经济合理区域内，根据客户的要求对物品进行加工、包装、分割、组配等作业，并按时送达指定地点的物流活动 5438 搬家运输 5439 其他道路货物运输 指其他未列明的道路货物运输活动 544 道路运输辅助活动指与道路运输相关的运输辅助活动 5441 客运汽车站 指长途旅客运输汽车站的服务 5442 货运枢纽（站） 5443 公路管理与养护 5449 其他道路运输辅助活动 55 水上运输业551 水上旅客运输 5511 海上旅客运输 指沿海、远洋客轮的运输活动和以客运为主的沿海、远洋运输活动 5512 内河旅客运输 指江、河、湖泊、水库的水上旅客运输活动 5513 客运轮渡运输 指城市及其他水域旅客轮渡运输活动 552 水上货物运输 5521 远洋货物运输 5522 沿海货物运输 5523 内河货物运输 指江、河、湖泊、水库的水上货物运输活动 553 水上运输辅助活动 5531 客运港口 含水上运动码头 5532 货运港口 5539 其他水上运输辅助活动 指其他未列明的水上运输辅助活动 56 航空运输业561 航空客货运输 5611 航空旅客运输 指以旅客运输为主的航空运输活动 5612 航空货物运输 指以货物或邮件为主的航空运输活动 562 通用航空服务指使用民用航空器从事除公共航空运输以外的民用航空活动 5621 通用航空生产服务 指通用航空为农业、测绘、航拍、抢险、救援等活动的服务 5622 观光游览航空服务 包括直升机、热气球的游览服务 5623 体育航空运动服务 指通过各种航空器进行运动活动的服务，包括航空俱乐部服务 5629 其他通用航空服务 563 航空运输辅助活动 5631 机场 5632 空中交通管理 5639 其他航空运输辅助活动 指其他未列明的航空运输辅助活动 57 管道运输业571 5710 海底管道运输指通过海底管道对气体、液体等运输活动 572 5720 陆地管道运输指通过陆地管道对气体、液体等运输活动 58 多式联运和运输代理业581 5810 多式联运指由两种及其以上的交通工具相互衔接、转运而共同完成的货物复合运输活动 582 运输代理业指与运输有关的代理及服务活动 5821 货物运输代理 5822 旅客票务代理 5829 其他运输代理业 59 装卸搬运和仓储业指装卸搬运活动和专门从事货物仓储、货物运输中转仓储，以及以仓储为主的货物送配活动，还包括以仓储为目的的收购活动 591 5910 装卸搬运592 5920 通用仓储指除冷藏冷冻物品、危险物品、谷物、棉花、中药材等具有特殊要求以外的物品的仓储活动 593 5930 低温仓储指对冷藏冷冻物品等低温货物的仓储活动 594 危险品仓储指对具有易燃易爆物品、危险化学品、放射性物品等能够危及人身安全和财产安全的物品的仓储活动 5941 油气仓储 5942 危险化学品仓储 5949 其他危险品仓储 595 谷物、棉花等农产品仓储 5951 谷物仓储 指国家储备及其他谷物仓储活动 5952 棉花仓储 指棉花加工厂仓储、中转仓储、棉花专业仓储、棉花物流配送活动，还包括在棉花仓储、物流配送过程中的棉花信息化管理活动 5959 其他农产品仓储 指未列明的其他农产品仓储活动，包括林产品的仓储 596 5960 中药材仓储599 5990 其他仓储业60 邮政业601 6010 邮政基本服务指邮政企业或者受邮政企业委托的企业提供的信件、印刷品、包裹、汇兑、报刊发行邮政服务，以及国家规定的其他邮政服务；不包括邮政企业提供的快递服务 602 6020 快递服务指快递服务组织在承诺的时限内快速完成的寄递服务 609 6090 其他寄递服务指邮政企业和快递企业之外的企业提供的多种类型的寄递服务 H 住宿和餐饮业本门类包括 61 和 62 大类 61 住宿业指为旅行者提供短期留宿场所的活动，有些单位只提供住宿，也有些单位提供住宿、饮食、商务、娱乐一体的服务，本类不包括主要按月或按年长期出租房屋住所的活动 611 6110 旅游饭店指按照国家有关规定评定的旅游饭店和具有同等质量、水平的饭店活动 612 一般旅馆指不具备评定旅游饭店和同等水平饭店的一般旅馆的活动 6121 经济型连锁酒店 指以客房为唯一或核心产品，以连锁为经营模式，统一装修风格，统一服务标准，面向大众、价格经济、满足消费者在外出住宿时对安全、卫生、便捷等方面基本要求的并具有国际接待水准的有限服务型住宿企业 6129 其他一般旅馆 613 6130 民宿服务指城乡居民及社会机构利用闲置房屋开展的住宿活动和短期出租公寓服务 614 6140 露营地服务指在游览景区或其他地区，为自驾游、自行车游客及其他游客外出旅行提供使用自备露营设施（如帐篷、房车）或租借小木屋、移动别墅、房车等住宿和生活场所 619 6190 其他住宿业指上述未列明的住宿服务 62 餐饮业指通过即时制作加工、商业销售和服务性劳动等，向消费者提供食品和消费场所及设施的服务 621 6210 正餐服务指在一定场所内提供以中餐、晚餐为主的各种中西式炒菜和主食，并由服务员送餐上桌的餐饮活动 622 6220 快餐服务指在一定场所内或通过特定设备提供快捷、便利的餐饮服务 623 饮料及冷饮服务指在一定场所内以提供饮料和冷饮为主的服务 6231 茶馆服务 6232 咖啡馆服务 6233 酒吧服务 6239 其他饮料及冷饮服务 624 餐饮配送及外卖送餐服务 6241 餐饮配送服务 指根据协议或合同，为民航、铁路、学校、公司、机关等机构提供餐饮配送服务 6242 外卖送餐服务 指根据消费者的订单和食品安全的要求，选择适当的交通工具、设备，按时、按质、按量送达消费者，并提供相应单据的服务 629 其他餐饮业 6291 小吃服务 指提供全天就餐的简便餐饮服务，包括路边小饭馆、农家饭馆、流动餐饮和单一小吃等餐饮服务 6299 其他未列明餐饮业 I 信息传输、软件和信息技术服务业本门类包括 63～65 大类 63 电信、广播电视和卫星传输服务631 电信指利用有线、无线的电磁系统或者光电系统，传送、发射或者接收语音、文字、数据、图像以及其他任何形式信息的活动 6311 固定电信服务 指从事固定通信业务活动 6312 移动电信服务 指从事移动通信业务活动 6319 其他电信服务 指除固定电信服务、移动电信服务外，利用固定、移动通信网从事的信息服务 632 广播电视传输服务 6321 有线广播电视传输服务 指有线广播电视网络及其信息传输分发交换接入服务和信号的传输服务 6322 无线广播电视传输服务 指无线广播电视传输覆盖网及其信息传输分发交换服务信号的传输服务 633 卫星传输服务指利用卫星提供通讯传输和广播电视传输服务、以及导航、定位、测绘、气象、地质勘查、空间信息等应用服务 6331 广播电视卫星传输服务 6339 其他卫星传输服务 64 互联网和相关服务641 6410 互联网接入及相关服务指除基础电信运营商外，基于基础传输网络为存储数据、数据处理及相关活动，提供接入互联网的有关应用设施的服务 642 互联网信息服务指除基础电信运营商外，通过互联网提供在线信息、电子邮箱、数据检索、网络游戏、网上新闻、网上音乐等信息服务；不包括互联网支付、互联网基金销售、互联网保险、互联网信托和互联网消费金融，有关内容列入相应的金融行业中 6421 互联网搜索服务 6422 互联网游戏服务 含互联网电子竞技服务 6429 互联网其他信息服务 643 互联网平台 6431 互联网生产服务平台 指专门为生产服务提供第三方服务平台的互 联网活动，包括互联网大宗商品交易平台、互联网货物运输平台等 6432 互联网生活服务平台 指专门为居民生活服务提供第三方服务平台 的互联网活动，包括互联网销售平台、互联网约车服务平台、互联网旅游出行服务平台、互联网体育平台等 6433 互联网科技创新平台 指专门为科技创新、创业等提供第三方服务平台的互联网活动，包括网络众创平台、网络众包平台、网络众扶平台、技术创新网络平台、技术交易网络平台、科技成果网络推广平台、知识产权交易平台、开源社区平台等 6434 互联网公共服务平台 指专门为公共服务提供第三方服务平台的互联网活动 6439 其他互联网平台 644 6440 互联网安全服务包括网络安全监控，以及网络服务质量、可信度和安全等评估测评活动 645 6450 互联网数据服务指以互联网技术为基础的大数据处理、云存储、云计算、云加工等服务 649 6490 其他互联网服务指除基础电信运营商服务、互联网接入及相关服务、互联网信息服务以外的其他未列明互联网服务 65 软件和信息技术服务业指对信息传输、信息制作、信息提供和信息接收过程中产生的技术问题或技术需求所提供的服务 651 软件开发 6511 基础软件开发 指能够对硬件资源进行调度和管理、为应用软件提供运行支撑的软件，包括操作系统、数据库、中间件、各类固件等 6512 支撑软件开发 指软件开发过程中使用到的支撑软件开发的工具和集成环境、测试工具软件等 6513 应用软件开发 指独立销售的面向应用需求的软件和解决方案软件等，包括通用软件、工业软件、行业软件、嵌入式应用软件等 6519 其他软件开发 指未列明的软件开发，如平台软件、信息安全软件等 652 6520 集成电路设计指 IC 设计服务，即企业开展的集成电路功能研发、设计等服务 653 信息系统集成和物联网技术服务 6531 信息系统集成服务 指基于需方业务需求进行的信息系统需求分析和系统设计，并通过结构化的综合布缆系统、计算机网络技术和软件技术，将各个分离的设备、功能和信息等集成到相互关联的、统一和协调的系统之中，以及为信息系统的正常运行提供支持的服务；包括信息系统设计、集成实施、运行维护等服务 6532 物联网技术服务 指提供各种物联网技术支持服务 654 6540 运行维护服务指基础环境运行维护、网络运行维护、软件运行维护、硬件运行维护、其他运行维护服务 655 6550 信息处理和存储支持服务指供方向需方提供的信息和数据的分析、整理、计算、编辑、存储等加工处理服务，以及应用软件、信息系统基础设施等租用服务；包括在线企业资源规划（ERP）、在线杀毒、服务器托管、虚拟主机等 656 6560 信息技术咨询服务指在信息资源开发利用、工程建设、人员培训、管理体系建设、技术支撑等方面向需方提供的管理或技术咨询评估服务；包括信息化规划、信息技术管理咨询、信息系统工程监理、测试评估、信息技术培训等 657 数字内容服务指数字内容的加工处理，即将图片、文字、视频、音频等信息内容运用数字化技术进行加工处理并整合应用的服务 6571 地理遥感信息服务 指互联网地图服务软件、地理信息系统软件、测绘软件、遥感软件、导航与位置服务软件、地图制图软件等，以及地理信息加工处理（包括导航电子地图制作、遥感影像处理等）、地理信息系统工程服务、导航及位置服务等 6572 动漫、游戏数字内容服务 6579 其他数字内容服务 含数字文化和数字体育内容服务 659 其他信息技术服务业 6591 呼叫中心 指受企事业单位委托，利用与公用电话网或因特网连接的呼叫中心系统和数据库技术，经过信息采集、加工、存储等建立信息库，通过固定网、移动网或因特网等公众通信网络向用户提供有关该企事业单位的业务咨询、信息咨询和数据查询等服务 6599 其他未列明信息技术服务业 J 金融业本门类包括 66～69 大类 66 货币金融服务661 6610 中央银行服务指代表政府管理金融活动，并制定和执行货币政策，维护金融稳定，管理金融市场的特殊金融机构的活动 662 货币银行服务指除中央银行以外的各类银行所从事存款、贷款和信用卡等货币媒介活动，还包括在中国开展货币业务的外资银行及分支机构的活动 6621 商业银行服务 6622 政策性银行服务 6623 信用合作社服务 6624 农村资金互助社服务 指经银行业监督管理机构批准，由自愿入股组成的社区互助性银行业金融业务 6629 其他货币银行服务 663 非货币银行服务指主要与非货币媒介机构以各种方式发放贷款有关的金融服务 6631 融资租赁服务 指经中国银行保险监督管理委员会批准的金融租赁公司及经地方金融监管部门批准的融资租赁公司的活动 6632 财务公司服务 指经银行业监督管理部门批准，为企业融资提供的金融活动 6633 典当 指以动产、不动产或其他财产权利质押或抵押的融资活动 6634 汽车金融公司服务 指经中国银监会批准设立的专门为中国境内的汽车购买者及销售者提供金融服务的非银行金融机构的活动 6635 小额贷款公司服务 指经地方政府批准设立的小额贷款公司的活动 6636 消费金融公司服务 指经中国银监会批准设立的为中国境内居民个人提供以消费（不包括购买房屋和汽车）为目的贷款的非银行金融机构的活动 6637 网络借贷服务 指依法成立，专门从事网络借贷信息中介业务活动的金融信息中介公司，以及个体和个体之间通过互联网平台实现的直接借贷，个体包含自然人、法人及其他组织 6639 其他非货币银行服务 指上述未包括的从事融资、抵押等非货币银行的服务，包括各种消费信贷抵押顾问和经纪人的活动；还包括金融保理活动 664 6640 银行理财服务指银行提供的非保本理财产品服务 665 6650 银行监管服务指代表政府管理银行业活动，制定并发布对银行业金融机构及其业务活动监督管理的规章、规则 67 资本市场服务671 证券市场服务 6711 证券市场管理服务 指非政府机关进行的证券市场经营和监管，包括证券交易所、登记结算机构的活动 6712 证券经纪交易服务 指在金融市场上代他人进行交易、代理发行证券和其他有关活动，包括证券经纪、证券承销与保荐、融资融券业务、客户资产管理业务等活动 672 6720 公开募集证券投资基金指向不特定投资者公开发行受益凭证的证券投资基金，由专业基金管理人管理，在法律的严格监管下进行投资，依照《公开募集证券投资基金运作管理办法》进行运作（包括基金投资类理财服务） 673 非公开募集证券投资基金指以投资活动为目的设立，非公开募集，由基金管理人或者普通合伙人管理的基金，依照《私募投资基金监督管理暂行办法》进行运作 6731 创业投资基金 指向处于创业各阶段的成长性企业进行股权投资，以期所投资的企业成熟或相对成熟后主要通过股权转让获得增值收益的基金 6732 天使投资 指除被投资企业职员及其家庭成员和直系亲属以外的个人以其自有资金开展的创业投资的活动 6739 其他非公开募集证券投资基金 包括基金投资类理财服务 674 期货市场服务 6741 期货市场管理服务 指非政府机关进行的期货市场经营和监管，包括商品期货交易所、金融期货交易所、期货保证金监控中心的活动 6749 其他期货市场服务 指商品合约经纪及其他未列明的期货市场的服务 675 6750 证券期货监管服务指由政府或行业自律组织进行的对证券期货市场的监管活动 676 6760 资本投资服务指经批准的证券投资机构的自营投资、直接投资活动和其他投资活动 679 6790 其他资本市场服务指投资咨询服务、财务咨询服务、资信评级服务，以及其他未列明的资本市场的服务 68 保险业681 人身保险指以人的寿命和身体为保险标的的保险活动，包括人寿保险、年金保险、健康保险和意外伤害保险 6811 人寿保险 指以人的寿命为保险标的的人身保险，包括定期寿险、终身寿险和两全保险 6812 年金保险 指以被保险人生存为给付保险金条件，并按约定的时间间隔分期给付生存保险金的人身保险 6813 健康保险 指以因健康原因导致损失为给付保险金条件的人身保险，包括疾病保险、医疗保险、失能收入损失保险和护理保险 6814 意外伤害保险 指以被保险人因意外事故而导致身故、残疾或者发生保险合同约定的其他事故为给付保险金条件的人身保险 682 6820 财产保险指以财产及其有关利益为保险标的的保险，包括财产损失保险、责任保险、信用保险、保证保险等 683 6830 再保险指承担与其他保险公司承保的现有保单相关的所有或部分风险的活动 684 6840 商业养老金指专为个人和单位雇员或成员提供退休金补贴而设立的法定实体的活动(如基金、计划、项目等)，包括养老金定额补贴计划以及完全根据成员贡献确定补贴数额的个人养老金计划等 685 保险中介服务指保险代理人、保险经纪人开展的保险销售、谈判、促合以及防灾、防损或风险评估、风险管理咨询、协助查勘理赔等活动，以及保险公估人开展的对保险标的或保险事故的评估、鉴定、勘验、估损、理算等活动 6851 保险经纪服务 指基于投保人的利益，为投保人与保险人订立保险合同提供中介服务并依法收取佣金的活动 6852 保险代理服务 指根据保险人的委托，向保险人收取佣金，并在保险人授权的范围内代为办理保险业务的活动 6853 保险公估服务 指接受委托，专门从事保险标的或者保险事故评估、勘验、鉴定、估损理算等业务，并按约定收取报酬的活动 686 6860 保险资产管理指保险资产管理公司接受委托，开展的保险资金、商业养老金等资金的投资管理活动 687 6870 保险监管服务指根据国务院授权及相关法律、法规规定所履行的对保险市场的监督、管理活动 689 6890 其他保险活动指其他未列明的与保险和商业养老金相关或密切相关的活动，包括救助管理、保险精算等 69 其他金融业691 金融信托与管理服务指根据委托书、遗嘱或代理协议代表受益人管理的信托基金、房地产账户或代理账户等活动，包括单位投资信托管理，还包括信托公司通过互联网销售信托产品及开展其他信托业务的互联网信托活动 6911 信托公司 指经中国银监会批准设立的，主要经营信托业务的金融机构；信托业务是指信托公司以营业和收取报酬为目的，以受托人身份承诺信托和处理信托事务的经营行为 6919 其他金融信托与管理服务 692 6920 控股公司服务指通过一定比例股份，控制某个公司或多个公司的集团，控股公司仅控制股权，不直接参与经营管理，以及其他类似的活动 693 6930 非金融机构支付服务指非金融机构在收付款人之间作为中介机构提供下列部分或全部货币资金转移服务，包括第三方支付机构从事的互联网支付、预付卡的发行与受理、银行卡收单及中国人民银行确定的其他支付等服务 694 6940 金融信息服务指向从事金融分析、金融交易、金融决策或者其他金融活动的用户提供可能影响金融市场的信息（或者金融数据）的服务，包括征信机构服务 695 6950 金融资产管理公司指经批准成立的，以从事收购、管理和处置不良资产业务为主，同时通过全资或控股金融类子公司提供银行、信托、证券、租赁、保险等综合化金融服务的金融企业 699 其他未列明金融业 6991 货币经纪公司服务 指经中国银监会批准设立的专门从事促进金融机构间资金融通和外汇交易等经纪服务的非银行金融机构的活动 6999 其他未包括金融业 指主要与除提供贷款以外的资金分配有关的其他金融媒介活动，包括保理活动、掉期、期权和其他套期保值安排、保单贴现公司的活动、金融交易处理与结算，以及借款担保服务、发行债券担保服务等融资担保活动，还包括信用卡交易的处理与结算、外币兑换等活动 K 房地产业本门类包括 70 大类 70 房地产业701 7010 房地产开发经营指房地产开发企业进行的房屋、基础设施建设等开发，以及转让房地产开发项目或者销售房屋等活动 702 7020 物业管理指物业服务企业按照合同约定，对房屋及配套的设施设备和相关场地进行维修、养护、管理，维护环境卫生和相关秩序的活动 703 7030 房地产中介服务指房地产咨询、房地产价格评估、房地产经纪等活动 704 7040 房地产租赁经营指各类单位和居民住户的营利性房地产租赁活动，以及房地产管理部门和企事业单位、机关提供的非营利性租赁服务，包括体育场地租赁服务 709 7090 其他房地产业L 租赁和商务服务业 本门类包括 71 和 72 大类71 租赁业711 机械设备经营租赁指不配备操作人员的机械设备的租赁服务 7111 汽车租赁 7112 农业机械经营租赁 7113 建筑工程机械与设备经营租赁 7114 计算机及通讯设备经营租赁 7115 医疗设备经营租赁 7119 其他机械与设备经营租赁 712 文体设备和用品出租 7121 休闲娱乐用品设备出租 7122 体育用品设备出租 7123 文化用品设备出租 不包括图书、音响制品出租 7124 图书出租 7125 音像制品出租 7129 其他文体设备和用品出租 713 7130 日用品出租72 商务服务业721 组织管理服务指市场化组织管理和经营性组织管理 7211 企业总部管理 指不具体从事对外经营业务，只负责企业的重大决策、资产管理，协调管理下属各机构和内部日常工作的企业总部的活动，其对外经营业务由下属的独立核算单位或单独核算单位承担，还包括派出机构的活动（如办事处等） 7212 投资与资产管理 指政府主管部门转变职能后，成立的国有资产管理机构和行业管理机构的活动；其他投资管理活动；不包括资本投资服务 7213 资源与产权交易服务 指除货物、资本市场、黄金、外汇、房地产、土地、知识产权交易以外的所有资源与产权交易活动 7214 单位后勤管理服务 指为企事业、机关提供综合后勤服务的活动 7215 农村集体经济组织管理 指以土地等生产资料劳动群众集体所有制为基础，承担管理集体资产、开发集体资源、发展集体经济、服务集体成员的基层经济组织 7219 其他组织管理服务 指其他各类企业、行业管理机构和未列明的综合跨界管理的活动 722 综合管理服务 7221 园区管理服务 指非政府部门的各类园区管理服务 7222 商业综合体管理服务 指以购物中心为主导，融合了商业零售、餐饮、休闲健身、娱乐、文化等多项活动的大型建筑综合体 7223 市场管理服务 指各种交易市场的管理活动 7224 供应链管理服务 指基于现代信息技术对供应链中的物流、商流、信息流和资金流进行设计、规划、控制和优化，将单一、分散的订单管理、采购执行、报关退税、物流管理、资金融通、数据管理、贸易商务、结算等进行一体化整合的服务 7229 其他综合管理服务 指其他未列明的综合跨界管理的活动 723 法律服务指律师、公证、仲裁、调解等活动 7231 律师及相关法律服务 指在民事案件、刑事案件和其他案件中，为原被告双方提供法律代理服务，以及为一般民事行为提供的法律咨询服务 7232 公证服务 7239 其他法律服务 724 咨询与调查 7241 会计、审计及税务服务 7242 市场调查 包含广播电视收听、收视调查 7243 社会经济咨询 7244 健康咨询 7245 环保咨询 7246 体育咨询 含体育策划 7249 其他专业咨询与调查 指上述咨询以外的其他专业咨询和其他调查 活动 725 广告业指在报纸、期刊、路牌、灯箱、橱窗、互联网、通讯设备及广播电影电视等媒介上为客户策划、制作的有偿宣传活动 7251 互联网广告服务 指提供互联网推送及其他互联网广告服务 7259 其他广告服务 指除互联网广告以外的广告服务 726 人力资源服务指为劳动者就业和职业发展，为用人单位管理和开发人力资源提供的相关服务，主要包括人力资源招聘、职业指导、人力资源和社会保障事务代理、人力资源外包、人力资源管理咨询、人力资源信息软件服务等 7261 公共就业服务 指向劳动者提供公益性的就业服务 7262 职业中介服务 指为求职者寻找、选择、介绍工作，为用人单位提供劳动力的服务 7263 劳务派遣服务 指劳务派遣单位招用劳动力后，将其派到用工单位从事劳动的行为 7264 创业指导服务 指除众创空间、孵化器等创业服务载体外的其他机构为初创企业或创业者提供的创业辅导、创业培训、技术转移、人才引进、金融投资、市场开拓、国际合作等一系列服务 7269 其他人力资源服务 指其他未列明的人力资源服务 727 安全保护服务指为社会提供的专业化、有偿安全防范服务 7271 安全服务 7272 安全系统监控服务 7279 其他安全保护服务 728 会议、展览及相关服务指以会议、展览为主，也可附带其他相关的活动形式，包括项目策划组织、场馆租赁、保障服务等 7281 科技会展服务 7282 旅游会展服务 7283 体育会展服务 7284 文化会展服务 7289 其他会议、展览及相关服务 729 其他商务服务业 7291 旅行社及相关服务 指为社会各界提供商务、组团和散客旅游的服务，包括向顾客提供咨询、旅游计划和建议、日程安排、导游、食宿和交通等服务 7292 包装服务 指有偿或按协议为客户提供包装服务 7293 办公服务 指为商务、公务及个人提供的各种办公服务 7294 翻译服务 指专业提供口译和笔译的服务 7295 信用服务 指专门从事信用信息采集、整理和加工，并提供相关信用产品和信用服务的活动，包括信用评级、商账管理等活动 7296 非融资担保服务 指保证人和债权人约定，当债务人不履行债务时，保证人按照约定履行债务或者承担责任的专业担保机构的活动；不包括贷款担保服务和信誉担保服务，相关内容列入相应的金融行业中 7297 商务代理代办服务 指为机构单位提供的各种代理、代办服务 7298 票务代理服务 指除旅客交通票务代理外的各种票务代理服务 7299 其他未列明商务服务业 指上述未列明的商务、代理等活动，包括商业保理活动 M 科学研究和技术服务业 本门类包括 73～75 大类73 研究和试验发展指为了增加知识（包括有关自然、工程、人类、文化和社会的知识），以及运用这些知识创造新的应用，所进行的系统的、创造性的活动；该活动仅限于对新发现、新理论的研究，新技术、新产品、新工艺的研制研究与试验发展，包括基础研究、应用研究和试验发展 731 7310 自然科学研究和试验发展732 7320 工程和技术研究和试验发展733 7330 农业科学研究和试验发展734 7340 医学研究和试验发展735 7350 社会人文科学研究74 专业技术服务业741 7410 气象服务指从事气象探测、预报、服务和气象灾害防御、气候资源利用等活动 742 7420 地震服务指地震监测预报、震灾预防和紧急救援等防震减灾活动 743 海洋服务 7431 海洋气象服务 7432 海洋环境服务 7439 其他海洋服务 744 测绘地理信息服务 7441 遥感测绘服务 7449 其他测绘地理信息服务 745 质检技术服务指通过专业技术手段对动植物、工业产品、商品、专项技术、成果及其他需要鉴定的物品、服务、管理体系、人员能力等所进行的检测、检验、检疫、测试、鉴定等活动，还包括产品质量、标准、计量、认证认可等活动 7451 检验检疫服务 指审查产品设计、产品、过程或安装并确定其与特定要求的符合性，或根据专业判断确定其与通用要求的符合性的活动；对出入境的货物、人员、交通工具、集装箱、行李邮包携带物等进行检验检疫，以保障人员、动植物安全卫生和商品质量的活动 7452 检测服务 指依据相关标准或者技术规范，利用仪器设备、环境设施等技术条件，对产品或者特定对象进行的技术判断 7453 计量服务 指为了保障国家计量单位的统一和量值的准确可靠，维护国家、公民，法人和其他社会组织的利益，计量技术机构或相关单位开展的检定、校准、检验、检测、测试、鉴定、仲裁、技术咨询和技术培训等计量活动 7454 标准化服务 指利用标准化的理念、原理和方法，为各类主体提供标准化解决方案的产业，包括标准技术指标实验验证、标准信息服务、标准研制过程指导、标准实施宣贯等服务，基于标准化的组织战略咨询、管理流程再造、科技成果转移转化等服务，标准与相关产业融合发展而衍生的各类“标准化+”服务 7455 认证认可服务 指由认证机构证明产品、服务、管理体系符合相关技术规范、相关技术规范的强制性要求或者标准的合格评定活动；由认可机构认证机构、检查机构、实验室以及从事评审、审核等认证活动人员的能力和执业资格，予以承认的合格评定活动 7459 其他质检技术服务 指质量相关的代理、咨询、评价、保险等活动，还包括质量品牌保护等活动 746 环境与生态监测检测服务 7461 环境保护监测 指对环境各要素，对生产与生活等各类污染源排放的液体、气体、固体、辐射等污染物或污染因子指标进行的测试、监测和评估活动 7462 生态资源监测 指对海洋资源、森林资源、湿地资源、荒漠化、珍稀濒危野生动植物资源及外来物种的调查与监测活动，以及对生态工程的监测活动 7463 野生动物疫源疫病防控监测 747 地质勘查指对矿产资源、工程地质、科学研究进行的地质勘查、测试、监测、评估等活动 7471 能源矿产地质勘查 7472 固体矿产地质勘查 7473 水、二氧化碳等矿产地质勘查 7474 基础地质勘查 指区域、海洋、环境和水文地质勘查活动 7475 地质勘查技术服务 指除矿产地质勘查、基础地质勘查以外的其他勘查和相关的技术服务 748 工程技术与设计服务 7481 工程管理服务 指工程项目建设中的项目策划、投资与造价咨询、招标代理、项目管理等服务 7482 工程监理服务 7483 工程勘察活动 指建筑工程施工前的工程测量、工程地质勘察和咨询等活动 7484 工程设计活动 7485 规划设计管理 指对区域和城镇、乡村的规划，以及其他规划 7486 土地规划服务 指开展土地利用总体规划、专项规划、详细规划的调查评价、编制设计、论证评估、修改、咨询活动 749 工业与专业设计及其他专业技术服务 7491 工业设计服务 7492 专业设计服务 指除工程设计、软件设计、集成电路设计、工业设计以外的各种专业设计服务 7493 兽医服务 指除宠物医院以外的各类兽医服务 7499 其他未列明专业技术服务业 75 科技推广和应用服务业751 技术推广服务指将新技术、新产品、新工艺直接推向市场而进行的相关技术活动，以及技术推广和转让活动 7511 农林牧渔技术推广服务 7512 生物技术推广服务 7513 新材料技术推广服务 7514 节能技术推广服务 指仅包括节能技术和产品的开发、交流、转让、推广服务，以及一站式合同能源管理综合服务；节能技术咨询、节能评估、能源审计、节能量审核服务 7515 新能源技术推广服务 7516 环保技术推广服务 7517 三维（3D)打印技术推广服务 7519 其他技术推广服务 752 7520 知识产权服务指专利、商标、版权、软件、集成电路布图设计、技术秘密、地理标志等各类知识产权的代理、转让、登记、鉴定、检索、分析、咨询、评估、运营、认证等服务 753 7530 科技中介服务指为科技活动提供社会化服务与管理，在政府、各类科技活动主体与市场之间提供居间服务的组织，主要开展信息交流、技术咨询、科技评估和科技鉴证等活动 754 7540 创业空间服务指顺应新科技革命和产业变革新趋势、有效满足网络时代大众创业创新需求的新型创业服务平台，它是针对早期创业的重要服务载体，主要为创业者提供低成本的工作空间、网络空间、社交空间和资源共享空间，包括众创空间、孵化器、创业基地等 759 7590 其他科技推广服务业指除技术推广、科技中介以外的其他科技服务，但不包括短期的日常业务活动 N 水利、环境和公共设施管理业本门类包括 76～79 大类 76 水利管理业761 7610 防洪除涝设施管理指对江河湖泊开展的河道、堤防、岸线整治等活动及对河流、湖泊、行蓄洪区和沿海的防洪设施的管理活动，包括防洪工程设施的管理及运行维护等 762 7620 水资源管理指对水资源的开发、利用、配置、节约、保护、监测、管理等活动 763 7630 天然水收集与分配 指通过各种方式收集、分配天然水资源的活动，包括通过蓄水（水库、塘堰等）、提水、引水和井等水源工程，收集和分配各类地表和地下淡水资源的活动 764 7640 水文服务指通过布设水文站网对水的时空分布规律、泥沙、水质进行监测、收集和分析处理的活动 769 7690 其他水利管理业77 生态保护和环境治理业771 生态保护 7711 自然生态系统保护管理 指对自然生态系统的保护和管理活动，包括森林、草原和草甸、荒漠、湿地、内陆水域以及海洋生态系统的保护和管理 7712 自然遗迹保护管理 包括地质遗迹保护管理、古生物遗迹保护管理等 7713 野生动物保护 指对野生及濒危动物的饲养、繁殖等保护活动，以及对栖息地的管理活动，包括野生动物保护区管理 7714 野生植物保护 指对野生及濒危植物的收集、保存、培育及其生存环境的维持等保护活动，包括野生植物保护区管理 7715 动物园、水族馆管理服务 7716 植物园管理服务 7719 其他自然保护 指除自然生态系统保护管理、自然遗迹保护管理、野生动植物保护以外的其他自然保护活动 772 环境治理业 7721 水污染治理 指对江、河、湖泊、水库及地下水、地表水的污染综合治理活动，不包括排放污水的搜集和治理活动 7722 大气污染治理 指对大气污染的综合治理以及对工业废气的治理活动 7723 固体废物治理 指除城乡居民生活垃圾以外的固体废物治理及其他非危险废物的治理 7724 危险废物治理 指对制造、维修、医疗等活动产生的危险废物进行收集、贮存、利用、处理和处置等活动 7725 放射性废物治理 指对生产及其他活动过程产生的放射性废物进行收集、运输、贮存、利用、处理和处置等活动 7726 土壤污染治理与修复服务 7727 噪声与振动控制服务 7729 其他污染治理 指除上述治理以外的其他环境治理活动 78 公共设施管理业781 7810 市政设施管理指污水排放、雨水排放、路灯、道路、桥梁、隧道、广场、涵洞、防空等城乡公共设施的抢险、紧急处理、管理等活动 782 7820 环境卫生管理指城乡生活垃圾的清扫、收集、运输、处理和处置、管理等活动，以及对公共厕所、化粪池的清扫、收集、运输、处理和处置、管理等活动 783 7830 城乡市容管理指城市户外广告和景观灯光的规划、设置、设计、运行、维护、安全监督等管理活动；城市路街整治的管理和监察活动；乡、村户外标志、村容镇貌、柴草堆放、树木花草养护等管理活动 784 7840 绿化管理指城市绿地和生产绿地、防护绿地、附属绿地等管理活动 785 7850 城市公园管理指主要为人们提供休闲、观赏、运动、游览以及开展科普活动的城市各类公园管理活动 786 游览景区管理指对具有一定规模的自然景观、人文景物的管理和保护活动，以及对环境优美，具有观赏、文化或科学价值的风景名胜区的保护和管理活动；包括风景名胜和其他类似的自然景区管理 7861 名胜风景区管理 不含自然保护区管理 7862 森林公园管理 7869 其他游览景区管理 79 土地管理业791 7910 土地整治服务对土地进行整理、复垦、开发以及相关设计、监测、评估等活动 792 7920 土地调查评估服务指对土地利用现状、城乡地籍、土地变更等进行调查和进行城镇基准地价评估、宗地价格评估、地价监测、土地等级评定、土地节约集约利用评价咨询活动 793 7930 土地登记服务指在土地登记过程中进行受理申请、登记事项审核、登记簿册填写和权属证书发放、土地产权产籍档案管理和应用等活动 794 7940 土地登记代理服务指接受申请人委托，通过实地调查、资料收集、权属判别等工作，代为办理土地、林木等不动产登记的申请和领证等事项，提供社会服务等活动 799 7990 其他土地管理服务指土地交易服务、土地储备管理及其他未列明的土地管理服务 O 居民服务、修理和其他服务业本门类包括 80～82 大类 80 居民服务业801 8010 家庭服务指雇佣家庭雇工的家庭住户和家庭户的自营活动，以及在雇主家庭从事有报酬的家庭雇工的活动，包括钟点工和居住在雇主家里的家政劳动者的活动 802 8020 托儿所服务指社会、街道、个人办的面向不足三岁幼儿的看护活动，可分为全托、日托、半托，或计时的服务 803 8030 洗染服务指专营的洗染店的服务，含各种干洗、湿洗等服务 804 8040 理发及美容服务指专业理发、美发、美容、美甲等保健服务 805 洗浴和保健养生服务 8051 洗浴服务 指专业洗浴以及温泉、水疗等服务 8052 足浴服务 8053 养生保健服务 指中医养生保健（非医疗）和其他专业养生保健等服务 806 8060 摄影扩印服务807 8070 婚姻服务 指婚姻介绍、婚庆典礼等服务808 8080 殡葬服务 指与殡葬有关的各类服务809 8090 其他居民服务业 指上述未包括的居民服务81 机动车、电子产品和日用产品修理业811 汽车、摩托车等修理与维护 8111 汽车修理与维护 指汽车修理厂及路边门店的专业修理服务，包括为汽车提供上油、充气、打蜡、抛光、喷漆、清洗、换零配件、出售零部件等服务，不包括汽车回厂拆卸、改装、大修的活动 8112 大型车辆装备修理与维护 8113 摩托车修理与维护 8114 助动车等修理与维护 812 计算机和办公设备维修指对计算机硬件及系统环境的维护和修理活动 8121 计算机和辅助设备修理 8122 通讯设备修理 8129 其他办公设备维修 指其他未列明的各种办公设备的修理公司（中心）、修理门市部和修理网点的修理活动 813 家用电器修理 8131 家用电子产品修理 指电视、音响等家用视频、音频产品的修理活动 8132 日用电器修理 指洗衣机、电冰箱、空调等日用电器维修门市部，以及生产企业驻各地的维修网点和维修公司（中心）的修理活动 819 其他日用产品修理业 8191 自行车修理 8192 鞋和皮革修理 8193 家具和相关物品修理 8199 其他未列明日用产品修理业 指其他日用产品维修门市部、修理摊点的活动，以及生产企业驻各地的维修网点和维修中心的修理活动 82 其他服务业821 清洁服务指对建筑物、办公用品、家庭用品的清洗和消毒服务；包括专业公司和个人提供的清洗服务 8211 建筑物清洁服务 指对建筑物内外墙、玻璃幕墙、地面、天花板及烟囱的清洗活动 8219 其他清洁服务 指专业清洗人员为企业的机器、办公设备的清洗活动，以及为居民的日用品、器具及设备的清洗活动，包括清扫、消毒等服务 822 宠物服务 8221 宠物饲养 指专门以观赏、领养（出售）为目的的宠物饲养活动 8222 宠物医院服务 8223 宠物美容服务 8224 宠物寄托收养服务 8229 其他宠物服务 指宠物运输、宠物培训及其他未列明的宠物活动 829 8290 其他未列明服务业P 教育本门类包括 83 大类 83 教育831 8310 学前教育指经教育行政部门批准举办的对学龄前幼儿进行保育和教育的活动 832 初等教育指《义务教育法》规定的小学教育以及成人小学教育（含扫盲）的活动 8321 普通小学教育 8322 成人小学教育 833 中等教育 8331 普通初中教育 指《义务教育法》规定的对小学毕业生进行初级中等教育的活动 8332 职业初中教育 8333 成人初中教育 8334 普通高中教育 指非义务教育阶段，通过考试招收初中毕业生进行普通高中教育的活动 8335 成人高中教育 8336 中等职业学校教育 指经教育行政部门或人力资源社会保障行政部门批准举办的中等技术学校、中等师范学校、成人中等专业学校、职业高中学校、技工学校等教育活动 834 高等教育 8341 普通高等教育 指经教育行政部门批准，由国家、地方、社会办的在完成高级中等教育基础上实施的获取学历的高等教育活动 8342 成人高等教育 指经教育主管部门批准办的成人高等教育活动 835 8350 特殊教育指为残障儿童提供的特殊教育活动 839 技能培训、教育辅助及其他教育指我国学校教育制度以外，经教育主管部门、劳动部门或有关主管部门批准，由政府部门、企业、社会办的职业培训、就业培训和各种知识、技能的培训活动，以及教育辅助和其他教育活动 8391 职业技能培训 指由教育部门、劳动部门或其他政府部门批准举办，或由社会机构举办的为提高就业人员就业技能的就业前的培训和其他技能培训活动，不包括社会上办的各类培训班、速成班、讲座等 8392 体校及体育培训 指各类、各级体校培训，以及其他各类体育运动培训活动，不包括学校教育制度范围内的体育大学、学院、学校的体育专业教育 8393 文化艺术培训 指国家学校教育制度以外，由正规学校或社会各界办的文化艺术培训活动，不包括少年儿童的课外艺术辅导班 8394 教育辅助服务 指专门从事教育检测、评价、考试、招生等辅助活动 8399 其他未列明教育 指经批准的宗教院校教育及上述未列明的教育活动 Q 卫生和社会工作 本门类包括 84 和 85 大类 84 卫生841 医院 8411 综合医院 8412 中医医院 8413 中西医结合医院 8414 民族医院 指民族医医院 8415 专科医院 8416 疗养院 指以疗养、康复为主，治疗为辅的医疗服务活动 842 基层医疗卫生服务 8421 社区卫生服务中心（站） 8422 街道卫生院 8423 乡镇卫生院 8424 村卫生室 8425 门诊部（所） 指门诊部、诊所、医务室、卫生站、护理院 等卫生机构的活动 843 专业公共卫生服务 8431 疾病预防控制中心 指卫生防疫站、卫生防病中心、预防保健中心等活动 8432 专科疾病防治院（所、站） 指对各种专科疾病进行预防及群众预防的活动 8433 妇幼保健院（所、站） 指非医院的妇女及婴幼儿保健活动 8434 急救中心（站）服务 8435 采供血机构服务 8436 计划生育技术服务活动 指各地区计划生育技术服务机构的活动 849 其他卫生活动指健康体检服务及其他未列明的卫生机构的活动 8491 健康体检服务 8492 临床检验服务 8499 其他未列明卫生服务 85 社会工作指提供慈善、救助、福利、护理、帮助等社会工作的活动 851 提供住宿社会工作指提供临时、长期住宿的福利和救济活动 8511 干部休养所 8512 护理机构服务 指各级政府、企业和社会力量兴办的主要面向老年人、残疾人提供的专业化护理的服务机构的活动 8513 精神康复服务 指智障、精神疾病、吸毒、酗酒等人员的住宿康复治疗活动 8514 老年人、残疾人养护服务 指各级政府、企业和社会力量兴办的主要面向老年人和残疾人提供的长期照料、养护、关爱等服务机构的活动 8515 临终关怀服务 8516 孤残儿童收养和庇护服务 指对孤残儿童、生活无着流浪儿童等人员的收养救助活动 8519 其他提供住宿社会救助 指对生活无着流浪等其他人员的收养救助等活动 852 不提供住宿社会工作指为孤儿、老人、残疾人、智障、军烈属、五保户、低保户、受灾群众及其他弱势群体提供不住宿的看护、帮助活动，以及慈善、募捐等其他社会工作的活动 8521 社会看护与帮助服务 指为老人、残疾人、五保户及其他弱势群体提供不住宿的看护、帮助活动 8522 康复辅具适配服务 指为老年人、残疾人、运动伤残人员、孤残儿童及其他弱势群体提供的假肢、矫形器、轮椅车、助行器、助听器等康复辅具适配服务的活动 8529 其他不提供住宿社会工作 指慈善、募捐等其他社会工作的活动 R 文化、体育和娱乐业 本门类包括 86～90 大类86 新闻和出版业861 8610 新闻业862 出版业 8621 图书出版 8622 报纸出版 8623 期刊出版 8624 音像制品出版 8625 电子出版物出版 8626 数字出版 指利用数字技术进行内容编辑加工，并通过网络传播数字内容产品的出版服务 8629 其他出版业 87 广播、电视、电影和录音制作业指对广播、电视、电影、影视录音内容的制作、编导、主持、播出、放映等活动；不包括广播电视信号的传输和接收活动 871 8710 广播指广播节目的现场制作、播放及其他相关活动，还包括互联网广播 872 8720 电视指有线和无线电视节目的现场制作、播放及其他相关活动，还包括互联网电视 873 8730 影视节目制作指电影、电视、录像（含以磁带、光盘为载体）和网络节目的制作活动，该节目可以作为电视、电影播出、放映，也可以作为出版、销售的原版录像带（或光盘），还可以在其他场合宣传播放，还包括影视节目的后期制作，但不包括电视台制作节目的活动 874 8740 广播电视集成播控指 IP 电视、手机电视、互联网电视等专网及定向传播视听节目服务的集成播控 875 8750 电影和广播电视节目发行不含录像制品（以磁带、光盘为载体）的发行 876 8760 电影放映指专业电影院以及设在娱乐场所独立（或相对独立）的电影放映等活动 877 8770 录音制作指从事录音节目、音乐作品的制作活动，其节目或作品可以在广播电台播放，也可以制作成出版、销售的原版录音带（磁带或光盘），还可以在其他宣传场合播放，但不包括广播电台制作节目的活动 88 文化艺术业881 8810 文艺创作与表演指文学、美术创造和表演艺术（如戏曲、歌舞、话剧、音乐、杂技、马戏、木偶等表演艺术）等活动 882 8820 艺术表演场馆指有观众席、舞台、灯光设备，专供文艺团体演出的场所管理活动 883 图书馆与档案馆 8831 图书馆 8832 档案馆 884 8840 文物及非物质文化遗产保护指对具有历史、文化、艺术、体育、科学价值，并经有关部门鉴定，列入文物保护范围的不可移动文物的保护和管理活动；对我国口头传统和表现形式，传统表演艺术，社会实践、意识、节庆活动，有关的自然界和宇宙的知识和实践，传统手工艺等非物质文化遗产的保护和管理活动 885 8850 博物馆指收藏、研究、展示文物和标本的博物馆的活动，以及展示人类文化、艺术、体育、科技、文明的美术馆、艺术馆、展览馆、科技馆、天文馆等管理活动 886 8860 烈士陵园、纪念馆887 8870 群众文体活动指对各种主要由城乡群众参与的文艺类演出、比赛、展览、文艺知识鉴赏等公益性文化活动的管理活动，以及群众参与的各级各类体育竞赛和活动 889 8890 其他文化艺术业89 体育891 体育组织指专业从事体育比赛、训练、辅导和管理的组织的活动 8911 体育竞赛组织 指专业从事各类体育比赛、表演、训练、辅导、管理的体育组织 8912 体育保障组织 指体育战略规划、竞技体育、全民健身、体育产业、反兴奋剂、体育器材装备及其他未列明的保障性体育管理和服务 8919 其他体育组织 指其他由体育专业协会、体育类社会服务机构、基层体育组织、全民健身活动站点、互联网体育组织等提供的服务 892 体育场地设施管理指可供观赏比赛的场馆和专供运动员训练用的场地设施管理活动 8921 体育场馆管理 指对可用于体育竞赛、训练、表演、教学及全民健身活动的体育建筑和室内外体育场地及相关设施等管理活动，如体育场、田径场、体育馆、游泳馆、足球场、篮球场、乒乓球场等 8929 其他体育场地设施管理 指设在社区、村庄、公园、广场等对可提供体育服务的固定安装的体育器材、临时性体育场地设施和其他室外体育场地设施等管理活动，如全民健身路径、健身步道、拼装式游泳池等 893 8930 健身休闲活动指主要面向社会开放的休闲健身场所和其他体育娱乐场所的管理活动 899 其他体育指上述未包括的体育活动 8991 体育中介代理服务 指各类体育赞助活动、体育招商活动、体育文化活动推广，以及其他体育音像、动漫、影视代理等服务 8992 体育健康服务 指国民体质监测与康体服务，以及科学健身调理、社会体育指导员、运动康复按摩、体育健康指导等服务 8999 其他未列明体育 指其他未包括的体育活动 90 娱乐业901 室内娱乐活动指室内各种娱乐活动和以娱乐为主的活动 9011 歌舞厅娱乐活动 9012 电子游艺厅娱乐活动 9013 网吧活动 指通过计算机等装置向公众提供互联网上网服务的网吧、电脑休闲室等营业性场所的服务 9019 其他室内娱乐活动 902 9020 游乐园指配有大型娱乐设施的室外娱乐活动及以娱乐为主的活动 903 9030 休闲观光活动指以农林牧渔业、制造业等生产和服务领域为对象的休闲观光旅游活动 904 彩票活动指各种形式的彩票活动 9041 体育彩票服务 9042 福利彩票服务 9049 其他彩票服务 905 文化体育娱乐活动与经纪代理服务 9051 文化活动服务 指策划、组织、实施各类文化、晚会、娱乐、演出、庆典、节日等活动的服务 9052 体育表演服务 指策划、组织、实施各类职业化、商业化、群众性体育赛事等体育活动的服务 9053 文化娱乐经纪人 9054 体育经纪人 9059 其他文化艺术经纪代理 指除文化娱乐经纪人、体育经纪人、艺术品、收藏品经纪代理以外的其他文化艺术经纪代理 909 9090 其他娱乐业指公园、海滩和旅游景点内小型设施的娱乐活动及其他娱乐活动 S 公共管理、社会保障和社会组织本类包括 91～96 大类 91 中国共产党机关910 9100 中国共产党机关92 国家机构921 9210 国家权力机构指宪法规定的全国和地方各级人民代表大会及常委会机关的活动 922 国家行政机构指国务院及所属行政主管部门的活动；县以上地方各级人民政府及所属各工作部门的活动；乡（镇）级地方人民政府的活动；行政管理部门下属的监督、检查机构的活动 9221 综合事务管理机构 指中央和地方人民政府的活动，以及依法管理全国或地方综合事务的政府主管部门的活动，还包括政府事务管理 9222 对外事务管理机构 9223 公共安全管理机构 指除消防服务以外的公共安全管理机构 9224 社会事务管理机构 9225 经济事务管理机构 9226 行政监督检查机构 指依法对社会经济活动进行监督、稽查、检查、查处等活动，包括独立（或相对独立）于各级行政管理机构的执法检查大队的活动 923 人民法院和人民检察院指宪法规定的人民法院和人民检察院的活动 9231 人民法院 指各级人民法院的活动 9232 人民检察院 指各级人民检察院的活动 929 其他国家机构 指其他未另列明的国家机构的活动 9291 消防管理机构 9299 其他未列明国家机构 93 人民政协、民主党派931 9310 人民政协指全国人民政治协商会议及各级人民政协的活动 932 9320 民主党派94 社会保障941 基本保险指依据国家有关规定开展的各种社会保障活动 9411 基本养老保险 指职工基本养老保险、城乡居民基本养老保险的基金、经办、投资、管理等有关活动 9412 基本医疗保险 指职工基本医疗保险、城乡居民基本医疗保险的基金、经办、投资、管理等有关活动 9413 失业保险 指失业保险的基金、经办、投资、管理等有关活动 9414 工伤保险 指工伤医疗保险的基金、经办、投资、管理等有关活动 9415 生育保险 指生育保险的基金、经办、投资、管理等有关活动 9419 其他基本保险 指其他基本保险活动 942 9420 补充保险指企业年金、职业年金、补充医疗和其他补充保险 949 9490 其他社会保障95 群众团体、社会团体和其他成员组织951 群众团体指不在社会团体登记管理机关登记的群众团体的活动 9511 工会 9512 妇联 9513 共青团 9519 其他群众团体 952 社会团体指依法在社会团体登记管理机关登记的单位的活动 9521 专业性团体 指由同一领域的成员、专家组成的社会团体（如学科、学术、文化、艺术、体育、教育、卫生等）的活动 9522 行业性团体 指由一个行业，或某一类企业，或不同企业的雇主（经理、厂长）组成的社会团体的活动 9529 其他社会团体 指未列明的其他社会团体的活动 953 9530 基金会指利用自然人、法人或者其他组织捐赠的财产，以从事公益事业为目的，按照国务院颁布的《基金会管理条例》的规定成立的非营利性法人的活动 954 宗教组织指在民政部门登记的宗教团体的活动和在政府宗教事务部门登记的宗教活动场所的活动 9541 宗教团体服务 9542 宗教活动场所服务 96 基层群众自治组织指城市和农村按居民居住地区设立的居民委员会或者村民委员会 961 9610 社区居民自治组织指城市、镇的居民通过选举产生的群众性自治组织的管理活动 962 9620 村民自治组织指农村村民通过选举产生的群众性自治组织的管理活动 T 国际组织本门类包括 97 大类 97 国际组织970 9700 国际组织指联合国和其他国际组织驻我国境内机构等活动","link":"/%E5%AD%A6%E7%A7%91_%E4%B8%93%E4%B8%9A_%E8%A1%8C%E4%B8%9A_%E5%9B%BE%E4%B9%A6-%E5%88%86%E7%B1%BB/%E5%9B%BD%E6%B0%91%E7%BB%8F%E6%B5%8E%E8%A1%8C%E4%B8%9A%E5%88%86%E7%B1%BB/"},{"title":"","text":"world historyORIGINS 4.5 MYA - 3000 BCEMYA million-year age RULERS &amp; HIERARCHIES 3000 – 700 BCETHINKERS &amp; BELIEVERS 700 BCE – 600 CEWARRIORS, TRAVELERS, &amp; INVENTORS 600 – 1450RENAISSANCE &amp; REFORMATION 1450 – 1750INDUSTRY &amp; REVOLUTION 1750 –1914POPULATION &amp; POWER 1914 – present","link":"/0001%20Humanities/%E5%8E%86%E5%8F%B2%E5%AD%A6%20History/world%20history/"},{"title":"","text":"Ways of HistoryPART ONE: First Things First: Beginnings in Histroy, to 500 B.C.ECommon Era (CE) and Before the Common Era (BCE) are year notations for the Gregorian calendar (and its predecessor, the Julian calendar), the world’s most widely used calendar era. Common Era and Before the Common Era are alternatives to the original Anno Domini (AD) and Before Christ (BC) notations used for the same calendar era. The term anno Domini is Medieval Latin and means “in the year of the Lord” This calendar era is based on the traditionally reckoned year of the conception or birth of Jesus, AD counting years from the start of this epoch and BC denoting years before the start of the era. There is no year zero in this scheme; thus the year AD 1 immediately follows the year 1 BC.","link":"/0001%20Humanities/%E5%8E%86%E5%8F%B2%E5%AD%A6%20History/Ways%20of%20the%20World/"},{"title":"全球通史：从史前到21世纪","text":"reader css 1234body { /* line-space:1.5em */ font-size: 22px !important; line-height:1.5em;} 史前人类最初的欧亚大陆文明（公元前3500——前1000年）古典文明开启欧亚大陆整体化（公元前1000——公元500年）希腊——罗马文明欧亚大陆的中世纪文明 （500-1500）伊斯兰教的兴起突厥人和蒙古人的侵略传统的拜占庭文明新兴西方的世界 （1500-1763）西方优势地位时的世界 （1763-1914）1914年以来西方衰落与成功的世界","link":"/0001%20Humanities/%E5%8E%86%E5%8F%B2%E5%AD%A6%20History/%E5%85%A8%E7%90%83%E9%80%9A%E5%8F%B2%EF%BC%9A%E4%BB%8E%E5%8F%B2%E5%89%8D%E5%88%B021%E4%B8%96%E7%BA%AA/"},{"title":"中国历史","text":"中国文明的起源：从新石器时代到西周伏羲意即牛的驯化者，他驯化了动物，创造了家庭 神农意即具有神性的农民，他发明了犁和锄 黄帝即黄色的帝王，发明了弓箭、船只、马车、陶器、文字以及丝绸，在黄河流域的大平原，为五帝之首 尧，据说制定了历法和礼仪，他没有把权力传给没名望的亲生儿子，而选择了舜做继承人 舜是一个贫苦的农民，他全心全意地服侍他的瞎眼父亲和邪恶的继母，这说明了他的孝 舜任命了一位官员–禹去处理洪水。此后十多年里，禹穿越土地、疏通河道，把洪水变成了华北的河流。禹治水是如此专心，以致他几次经过自己的家门，都没有停一下去看望自己的妻儿。舜指定禹为他的继承人。禹把统治区域划分为九州，铸了九鼎作为各州的象征。 禹死后，人们无视他指定的继承人而拥护他的儿子启来领导他们，开了世袭王朝统治的先河 禹和他的儿子便成为夏王朝最先的两个王 夏朝的统治延续了14代 到夏桀这个暴君被他的一个下属废黜时，夏朝被推翻，篡权者建立了他自己的王朝–商 商朝的统治延续了30代，直至一个荒淫无道、不听劝谏的王失去他的贵族和人民的支持，而被至西而来的周朝的军队轻而易举地推翻。 上古三代–夏、商、周 哲学基础：东周时期官僚制帝国的创立：秦汉佛教、门阀政治与外族统治者：分裂时代世界性的大帝国：581年至907年的隋唐重心南移：宋朝外族统治：辽、金和元朝独裁的局限：明朝满族与帝国主义：1644年至1900年的清朝行动起来：20世纪前期彻底的重新统一：1949年以来的中国","link":"/0001%20Humanities/%E5%8E%86%E5%8F%B2%E5%AD%A6%20History/%E4%B8%AD%E5%9B%BD%E5%8E%86%E5%8F%B2/"},{"title":"phhotography","text":"","link":"/0001%20Humanities/%E8%89%BA%E6%9C%AF%E5%AD%A6%20Arts/photography/"},{"title":"drawing","text":"","link":"/0001%20Humanities/%E8%89%BA%E6%9C%AF%E5%AD%A6%20Arts/drawing/"},{"title":"","text":"The Revelation Space Collection reader css 1234body { /* line-space:1.5em */ font-size: 60px !important; line-height: 40px;} Alastair Reynolds阿拉斯泰尔·雷诺兹 Contains Revelation Space, revelation: 被暴露的真相a fact that people are made aware of, especially one that has been secret and is surprising （上帝的）启示something that is considered to be a sign or message from God Chasm City chasm /ˈkæzəm/ 裂隙a deep crack or opening in the ground Redemption Ark redemption 救赎the act of saving or state of being saved from the power of evil; ark 诺亚方舟a large boat which Noah built to save his family and two of every type of animal from the flood Absolution Gap absolutiion 赦免a formal statement that a person is forgiven for what he or she has done wrong The Prefect Diamond Dogs Turquoise Days turquoise 绿松石a blue or greenish-blue semi-precious stone blue 蓝色 green 绿色 蓝绿色，青色 a greenish-blue colour Galactic North galactic 银河的；星系的relating to a galaxy Revelation SpaceONE - Mantell Sector, North Nekhebet, Resurgam, Delta Pavonis system, 2551 nekhebet涅赫贝特（Nekhbet）（/ˈnɛkˌbɛt/;也被拼写为 Nekhebit）是埃及神话中早期前王朝时期尼可布（Nekheb）城的守护神，她的名字意思就是“尼可布的”。最终，成为了上埃及的守护神，也是古埃及统一后的二个保护神之一涅赫贝特的女祭司被称为“姆乌”（muu，母亲），身穿埃及秃鹫羽毛长袍。涅赫贝特是上埃及守护神，她与下埃及守护神瓦吉特（Wadjet）经常作为“双女”（Two Ladies）一道出现。在艺术作品上涅赫贝特被描绘成一只秃鹰。埃及神话指源自古埃及的一系列神话。 神谕（英语：Oracle），即神示、神意，一种占卜的形式。在经由神明启示后，经过某个中介者（祭司），传达神明的意旨，对未来做出预言，回答询问，以预知未来 Resurgam是一种拉丁文,意思是重生 excavation挖掘the act of digging, especially with a machine archaeological考古的考古学related to or dealing with or devoted to archaeologyarchaeologythe study of cultures of the past, and of periods of history by examining the remains of buildings and objects found in the ground devote投入(时间、精力等)If you devote yourself, your time, or your energy to something, you spend all or most of your time or energy on it. shaft升降机井；通风井；竖井；a long, narrow, usually vertical passage in a building or underground, used especially for a lift/elevator or as a way of allowing air in or out(机器的)轴;(箭、高尔夫球杆等的)杆; sheer陡峭的very steep使急转向to change direction suddenly, especially in order to avoid hitting sth “baulks of” can refer to large, heavy pieces or quantities of something.在航海和航运背景下，”baulks” 可能指的是船舶建造中使用的大型木梁。这些大梁是用于在制造和修理船只时提供结构支持的大型实木横梁。 wheeler车夫；辕马；车轮制造人;辕马，读音yuán mǎ，汉语词语，意思是仪式上为马车中最靠近前轮的马。解释驾车的马。 coffer保险箱A coffer is a large strong chest used for storing valuable objects such as money or gold and silver. “cofferdams” 指的是围堰，而 “hyperdiamond” 是一种虚构的材料，可能是一种高度先进或幻想中的材料 spinSpun is the past tense and past participle of spin. stratifyto arrange sth in layers or stratastrataStrata is the plural of stratum .stratum岩层a layer or set of layers of rock, earth, etc.阶层a class in a society 纸张或薄片：”Sheet” 可以指一张纸、薄片或类似的薄而平坦的材料。例如，床单（bed sheet）是一种覆盖床垫的纸张，或者乐谱（sheet music）是印有音乐符号的纸张。 crawlera thing or person that crawls , such as a vehicle, an insect or a babycrawl爬行to move forward on your hands and knees, with your body close to the ground crouch蹲下to put your body close to the ground by bending your legs under you muffle压抑（声音）；to make a sound quieter or less clear蒙住（以保暖）to wrap or cover sb/sth in order to keep them/it warm landmass陆块a large continuous extent of land fidget动来动去to keep moving your body, your hands or your feet because you are nervous, bored, excited, etc. collar衣领the part around the neck of a shirt, jacket or coat that usually folds down evacuationevacuate撤离to move people from a place of danger to a safer place lit点燃set afire or burning照亮provided with artificial light “the banks of” 指的是某物或某事物的侧边、边缘或两侧。这个短语通常用来描述河流、湖泊、道路等的两侧 floodlight泛光灯a large powerful lamp, used for lighting sports grounds, theatre stages and the outside of buildings lump块a piece of sth hard or solid, usually without a particular shape clot（血或乳脂）凝结成块when blood or cream clots or when sth clots it, it forms thick lumps or clots “Caul” 这个词通常指的是新生婴儿出生时覆盖在头部和脸部的羊膜残余物 smear（用油性或稀软物质）胡乱涂抹to spread an oily or soft substance over a surface in a rough or careless way诋毁to damage sb’s reputation by saying unpleasant things about them that are not true devil魔鬼; gyroscope陀螺仪；a device consisting of a wheel that spins rapidly inside a frame and does not change position when the frame is moved. Gyroscopes are often used to keep ships and aircraft steady. scurry急匆匆;If people scurry to do something, they do it as soon as they can. thrust推;If you thrust something or someone somewhere, you push or move them there quickly with a lot of force. anvil铁砧an iron block on which a blacksmith puts hot pieces of metal before shaping them with a hammer patter吧嗒吧嗒的响声the sound that is made by sth repeatedly hitting a surface quickly and lightly boulder巨石a very large rock which has been shaped by water or the weather gaze凝视to look steadily at sb/sth for a long time, either because you are very interested or surprised, or because you are thinking of sth else transponder发射机）应答器a piece of equipment that receives radio signals and automatically sends out another signal in reply goggle（尤指由于惊奇而）瞪大眼睛看to look at sb/sth with your eyes wide open, especially because you are surprised or shocked “dust goggles” 意指防尘护目镜，这种护目镜通常是为了保护眼睛不受灰尘、颗粒物等污染物的影响 “Reproachfully” 是一个副词，表示以责备、指责的口吻或表情来看待或对待某人 beseech恳求；to ask sb for sth in an anxious way because you want or need it very much gravitometer验重器；“Gravitometers” 是一个名词，指的是一种测量地球引力场的仪器或设备。这些仪器用来测定地球上不同地点的引力强度，通常以重力单位（如加仑或米每秒平方）来表示。引力场的变化可以提供有关地下地质结构的信息，因此 gravitometers 常用于地质勘探、勘探石油和矿藏、以及其他地球科学研究 sway摇摆to move slowly from side to side; to move sth in this way “Enlarge” 是一个动词，意为扩大、增大、扩展或放大。当使用这个动词时，通常表示使某物更大或更广泛，或增加其规模或尺寸They decided to enlarge the house by adding a new room. slab厚板a thick flat piece of stone, wood or other hard material vertigo(从高处俯视时感到的)头晕目眩the feeling of dizziness and fear, and of losing your balance, that is caused in some people when they look down from a very high place permafrostpermanentlasting for a long time or for all time in the future; existing all the timefrost霜冻a weather condition in which the temperature drops below 0˚C (= freezing point ) so that a thin white layer of ice forms on the ground and other surfaces, especially at night“Permafrost” 是指多年冻土，一种地下土壤或岩石层，在一年中的大部分时间都处于冻结状态 subpolar近极的;靠近北极或南极的 thaw（结冰后）解冻to turn back into water after being frozen regolith风化层,表岩屑表岩屑（希腊：Ρηγόλιθος）是覆盖在固体岩石上的数层宽松的异种物质。它包括尘埃、土壤、破碎的岩石，和存在于地球、月球、一些小行星和其他行星相关的物质。在整个地幔上是不坚结的物质，因此建议称为表岩屑（风化层） demarcation（工种、人、土地等的）界线a border or line that separates two things, such as types of work, groups of people or areas of land “extra floods” 指的是额外的光源或洪水灯 gloom幽暗almost total darkness忧郁a feeling of being sad and without hope cramp抽筋a sudden pain that you get when the muscles in a particular part of your body contract, usually caused by cold or too much exercise cramped狭窄的a cramped room, etc. does not have enough space for the people in it contract合约an official written agreement收缩to become less or smaller; to make sth become less or smaller fantasticalextremely good;怪诞的；荒诞不经的strange and showing a lot of imagination hive蜂房a structure made for bees to live ina place full of people who are busy hive蜂巢：蜜蜂的巢穴，通常是一个由蜜蜂建造的结构，用于存放蜜和蜂蜡。忙碌之地：用来形容充满了活动、人群或忙碌的地方，类似蜜蜂巢穴的形象。 mat垫子a small piece of thick carpet or strong material that is used to cover part of a floor “Serve for” 是一个短语，通常表示某物或某人被用于某种特定的目的或任务“served for” 表示这些物品或工具在另一个时代被用于外科手术 surgery外科手术medical treatment of injuries or diseases that involves cutting open a person’s body and often removing or replacing some parts; servitora male servant skulk偷偷摸摸地走动；鬼鬼祟祟地活动to hide or move around secretly, especially when you are planning sth bad compad康柏电脑最初的产品是IBM的第一个版本的兼具便携性与兼容性的个人电脑。 cladisticcladistic taxonomy支序分類學（英文：cladistic taxonomy）又稱支序系統學、分支系統學、系統發育系統學（英文：phylogenetic systematics，也譯作系統發育分類學或系譜分類學），簡稱支序學（英文：cladistic），是一門基於種系發生的生物分類學科系统发生学是一种生物学分类学方法，通过分析物种的共同祖先和演化关系来组织生物分类 “stood up with a start” 意味着突然站起 snap迅速合上：例如，”snap”关窗户或盖子。拍摄快照：”snap”照片指拍摄快照或照片。抓住：”snap”指抓住某物。突然理解：”snap”表示突然明白或理解某事。突然的事件或状况：例如，”a snap decision” 意味着一个突然的决定。 greatcoat大衣,军大衣A greatcoat (also watchcoat) is a large, woollen overcoatIn the 19th century, the ‘watchcoat’ was part of a soldier’s military uniform, to be worn whilst on watch (guard duty), hence the term watchcoat overcoat长大衣An overcoat is a type of long coat intended to be worn as the outermost garment, which usually extends below the knee. Overcoats are most commonly used in winter when warmth is more important. garment服装a piece of clothing fringe刘海儿the front part of sb’s hair that is cut so that it hangs over their forehead边缘the outer edge of an area or a group brow额头the part of the face above the eyes and below the hair commentary现场解说a spoken description of an event that is given while it is happening, especially on the radio or television评论a written explanation or discussion of sth such as a book or a play inception（机构、组织等的）创始the start of an institution, an organization, etc. gruesome恐怖的very unpleasant and filling you with horror, usually because it is connected with death or injury chamber（作特定用途的）房间a room used for the particular purpose that is mentioned anthropologist人类学是研究人类社会、文化、行为和生活方式的学科，而人类学家或人类学家（anthropologists）研究和分析不同文化、社会群体和人类行为的各个方面。 intact完好无损complete and not damaged biped两足动物any creature with two feet limb四肢an arm or a leg; a similar part of an animal, such as a wing “four-limbed bipeds” 意指四肢的两足动物，即拥有四条腿，但站立或行走时以两条后肢为主。 situate使坐落于to build or place sth in a particular position analogous类似的If one thing is analogous to another, the two things are similar in some way.把…跟(具体情境)联系If you situate something such as an idea or fact in a particular context, you relate it to that context, especially in order to understand it better. elongate（使）变长to become longer; to make sth longer prominent突出的Something that is prominent is very noticeable or is an important part of something else. cranialcranium颅骨;头盖骨the bone structure that forms the head and surrounds and protects the brain ridge山脊 “voluminous” 通常用来描述尺寸、形状、内容或文本的丰满或大量特征 beaklikebeak鸟喙the hard pointed or curved outer part of a bird’s mouthresembling(像to look like or be similar to another person or thing) the beak of a bird jaw颌either of the two bones at the bottom of the face that contain the teeth and move when you talk or eat钳口the parts of a tool or machine that are used to hold things tightly tan晒成褐色if a person or their skin tans or is tanned , they become brown as a result of spending time in the sun desiccate使脱水remove water from tissue（人、动植物细胞的）组织a collection of cells that form the different parts of humans, animals and plants contort扭曲to become twisted or make sth twisted out of its natural or normal shape agonise \\ agony（精神或肉体的）极度痛苦extreme physical or mental pain “Technomic” 是一个专业术语，通常用于描述与技术和经济（technology and economics）相关的事物。 artefact手工艺品（尤指有历史或文化价值的）an object that is made by a person, especially sth of historical or cultural interest tactileconnected with the sense of touch; using your sense of touch methane甲烷a gas without colour or smell, that burns easily and is used as fuel. Natural gas consists mainly of methane . aquatint腐蚀版画a method of producing a picture using acid on a metal plate; a picture produced using this method“Aquatint” 是一种艺术技巧，主要用于版画。这个技巧使用树脂粉末或树脂粒子来制作细微的、透明的图像。 “Icescape” 是一个合成词，由 “ice”（冰）和 “landscape”（景观）组成，指的是冰冻的地貌景观或冰雪覆盖的地区的特定景观。 livery（尤指旧时仆人或官员的）制服a special uniform worn by servants or officials, especially in the past “Sweetmeats” 是一个名词，指的是各种甜食、糖果或点心 liqueur烈性甜酒a strong sweet alcoholic drink, sometimes flavoured with fruit. It is usually drunk in very small glasses after a meal. drape将（衣服、织物等）悬挂，披to hang clothes, materials, etc. loosely on sb/sth span指一物体或距离延伸横跨另一物体或距离,”The bridge spans the river事物跨越一段时间，包括其中的所有部分,Her career spanned several decades涉及：指涉及或包括某事物。例如，”The discussion spanned various topics” 意味着讨论涉及了各种主题。 vogue风尚a fashion for sth entopic，”Entoptic” 是一个术语，用于描述与视觉系统或眼球内部相关的现象或图像 seraph撒拉弗，色辣芬(基督教中级别最高的天使)an angel of the highest rank cherub小天使（常被绘为有翅膀的胖男孩）a type of angel , shown as a small fat, usually male, child with wings hummingbird（尤产于中南美洲的）蜂鸟A hummingbird is a small brightly coloured bird found in America, especially Central and South America. It has a long thin beak and powerful narrow wings that can move very fast. detest讨厌to hate sb/sth very much “Deign” 是一个动词，指的是以高贵或高高在上的态度屈尊做某事，通常用于表示某人以不情愿的方式或表现出高傲的态度来做某事He wouldn’t even deign to speak to us他甚至不屑和我们说话。 culmination高潮；终点the highest point or end of sth, usually happening after a long time strand股，缕a single thin piece of thread, wire, hair, etc. ribonucleic核糖核酸RNA 是一种生物分子，与脱氧核糖核酸（DNA）一样在遗传信息传递中起重要作用。”Ribonucleic” 表示与 RNA 相关的特性或属性。 entwine缠绕to twist or wind sth around sth elsetwine围绕to wind or twist around sth; to make sth do this marquetry（家具等的）镶嵌细工，镶嵌艺术patterns or pictures made of pieces of wood on the surface of furniture, etc.; the art of making these patterns snatch抢走；偷窃to take sb/sth away from a person or place, especially by force; to steal sth “Fibrous” 是一个形容词，用于描述物质或结构，指的是它们有纤维状的特征、构造或质地。 speckle色斑a small coloured mark or spot on a background of a different colour potassium-argon钾氩测年法的potassium-argon dating通过测量岩石中的钾同位素衰变成氩来确定年龄的测年方法。它经常用于测定岩石和矿物的年龄。 uranium/juˈreɪniəm/铀(放射性化学元素)a chemical element. Uranium is a heavy, silver-white, radioactive metal, used mainly in producing nuclear energy. uranium-series dating使用钙华沉积物（钙华）中铀同位素的放射性衰变来确定它们的年龄 “Travertine” 是一种沉积性岩石，通常是由钙华沉积物形成的。它是一种石灰岩，由于其在地下水源中的沉积和沉积物沉积而形成 deposit沉积物layer of a substance that has formed naturally underground付（订金）；付（押金）to pay a sum of money as the first part of a larger payment; to pay a sum of money that you will get back if you return in good condition sth that you have rented将（钱）存入银行；存储to put money into a bank account fission裂变，分裂the act or process of splitting the nucleus (= central part) of an atom, when a large amount of energy is released fission-track dating火山玻璃或其他矿物中铀的自发裂变而产生的损伤轨迹来确定其年龄的测年技术 luminescence冷光Luminescence is a soft, glowing light.light from nonthermal sources thermoluminescence dating热释光测年是一种通过测量矿物晶格内累积的辐射诱导电子来确定烧过的石碎片的年龄的方法。 flint燧石；火石a type of very hard grey stone that can produce a spark when it is hit against steel upheaval动荡/ʌpˈhiːvəl/a big change that causes a lot of confusion, worry and problems stem茎，梗The stem of a plant is the thin, upright part on which the flowers and leaves grow.遏止to stop sth that is flowing from spreading or increasing控制或抑制情感、行为或事件的发展。例如，”He tried to stem his anger” 表示他试图控制自己的愤怒。 conceal掩盖to hide sb/sth rhetorical/rɪˈtɔːrɪkl/反问的，反诘的A rhetorical question is one which is asked in order to make a statement rather than to get an answer. undermine从根基处破坏；挖…的墙脚to make sth weaker at the base, for example by digging under it dire从根基处破坏；挖…的墙脚to make sth weaker at the base, for example by digging under it theism/ˈθiːɪzəm/有神论belief in the existence of God or gods “Theistic” 表示信仰上帝或神明的信仰或哲学观点，与 “atheistic”（无神论的）和 “agnostic”（不可知论的）形成对比。如果一个人是 “theistic”，意味着他相信有一个或多个神明存在 2023-08-32","link":"/0001%20Humanities/%E6%96%87%E5%AD%A6%20Literature/The%20revelation%20space%20collection/"},{"title":"","text":"请充当翻译器， 按如下结构（中括号”[“、”]”之间的内容请用相应内容代替”） 例如： scent单词所有的定义： [此处为可能的词性，如”noun (名词)”] [此处为翻译的对应含义1的中文单词1（in chinese）] [此处为对应的英文定义1（in english）] [此处为中文定义1（in chinese）] [此处为英文例句1（in english）] [此处为例句1的中文翻译1（in chinese）] [此处为翻译的对应含义2的中文单词2（in chinese）] [此处为对应的英文定义2（in english）] [此处为中文定义2（in chinese）] [此处为英文例句2（in english）] [此处为例句2的中文翻译2（in chinese）] … [此处为可能的词性，如”verb (动词)”] [此处为翻译的对应含义3的中文单词3（in chinese）] [此处为对应的英文定义3（in english）] [此处为中文定义3（in chinese）] [此处为英文例句3（in english）] [此处为例句3的中文翻译3（in chinese）] … … 以下为例子 输入的单词 “scent”： scent 名词 (noun) 气味 “Scent” refers to a particular smell or fragrance. “Scent” 指的是特定的气味或香味。 The scent of fresh flowers filled the room. 新鲜花朵的香气充满了房间。 嗅觉 “Scent” can also refer to the sense of smell, the ability to perceive odors through the nose. “Scent” 也可以指嗅觉，即通过鼻子感知气味的能力。 Dogs have a highly developed sense of scent. 狗具有高度发达的嗅觉。 动词 (verb) 嗅到，闻到 As a verb, “scent” means to smell or detect the odor of something through the sense of smell. 作为动词时，”scent” 意味着通过嗅觉嗅到或闻到某物的气味。 I could scent the delicious aroma of the food from the kitchen. 我能闻到厨房里美味食物的香气。 请充当翻译器， a. 请先拆分为句子成分（如主语，谓语，宾语，定语等） 如：“The patchouli-and-vanilla scent she used in her hair.”拆分为句子成分： The patchouli-and-vanilla scent used in her hair b. 再分别按如下结构进行翻译和解释 The patchouli-and-vanilla scent翻译和解释：… used in her hair翻译和解释：…","link":"/0001%20Humanities/%E6%96%87%E5%AD%A6%20Literature/chatgpt/"},{"title":"","text":"science fiction末日之旅加斯汀 . 柯羅寧Justin Croninzlibrary","link":"/0001%20Humanities/%E6%96%87%E5%AD%A6%20Literature/book%20to%20read/"},{"title":"","text":"排除她 她们仙子 魔女 女友 女儿退婚 前任娶 联姻 娶妻 娶 赘婿 迎娶道侣 老婆 女帝 女魔头痴情 恋爱红尘太监 徒儿 徒弟 收徒 师父 师兄 师弟 师妹 后代族长 修仙家族 兽 契约 御兽 契约兽 神兽英灵 凡人修仙 厉飞雨 七玄门 韩立 天南 掩月宗遮天斗罗火影完美世界 横推 横炼综武太极中医 反派无敌天选之子 天命氪命 儒 儒圣 儒道 儒教气运 香火 巫师 女巫 巫妖魔幻 邪恶鬼 神鬼 鬼差 地府志怪 志异妖魔 鬼怪 妖魔鬼怪 妖精尸 僵 僵尸 尸解地煞 天罡诡 诡异 神诡 诡道 诡谲龙王 祖龙 烛龙 锁龙井玄君七章 西游 天庭 福德 悟空 三藏 菩提 牛魔王 庙祝聊斋 画皮 狐仙 狐狸 白骨白蛇 法海始皇关公封神 殷商 申公豹 截教 商周 妲己洪荒 神话 阐教 截教 玉鼎 山海 山海经 祝由钦天监 国师张三丰池瑶 重生钓鱼签到模拟穿书 包含","link":"/0001%20Humanities/%E6%96%87%E5%AD%A6%20Literature/%E7%BD%91%E7%BB%9C%E5%B0%8F%E8%AF%B4/"},{"title":"","text":"“Parochial” 一词通常用来表达对于其他文化、观点或经验的不开放或狭隘态度。 verge濒于If you are on the verge of something, you are going to do it very soon or it is likely to happen or begin very soon. horizon地平线：在地理或视觉上，地平线是你所能看到的水平线或远处的线条，分隔了天空和地面。它通常指的是远处的地理界限。界限或范围：可以指某种活动或行为的界限或范围。例如，”beyond the horizon of ethics” 意味着超出了道德的界限。 “Viable” 是一个形容词，用于描述某物或某事在特定条件下具有生存能力、成功的可能性或可行性。“The business proposal is viable and has a good chance of success.”（这个商业提案是可行的，并有很大的成功机会。） fusion drive“融合推进器” 指的是一种以核聚变作为能源来源来产生推力和为宇宙飞船或其他交通工具供电的一种推进系统。融合推进器是太空探索和科幻中的理论概念。与传统的依赖化学反应的火箭相比，它们具有更高的能量输出和效率潜力。 pop发出爆炸声或突然的声音：例如，”The balloon popped”（气球爆破了）。打开或关闭开关：例如，”Pop the hood of the car”（打开汽车的引擎盖）轻拍或轻击：例如，”She popped him on the shoulder”（她在他的肩上轻轻拍了一下）。流行或广泛传播：例如，”The song is popping on the radio”（这首歌在广播中很流行）。 marginal边缘的：指某物处于边缘、边缘或边界位置。例如，”The house is located in a marginal area of the city”（这座房子位于城市的边缘地区）。微小的：指某物的数量或程度非常小，不足以产生重大影响。例如，”There has been only marginal improvement in the situation”（情况只有微小的改善）。 “The Epstein Drive hadn’t given humanity the stars, but it had delivered the planets.” 可以翻译为 “爱普斯坦推进器没有把星星送给人类，但它已经送到了行星。” 消防栓A “fire hydrant” is a water outlet, typically located on city streets or near buildings, that is used by firefighters to access a supply of water to extinguish fires. “To retool” is a verb that means to make significant changes or modifications to something, often in the context of machinery, equipment, systems, or processes. “Schematics” refers to detailed diagrams, drawings, or plans that represent the components, connections, and operations of a system, machine, or device. “Procreation restrictions” refers to limitations, rules, or policies that restrict or regulate the act of procreation, which is the process of having children or offspring. Recruiters are individuals or professionals who are responsible for finding and selecting suitable candidates to fill job openings within organizations. A “census” is a systematic and comprehensive survey or count of a population, typically within a specific geographic region or area. “Hauling” is a verb that means to transport or carry something heavy or bulky from one place to another. “Salvage” is a noun and a verb, and it refers to the act of saving, recovering, or rescuing something, often from a situation of damage, loss, or destruction. A “hangar” is a large, enclosed structure or building typically designed to house and store aircraft, such as airplanes, helicopters, or airships. 拖把（Mop）是一种用于湿拖地板的家庭清洁工具 航天飞机（Space Shuttle） “Reg” 是 “regulation” 的缩写，意为 “法规” 或 “规定” “Sarcastic” 是一个形容词，指的是使用讽刺或讽刺来嘲笑或表达蔑视，通常以幽默或间接的方式。 “Snort” 是一个动词，指的是用有声音并常常是突然而有力的方式，通过鼻子强力地呼气。这通常表达出不悦、蔑视或娱乐等情感。 “Salute”敬礼是一个名词，指的是一种表示尊重或荣誉的手势，通常涉及举手、特定的姿势或动作，常在正式或军事背景中使用。 “coveralls” 是一种常穿的一体式保护服，通常用于工作。 greasy grease油腻的 油 An “infirmary” is a term typically used to refer to a small facility or room within a larger institution, such as a school, prison, military base, or other organizations, where individuals who are sick or injured can receive medical attention and care stump英：The bottom part of a tree left in the ground after the rest has been cut down.中：树桩，树根，树干残余部分。英文例句（中文翻译）：They removed the branches, but the stump of the tree remained in the ground.（他们去掉了树枝，但树的树干残留在地下。） fatalism宿命主义一种信仰或教义，认为所有事件，包括人类的行动，都是注定和不可避免的The belief or doctrine that all events, including human actions, are predetermined and inevitable. “Maggot” 蛆虫，是一种昆虫学术语，用来描述蝇的幼虫，通常在腐烂的有机物中滋生。它们在自然界中起到清除腐烂组织的作用，因此在某些医疗环境中也被用于清理伤口，以帮助愈合。此外， “maggot” 也可以作为俚语或侮辱性词语，用来指代一个人，通常表示蔑视或厌恶。这种用法是非常贬义的，所以需要小心使用。 pluck快速而用力地拔或摘取某物，通常使用手指或工具。 prosthetic假肢与假体（一种用于替代缺失身体部分、增强身体功能或矫正身体畸形的人工设备）相关的，涉及使用假体的。 necrosis坏死“Necrosis” 是描述细胞、组织或器官在活体生物体内死亡的专业医学术语。 “Biogel” 是一个专业术语，用来描述一种凝胶状的物质，其特点是与生物体相容，即不会引发排斥反应或有害作用。这种生物凝胶 grin露齿而笑，通常是嘴角向上弯曲，表示开心、快乐或满足。 blush脸变红，通常是由于尴尬、羞耻、害羞或强烈的情感反应所引起。 “Crimson” 是深红色的一个词汇，通常与鲜血、激情、皇室或奢侈品相关。这种颜色被认为是强烈情感的象征，也常常与权力和财富相关联。 inflammation炎症一种生物学响应，对有害刺激（如病原体、受损细胞或刺激物）产生的生理反应。它是一种涉及免疫系统的保护性过程，以红肿、发热、肿胀、疼痛，有时伴随受影响区域功能丧失为特征。 frown以皱眉和额头表现出不悦、忧虑或深思熟虑，通常涉及眉毛向下弯曲和额头出现皱纹。 “Skag” is a slang term that is often used to refer to heroin, a highly addictive and illegal opioid drug.“Skag” is a slang term that is often used derogatorily to refer to people, typically implying that they are of low character or lacking skill or competence. snort用力从鼻子排出空气，通常伴随着声音，作为对幽默、嘲笑或蔑视的反应。 spoool 线轴，线卷A spool is a cylindrical object typically used to wind or store thread, wire, film, or other flexible materials.线轴通常是用于卷绕或存储线、电线、胶卷或其他柔性材料的圆柱形物体。 （计算机领域）将数据排入队列In the context of computing, especially in data processing or printing, “spool” can also refer to the process of placing data into a queue for orderly processing or printing.在计算领域，尤其是数据处理或打印领域，”spool” 还可以指将数据排入队列以进行有序处理或打印。 faint形容词 (adjective) 微弱的，模糊的When used as an adjective, “faint” describes something that is very weak, indistinct, or barely perceptible.作为形容词时，”faint” 描述的是非常微弱、不明显或几乎察觉不到的东西。The stars were faintly visible in the night sky.星星在夜空中微弱可见。 昏晕的，晕倒的“Faint” can also describe a state of near unconsciousness or dizziness.“faint” 也可以描述接近失去知觉或感到头晕眼花的状态。She felt faint and had to sit down.她感到晕倒，不得不坐下来。 bass低音“Bass” 通常指音乐中的低音部分或乐器，如低音吉他或低音鼓。它通常负责产生深沉的声音和低频音符。The bass in this song is really powerful.这首歌的低音部分非常有力。 thump砰然撞击As a verb, “thump” means to strike or hit something forcefully, producing a sudden, loud noise.作为动词时，“thump” 意味着强烈地打击或敲击某物，产生突然而响亮的噪音。He thumped the table in frustration.他沮丧地重重地敲了一下桌子。 享乐主义“Hedonism” 指的是一种生活哲学或伦理观，强调寻求快乐和愉悦作为生活的最高目标。享乐主义者认为最重要的是追求个人的快感和幸福。 acute严重的，剧烈的“Acute” 可以描述某种严重或突然发生的情况，如疾病或危机。He experienced acute pain in his back.他感到背部剧痛 chime钟声，铃声As a noun, “chime” refers to the sound produced by bells or ringing.作为名词，“chime” 指的是钟声或铃声。The chimes of the clock could be heard throughout the town.整个城镇都可以听到时钟的钟声。 Noun (as in the phrase “in the sack”): In a casual or slang context, “sack” can refer to a bed or a place where sexual activities take place. It’s often used informally to talk about sexual encounters. “Executive Officer” (XO) Her laughter was equal parts warmth and disbelief. 女士的笑声是由温暖和怀疑这两种截然不同的情感元素以相等的比例组成的 hauler运输者，搬运工“Hauler” 指的是从一个地方搬运或运输货物的人、车辆或公司。通常用于描述承担运输任务的实体。 gig短期工作或任务“Gig” can also refer to a short-term job or task, often associated with freelancing or temporary work.“Gig” 也可以指短期工作或任务，通常与自由职业或临时工作相关。I have a gig as a freelance writer next week.下周我有一个自由撰稿人的短期工作。 cranky易怒的，不悦的“Cranky” 指的是容易生气、不悦或情绪不稳定的状态。这个词通常用来形容人在某种情境下表现出烦躁或易怒的情绪。He’s always cranky in the morning before he has his coffee.在喝咖啡之前，他早上总是容易生气。易损坏的，不稳定的“Cranky” 还可以用来描述设备、机械或系统容易出现故障或不稳定的特点。The old computer was getting cranky and slow.旧电脑表现出越来越不稳定和缓慢的特点。 obscene/əbˈsiːn/粗鄙的，猥亵的“Obscene” 还可以指言辞、行为或视觉图像等在社交或道德标准下被认为粗鄙、猥亵或下流。His obscene jokes were offensive to many people.他的下流笑话冒犯了许多人。 swoop快速俯冲，猛扑“Swoop” 是指以迅猛的速度、通常是下降或曲线轨迹，快速移动的动作。The eagle swooped down from the sky to catch its prey.鹰从天空中俯冲下来捕捉猎物。 boilNoun (skin condition):“He had a painful boil on his arm that required medical attention.”Verb (cooking):“Boil a pot of water before adding the pasta.” bredbreed繁殖后代动物或植物进行交配，以产生后代。养育和照顾它还可以表示养育、培育和照顾后代，无论是动物还是人类。 asteroid小行星An “asteroid” is a small, rocky celestial body that orbits the Sun, primarily found in the asteroid belt between the orbits of Mars and Jupiter.“Asteroid” 是指绕太阳运转的小型岩石天体，主要分布在火星和木星轨道之间的小行星带。 A “potty” is a child’s portable toilet or a small container used for a young child’s urination or defecation, especially during potty training.“Potty” 是指儿童的便携式马桶或用于幼儿排尿或排便的小容器，尤其是在进行小便训练时使用。 urine尿液“Urine” refers to the liquid waste product produced by the kidneys, stored in the bladder, and expelled from the body through the urethra.“Urine” 指的是由肾脏产生、储存在膀胱中，通过尿道从体内排出的液体废物产品。 defecation大便，排便“Defecation” refers to the act of passing solid waste, specifically feces or stool, from the body through the rectum and anus.“Defecation” 指的是通过直肠和肛门从身体中排出固体废物，特别是粪便的行为。 obligate使有责任，迫使“Obligate” 意味着强迫或迫使某人履行某种责任、义务或承诺。The contract obligates both parties to fulfill their respective obligations.合同迫使双方履行各自的义务。 glacier冰川“Glacier” 指的是由积雪和冰组成的大规模冰块，通常在山脉高地或极地地区发现，它们在慢慢地流动或滑行。 mere仅仅，只是“Mere” 表示某事物的程度或性质非常简单、基本或微不足道。 “Crate” 指的是通常由木材或其他材料制成的坚固容器，用于运输、储存或包装物品。The fruits were shipped in wooden crates to prevent damage during transport.水果被装在木箱中运输，以防止在运输过程中受损。","link":"/0001%20Humanities/%E6%96%87%E5%AD%A6%20Literature/expanse/"},{"title":"","text":"psychology miscellaneous/ˌmɪsəˈleɪniəs/各种各样的consisting of many different kinds of things that are not connected and do not easily form a group psychopathyPsychopathy is a neuropsychiatric disorder marked by deficient emotional responses, lack of empathy, and poor behavioral controls, commonly resulting in persistent antisocial deviance and criminal behavior. neuropsychiatry神经精神病学the branch of medicine dealing with mental disorders attributable to diseases of the nervous syste deficient有缺陷的;Someone or something that is deficient is not good enough for a particular purpose. persistent持续的；反复出现的continuing for a long period of time without interruption, or repeated frequently, especially in a way that is annoying and cannot be stopped deviancea异常state or condition markedly different from the norm Psychological DisordersWhat are mental disorders?Mental disorders (or mental illnesses) are conditions that affect your thinking, feeling, mood, and behavior. They may be occasional or long-lasting (chronic). They can affect your ability to relate to others and function each day. There are many different types of mental disorders. Some common ones include: Anxiety disorders, including panic disorder, obsessive-compulsive disorder, and phobias Depression, bipolar disorder, and other mood disorders Eating disorders Personality disorders Post-traumatic stress disorder Psychotic disorders, including schizophrenia chronic(especially of a disease 尤指疾病) 长期的；慢性的lasting for a long time; difficult to cure or get rid of compulsive(of behaviour 行为) 难以制止的；难控制的that is difficult to stop or control phobia 恐惧；憎恶A phobia is a very strong irrational fear or hatred of something. schizophrenia精神分裂症a mental illness in which a person becomes unable to link thought, emotion and behaviour, leading to withdrawal from reality and personal relationships withdraw退出（组织）the act of no longer taking part in sth or being a member of an organization psychotic 精神病患者a person suffering from severe mental illness","link":"/0002%20Social%20science/%E5%BF%83%E7%90%86%E5%AD%A6%20Psychology/psychology/"},{"title":"","text":"company公司1国务院国有资产监督管理委员会的英文名称为 State-owned Assets Supervision and Administration Commission of the State Council, 其缩写为SASAC华晨汽车集团控股有限公司（简称“华晨汽车”，英文Brilliance Auto）Renault Brilliance JinbeiRENAULT是世界十大汽车公司之一，法国第二大汽车公司。创立于1898年，创始人是路易·雷诺。而今的雷诺汽车公司已被收为国有，是法国最大的国营企业，Brilliance Shineray is a joint venture between Brilliance Auto Group and Shineray Motorcycle Company (Shineray Group), one of China’s largest[citation needed] motorcycle producers. Shineray Group bought the Italian motorcycle brand, SWM (motorcycles), and started an automotive brand with the SWM nameplate. SWM now makes a range of crossovers and compact MPVs.鑫源欧洲公司收购意大利越野车SWM品牌名称，并完成首批产品设计和制造Shineray Group (Chinese: 鑫源集团)2014年，东方鑫源集团 [2] 全资收购意大利SWM品牌，同时在意大利米兰成立SWM斯威汽车设计中心。 [3] 2016年7月27日，SWM斯威汽车品牌在中国北京发布。 BYD Auto Co., Ltd. (“Build Your Dreams”) “蓝带啤酒前身为柏斯特的酿酒厂，于1844年由Jacob·Pabst创立，随后其创始人将酿酒坊从德国迁到美国威斯康星州密尔沃基，酿造出美国广受欢迎的特选酒。因为柏斯特啤酒公司习惯在酒樽和酒桶上系一条蓝色的绸带，所以美国人干脆将它昵称为蓝带，蓝带由此得名。后因美国国内丝绸没有定量配给，蓝带啤酒（Pabst Blue Ribbon）停止了在酒瓶上系上蓝色丝带。该形象从1882年首次使用蓝色丝带开始，已经延续71年之久。 蓝带啤酒（中国）于1990年11月在广东肇庆建厂投产，是国内生产外国名牌啤酒的首家合资企业，也是全国啤酒销量第一的外国品牌企业。” BBK Electronics Corporation is the parent company of Oppo and Vivo. Oppo’s subsidiaries include OnePlus and Realme (a former sub-brand of Oppo). Vivo’s subsidiaries include iQOO (a former sub-brand of Vivo) 招商局能源运输股份有限公司（简称“招商轮船”）于2004年成立超级油轮（Very Large Crude Carrier, VLCC）和超大型矿砂船（Very Large Ore Carrier, VLOC）招商局是中国近代第一家股份制公司，曾组建了中国近代第一支商船队，开办了中国第一家银行、第一家保险公司等，开创了中国近代民族航运业，招商局主要业务集中于交通物流、综合金融、城市与园区综合开发，以及近年来布局的大健康、检测等新产业。招商局旗下中国长江航运集团有限公司（简称“长航集团”）是中国最大的内河航运企业博时基金是目前我国资产管理规模最大的基金公司之一招商局集团（简称“招商局”）是中央直接管理的国有重要骨干企业，总部位于香港，是在香港成立运营最早的中资企业之一 China International Marine Containers中国国际海运集装箱（集团）股份有限公司（简称：中集集团），是世界领先的物流装备和能源装备供应商，总部位于中国深圳According to the 2013 Annual Report of CIMC, China Merchants Group holds 25.54% while COSCO holds 22.75% of the total shares of the company. china cosco shipping corporation limited中国远洋海运集团有限公司（以下简称中国远洋海运集团或集团）由中国远洋运输（集团）总公司与中国海运（集团）总公司重组而成中远海运集装箱运输有限公司 中远海运能源运输股份有限公司 中远海运散货运输有限公司 中远海运特种运输股份有限公司 中远海运客运有限公司 保利国际控股有限公司（简称“保利国际”）于 2014 年成立，其全资子公司保利科技是 1984 年经中央军委批准成立的拥有陆、海、空、天、电、警武器装备综合进出口权的大型防务公司。保利发展控股集团股份有限公司（SH600048），简称保利发展控股Poly Property Group Co., Ltd.保利置业集团有限公司 (00119.HK) ，简称保利置业，总部设在香港和上海the overseas platform with Poly (Hong Kong) Investments Limited (SEHK: 119)the domestic platform with Poly Real Estate Group Company Limited中国轻工集团有限公司（简称“保利中轻”）是中国保利集团有限公司的全资子公司中国工艺集团有限公司（简称“保利工艺”）是中国保利集团有限公司的全资子公司。保利工艺核心业务包含工艺美术（含珠宝首饰品牌研发、产品设计及销售）、贵 金属贸易（含国际贸易、精炼加工、回收、仓储及物流）。保利工艺致力于打造 成为国内一流的工艺美术产业集团，世界一流的贵金属产业链服务商。保利文化集团股份有限公司（03636.HK），简称保利文化，是中国保利集团大力发展文化产业、助力文化强国建设的运作实体保利剧院、保利拍卖、保利影业、保利艺术教育、保利 WeDo、保利艺术中心、 保利艺术博物馆等知名品牌。中国中丝集团有限公司是世界500强企业中国保利集团有限公司的全资子公司，其成立可追溯至1946年，是我国从事丝绸业务历史最悠久、规模最大的企业之一。 热交换器（蒸发器与冷凝器） Heating, ventilation通风, and air conditioning [HVAC] is the use of various technologies to control the temperature, humidity, and purity of the air in an enclosed space. Its goal is to provide thermal comfort and acceptable indoor air quality. A reversing valve is a type of valve and is a component in a heat pump, that changes the direction of refrigerant 制冷剂flow. By reversing the flow of refrigerant, the heat pump refrigeration cycle is changed from cooling to heating or vice versa. It is one of China’s manufacturers and exporters of control parts and components for air conditioners, refrigeration, home appliance, automotive air conditioning and thermal management. It is one of the world’s largest reversing valve manufacturers. “招商局积余产业运营服务股份有限公司 （简称“招商积余”），是招商局集团旗下从事物业资产管理与服务的平台企业”国际财务管理师(International Finance Manager简称IFM)商业地产 招商积余旗下的商业管理服务平台，致力于商业综合体、中高端写字楼等业态的运营管理;作为招商蛇口旗下商业地产投资运营和管理核心平台，招商商管致力于涵盖商业综合体、甲级写字楼等业态在内的项目投资、运营和资产管理， 房地产经纪的专业公司 置业顾问工业园区、办公及研发园区、 大型公共建筑等提供—站式综合设施运营解决方案物业管理行业对于综合设施管理（IFM, Integrated Facility Management）的关注度楼宇设施设备 设施通常与“基础”组合成为一个单词，即Infrastructure，意为“底层结构”，是“一个国家或一个组织保持运行所必需的系统或结构”，可见，设施具有基础性、公共性的特点。基础设施不仅包括物质和信息系统，而且包括依附于这些有形物质上面的无形服务。设备通常指可供人们在生产中长期使用，并在反复使用中基本保持原有实物形态和功能的生产资料和物质资料的总称。此外，设施具有不可移动性，而设备经常具有可移动性；设施一般是为某种需要独立设计的系统，设施不具有批量生产的特性；而当设备特指“仪器”时，具有重复生产且可批量销售。总之，设施是为某种需要而建设的一个系统，比较抽象；设备是为某种需要而开发的一套装置，颇为具象。设备是指进行某项工作或满足某种需要的成套的建筑、器物等，如医疗设备；设施是指为某种需要而建立的机构、系统、组织、建筑等，如交通设施。智能化工程设计与施工 地面、吊顶、墙面、橱柜、厨房设备及管线等通过设计集成、工厂生产，在工地主要采用干式工法装配而成的厨房欧派整装大家居整合家装主材及软装产品供应链，并与当地TOP家装公司形成强强联合，以顶级设计师一对一提供空间设计服务，提供全屋定制解决方案装甲门发源于基督教, 在欧洲应用广泛,主要特点是门扇中间为坚固的钢结构体(国内称装甲系统),前后表面各覆盖一层漂亮的且易于更换的饰面材料，饰面可做铝、铜、玻璃、复合木、实木等 “节能保温ENERGY SAVING INSULATION”古代游牧民族在实践中发现并利用了动物纤维的缩绒性，将动物毛发如羊毛、骆驼毛加水、尿或乳精等通过脚踩、棒打等机械作用使纤维之间相互缠结，来制作毛毡。它是一种不需要纺纱织布而形成的织物，只是将纺织短纤维或者长丝进行定向或随机排列，形成纤网结构，然后采用机械、热粘或化学等方法加固而成。 它不是由一根一根的纱线交织、编结在一起的，而是将纤维直接通过物理的方法粘合在一起的，非织造布突破了传统的纺织原理，并具有工艺流程短、生产速度快，产量高、成本低、用途广、原料来源多等特点。“砂浆是建筑上砌砖使用的黏结物质，由一定比例的沙子和胶结材料（水泥、石灰膏、黏土等）加水和成，也叫灰浆，也作砂浆。砂浆常用的有水泥砂浆、混合砂浆（或叫水泥石灰砂浆）、石灰砂浆和粘土砂浆。”管廊，即管道的走廊。化工及其相关类工厂中很多管道被集中在一起，沿着装置或厂房外布置，一般是在空中，用支架撑起，形成和走廊类似的样子。也有少数管廊位于地下。 旧时租期较长、房租按月计算的旅馆，居住人多为求学或谋事者。公寓为集合式住宅的一种，中国大陆称为单元楼或居民楼，港澳地区称为单位 套型建筑面积与套型阳台面积之和不大于60平方米的居住建筑。套型是指按不同使用面积、居住空间组成的成套住宅类型。 公寓：公共寓所，分为商业公寓和职工公寓。第二类是五个或五个以上居住单位之楼宇，这就是通常我们所说的公寓（Apartment Building）。住宅就是供一个家庭使用的，而公寓通常是多家庭或多个人使用的。 策划，指积极主动地想办法，定计划。它是一种策略、筹划、谋划或者计划、打算，它是个人、企业、组织结构为了达到一定的目的，充分调查市场环境及相关联的环境的基础之上，遵循一定的方法或者规则，对未来即将发生的事情进行系统、周密、科学的预测并制订科学的可行性的方案。游戏策划，以满足用户挑战需求，设计关卡及装备等攻关所需素材广告策划，以创意输出为主的岗位“策：（本意）cè 古代的一种马鞭子，头上有尖刺。鞭打：策马、鞭策。” 香油，又叫芝麻油、麻油，是中国传统的调味植物油，它是从芝麻中榨取的油脂，有浓郁的炒芝麻香味。两片罐是20世纪中叶问世的。整个包装罐由两件，即罐身和罐盖组成，故称两片罐。属于金属罐的一种。“三片罐 （three-piece can）以金属薄板为材料经压接、粘接合电阻焊接加工成型的罐型包装容器，由罐身、罐底和罐盖三部分组成，罐身有接缝、罐身与罐底和罐盖卷封的包装容器。” 反刍（chú，ㄔㄨˊ）俗称倒嚼（dǎojiào，ㄐㄧㄠˋ），是指某些动物进食经过一段时间以后将半消化的食物从胃里返回嘴里再次咀嚼。反刍主要出现在哺乳纲偶蹄目的部分草食性动物身上，如牛、羊、羚羊等，这些动物被统称为反刍动物，归属于哺乳纲偶蹄目反刍亚目。 “预混料又称为添加剂预混料或复合预混料，由维生素、微量元素、氨基酸、抗生素等多种添加剂和载体或稀释剂组成。由于微量元素与某些维生素接触后会促进其失效，有些微量元素之间混合后效价也会降低，甚至失活，因此，复合预混料生产的技术性要求很强，它的特点是具备了要求的几乎所有活性成分，具有综合的添加效果，方便用户，通用性强。预混料一般占全价配合饲料的0.5%～3%，切不可直接喂猪，否则会造成微量元素或维生素中毒。 浓缩料是由预混料中加入蛋白质饲料和矿物质（钙、磷和食盐，如果复合预混料中不含时需要添加），按照一定的比例均匀混合而成。用户只需要加入一定量的能量饲料如玉米、麸皮、稻谷等。浓缩料也不能直接用来喂猪。” 调理品也就是保健品，调理身体的产品“调理食品在英语国家中叫做“Prepared foods”，翻译成中文是“经过洗、切或其他预处理，可直接进行烹饪的预制食品，预加工食品”；在日本通常称为“Process foods”即加工食品。” 超滤是以压力为推动力的膜分离技术之一。“无针注射又称射流注射，是利用动力源产生的瞬时高压使注射器内药物（液体或冻干粉）通过喷嘴形成高速、高压的喷射流（流速一般大于100m/s），从而使药物穿透皮肤外层到皮下、皮内等组织层释放药效的医疗器械装置。1、患者需重新学习胰岛素注射方式；2、无针注射器较有针注射器价格昂贵。”弥雾机（全称：背负式机动弥雾喷粉机 [2] ），低容量喷雾的植保、环卫、防疫用机械。雾粒直径100~150微米。牧原食品股份有限公司始创于1992年，2014年上市。现已形成集饲料加工、生猪育种、生猪养殖、屠宰加工为一体的猪肉产业链。 助力自行车，是一种新型二轮车辆，属于自行车的一种，以电池作为辅助动力来源，安有电机,并具备动力辅助系统，能实现人力骑行和电机助动一体化的新型交通工具。助力自行车的英文有两种通用说法，一种是欧洲版本，称之为pedelec，是pedel（脚踏），electric（电）和cycle（自行车）的结合词；另一种是日本版本，称之为PAC Bike，即power assisted cycle 动力辅助自行车。这是因为助力自行车的核心动力技术主要由德国博世和日本雅马哈所持有。与电动自行车最大的区别是，助力自行车没有控制阀门（普通的加速把手），而是通过力矩传感器和电机控制器协作自动完成助力加速过程，也就是助力自行车通过传感器搜集行驶参数，从而判断骑车人是否需要电机助动以及需要多大助力。扭矩传感器是对各种旋转或非旋转机械部件上对扭转力矩感知的检测。扭矩传感器将扭力的物理变化转换成精确的电信号。 2临空产业泛指以利用机场资源为主要目的，布局于机场周边的多种产业类型。劳务（services），以活劳动形式为他人提供某种特殊使用价值的劳动。这种劳动不是以实物形式，而是以活劳动形式提供某种服务。①生活服务。指直接为人们生活提供的服务。如：饮食、理发、浴池、旅店、影院、剧院等。这种劳务生产和消费同时发生。②生产服务。指为生产和再生产过程提供的服务，它是生产过程在流通过程的继续。如：运输、保管、包装、维修等。公共事务从广义上看，它可以被定义为组织的所有非商业化行为；从狭义上说，公共事务指的是组织涉及的政治活动及其与政府的关系。公共事务，指为了满足社会全体或大多数成员的需要，体现他们的共同利益，让他们共同受益的那类事物。票务，即订票服务。代理商的职责就是把代理厂家的产品卖出去。将机场地面服务的范围限定在航空公司、机场等相关企业为旅客、货主提供的各种服务，详细介绍了如航站楼旅客流程引导服务、通用服务、售票服务、值机与行李服务、安检服务、联检服务等内容。海关职责①对进出口货物、旅客行李和邮递物品、进出境运输工具，实施监督管理，有的称作通关管理，有的称作保障货物、物品合法进出境。②征收关税和其他税费。③查缉走私。关税是指一国海关根据该国法律规定，对通过其关境的进出口货物征收的一种税收。值机是指民航的一种工种。就是为旅客办理乘机手续（换登机牌、收运旅客的托运行李、安排旅客的座位）。联检，指的是由口岸单位对出入境行为实施的联合检查。对人员进出境由边检、海关、卫生检疫、动植物检疫。中华人民共和国出入境边防检查机关（China Immigration Inspection）边防检查（Frontier inspection）是指对出入国境人员的护照、证件、签证、出入境登记卡、出入境人员携带的行李物品和财物，交通运输工具及其运载的货物等的检查和监护签证（Visa），是一国政府机关依照本国法律规定为申请入出或通过本国的外国人颁发的一种许可证明。护照是一个国家的公民出入本国国境和到国外旅行或居留时， 由本国发给的一种证明该公民国籍和身份的合法证件。 护照（Passport）一词在英文中是口岸通行证的意思。也就是说， 护照是公民旅行通过各国国际口岸的一种通行证明。所以，世界上一些国家通常也颁发代替护照的通行证件。公务机是在行政事务和商务活动中用作交通工具的飞机，亦称行政机或商务飞机。由于公务机一般为9吨以下的小型飞机，可乘4—10人，故一般把公务机作为小型喷气式飞机的俗称；但公务活动人数较多需要乘坐大飞机时，或总统，国王，皇室成员专用的要人专机也列入通用航空范围，这时波音747这样的大型飞机也可以列入公务机行列了。置业是房产置业的简称，来源于日本，是对于购置土地、房屋，进行房地产交换，包括房屋买卖，租赁等一系列活动的总称。车辆年检，就是指每个已经取得正式号牌和行驶证的车辆都必须要的一项检测，相当于每年一次按《机动车运行安全技术条件》给车辆做体检。机动车行驶证是准予机动车在我国境内道路上行驶的法定证件。车辆必须经过车辆管理机关检验合格，领取号牌、行驶证，方准行驶。实业，读音是shí yè，汉语词语，意思是农、矿、工、商等经济事业的总称。 “通用设备（general equipment）：国民经济各部门用于制造和维修所需物质技术装备的各种生产设备称为通用设备。生产工艺设备、辅助生产设备、动力能源设备等定为通用设备” “平台供人们施展才能的舞台。为操作方便而设置的工作台。指计算机硬件或软件的操作环境。指进行某项工作所需要的环境或条件。” 3The Nikkei, formally The Nihon Keizai Shimbun, is the flagship publication of Nikkei, Inc. and the world’s largest financial newspaper, with a daily circulation exceeding three million. The Nikkei 225, a stock market index for the Tokyo Stock Exchange, has been calculated by the newspaper since 1950 cnbc Consumer News and Business Channel.The National Broadcasting Company[a] (NBC)Comcast Corporation [formerly registered as Comcast Holdings](note 1) is an American telecommunications conglomerate headquartered in Philadelphia, Pennsylvania.[8] It is the second-largest broadcasting and cable television company in the world by revenue (behind AT&amp;T), the largest pay-TV company, the largest cable TV company and largest home Internet service provider in the United States,康卡斯特（英文：Comcast Corporation；缩写： CMCSASyfy (formerly Sci-Fi Channel, later shortened to Sci Fi; stylized as SYFY) National Public Radio (NPR, stylized in all lowercase, npr) is an American privately and publicly funded non-profit media organization NHK (Japanese: 日本放送協会, Hepburn: Nippon Hōsō Kyōkai), also called the Japan Broadcasting Corporation,The British Broadcasting Corporation (BBC) Mandarin CantoneseDIGITAL MILLENNIUM COPYRIGHT ACT. dmcaThe United States Postal Service usps ESPN [originally an initialism for Entertainment and Sports Programming Network] is an American multinational basic cable sports channel owned by ESPN Inc., owned jointly by The Walt Disney Company (80%) and Hearst Communications (20%). The CW Television Network (commonly referred to as simply The CW)The network’s name is an abbreviation derived from the first letters of the names of its two parent corporations (ViacomCBS and WarnerMedia). MSNBC was established under a strategic partnership between NBC and Microsoft. The American Broadcasting Company (ABC) is an American multinational commercial broadcast television network that is a flagship property of Walt Disney Television CBS was originally an abbreviation for Columbia Broadcasting System, its former legal name that was used from 1928 to 1974. CBS is also sometimes referred to as the Eye Network, in reference to the company’s trademark symbol, The Public Broadcasting Service (PBS) is an American public broadcaster and television program distributor.[6] It is a nonprofit organization and the most prominent provider of educational television programming to public television stations in the United States AT&amp;T Corporation, originally the American Telephone and Telegraph Company The Cable News Network is a multinational news-based pay television channel headquartered in Atlanta, United States. It is owned by CNN Worldwide, a unit of the WarnerMedia News &amp; Sports division of AT&amp;T’s WarnerMedia AMC Entertainment Holdings, Inc. (d/b/a AMC Theatres, originally an abbreviation for American Multi-Cinema; often referred to simply as AMC and known in some countries as AMC Cinemas or AMC Multi-Cinemas) is an American movie theater chain Bell Atlantic, the surviving entity, changed its name to Verizon, a portmanteau of veritas (Latin for “truth”) and horizon. Amazon Web Services, Inc. (AWS) The know your customer or know your client (KYC) guidelines in financial services require that professionals make an effort to verify the identity, suitability, and risks involved with maintaining a business relationship. The procedures fit within the broader scope of a bank’s anti-money laundering (AML) policy. Match Group, Inc. is an American internet and technology company headquartered in Dallas, Texas.[2] It owns and operates the largest global portfolio of popular online dating services including Tinder, Match.com, Meetic, OkCupid, Hinge, PlentyOfFish, Ship, and OurTime totalling over 45 global dating companies Pfizer Inc. /ˈfaɪzər/ FY-zər is an American multinational pharmaceutical and biotechnology corporation headquartered on 42nd Street in Manhattan, New York City. The company was established in 1849 in New York by two German immigrants, Charles Pfizer (1824-1906) and his cousin Charles F. Erhart (1821-1891).辉瑞 Moderna, Inc is an American pharmaceutical and biotechnology company based in Cambridge, Massachusetts. It focuses on vaccine technologies based on messenger RNA Johnson &amp; Johnson is an American multinational corporation founded in 1886 that develops medical devices, pharmaceutical, and consumer packaged goods Ribonucleic acid (RNA)核糖核酸 deoxyribonucleic acid (DNA) AirBed &amp; Breakfast Airbnb.com, BioNTech SE (/ˌbaɪ.ɒnˈtɛk/ BYE-on-TEK or /ˌbiː.ɒnˈtɛk/ BEE-on-TEK;[2] short for Biopharmaceutical New Technologies) is a German biotechnology company CrowdStrike Holdings, Inc. is an American cybersecurity technology company Palo Alto Networks, Inc. (NYSE: PANW) is an American multinational cybersecurity company Lucid Group, Inc. formerly known as Atieva is an American electric vehicle manufacturer AMC Entertainment Holdings, Inc. (d/b/a AMC Theatres, originally an abbreviation for American Multi-Cinema; often referred to simply as AMC and known in some countries as AMC Cinemas or AMC Multi-Cinemas) is an American movie theater chain The Procter &amp; Gamble Company (P&amp;G) is an American multinational consumer goods corporation 1837 by William Procter and James Gamble.[2 2013年1月2日，艾伯维正式从雅培公司拆分，独立在纽约证券交易所挂牌上市 Abbott Laboratories is an American multinational medical devices and health care company with headquarters in Abbott Park雅培 美国富国银行（WELLS FARGO）1852: Henry Wells and William G. Fargo, the two founders of American Express, formed Wells Fargo &amp; Company to provide express and banking services to California. The American Express Company (AmEx) is a multinational financial services corporation美国运通公司（American Express）是国际上最大的旅游服务及综合性财务、金融投资及信息处理的环球公司 雪佛龙股份有限公司（英文：Chevron Corporation，NYSE：CVX）是世界最大的能源公司之一 Snowflake Inc. is a cloud computing-based data warehousing company 威达信集团（Marsh &amp; McLennan Co.）是一家全球性专业服务集团.通过四家市场领先的公司，帮助客户驾驭日益变化和复杂的环境：达信保险（Marsh）为个人和各种规模的商业客户提供保险经纪和创新的风险管理解决方案建议；佳达再保险（Guy Carpenter）开发先进的风险、再保险和资本策略，帮助客户实现盈利，并追求新的机会；美世（Mercer）提供咨询建议和技术驱动的解决方案，帮助机构重新定义工作方式，重塑退休和投资成果，并为不断变化的员工开发健康和福利方案；奥纬咨询（Oliver Wyman）为私营企业和政府客户提供关键的战略、经济和品牌建议。 Moody’s Corporation, often referred to as Moody’s, is an American business and financial services company. It is the holding company for Moody’s Investors Service (MIS), an American credit rating agency, and Moody’s Analytics (MA), an American provider of financial analysis software and services.穆迪公司（Moody’s）成立于1900年，由John Moody创立，位于美国纽约曼哈顿，该公司是著名的债券评级机构 BNY Mellon was formed from the merger of The Bank of New York and the Mellon Financial Corporation in 2007纽约银行有限公司 (The Bank of New York Company, Inc. ，NYSE: BK) 和梅隆金融公司 (Mellon Financial Corporation ，NYSE: MEL) 2007年7月宣布，双方已经完成合并，形成 The Bank of New York Mellon Corporation（纽约银行梅隆公司）.The Kroger Company, or simply Kroger, is an American retail company founded by Bernard Kroger in 1883 in Cincinnati, Ohio. It is the United States’ largest supermarket by revenue,kroger（美国克罗格公司） RH is an upscale American home-furnishings company。Stephen Gordon founded Restoration Hardware in Eureka, California in 1979 while restoring a Victorian home and finding affordable, high-quality hardware and fixtures unavailable. Acura一般指讴歌。讴歌（Acura）是日本本田汽车公司旗下的高端汽车品牌，于1986年在美国创立，其名称Acura源于拉丁语Accuracy（精确） HarmanKardon（哈曼卡顿）是Harman国际工业的一个部门，同时也是具有世界一流音响制造工业的顶级品牌，专门生产制造家用与车用音响，总部位于美国纽约伍德布里。 NFL.com - Official Site of the National Football League COUPONS优惠券COUPONS &amp; PROMO CODES MTV（Music Television ），也称音乐电视网或全球音乐电视台，是全球最大音乐电视网，以创立播放音乐录影带（MV）的单独的电视网； MV是Music Video（音乐录影带）的缩写，就是我们平常看到的音乐电视。 Major League Baseball | MLB.com fdaFood and Drug AdministrationFEMA.gov | Federal Emergency Management AgencyAmerican Psychological Association (APA) CIA Web Site — Central Intelligence AgencyHomeland Security - The Department of Homeland SecurityPeople for the Ethical Treatment of Animals (PETA): The animal rights organization The Food and Agriculture Organization (FAO) is a specialized agency of the United Nations that leads international efforts to defeat hunger. UN General Assembly联合国大会UNESCO is the United Nations Educational, Scientific and Cultural Organization. It seeks to build peace through international cooperation in Education, the Sciences and Culture nasaThe National Aeronautics and Space Administration美国国家航空航天局 Internal Revenue Service国税局 银行零售业务（也叫零售金融业务）一般主要指商业银行以自然人或家庭及小企业为服务对象，提供存款、融资、委托理财、有价证券交易、代理服务、委托咨询等各类金融服务的业务 在计算机管理 – 服务中设置 QPCore 服务的启动类型为“禁用”；运行regedit ,进入HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\QPCore；在QPCore 表项上点击右键，权限，高级；点击禁用继承，并将安全对象转为显式对象；修改SYSTEM权限，由完全控制改为读取；上述方法适用于绝大部分流氓服务。 OBD全称：On Board Diagnostics 翻译成中文是：是一种为汽车故障诊断而延伸出来的一种检测系统。“OBD Ⅱ”是“on Board Diagnostics Ⅱ”，即Ⅱ型车载诊断系统的缩写。为使汽车排放和驱动性相关故障的诊断标准化，从1996年开始，凡是在美国销售的全部新车，其诊断仪器、故障编码和检修步骤必须相似，即符合OBD Ⅱ程序规定。 安装了百度网盘TV版之后，那些存在云端的文件，打开电视就能看到了。目前支持的设备包括智能电视、安卓盒子、智能投影，会员还支持4K高清播放和倍速观看视频。 mostly ‘psa’ mean ‘public service announcement’ but recently i’ve found that it is also another way to say ‘personal self advice’. 增值电信业务是指利用公共网络基础设施提供附加的电信与信息服务业务，有时也称之为增强型业务。其实现的价值使原有基础网路的经济效益或功能价值增高。从业务分类上，它对应于基础电信业务。增值电信业务的主要特征是面向社会提供信息服务。 S2b（Supply chain platform To business）是阿里巴巴曾鸣提出来的未来五年内领先的商业模式。 采用全PC平台软硬件资源的CNC系统以外，其他”数控系统”都是以PC板载运动控制卡，再外部拓展接口的形式存在的CNC系统。数字控制系统简称数控系统，英文名称为Numerical Control System计算机数控（Computerized numerical control，简称CNC） 在控制系统中若给定的输入信号是预先未知且随时间变化的并且系统的输出量随输入量的变化而变化这种系统就称为随动系统 IP核，全称知识产权核（英语：intellectual property core），是在集成电路的可重用设计方法学中，指某一方提供的、形式为逻辑单元、芯片设计的可重用模块。IP核通常已经通过了设计验证，设计人员以IP核为基础进行设计，可以缩短设计所需的周期。 科创板股票后面加U代表上市公司尚未盈利。发行人尚未盈利的，其股票或存托凭证的特别标识为“U”；发行人首次实现盈利的，该特别标识取消。发行人具有表决权差异安排的，其股票或存托凭证的特别标识为“W”；上市后不再具有表决权差异安排的，该特别标识取消。 区域卫生信息平台是连接规划区域内（医疗卫生机构、行政业务管理单位及各相关卫生机构）各机构的基本业务信息系统的数据交换和共享平台 联合运营模式又可根据公司在联合运营业务中承担的角色分为授权运营和代理运营。授权运营即公司授权其他游戏平台运营公司自主研发或有权运营的游戏，代理运营即公司代理运营其他游戏开发商研发的游戏。 商贸流通业属于服务业，指商品流通和为商品流通提供服务的产业 相对于酒店餐饮而言。多为小规模，中低档次水平，菜肴价格实惠，口味丰富的大众化餐厅。 应用安全，顾名思义就是保障应用程序使用过程和结果的安全。简言之，就是针对应用程序或工具在使用过程中可能出现计算、传输数据的泄露和失窃，通过其他安全工具或策略来消除隐患。 车联网的内涵主要指：车辆上的车载设备通过无线通信技术，对信息网络平台中的所有车辆动态信息进行有效利用，在车辆运行中提供不同的功能服务。 电子商务，简称电商，是指在互联网或电子交易方式进行交易活动和相关服务活动. Online-to-offline (O2O) commerce is a business model that draws potential customers from online channels to make purchases in physical stores. When referring to auto parts, OEM refers to the manufacturer of the original equipment, that is, the parts assembled and installed during the construction of a new vehicle. In contrast, aftermarket parts are those made by companies other than the OEM, which might be installed as replacements after the car comes out of the factory. An original equipment manufacturer (OEM) is generally perceived as a company that produces parts and equipment that may be marketed by another manufacturer.It sometimes means the maker of a system that includes other companies’ subsystems, an end-product producer, an automotive part that is manufactured by the same company that produced the original part used in the automobile’s assembly, or a value-added reseller 2019年5月13日，手游公司昆仑万维发布公告称，公司已与美国政府达成协议，出售旗下拥有的全球最大的LGBTQ+社交平台Grindr，剥离期限是2020年6月30日。. 科工Science &amp; Industry 微机电系统（MEMS, Micro-Electro-Mechanical System），也叫做微电子机械系统、微系统、微机械等，指尺寸在几毫米乃至更小的高科技装置。 海工一般指海洋工程装备。主要指海洋资源（特别是海洋油气资源）勘探、开采、加工、储运、管理、后勤服务等方面的大型工程装备和辅助装备 实体企业的发展模式从“大而全”的模式逐步转向为以产业为主体，即企业只关注核心技术产品的研发和生产，而对边缘技术产品的生产只进行质量上的监管，实体企业根据市场需求开发新的产品。 产业服务即打通产业链，流通部门生产和生活服务的部门文化教育部门行政服务 产业工程服务工程项目全产业链服务，包括项目规划选址设计及项目管理，项目总承包及核心区、特殊系统的专业承包等。 “态势感知（Situation Awareness，SA）”严格说并不是一个新名词。早在20世纪80年代，美国空军就提出了态势感知的概念，覆盖感知（感觉）、理解和预测三个层次。态势感知是一种基于环境的、动态、整体地洞悉安全风险的能力，是以安全大数据为基础，从全局视角提升对安全威胁的发现识别、理解分析、响应处置能力的一种方式，最终是为了决策与行动，是安全能力的落地。 经营类型区别：商业企业就是贸易企业，是没有生产加工的企业，经营的内容是单纯的买入卖出商品的活动。 数字营销是使用数字传播渠道来推广产品和服务的实践活动数字营销包含了很多互联网营销（网络营销）中的技术与实践。数字营销的范围要更加广泛，还包括了很多其它不需要互联网的沟通渠道，比如非网络渠道，诸如：电视，广播，短信等，或网络渠道，诸如：社区媒体，电子广告，横幅广告等。 社区媒体（Community Media）也叫参与式媒体，是指以“集体参与”为特征的传统和现代传播活动。 [1]按社区属性分为生活社区、商务社区和校园社区三大类。 园林，指特定培养的自然环境和游憩境域。 媒介代理是指代理人仅有权促成被代理人与第三人订立契约，而无权代理被代理人直接与第三人订立契约的商事代理。在媒介代理中，代理人只起媒介作用，并不能以被代理人的名义直接与第三人订立契约，契约上一般也不显示媒介代理人的身份。 媒介代理即广告公司接受媒介的委托销售版面或时段客户代理即广告公司接受广告主委托，实施市场调研、广告策略拟定、广告创作等全部或部分广告业务。客户代理和媒介代理是国内绝大部分广告公司的生存方式 终端设备指的是用于信道两端收发信号的通信设备。 “特摄”（日文：特撮，Tokusatsu），即“特殊摄影”，是一个日本名词和电影类型，特摄原义—特殊技术 [1] 。为使用特殊效果、银幕合成等特殊技术来制作出现实中应该不存在的或不可能存在的事物。不管是什么格式的字幕，用鼠标直接把字幕文件拖入播放器正在播放的视频即可。 认股权证是由股份有限公司发行的可认购其股票的一种买入期权。它赋予持有者在一定期限内以事先约定的价格购买发行公司一定股份的权利。 高新技术是指那些对一个国家或一个地区的政治、经济和军事等各方面的进步产生深远的影响，并能形成产业的先进技术群。主要特点：高智力、高收益、高战略、高群落、高渗透、高投资、高竞争、高风险。电子与信息生物工程和新医药新材料及应用技术先进制造技术 光电子元器件及其产品 先进制造技术装备机电基础件仪器仪表监控设备及控制系统医疗器械航空航天技术现代农业技术新能源与高效节能技术环境保护技术海洋工程技术核应用技术与上述十大领域配套的相关技术产品 工业发达国家的一般工厂已能稳定掌握3 μm的加工精度（我国为5 μm）。同此，通常称低于此值的加工为普通精度加工，而高于此值的加工则称之为高精度加工。精密、超精密加工技术是提高机电产品性能、质量、工作寿命和可靠性，以及节材节能的重要途径。 追溯调整，指对某项交易或事项变更会计政策时，如同该交易或事项初次发生时就开始采用新的会计政策，并以此对相关项目进行调整。即，应当计算会计政策变更的累积影响数，并相应调整变更年度的期初留存收益以及会计报表的相关项目。 5China Securities Regulatory Commission中国证监会（CSRC） “International Data Corporation，即国际数据公司，全球著名的信息技术、电信行业和消费科技市场咨询、顾问和活动服务专业提供商” 欧美系占据主要市场份额，厂商包括 ABB，西门子等；日系变频器厂商包括三菱电机、安川电机等；本土系变频器厂商包括汇川技术、合康新能和英威腾等。 离岛免税政策是指对乘飞机、火车、轮船离岛（不包括离境）旅客实行限值、限量、限品种免进口税购物，在实施离岛免税政策的免税商店（以下称离岛免税店）内或经批准的网上销售窗口付款，在机场、火车站、港口码头指定区域提货离岛的税收优惠政策。 中国旅游集团中免股份有限公司（原中国国旅股份有限公司）为中国旅游集团有限公司控股上市公司，是聚焦于旅游零售业务的大型股份制企业,以免税为核心的旅游零售业务是集团拳头业务 中国旅游集团有限公司是由2016年港中旅集团与中国国旅集团合并重组而来，旗下汇聚了港中旅、中国国旅、中国中旅、中国中免等品牌。中国国旅，全称为中国国际旅行社总社有限公司（China International Travel Service Limited, Head Office），前身是成立于1954年的中国国际旅行社总社（China International Travel Service Head office）。中国旅游集团旅行服务有限公司于1985年06月18日成立,旅行服务业务是集团的基础业务。公司经营入境游、出境游、国内游、定制游、会奖业务、商旅业务、签证及证件业务等中国旅游集团酒店控股有限公司，简称“中旅酒店”。中国旅游集团投资运营有限公司，简称“中旅投资”。旅游投资和运营业务是集团核心业务香港中國旅行社成立於1928年，是香港第一家由中國人開辦的旅行社，是香港規模最大的旅遊機構之一。 资产管理（asset management），通常是指一种“受人之托，代人理财”的信托业务。从这个意义上看，凡是主要从事此类业务的机构或组织都可以称为资产管理公司（asset management companies），简称AMC。我国金融资产管理公司是经国务院决定设立的收购国有独资商业银行不良贷款，管理和处置因收购国有独资商业银行不良贷款形成的资产的国有独资非银行金融机构。 首旅集团旗下拥有众多的知名企业。北京首旅建国酒店管理有限公司，是我国最著名的酒店管理品牌之一；首旅股份作为首旅集团控股的上市公司，在旅游板块中业绩卓然；首旅集团控股着四家大型全资质旅行社——中国康辉旅行社、神舟国旅集团、中国海洋国际旅行社和中国民族旅行社；首旅集团控股的“首汽集团” 是中国最大的旅游汽车公司之一；首旅集团所属的北京展览馆，是北京最早的大型多功能展览馆。2016年4月1日，如家酒店与首旅酒店（开曼）完成合并，实施私有化，从纳斯达克退市[3]。2017年正式更名为首旅如家 锦江之星旅馆有限公司（以下简称“公司”）成立于1996年，是锦江国际集团核心产业锦江酒店旗下的一个重要的酒店管理公司。 肯德基是世界著名的快餐连锁企业，1987年进入中国。上海肯德基有限公司成立于1989年，是上海锦江国际酒店发展股份有限公司与美国百胜餐饮集团合资经营的西式快餐企业 商务服务（英文：Business Services）行业是指为企业提供服务的行业划分。其分类涵盖了诸多行业如：法律服务、商旅服务、信息咨询、广告服务、公关服务、教育培训、特许经营等二十几个行业。商务服务业(含租赁业)主要包括十个方面:租赁业、企业管理服务、法律服务、咨询与调查、广告业、知识产权服务、职业中介服务、市场管理、旅行社、会展等其他商务服务。 “三次产业的范围：第一产业是指农、林、牧、渔业（不含农、林、牧、渔服务业）。第二产业是指采矿业（不含开采辅助活动），制造业（不含金属制品、机械和设备修理业），电力、热力、燃气及水生产和供应业，建筑业。第三产业即服务业，是指除第一产业、第二产业以外的其他行业。” 集约是相对粗放而言，集约化经营是以效益(社会效益和经济效益)为根本对经营诸要素重组，实现最小的成本获得最大的投资回报。 逆向供应链是指企业为了从客户手中回收使用过的产品所必需的一系列活动。其目的是对回收品进行处置，或者再利用。 货运代理，英文为freight forwarding，“是货主与承运人之间的中间人、经纪人和运输组织者。” 建发股份（股票代码：600153.SH）是以供应链运营和房地产开发为双主业的现代服务型企业。公司业务始于1980年，1998年6月由厦门建发集团有限公司独家发起设立并在上交所挂牌上市。 辽宁成大股份有限公司前身是辽宁省针棉毛织品进出口公司，于1991年3月18日从辽宁省纺织品进出口公司分立。1993年8月28日改制并更名为辽宁成大（集团）股份有限公司。辽宁成大国际贸易有限公司（简称“成大国际”）是辽宁成大股份有限公司的控股子公司，源始于1955年，总部位于中国大连，为中国北方最具规模的纺织服装进出口公司之一。 山东玉龙黄金股份有限公司（原名江苏玉龙钢管股份有限公司）成立于1999年，注册地为济南高新区，为沪市主板上市公司（股票简称“玉龙股份”，股票代码：601028）。公司目前主要从事矿产、有色金属、煤炭、化工等大宗商品贸易。 鹏都农牧（002505.SZ）在内的上百家子公司，确立了以粮食与农资、肉牛、肉羊、生猪、乳业为核心的五大产业板块和食品原料贸易等产业布局，形成了“5+1”产业发展模式。 厦门国贸集团股份有限公司（简称“国贸股份”）是国有控股上市公司，聚焦供应链管理核心主业，供应链管理：公司为合作伙伴提供采购服务、分销服务、价格管理、物流服务、金融服务、市场研发、数智运营、产业升级等八种服务 2019年1月29日，专注于保真名酒销售运营的华致酒行（300755），在深圳证券交易所上市，成为中国首家酒类流通A股上市企业 国电南瑞科技股份有限公司成立于2001年2月28日，由南瑞集团作为主发起人，2003年9月首次向社会公众发行A股股票并于10月16日在上海证券交易所上市，成为国家电网公司系统内的首家上市公司，股票简称“国电南瑞”，证券代码“600406”。电网自动化及工业控制、继电保护及柔性输电、电力自动化信息通信、发电及水利环保四大业务板块国电南瑞是以能源电力智能化为核心的能源互联网整体解决方案提供商，是我国能源电力及工业 控制领域卓越的 IT 企业和电力智能化领军企业 6company“Co” is just an abbreviation for the word “company.” A company is an association of people working in a commercial business.Co. is an abbreviation for company, a catchall phrase for an association of people working together in a commercial or industrial enterprise, such as in a sole proprietorship, limited liability company or corporation. The abbreviation Co., like the word company, does not carry meaning as a specific legal structure on its own. Ltd. for Limited CompaniesA limited company can be abbreviated to Ltd. This structure is used mostly in European countries and Canada. In a limited company, directors and shareholders have limited liability for the company’s debt, as long as the business operates within the law. LLC stands for “limited liability company.” An LLC brings together some features of both business partnerships and corporations, although it is more like a partnership. Owners, also called “members,” are protected from liability, but the business’s earnings and losses pass through to owners, who report them on their personal income taxes. Inc. is the abbreviation for incorporated. An incorporated company, or corporation, is a separate legal entity from the person or people forming it. Directors and officers purchase shares in the business and have responsibility for its operation. Incorporation limits an individual’s liability in case of a lawsuit. sentiment情绪a view of or attitude toward a situation or event; an opinion. AMD Advanced Micro Devices, Inc.EA Electronic Arts Inc.ATVI Activision Blizzard, Inc. Yelp, Inc. develops, hosts, and markets the Yelp.com website and the Yelp mobile app, which publish crowd-sourced reviews about businesses. It also operates Yelp Reservations, a table reservation service. Zillow Group, Inc., or simply Zillow, is an American online real estate marketplace company that was founded in 2006, The Trade Desk Inc is a global technology company that markets a software platform used by digital ad buyers to purchase data-driven digital advertising campaigns across various ad formats and devices.","link":"/0002%20Social%20science/%E7%BB%8F%E6%B5%8E%E7%AE%A1%E7%90%86%E5%AD%A6%20Business%20and%20Economics/company/"},{"title":"english grammar","text":"Nouns Adjectives Pronouns Verbs Adverbs Prepositions Conjunctions Interjections 句型一：主语＋系动词＋表语该句型的谓语动词是系动词（如be或其他系动词）。所谓系动词，又叫联系动词（linking verb），顾名思义，这种动词并不表示具体的动作，而只是起连接主语和后面成分的作用。这种动词后面所接的成分是用来说明主语的特点，表明主语的性质特征的，因此我们称之为主语补足语，或表语（能表示主语特征的成分）。 用作表语的词通常是名词和形容词The music sounds nice. 这音乐很好听。He became a teacher. 他成了一名老师。 四大类单纯表示主语的特征、状态的这样的系动词有feel, look, sound, taste, smell, seem和appear等。请看例句：2 The iron feels hot. 这块铁摸起来很热。3 The rose doesn’t smell much. 这玫瑰花不是很香。 表示主语由一种状态转变为另一种状态的这样的系动词有become, grow, get, turn, fall, go和come等。例如：The leaf will turn yellow in autumn. 叶子秋天就会变黄。The teacher became angry. 老师生气了。 go comego作为系动词时，一般用于贬义，即表示主语是朝着坏的或消极的一面改变。相反，come作为系动词，则是表示褒义的，即表示主语是朝着好的或积极的一面改变。请看例句：go wrong 出错了Hope your dreams will come true. 祝你好梦成真。 表示主语保持某种状态的这样的系动词有continue, remain, stay, keep, hold, rest和prove等。请看例句：He has fallen into the habit of doing morning exercises to stay healthy.不要说stay healthily，因为副词不能作表语。为了保持健康，他已经养成了晨练的习惯。 近似于不及物动词的系动词近似于不及物动词的系动词有sit, act, arrive, blush, marry, die和be born等。有人将其称为“半系动词”，因为它们介于不及物动词和系动词之间。读者对这些系动词只需了解，并且在遇到相关句子时能够正确理解即可。 句型二：主语＋谓语该句型的谓语动词是不及物动词（intransitive verb），所表示的动作没有作用对象，其本身的意思完整，其后不需带宾语。在词典中表示为vi.。 The fire is burning 状语谓语动词的后面虽然不接宾语，但通常会接副词（如hard）或介词短语（如in the west）来说明动作的方式、地点或时间等等。英文中把这种修饰动作的成分称作状语。 They shouted loudly. 这里的副词loudly表示动作的方式，叫做方式状语。 He died at home. 这里的介词短语at home表示动作的地点，叫做地点状语。 He died in 2007. 这里的介词短语in 2007表示动作的时间，叫做时间状语。 区分“主系表”和“主谓状”两种句型请注意比较： He shouted loudly. He looks happy. 在例句1）中，shouted是不及物动词，副词loudly修饰动作shouted，作状语。在例句2）中，looks是系动词，没有具体的动作。形容词happy不是修饰looks的，而是补充说明主语he的特征，作表语。 句型三：主语＋谓语＋宾语该句型的谓语动词是及物动词（transitive verb），这种动词告诉我们由主语发出的动作所作用的对象是什么，这里所作用的对象就是我们通常称之为宾语的，即宾语是主语动作的承受对象，因此这类动词是带有宾语的。英文中的绝大多数动词都是及物动词，在词典中标为vt.。 同时是及物动词与不及物动词 These children are playing football. These children are playing. 在例句1）中，play用作及物动词，其后面带有名词football作为play的作用对象，即宾语。在例句2）中，play用作不及物动词，其后面没有宾语。 英语中大多数动词都像play一样，既可以用作及物动词，又可以用作不及物动词，但意思和用法都不一样。 句型四：主语＋谓语＋间接宾语＋直接宾语该句型的谓语动词是双宾动词（dative verb），这种动词的后面所接成分有“人”又有“物”。一般来讲，这里的“人”表示动作的接受者，称作间接宾语（indirect object）。“物”表示动作作用的对象，是动作的承受者，称作直接宾语（direct object）。间接宾语和直接宾语合起来叫做双宾语。 句型五：主语＋谓语＋宾语＋宾语补足语该句型中的谓语动词是宾补动词（factitive verb），这种动词的后面接宾语，而此宾语的后面又接补充说明宾语的补足语（objectcomplement）。宾语和宾语补足语合起来叫做复合宾语。 区分双宾语和复合宾语“主语＋谓语＋双宾语”句型和“主语＋谓语＋复合宾语”句型 在宾语的后面加上be动词，若能构成一个语义通顺的句子，则是补足语。 因为宾语与宾语补足语的语义关系就相当于主语与主语补足语的关系，即类似一个“主系表”结构，所以，在宾语的后面添上一个系动词be，自然就应该能构成一个逻辑语义通顺的句子。 而间接宾语与直接宾语之间就没有这样的语义关系，所以，添上be之后，自然就不能构成一个语义通顺的句子。 I made John our chairman. I made John a cake. 在例句1）中，在宾语John的后面添上一个is，即John is our chairman.这说得通，所以例句1）中的our chairman是宾语补足语。相反，在例句2）中，在宾语John的后面添上一个is，即John is a cake.*（约翰是一块蛋糕。）这显然讲不通，所以例句2）是一个双宾语结构，a cake是一个直接宾语。 英语句子的主要成分英语句子的基本成分与一般句子结构类似，以下是英语句子的主要成分： 主语（Subject）：主语是句子中执行动作或被描述的主要对象或主体。主语通常是一个名词、代词或名词短语，它执行动词所表示的动作或状态。例如：She (她) is reading a book (正在读一本书)。 谓语（Predicate）：谓语是句子中描述主语动作、状态或属性的部分。它通常由一个动词或动词短语构成。例如：is reading (正在读)。 宾语（Object）：宾语是动作的接受者或受影响的对象，它通常是一个名词、代词或名词短语。有时也有间接宾语，它是谓语动作的间接受益者。例如：a book (一本书)。 补语（Complement）：补语是用来补充或描述主语或宾语的成分，它通常出现在动词之后，有时也可以出现在名词之后。例如：happy (高兴)。 状语（Adverbial）：状语是用来修饰动词、形容词、副词或整个句子的成分，它提供关于时间、地点、方式、原因等方面的信息。例如：yesterday (昨天)、quickly (快速地)、because of the rain (因为下雨)。 定语（Modifier）：定语是用来修饰名词或代词的成分，它提供关于名词或代词的额外信息。定语可以是形容词、限定性从句、不定式短语等。例如：the red car (红色的汽车)、the man who is standing (站着的那个人)。 连词（Conjunction）：连词是用来连接句子中不同部分的词语，使句子更加连贯。常见的连词包括”and”（和）、”but”（但是）、”because”（因为）等。 标点符号：标点符号如句号、问号、感叹号、逗号等在句子中起到分隔和标记的作用，帮助读者理解句子的结构和含义。 这些成分构成了英语句子的基本结构，根据不同的句子类型和句子复杂程度，这些成分可以组合和变化。 补语补语是一种用来补充或描述主语或宾语的成分，它可以分为以下几种分类，每种分类都有不同的类型和例子： 表语（Predicative Complement）： 表语是一种补语，通常出现在系动词（linking verb）后面，用来描述主语的状态、性质或身份。 例如： She is happy.（她很开心。） The flowers smell lovely.（这些花闻起来很可爱。） He became a doctor.（他成为了一名医生。） 宾补（Object Complement）： 宾补是一种补语，通常出现在及物动词后，用来进一步描述宾语。 例如： They painted the wall white.（他们把墙刷成了白色。） I find her behavior rude.（我认为她的行为粗鲁。） He considers the book his favorite.（他把这本书视为自己的最爱。） 主补（Subject Complement）： 主补是一种补语，出现在系动词后，描述主语的性质或状态。 例如： She seems tired.（她看起来很疲倦。） The cake smells delicious.（这个蛋糕闻起来很美味。） He is a good friend.（他是个好朋友。） 地点补语（Locative Complement）： 地点补语用来指示动作发生的地点或位置。 例如： They found the treasure buried underground.（他们找到了埋在地下的宝藏。） The cat sat on the roof.（猫坐在屋顶上。） 时间补语（Temporal Complement）： 时间补语用来指示动作发生的时间或时期。 例如： She will meet you tomorrow.（她明天会见你。） They finished the project in a week.（他们在一周内完成了这个项目。） 这些是补语的一些常见分类，每种类型都有不同的例子，帮助描述句子中的不同方面。注意，具体的例子可能会因句子结构和动词选择的不同而有所变化。 从句一个句子除了有主语和谓语之外，其他可能包含的成分还有宾语、表语、定语、状语、补语和同位语等。在这些成分中，谓语较为特殊，只能由动词来充当，而其他成分则可以由词、短语或者句子来充当。 定语定语是用来修饰、限定、说明名词或代词的品质与特征的。 定语的位置一般有两种：用在所修饰词之前的叫前置定语，用在所修饰词之后的叫后置定语定语和中心语之间是修饰和被修饰、限制和被限制的关系。 形容词遵循的词序为：限 观 形 龄 颜 国 材 用指：限定词（一般指数量） -&gt; 外观（美丽等） -&gt; 形状（大小，高矮，肥瘦） -&gt; 年龄 -&gt; 颜色 -&gt; 国籍 -&gt; 材料 -&gt; 用途。 an interesting little red French oil painting 定语是一种用来修饰名词或代词的成分，它提供了有关名词或代词的额外信息。定语可以根据其性质和功能进行分类，以下是一些定语的常见分类和相应的例子： 形容词性定语（Adjective Modifiers）： 形容词性定语是形容词或形容词短语，用来描述名词的性质或特征。 例如： A beautiful sunset (一个美丽的日落) The blue sky (蓝色的天空) An expensive car (一辆昂贵的汽车) 限定性定语从句（Restrictive Relative Clauses）： 限定性定语从句是由关系词引导的从句，用来限定或修饰名词，它通常不带逗号。 例如： The book that I bought is interesting. (我买的那本书很有趣。) The person who called you is my friend. (给你打电话的那个人是我的朋友。) 非限定性定语从句（Non-Restrictive Relative Clauses）： 非限定性定语从句也是由关系词引导的从句，但它用来提供附加信息，通常用逗号将其与主句分开。 例如： My sister, who is a doctor, lives in New York. (我妹妹，她是一名医生，住在纽约。) The Eiffel Tower, which is in Paris, is famous. (埃菲尔铁塔，它位于巴黎，很有名。) 不定式定语（Infinitive Modifiers）： 不定式定语是由不定式短语（to + 动词原形）构成的，用来修饰名词或代词，通常表达目的、目标或用途。 例如： I need a pen to write a letter. (我需要一支笔来写信。) She has a plan to start a business. (她有一个开办业务的计划。) 名词性定语（Noun Modifiers）： 名词性定语是一个名词或名词短语，用来修饰另一个名词，通常表示名词之间的关系。 例如： The book cover (书的封面) A student union (学生会) The car keys (汽车钥匙) 这些是一些常见的定语分类和相应的例子。定语在句子中起到非常重要的作用，帮助我们更清晰地理解名词或代词所表示的事物或概念。 词语词语在语法和语义上可以分为多种类别，以下是一些常见的词语类别以及相应的例子： 名词（Noun）：名词是用来表示人、事物、地点或概念的词语。 例如：dog (狗)、book (书)、city (城市)、love (爱) 动词（Verb）：动词是表示动作、状态或事件的词语。 例如：run (跑)、eat (吃)、think (思考)、sing (唱) 形容词（Adjective）：形容词用来描述名词的性质或特征。 例如：happy (快乐的)、big (大的)、beautiful (美丽的)、red (红色的) 副词（Adverb）：副词用来修饰动词、形容词、副词或整个句子，提供关于时间、地点、方式、程度等信息。 例如：quickly (迅速地)、very (非常)、here (这里)、now (现在) 代词（Pronoun）：代词用来替代名词，以避免重复使用名词。 例如：he (他)、she (她)、it (它)、they (他们) 介词（Preposition）：介词用来表示名词与其他词语之间的关系，通常表达时间、地点、方向等。 例如：in (在)、on (在…上)、under (在…下面)、between (在…之间) 连词（Conjunction）：连词用来连接词语、短语或句子，使句子更加连贯。 例如：and (和)、but (但是)、because (因为)、or (或者) 感叹词（Interjection）：感叹词用来表示情感或强调，通常独立出现并用感叹号标记。 例如：Oh! (哦)、Wow! (哇)、Alas! (唉) 冠词（Article）：冠词是一种特殊的限定词，包括定冠词 “the”（定冠词）和不定冠词 “a” 或 “an”（不定冠词），用来限定名词的特定性或泛指性。 例如：the (这)、a (一个)、an (一个) 助动词（Auxiliary Verb）：助动词用来辅助主要动词，例如表示时态、语态、情态等。 例如：be (是)、have (有)、can (能)、will (将) 这些是一些常见的词语类别，不同类别的词语在句子中扮演不同的角色和功能，帮助构建和传达语言信息。请注意，有些词语可能属于多个类别，具体分类可能根据语法规则和上下文而有所不同。 限定词限定词是在名词词组中对名词中心词起特指、类指以及表示确定数量和非确定数量等限定作用的词类。是特指还是类指（即泛指一类人或物），是有确定的数量还是没有确定的数量。能在名词词组中表示这种所指意义的词类就是限定词。 限定词修饰某个名词，以限定名词所指的范围，对名词起泛指或特指、定量或不定量等限定修饰作用。 限定词的选择决定于随后的名词的类别，是单数名词、复数名词，还是不可数名词。 限定词（Determiners）是英语语法中的一类词汇，通常出现在名词前，用来限定名词或指示名词的数量、特定性、所属关系等。限定词在句子中的作用是帮助我们更清晰地理解名词的含义，而且它们与名词的搭配方式也常常受到语法规则的约束。 以下是一些常见的限定词以及它们的作用： 冠词（Articles）：冠词包括”the”（定冠词）和”a”或”an”（不定冠词）。它们用来指示名词的特定性或泛指性。 例如：The cat (这只猫)、A book (一本书)、An apple (一个苹果) 指示代词（Demonstratives）：指示代词包括”this”（这）, “that”（那）, “these”（这些）和”those”（那些），用来指示名词的位置或特定对象。 例如：This car (这辆车)、Those people (那些人) 数量词（Quantifiers）：数量词用来表示名词的数量或程度，包括”some”（一些）, “many”（许多）, “few”（少数）, “several”（若干）等。 例如：Many students (许多学生)、Few books (少数书籍)、Some water (一些水) 所有格（Possessives）：所有格词表示名词所属的关系，包括名词的所有者，常见的有”my”（我的）, “his”（他的）, “their”（他们的）等。 例如：My car (我的车)、Her house (她的房子)、Their dog (他们的狗) 疑问词（Interrogatives）：疑问词用于构成疑问句，包括”who”（谁）, “which”（哪个）, “what”（什么）等。 例如：Who is coming? (谁来了？)、Which book do you want? (你想要哪本书？) 不定代词（Indefinites）：不定代词用于泛指或表示不确定性，包括”some”（一些）, “any”（任何），”none”（没有）等。 例如：Some people (一些人)、Any information (任何信息)、None of them (他们中没有一个) 限定词是构建句子时非常重要的一部分，它们有助于明确名词的含义、数量、所属关系等，从而使句子更加清晰和具体。 冠词（ARTICLE）是最典型的限定词冠词的表意功能可以归纳为二种，即类指（GENERIC REFERENCE）和特指（SPECIFIC REFERENCE）。 所谓泛指，也叫类指，顾名思义，是表示一类事物，或某类事物的总称。所谓特指，是表示某类事物中的具体的某一个或某一些。 冠词（Article）是一种虚词，并非只存在于英语中，而是普遍存在于印欧语系和闪含语系中。冠词在句子中一般不重读，本身不能独立使用，只能与名词放在一起（一般用于名词之前 ）帮助说明名词所指的人或事物。 冠词的类型包括不定冠词（Indefinite Article）、定冠词（Definite Article）、否定冠词（Negative Article）、部分冠词（Partitive Article）和零冠词（Zero Article，即不用冠词）。 不定冠词表示泛指、类指a、an，仅用在单数可数名词前来表示“一”的意义，但不强调数目概念，只表示名词为不特定者。 定冠词表示特指、专指定冠词the，表示名词的特定者，表示“这”·“那”·“这些”·“那些”，用在可数名词单数、复数，不可数名词前均可 冠词the表特指，就是指根据说话者和听话者共有的知识，或根据上下文，可以识别的独特的某物。换句话说，说话者用the是想要听话者找到双方心中都知道的所指， 情景／文化特指（situational/cultural reference）定冠词the用于这一类特指，必须依赖于说话者和听话者双方共有的知识。因为既然是要特指某事物，那么就应该是说话者与听话者双方都知道的，或者说是说话者认为听话者应该知道的。换句话说，我们使用定冠词the是说明“我——作者或说话者（writer/speaker）可以断定你——读者或听者（reader/listener）知道我在指谁或在指什么”。 一般常识（general knowledge）／较大情景the moon 月亮 具体知识（specific knowledge）／局部情景（local use） Have you visited the castle? 在某一城镇就只有一个城堡。 你去看过那个城堡了吗？ 即时情景用法（immediate situation）在说话的时刻，所指为双方唯一看到或听到的。此时，定冠词the的所指是从语言以外的实境（the extralinguistic situation）中推知的。The roses are very beautiful 上下文共指（textual co-reference）上下文共指，就是指听话者或读者可以根据上下文找到所指。它可分为前指（anaphoric reference）和后指（cataphoric reference）。前指又可分为直接前指（direct anaphora）和间接前指（indirect anaphora）。 直接前指前面话语中已经提供的信息使后文中的某个名词短语特指某个事物，这即是前指。直接前指是指前面提到的某个事物，在后文中再次提到，这样前后两个名词短语是一种共指关系（co-reference），指代同一个事物。由于第一次提到的物体通常是不定指的，所以常用不定冠词a/an来限定。可是一旦那个物体在话语中已经谈到过，就可以把它看作“从上文中已得知的东西”，此后再提到它时就要用定冠词。这就是传统语法书上所说的，“第一次提到的单数可数名词前面用不定冠词a或an，这一名词再次出现时则要用定冠词the”。请看下面的例句：1 I had a banana and an apple. I ate the banana and gave the apple to Clint 间接前指／话题与定冠词the间接前指，表示所指的对象间接地成为听话者知识的一部分。这种知识不是通过上面讨论的那样的直接谈及而获得，而是从已经谈到的事物中推断得到的。此时，在上文中往往会提到的一个与下文有紧密联系的概念或谈论的话题，然后下文围绕这个话题展开讨论。比如：9 John bought a bicycle, but when he rode it one of the wheels came off 后指／结构特指后指，也叫结构特指（structural reference），往往出现在带有后置定语的名词短语中。一般来说，被某个后置定语所修饰的名词的前面要用定冠词the。比如：14 The brick house on the corner is mine. 零冠词表示泛指人或事物、类指复数可数名词和不可数名词前不用冠词，也表泛指，有些语法专家称之为“零冠词”。 副词副词（Adverbs）是英语中的一类词汇，用来修饰动词、形容词、副词或整个句子，以提供更多信息，如时间、地点、方式、程度、原因等。副词在句子中的作用是丰富描述，并帮助读者或听者更好地理解动作、状态或事件。 以下是一些常见副词的用法和例子： 时间副词（Adverbs of Time）：这些副词用来描述动作发生的时间。 例如：now (现在)、today (今天)、soon (很快)、yesterday (昨天) 地点副词（Adverbs of Place）：这些副词用来描述动作发生的地点或位置。 例如：here (这里)、there (那里)、everywhere (到处)、below (在下面) 方式副词（Adverbs of Manner）：这些副词用来描述动作的方式或方式。 例如：quickly (迅速地)、carefully (仔细地)、loudly (大声地)、happily (高兴地) 程度副词（Adverbs of Degree）：这些副词用来表示动作或状态的程度。 例如：very (非常)、extremely (极其)、quite (相当)、too (太) 频率副词（Adverbs of Frequency）：这些副词用来描述动作发生的频率。 例如：always (总是)、often (经常)、rarely (很少)、never (从不) 原因副词（Adverbs of Reason）：这些副词用来表示原因或解释为什么发生某事。 例如：because (因为)、therefore (因此)、so (所以)、thus (因此) 连接副词（Conjunctive Adverbs）：这些副词用来连接句子或句子成分，通常出现在句子中，前后需要逗号分隔。 例如：however (然而)、therefore (因此)、meanwhile (与此同时)、consequently (因此) 副词的使用可以丰富语言表达，使句子更加准确和生动。它们可以用来回答各种问题，例如何时、在哪里、如何、为什么等等。","link":"/0002%20Social%20science/%E8%AF%AD%E8%A8%80%E5%AD%A6%20Linguistics%20and%20languages/english%20grammar/"},{"title":"","text":"english英文论文中“such as, for example, e.g., i.e., etc., et al. ”的用法分析在英文论文的编辑加工中,常会遇到such as, for example, e. g. , i. e. , etc. 和et al. 的错误及混淆使用。这里,举例分析这几个词的意义,并阐述其正确用法。 such as。常列举同类人或事物中的几个例子。 其典型的表示式为a plural + such as + single instance( s) of the group to which the plural refers。 正确使用的是: The Arts Faculty deals only with humanities subjects such as history and literature. 混淆使用的是: The Science Faculty deals only with the measurable such as physics and seismology. 论文中常出现such as与and so on或etc. 连用, 这是不正确的。 ① 如 It is noted that the features such as clean cut ratio denoted by Rc , die roll height denoted by Hdr and die roll width denoted by Wdr , and so on (有的出现etc.) , are better than the ones with the other models. 应为 It is noted that the features, such as clean cut ratio denoted by Rc , die roll height denoted by Hdr and die roll width denoted by Wdr , are better than the ones with the other models. 当使用such as时,读者已理解后面接着的会是一些不完整的列举,因此不需加上and so on或 etc. 等。 ② 因为such as是对前面的复数名词部分起列举作用,若全部列举出,要改用namely,意思为“即”。文章中出现的He knows four languages, such as Chinese, English, Japanese and German,应将such as改成namely(或i. e. )及后面加逗号, 即He knows four languages, namely, Chinese, English, Japanese and German. ③ 用such as来形容复数名词( the plural)可以放在such与as中间,一般插在被列举事物与前面的名词之间。 for example。用来举例说明,由它引出介绍普遍概念的例子,使用范围要比such as自由。可以出现在句首、句末或有时可作为独立语,插在句中,不影响句子其他部分的语法关系。 例如, Cryptography operations, for example, decryption or signing, in a given period only involve the corresponding temporary secret key without further access to the helper. 同样for example ( e. g. )表示泛泛地举几个例子,并没有囊括所有的实例,其中就已经包含“等等”,如果再加etc. 或and so on,就画蛇添足了。 如论文中出现的这句话是不当的:Writing instructors focus on a number of complex skills that require extensive practice (e. g. , organization, clear expression, logical thinking, etc. 正确的为e. g. , organization, clear expression, and logical thinking.) e. g.。是拉丁文exempli gratia的缩写,意思是“举个例子,比如”,等同于“for example”,目的是用例子来说明前面的观点,用法与for example相同。 i. e.。源于拉丁语,是id est的简略形式。其意思就是“那就是说,换句话说”,等同于“that is, in other words”和“namely”,目的是用来进一步解释前面所说的观点。 正确的用法是Use a comma to enclose ( i. e. , both before and after) the year in a month day year sequence. 而文章中出现的这句The evaluation noted that the employee had frequently exhibited irresponsible behavior ( i. e. , coming to work late, failing to complete projects) ,应该用“e. g. ”而不是用“i. e. ”,因为插入句是对“irresponsible behavior”的列举补充。 etc.。是et cetera的缩写,意思是“等等”,相当于“and so on”。可用来列举事物,若要列举人,则需用et al. 或用and others。 et al.。是拉丁文简写。其一为et alibi (以及其他地方) ,相当于and elsewhere;其二为et alii (以及其他人) ,相当于and others。 organization组织 institution机构organization组织An organization is an assemblage of people who unite to undertake a common goal, led by a person or a group thereon. institution机构An institution is described a form of organization, which is set up for an educational, religious, social or professional cause.","link":"/0002%20Social%20science/%E8%AF%AD%E8%A8%80%E5%AD%A6%20Linguistics%20and%20languages/english%20problems/"},{"title":"finance wiki","text":"economicsEMPLOYMENT COST INDEXThe Employment Cost Index (ECI) is a quarterly economic series published by the Bureau of Labor Statistics that details the growth of total employee compensation.补偿，报酬It tracks movement in the cost of labor, as measured by wages and benefits, at all levels of a company. JOBLESS RATE JULY PAYROLLS REVISED TO 936K薪资名册In treasury management, a payroll is the list of employees of some company that is entitled to receive payments as well as other work benefits and the amounts that each should receive NO-FARM PAYROLLS Month On Month (or MoM) means comparing data from one month to the previousmonth. pmi PMI data are presented in the form of a diffusion index, which is calculated as follows { PMI=(P_{1}*1)+(P_{2}*0.5)}{ PMI=(P_{1}*1)+(P_{2}*0.5)}where: P1 = Percentage number of answers that reported an improvement.P2 = Percentage number of answers that reported no change.if 100% of the panel reported an improvement, the index would be 100.0. If 100% reported a deterioration, the index would be zero. If 100% of the panel saw no change, the index would be 50.0 (P2 * 0.5).an index reading of 50.0 means that the variable is unchanged, a number over 50.0 indicates an improvement, while anything below 50.0 suggests a decline. Markit Economics’ PMI Information Handling Services IHS “was founded in 1959 as Information Handling Services to provide informationMarkit was founded in 2003 as Mark-it Partners, a financial data provider for daily credit default swap pricing In 2016, Englewood, Colorado, US–based IHS and London-based Markit merged. 基金ETF交易型开放式指数基金，通常又被称为交易所交易基金（Exchange Traded Fund，简称ETF），是一种在交易所上市交易的、基金份额可变的开放式基金。同时存在二级市场交易和申购赎回机制An exchange-traded fund (ETF) is a type of investment fund and exchange-traded product, i.e. they are traded on stock exchanges.Most ETFs are index funds that attempt to replicate the performance of a specific indexETF管理的资产是一揽子股票组合，这一组合中的股票种类与某一特定指数，如上证50指数，包涵的成份股票相同，每只股票的数量与该指数的成份股构成比例一致，ETF交易价格取决于它拥有的一揽子股票的价值，即“单位基金资产净值”。ETF的投资组合通常完全复制标的指数，其净值表现与盯住的特定指数高度一致。 上证50ETF（510050），主要投资于上证50指数的成份股、备选成份股。少量投资于新股、债券及中国证监会允许的其他金融工具的成分股。 互惠基金（mutual Funds），又称共同基金，是将众多投资者的余额集中一起，等于众多投资者共同聘请一个基金公司的专业投资经理，利用其专业的知识，分散投资于各种不同的投资类别上，使这一小额投资亦能在互惠基础下享受低风险及较高的回报机会 公司型基金又叫做共同基金，指基金本身为一家股份有限公司，公司通过发行股票或受益凭证的方式来筹集资金。投资者购买了该家公司的股票，就成为该公司的股东，凭股票领取股息或红利、分享投资所获得的收益。 根据投资对象的不同，可分为货币基金、债券基金、混合型基金、股票基金四大类。 open-End Fund开放性基金，close-end fund封闭式基金。根据基金单位是否可增加或赎回，可分为开放式基金和封闭式基金。开放式基金不上市交易（这要看情况），通过银行、券商、基金公司申购和赎回，基金规模不固定；封闭式基金有固定的存续期，一般在证券交易场所上市交易，投资者通过二级市场买卖基金单位。开放性基金和封闭性基金的区别： 1、开放式基金指投资人直接向基金公司或其代理机搆购买及卖出基金，以基金净值作为买入卖出价格，开放式基金的规模会随著投资人的买入卖出而增加。 2、封闭式基金指一个基金在一开始募集完成之後，就不再由投资人直接或间接向基金公司购买，而是在股票市场上向其他拥有基金的购买人购买，因此基金的规模不会因为买卖而增加或减少，此外，由於市场上的预期涨跌心理，实际买卖的价格可能会与基金净值有一段差距。 dollarYENEUROPOUND futuresIn finance, a futures contract (sometimes called futures) is a standardized legal agreement to buy or sell something at a predetermined price at a specified time in the future, between parties not known to each other E-mini S&amp;P, often abbreviated to “E-mini” (despite the existence of many other E-mini contracts) and designated by the commodity ticker symbol ES, is a stock market index futures contract traded on the Chicago Mercantile Exchange’s Globex electronic trading platform. The notional value of one contract is 50 times the value of the S&amp;P 500 stock index; thus, for example, on June 20, 2018, the S&amp;P 500 cash index closed at 2,767.32, making each E-mini contract a $138,366 bet. FUTURE CHANGEFAIR VALUEIMPLIED OPEN the fair value is the theoretical calculation of how a futures stock index contract should be valued considering the current index value, dividends paid on stocks in the index, days to expiration of the futures contract, and current interest rates.The fair value always refers to the front-month futures contract as opposed to a further out month contract. Front month, also called “near” or “spot” month, refers to the nearest expiration date for a futures or options contract. GOLDGold exchange-traded products may include exchange-traded funds (ETFs), exchange-traded notes (ETNs), and closed-end funds (CEFs), which are traded like shares on the major stock exchanges.ETN（Exchange-Traded Notes）即交易所交易债券或交易所交易票据，一般为投资银行发行的债券类产品。最早由巴克莱银行（Barclays Bank PLC）于 2006 年发行。这种债券之所以不同于其它形式的债券，主要是来自于它的报酬，ETN 的报 酬是基于特定市场指数的报酬，减去必要费用，并不支付固定利息，且不保障本 金。因此，ETN 可以理解为债券与 ETF 部分特征的结合，是一种结构化产品，在交易所交易，利息通常只有在卖出时才会支付 SILVERCOPPER COMEXThe New York Mercantile Exchange (NYMEX) is a commodity futures exchange owned and operated by CME Group of Chicago.CME Group Inc. (Chicago Mercantile Exchange, Chicago Board of Trade, New York Mercantile Exchange, The Commodity Exchange) is an American global markets company WTIWTI即West Texas Intermediate（Crude Oil），美国西德克萨斯轻质中间基原油，是北美地区较为通用的一类原油。由于美国在全球的军事以及经济能力，WTI原油已经成为全球原油定价的基准。而为统一国内原油定价体系，美国以NYMEX（纽约商业交易所）上市的WTI原油合约为定价基准。原油连同美元以及粮食是美国影响和控制着全球经济以及金融市场的三大主要手段。中间基原油，性质介于石蜡基原油和环烷基原油之间的一类原油CRUDE 粗略的 原油BRENTThe most important type of crude oil used in Europe is Brent Crude, named after the North Sea oilfield where it is extracted.NAT.GASNATURAL.GAS The Organization of the Petroleum Exporting Countries (OPEC, /ˈoʊpɛk/ OH-pek) is an intergovernmental organization or cartel of 13 countries.The Organization of the Petroleum Exporting Countries (OPEC, /ˈoʊpɛk/ OH-pek) is an intergovernmental organization or cartel of 13 countries. Founded on 14 September 1960 in Baghdad by the first five members (Iran, Iraq, Kuwait, Saudi Arabia, and Venezuela), it has since 1965 been headquartered in Vienna, Austria, although Austria is not an OPEC member state. As of September 2018, the 13 member countries accounted for an estimated 44 percent of global oil production and 81.5 percent of the world’s “proven” oil reserves, giving OPEC a major influence on global oil prices In addition to formal OPEC members, 10 additional oil exporting countries, led by Russia, form the OPEC+ cartel, which since 2016 cooperate in fixing the global crude oil prices by agreeing to production quotas that keep global production below demand/consumption. What are Forex Futures?Forex futures are exchange-traded currency derivative contracts obligating the buyer and seller to transact at a set price and predetermined time. RENAISSANCE IPO ETFThe Renaissance IPO ETF enables investors to own a basket of the largest most liquid U.S.-listed newly public companies in one security, reducing the risk of single stock ownership. The Renaissance is a term used to describe a period in European history marking the transition from the Middle Ages to modernity and covering the 15th and 16th centuries. It occurred after the Crisis of the Late Middle Ages and was associated with great social change. Renaissance Capital is an emerging and frontier markets focused investment bank founded in 1995 in Russia. Stock Exchange IndexS&amp;P 500In 1860, Henry Varnum Poor formed Poor’s Publishing, which published an investor’s guide to the railroad industryThe Standard and Poor’s 500, or simply the S&amp;P 500, is a stock market index tracking the performance of 500 large companies listed on stock exchanges in the United States. A common version of capitalization weighting is the free-float weighting. With this method a float factor is assigned to each stock to account for the proportion of outstanding shares that are held by the general public, as opposed to “closely held” shares owned by the government, royalty, or company insiders (see float). NASDAQ compositeThe Nasdaq Composite is a stock market index that includes almost all stocks listed on the Nasdaq stock exchange. Along with the Dow Jones Industrial Average and S&amp;P 500, it is one of the three most-followed stock market indices in the United States.The Nasdaq-100, which includes 100 of the largest non-financial companies in the Nasdaq Composite, accounts for over 90% of the movement of the Nasdaq Composite. DOW JONES industrialsThe Dow Jones Industrial Average, Dow Jones, or simply the Dow, is a price-weighted measurement stock market index of 30 prominent 杰出companies listed on stock exchanges in the United States.An index may also be classified according to the method used to determine its price. In a price-weighted index such as the Dow Jones Industrial Average, the price of each component stock is the only consideration when determining the value of the index. GAINERSLAGGARDSa person who makes slow progress and falls behind others. UK FTSEThe Financial Times Stock Exchange 100 Index, also called the FTSE 100 Index, FTSE 100, FTSE, or, informally, the “Footsie”, is a share index of the 100 companies listed on the London Stock Exchange with the highest market capitalisation. GERMAN DAX PERFORMANCEDeutscher AktienindexThe DAX is a stock market index consisting of the 30 major German blue chip companies trading on the Frankfurt Stock Exchange. FRANCE CACCotation Assistée en ContinuThe CAC 40 is a benchmark French stock market index. The index represents a capitalization-weighted measure of the 40 most significant stocks among the 100 largest market caps on the Euronext Paris It is a price return index.价格回报是对一项投资的资本收益的确定，即市场价值上升引起的升值。价格回报不包括利息、股息和投资可能产生的其他收益。 total return index除了反映股价波动外，还假定所有股票的现金分红用于再投资产生收益，因此指数需在样本股除息日前按照除息参考价予以修正。 股票发行企业在发放股息或红利时，需要事先进行核对股东名册、召开股东会议等多种准备工作，于是规定以某日在册股东名单为准，并公告在此日以后一段时期为停止股东过户期。停止过户期内，股息红利仍发入给登记在册的旧股东，新买进股票的持有者因没有过户就不能享有领取股息红利的权利，这就称为除息。同时股票买卖价格就应扣除这段时期内应发放股息红利数，这就是除息交易。 标的证券是投资者融入资金可买入的证券和证券公司可对投资者融出的证券。 金融工具Financial instruments are assets that can be traded, or they can also be seen as packages of capital that may be traded. NIKKEIThe Nikkei 225, or the Nikkei Stock Average, more commonly called the Nikkei or the Nikkei index, is a stock market index for the Tokyo Stock Exchange. It has been calculated daily by the Nihon Keizai Shimbun日本经济新闻 newspaper since 1950 HANG SENG SHANGHAI NYSE Arca, previously known as ArcaEx, an abbreviation of Archipelago Exchange, is an exchange on which both stocks and options are traded. It was owned by Intercontinental Exchange. It merged with the New York Stock Exchange in 2006 and now operates as a subsidiary of the NYSE Group, Inc. NYSE Arca is an electronic securities exchange in the U.S. on which exchange-traded products (ETPs) and equities are listed. The exchange specializes in ETP listings, which include exchange-traded funds (ETFs), exchange-traded notes (ETNs), and exchange-traded vehicles (ETVs). Exchange traded products (ETPs) are types of securities that track underlying securities, an index, or other financial instruments. ETPs trade on exchanges similar to stocks meaning their prices can fluctuate from day-to-day and intraday. However, the prices of ETPs are derived from the underlying investments that they track. FTSE 100 IndexFTSE Russell is a subsidiary of London Stock Exchange Group (LSEG) that produces, maintains, licenses, and markets stock market indices.[1] The division is notable for FTSE 100 Index, Russell 2000 Index, among other indices. The Financial Times Stock Exchange 100 Index, also called the FTSE 100 Index, FTSE 100, FTSE, or, informally, the “Footsie” /ˈfʊtsi/, is a share index of the 100 companies listed on the London Stock Exchange with (in principle) the highest market capitalisation. On 26 June 2014, the LSE announced it had agreed to buy Frank Russell Co., making it one of the largest providers of index services Russell Investments is an investment firm headquartered in Seattle, Washington. MSCIMSCI Inc. (formerly Morgan Stanley Capital International and MSCI Barra), is an American finance company headquartered in New York City2017年6月20日，MSCI（明晟）宣布，将中国A股纳入MSCI新兴市场指数 EAFE IndexThe EAFE Index was created to reflect the performance of mid- and large-cap stocks across 21 developed market countries—the Europe, Australasia, and the Far East (EAFE). The CSI 100 IndexA capitalization-weighted (or cap-weighted) index, also called a market-value-weighted index is a stock market index whose components are weighted according to the total market value of their outstanding shares. In a price-weighted index such as the Dow Jones Industrial Average, the price of each component stock is the only consideration when determining the value of the index The CSI 100 Index (Chinese: 中证100指数) is a capitalization-weighted, free float adjusted stock market index designed to replicate the performance of top 100 stocks traded in the Shanghai and Shenzhen stock exchanges. It is a sub-index of CSI 300 Index. The index is compiled by the China Securities Index..A common version of capitalization weighting is the free-float weighting. With this method a float factor is assigned to each stock to account for the proportion of outstanding shares that are held by the general public, as opposed to “closely held” shares owned by the government, royalty, or company insiders (see float). For example, if for some stock 15% of shares are closely held, and the other 85% are publicly held, the float factor will be 0.85, by which the company’s market capitalization will be multiplied before weighting its value against the rest of the index. In other words, the number of shares used for calculation is the number of shares “floating”, rather than outstanding. Shares outstanding are all the shares of a corporation that have been authorized, issued and purchased by investors and are held by them. They are distinguished from treasury shares, which are shares held by the corporation itself, thus representing no exercisable rights. Shares outstanding and treasury shares together amount to the number of issued shares.The SSE Composite Index also known as SSE Index is a stock market index of all stocks (A shares and B shares) that are traded at the Shanghai Stock Exchange 中国股票市场定位于服务自主创新企业和其他成长型创业企业。创业板又称二板市场（Second-board Market）即第二股票交易市场，是与主板市场（Main-Board Market）不同的一类证券市场，专为暂时无法在主板市场上市的创业型企业提供融资途径和成长空间的证券交易市场。 [1] 创业板是对主板市场的重要补充，在资本市场占有重要的位置。中国创业板上市公司股票代码以“300”开头。 （二）公司股本总额不少于3000万元；公开发行的股份达到公司股份总数的25%以上；公司股本总额超过四亿元的，公开发行股份的比例为10%以上； 中小企业板——是深圳证券交易所为了鼓励自主创新，而专门设置的中小型公司聚集板块。板块内公司普遍具有收入增长快、盈利能力强的特点，而且股票流动性好，交易活跃。 2021年2月，证监会批复同意深交所合并主板与中小板。 [1] 4月，经中国证监会批准，深交所主板和中小板合并， 上交所股票代码以6开头，全部都属于主板； 深交所股票分为三类：以000，001 开头的是深圳主板，以002开头的为中小板；以300开头的为创业板 上交所服务的企业是以央企，国企为主，知名公司为辅，多为传统企业；而深交所，是以服务中小型企业也创业型企业为主，多为高科技企业。 发行数量在8000万股以上(含8000万股，包括“不超过8000万股”等描述)的企业一律去上交所上市；发行数量在5000万股以下(含5000万股)的企业一律去深交所上市；发行数量在5000万股和8000万股之间的上市地点由企业决定；金融企业发行数量以4亿股为界限，4亿股以上去上交所，4亿股以下去深交所。 预先披露制度，是指申请首次公开发行股票的，在按照证券法的规定向国务院证券监督管理机构报送有关申请文件，并在其受理后，将有关申请文件向社会公众披露，而不必等到国务院证券监督管理机构对发行文件审核完毕、作出核准发行的决定后再进行披露。 预先披露的作用首先是可以便于公众对发行审核工作进行监督，进而比较有效的避免发行审核中可能出现的有关问题；提前披露发行文件，可以使社会公众提前了解发行文件的内容，有助于其进行投资决策。 网下配售就是针对机构投资者的配售。股票发行时，将所需发行的股票分为两个部分，一部分是公开在股票交易系统上发行（就是通常说的新股申购，也叫网上发行），另一部分是分配给机构投资者在股票交易系统以外购买，这部分就称作网下配售。 信息工程是指以计算机技术和通信技术为主要手段的信息网络、信息应用系统建设、信息资源开发等工程。信息资源开发（information resource development）狭义指信息资源的生产、搜集、组织、存储、检索、传播、评价和利用等活动。 运营商是指提供网络服务的供应商，如华为、中兴、诺基亚、爱立信等这些通信设备的生产厂家叫生产商，而中国移动、中国联通、中国电信、 中国广电这些公司叫运营商。 已经取消PT制度。原来的PT制度是公司股票戴冒ST三年后，再戴PT冒， ST股本年度暂无退市风险,继续年报亏损,即会加*,变成ST,严重的暂停上市,在次年度若继续亏损,就要退市;而已经是ST的股票,若已经暂停上市的,若本年度继续亏损,就要退市;若仍在交易的,若本年度继续亏损,就要暂停上市或退市。 中国股票市场刚成立的时候，主要都是国有企业上市股票，一般国有企业的控股股东是国家或各级国有资产管理部门。这也是国有股和法人股的由来，国有股和法人股不能像普通股一样上市流通。国有股、法人股、普通股这三者就形成了“同股不同权，同股不同利”局面，不利于股票市场的发展。这样就慢慢的开始了“股权分置”。股改的目的是让国有股和法人股“享受”普通股的市场待遇，能够参与市场流通，通过全流通实现同股同权，同股同利。股权分置也称为股权分裂，是指上市公司的一部分股份上市流通，另一部分股份暂时不上市流通。前者主要称为流通股，主要成分为社会公众股；后者为非流通股，大多为国有股和法人股。 法人股是指企业法人或具有法人资格的事业单位和社会团体，以其依法可支配的资产，向股份有限公司非上市流通股权部分投资所形成的股份。如果该法人是国有企业、事业及其他单位，那么该法人股为国有法人股；如果是非国有法人资产投资于上市公司形成的股份则为社会法人股。 国家股，是指以国有资产向有限公司投资形成的股份。国家股不能上市流通交易，只能通过与机构签订转让协议完成大宗股权转移 股改是指即上市公司股权分置改革，是通过非流通股股东和流通股股东之间的利益平衡协商机制，消除 A股市场股份转让制度性差异的过程。 A股的正式名称是人民币普通股票。B股的正式名称是人民币特种股票，它是以人民币标明面值，以外币认购和买卖，在境内（上海、深圳）证券交易所上市交易的。 G股：股权分置改革试点股票。上市公司凡遇股权分置改革实施后复牌，将对该股的汉字简称冠以G标记。这意味着将出现一个股改概念股票———G股。G 是“股改”的GUGAI头一个拼音字母，G股就是已经完成股改的公司股票，为了区别未“股改”的公司股票在前面加个“G”字。 S股是指尚未进行股权分置改革或者已进入改革程序但尚未实施股权分置改革方案的股票 N股——是指在中国大陆注册、在纽约(New York)上市的外资股 沪港通 “沪港通”是“沪港股票市场交易互联互通机制”的简称，包括“沪股通”和“沪港通下的港股通”（简称“港股通”）两部分。 其中，“沪股通”是指投资者委托香港经纪商，经由联交所在上海设立的证券交易服务公司，向上交所进行申报，买卖“沪港通”规定范围内的上交所上市股票。 “沪港通下的港股通”，则是指投资者委托内地证券公司，通过上交所在香港设立的证券交易服务公司，向联交所进行申报，买卖“沪港通”规定范围内的联交所上市股票。 stock分时成交价格就是指股票在某个时间点的即时成交价格；黄线所表示的平均价格就是指到该时点时，前面的所有成交价格的算术平均数！每分钟的最后一笔成交价的连线叫分时线；黄线是均价线，是当天开盘至当时所有成交总金额除以成交总股数得到的平均价的连线； 股市最小交易量是1手，为100股，对于一只股票最近的一笔成交量叫现手。总手 即当日开始成交一直到现在为止总成交手数。收盘时“总手”，则表示当日成交的总手数。 即成交量。 主动去适应卖方的价格而成交的，就是红色，叫外盘。主动迎合买方的价格而成交的，就是绿色，叫内盘。主力增仓比=(主力主动买入金额-主力主动卖出金额)/总成交额*100%，当这个数字是正的时候就是主力增仓的比例，负数则可以说明主力减仓的比例。 买一价是指当前挂在最高的买入该股票的价位，买二价是指仅次于买一价的买入价位，如此类推…，同样卖一价是指当前挂在最高的卖出该股票的价位，卖二价是指仅次于卖一价的卖出价位，如此类推…，一般想即时成交的话，买入时挂卖一价，卖出时挂买入一价，这样较容易成交，当然这种情况是在股市行情比较平稳时的操作，在股市行情比较激烈上下浮动时，有时要高挂0.5－1角才能买进，低挂0.5-1角才能卖出， 股票买一价是买一的价格，买一量是买一的委托数量。股票买二价是买二的价格，买二量是买二的委托数量。 换手率=某一段时期内的成交量/发行总股数×100%（在中国：成交量/流通股本×100%） 一般情况，大多股票每日换手率在1%——2.5%（不包括初上市的股票）。70%的股票的换手率基本在3%以下，3%就成为一种分界。那么大于3%又意味着什么？当一支股票的换手率在3%——7%之间时，该股进入相对活跃状态。7%——10%之间时，则为强势股的出现，股价处于高度活跃当中。（广为市场关注）10%——15%，大庄密切操作。超过15%换手率，持续多日的话，此股也许成为最大黑马。 量比是衡量相对成交量的指标。它是指股市开市后平均每分钟的成交量与过去5个交易日平均每分钟成交量之比。其计算公式为：量比=（现成交总手数 / 现累计开市时间(分) ）/ 过去5日平均每分钟成交量 算术移动平均线移动平均线，Moving Average，简称MA，MA是用统计分析的方法，将一定时期内的证券价格（指数）加以平均，并把不同时间的平均值连接起来，形成一根MA，用以观察证券价格变动趋势的一种技术指标。移动平均线 [1] 常用线有5天、10天、30天、60天、120天和240天的指标。其中，5天和10天的短期移动平均线，是短线操作的参照指标，称做日均线指标；30天和60天的是中期均线指标，称做季均线指标；120天、240天的是长期均线指标，称做年均线指标。对移动平均线的考查一般从几个方面进行。举例说明：某股连续十个交易日收盘价分别为：（单位：元）8.15、 8.07、 8.84、 8.10、 8.40、 9.10、 9.20、 9.10、 8.95、 8.70以五天短期均线为例：第五天均值=（8.15+8.07+8.84+8.10+8.40）/5=8.31第六天均值=（8.07+8.84+8.10+8.40+9.10) /5=8.50 加权移动平均线加权的原因是基于移动平均线中，收盘价对未来价格波动的影响最大，因此赋予它较大的权值。 EMA（Exponential Moving Average）是指数移动平均值。也叫 EXPMA 指标，它也是一种趋向类指标，指数移动平均值是以指数式递减加权的移动平均。在 EMA 指标中，每天价格的权重系数以指数等比形式缩小。时间越靠近当今时刻，它的权重越大。说明 EMA 函数对近期的价格加强了权重比，更能及时反映近期价格波动情况。所以 EMA 比 MA 更具参考价值。 指数平滑异同移动平均线，简称MACD按照 MACD 的算法，设序列 {xn} 代表第 n 天某股票的收盘价为 xn，则有DIF（xn） = EMA12（xn） – EMA26（xn），DEA（xn） = EMA9[DIF（xn）]，MACD（xn） = [DIF（xn） – DEA（xn）] x 2。MACD 可以看作是比较不同周期的 EMA 得出的股票涨跌趋势Moving Average Convergence / Divergence故MACD指标是由两线一柱组合起来形成，快速线（白色线）为DIF，慢速线（黄色线）为DEA，柱状图为MACD。DIF=今日EMA（12）－今日EMA（26） DIF组成的线叫做MACD线DEA组成的线叫做Signal线,DIF的9日EMA⒋最后用DIF减DEA，得Histogram，通常绘制成围绕零轴线波动的柱形图。 As the working week used to be 6-days, the period settings of (12, 26, 9) represent 2 weeks, 1 month and one and a half week. 委比：某品种当日买卖量差额和总额的比值。 委比是衡量某一时段买卖盘相对强度的指标。它的计算公式为：委比=（委买手数－委卖手数）/(委买手数+委卖手数)×100%。 委差，某品种当前买量之和减去卖量之和。反映买卖双方的力量对比。正数为买方较强，负数为抛压较重。买入和卖出委托排序情况如下：序号 数量（卖手）5 16244 32813 109412 28001 13序号 数量（买手）5 144 33553 19782 16541 2731长江电力收盘时的委比为：委买手数 = 14 + 3355 + 1978 + 1654 + 2731 = 9732委卖手数 = 1624 + 3281 + 10941 + 2800 + 13 = 18659委比 =（委买手数－委卖手数）/(委买手数+委卖手数)×100% ==（9732－18659）/(9732+18659)×100%=-8927 / 28391 = -0.314431 = -31.44%委差 = 委买手数－委卖手数 = 9732－18659 = -8927 超大单,大单,中单,小单的区分标准如下： 1、小单 (&lt;2 万股 或 4 万元 )； 2、中单 (2-10 万股 或 4-20 万元 )； 3、大单 (10-50 万股 或 20-100 万元 )； 4、特大单 (&gt;50 万股 或 100 万元 ) 。 股票主力是持股数较多的机构或大户，每只股都存在主力，但是不一定都是庄家，庄家可以操控一只股票的价格，而主力只能短期影响股价的波动。 在9:50这一分钟里，某一板块指数较前一分钟是上涨的，则将9:50这一分钟的成交额计作资金流入，反之则计作资金流出，若指数与前一分钟相比没有发生变化，则不计入。每分钟计算一次，每天加总统计一次，流入资金与流出资金的差额就是该板块当天的资金净流入。 主动性买盘是指以卖出价格主动成交的成交量，计算入外盘。外盘就是股票在卖出价成交，成交价为申卖价，说明买盘比较积极，推动股价上涨。主动性买盘的成交为外盘，主动性卖盘的成交为内盘。 主力单笔成交50万元以上的成交额合计，分50-100万元和100万元以上两档数据； 散户单笔成交50万元以下的成交额合计，分10万元以下、10-20万元、20-50万元三档数据。 主力资金净流入指数（价格）处于上升状态时产生的每笔大于100万的成交额是推动指数（价格）上涨的中坚力量，这部分成交额被定义为主力资金流入，反之定义为主力资金流出 仓位是指投资人实际投资和实有投资资金的比例。列举个例子：比如你有10万用于投资，现用了4万元买基金或股票，你的仓位是40%。如你全买了基金或股票，你就满仓了。如你全部卖出基金、股票，你就空仓了。 加仓是指建仓时买入的基金净值涨了，继续加码申购，因持续看好某只基金，而在该基金上涨的过程中继续追加买入的行为，加仓是在原来有的基础上再买入这只，加仓、减仓也就在你的购买能力范围内买卖基金的行为。 平仓是源于商品期货交易的一个术语，指的是期货买卖的一方为对销以前买进或卖出的期货合约而进行的成交行为。平仓是在股票交易中，多头将所买进的股票卖出，或空头买回所卖出股票行为的统称 long position多头是汉语词语，拼音是duō tóu，是指投资者对股市看好，预计股价将会看涨，于是趁低价时买进股票，待股票上涨至某一价位时再卖出，以获取差额收益。 Short position空头是近代上海等地交易所中的行话。(1) 交易所中投机方式之一。投机者认为某种商品、股票、债券等的价格将要下跌，于是卖出期货，希望在跌价后再买回或补进，获取差额利益。投机者在卖出后至未买回或补进前，手中并无实物，故称“空头”。用这种方式投机的，称为“做空头”。 1．利空：对空头有利，能促使股价下跌的因素和信息，如：银根抽紧，利率上升，经济衰退，公司经营状况恶化等。2．利多：对多头有利，能刺激股价上涨的各种因素和消息，如：银行利率降低，公司经营状况好转等。 盘整：通常指价格变动幅度较小，比较稳定，最高价与最低价之差不超过2%的行情。 整亦称 “整理”，股价经历了一段时间的急速上涨或下跌之后，遇到了阻力线或支撑线，因而股价波动幅度开始变小的现象。 期货交易的全过程可以概括为建仓、持仓、平仓或实物交割。建仓也叫开仓，是指交易者新买入或新卖出一定数量的期货合约。在期货市场上买入或卖出一份期货合约相当于签署了一份远期交割合同。如果交易者将这份期货合约保留到最后交易日结束他就必须通过实物交割或现金清算来了结这笔期货交易。然而，进行实物交割的是少数，大部分投机者和套期保值者一般都在最后交易日结束之前择机将买入的期货合约卖出，或将卖出的期货合约买回。即通过一笔数量相等、方向相反的期货交易来冲销原有的期货合约，以此了结期货交易，解除到期进行实物交割的义务。这种买回已卖出合约，或卖出已买入合约的行为就叫平仓。 对冲平仓是期货投资企业在同一期货交易所内通过买入卖出相同交割月份的期货合约，用以了结先前卖出或买入的期货合约。 在规范的期货市场上，最为常见的当属因客户交易保证金不足而发生的强行平仓。具体而言，是指在客户持仓合约所需的交易保证金不足，而其又未能按照期货公司的通知及时追加相应保证金或者主动减仓，且市场行情仍朝持仓不利的方向发展时，期货公司为避免损失扩大而强行平掉客户部分或者全部仓位，将所得资金填补保证金缺口的行为。 增仓是指增加你持有股票的仓位 主力增仓比=(主力主动买入金额-主力主动卖出金额)/总成交额*100%，当这个数字是正的时候就是主力增仓的比例，负数则可以说明主力减仓的比例。 intraday盘中occurring within one day. ST板块股指的是在沪深股市上挂牌的股票，因为经营亏损中国证监会为提醒股民注意特别处理的股票。因为对ST股票实行日涨跌幅度限制为5%，在一定程度上抑制庄家的刻意炒作。投资者对于特别处理的股票也要区别对待。PT是英文Particular Transfer(特别转让)的缩写。依据《公司法》和《证券法》规定，上市公司出现连续三年亏损等情况，其股票将暂停上市。沪深交易所从1999年7月 9日起，对这类暂停上市的股票实施特别转让服务，并在其简称前冠以PT，称之为PT股票国内垃圾股可分为三个部分：一部分是ST股票，即连续两年亏损或净资产值低于 1元的股票。一部分是PT股票是指连续三年亏损的股票。还有一部分是指除去前面两类且业绩在0.10元以下的股票。 蓝筹股是指在某一行业中处于重要支配地位,业绩优良,交投活跃,红利优厚的大公司的股票，在一些地方也将蓝筹股视为”绩优股”。但蓝筹股并不等于具有很高投资价值的股票。 “蓝筹”一词源于西方赌场。在西方赌场中，有三种颜色的筹码，其中蓝色筹码最为值钱，红色筹码次之，白色筹码最差 绩优股是指那些业绩优良，但增长速度较慢的公司的股票。这类公司有实力抵抗经济衰退，但这类公司并不能给你带来振奋人心的利润。因为这类公司业务较为成熟，不需要花很多钱来扩展业务，所以投资这类公司的目的主要在于拿股息。另外，投资这类股票时，市盈率不要太高，同时要注意股价在历史上经济不景气时波动的记录。 finacal report资产负债表流动资产 货币资金使用受到限制的货币资金不受限制的货币资金 现金及现金等价物现金及现金等价物包括库存现金、银行存款、其他货币资金、存放中央银行可随时支取的备付金、存放同业款项、拆放同业款项、同业间买入返售证券，以及企业持有的期限短（一般指从购买日起三个月内到期）、流动性强、易于转换为已知金额现金、价值变动风险很小的投资 库存现金，是公司及子公司出纳保险柜里的现钞，包括人民币和外币 银行存款定期存款，有些到期才能支取，有些只需提前通知金融机构就可以支取。后者算现金等价物，前者不算。 其他货币资金，指企业因指定目的而存在银行某专户里的钱。如临时到外地采购，在采购地银行开立只付不收专户里的钱；专项投资款；期限较短（通常指三个月以内）的承兑汇票或信用证保证金等。 存放同业款项、拆放同业款项、同业间买入返售证券，都可以简单地理解为金融机构之间的资金拆借。 “企业持有的期限短（一般指从购买日起三个月内到期）、流动性强、易于转换为已知金额现金、价值变动风险很小的投资”指企业持有的三个月内到期、随时可以卖出去、能卖多少钱基本已知（价格波动小）的投资。如国债、大型企业短期债、银行承兑汇票、货币市场基金等。股票不符合“易于转换已知金额现金、价值变动风险很小”的要求。 使用受到限制的货币资金不能随时支取的货币资金，都不算现金及现金等价物。 存放于央行的法定准备金和不能随时支取的定期存款 其他被司法机关冻结的存款；被质押的存款；根据借款合同约定的某账户中必须保持的最低存款余额；公司信用卡账户存款；为了开具银行本票、银行汇票、银行承兑汇票、信用证而存入银行的保证金；保险公司的资本金存款。 存放于央行的准备金，指的是金融机构（银行、财务公司等）存放于央行的钱.准备金也分法定准备金和超额准备金。法定准备金，是吸收到存款后，必须按照央行规定比例存于央行的，不可以随时支取，不属于现金等价物；超额准备金，是金融机构自愿存于央行收利息的钱，可以随时支取，属于现金等价物。 承兑汇票保证金、信用证保证金：按照中国注册会计师协会的意见（不是规定），票证到期日在三个月内的，保证金建议视为现金等价物；超过三个月的，建议视为受限制的货币资金。实践中，有视为现金等价物的，也有视为受限货币资金的。 货币资金的分析货币资金需要与短期债务及经营需要相匹配。 与短期债务的匹配情况，代表企业的偿债能力。货币资金过小，则可能代表偿债能力不足，或者经营中捉襟见肘。 与经营需要的匹配情况，代表企业的资金运用能力。货币资金过大，则代表资金运用能力较弱，或者可能资金性质有问题。 注意以下四种情况： （1）货币资金余额比短期负债小很多； （2）货币资金充裕，却借了很多有息甚至高息负债； （3）定期存款很多，其他货币资金很多，流动资金却严重缺乏； （4）其他货币资金数额巨大，但没有合理解释。 情形（1）可能代表公司有短期偿债危机，情形（2）（3）（4）则意味着貌似充裕的货币资金，可能存在虚构、冻结，或者早就被大股东占用，只是在报表日前几天回到公司账上，过后又会消失。 经营相关资产营业收入与现金流入、应收票据、应收账款之间的关系 一家企业在市场中生存，必然会通过商业活动和其他单位或个人发生往来。这些往来，要么现钱现货，要么以应收票据和应收账款形式存在。前者产生现金流，后者产生应收应付。 一家企业有销售发生，要么收了现金，要么收了票据，要么就变成了应收账款 应收票据对于销售方而言，销售产生了“应收票据”；对于购货方，负债栏目中便产生“应付票据”。 可能是银行承兑汇票，也可能是商业承兑汇票 银行承兑汇票，是由银行承诺兑现的，到约定期限，持票方确定可以拿到现金的票据。考虑货币的时间价值（假设市场资金成本为月息1%，则一个月后的100万元现金，约等于今天的99.01万元），银行承兑汇票的价值略低于同等面值的现金。收到银行承兑汇票的企业若急需用钱，可以打个折扣，向任意一家银行换取现金，这种行为被称为“贴现”，折扣率被称为“贴现率”。 由企业开出的商业承兑汇票，可信度就没有银行承兑汇票那么高。能否按期足额兑付，取决于开票企业的财务状况和诚信度。 因为票据可以贴现、转贴现和再贴现，于是就产生了票据交易市场。票据贴现是银行一块挺大的业务。 应收账款应收账款就是赊销，也叫“白条子”。 大部分产品都是买方市场，通行的模式是买家先拿货，一段时间后（称之为“账期”）付款。在这种模式下，对销售方而言，就产生了“应收账款”；对购货方而言，在负债一栏就产生“应付账款”。 单项金额重大并单项计提坏账准备的应收款项： 采用账龄分析法计提坏账准备的： 采用其他方法计提坏账准备的： 应收账款拖欠的时间越久，变成烂账的概率就越大。出于谨慎原则，会计准则要求公司对应收账款必须计提坏账准备。计提的坏账准备，在资产负债表，是一种资产损失，减少公司资产账面值；在利润表是一种费用，需要从当期的利润表里减去，降低企业当期利润。 一旦在某年公司将这笔欠款收回来了，实际收到的钱和报表上账面价值之间的差额，还可以回到利润表“资产减值损失”科目冲抵，从而增加利润。 一般来说，计提标准越严格的公司越值得信赖。 预付账款预付账款，是预付给供货单位的购货款，或者预付在建工程价款等。对于收钱的公司，便是负债端的“预收账款”科目。 应收利息和应收股利应收利息，是公司持有各类债权期间应该收到的利息。 应收股利，是公司持有股权期间应该收到的其他公司分配的股利。 与之对应的另一方，便是负债端的“应付利息”和“应付股利”科目。 其他应收款所有跟主营业务无关的应收款，企业都会放进这个栏目。 优秀上市公司有个特点，就是“其他应收款”和“其他应付款”科目涉及金额极小，甚至为零。 长期应收款指企业融资租赁产生的应收款项和采用递延方式分期收款实质上是具有融资性质的销售商品和提供劳务等经营活动产生的应收款项。 融资租赁，就是公司买个大件（如挖掘机、大货车、厂房、机床等）租给需要用这个东西的企业A，双方约定A每年或每月支付多少租金，N年或N月后，按照某价格把旧设备或厂房卖给A。租金加上旧货成交价之和大于最初买价的部分，相当于是A为这笔借款支付的利息。 存货存货是企业以出售为目的持有的商品、处在生产过程中的在产品以及相关原材料等。 存货成本，主要由原材料、工人工资、制造费用构成。 制造费用，是企业生产车间为生产产品或提供劳务而发生的工资福利、折旧费、修理费、办公费、水电费、备件材料消耗、劳保、季节性或修理期间的停工损失等费用。它会被财务人员分摊到单个产品上，进入存货成本。 通常按照成本和可变现净值中较低者计算存货价值。 存货的计价方式政策。常用方法有先进先出法、后进先出法、加权平均法和个别计价法。 个别计价法，则用于那些不能替代使用的存货，或者为特定项目专门购入（生产）的存货及劳务。 生产相关资产固定资产、在建工程、工程物资、无形资产、商誉、长期待摊费用和递延所得税资产（负债）等科目。 固定资产固定资产指公司为经营而持有的，使用寿命超过一年的、价值比较大的非货币性资产，包括房屋、建筑物、机器、机械、运输工具以及其他与生产经营活动有关的设备、器具、工具等。 固定资产要计提折旧。 固定资产年末（或季度末）还需要进行减值测试。 由于资产市价的持续下跌，或技术陈旧、损坏、长期闲置等原因，导致资产可变现价值低于账面价值的，按照差额计提减值准备。减值准备也是要从利润表里扣除的，且一旦计提减值，以后不可以再转回来。 折旧政策有好几种（年限平均法、工作量法、双倍余额递减法和年数总和法等） 优秀的公司一般倾向于使用快速折旧的方法，以增加前期费用，减少前期利润。将利润推到以后年份去，使纳税义务推后，相当于获得税务局给的免息贷款。 在建工程和工程物资在建工程，如同字面意思，正在建设的工程。在建工程是个中转站，一边消耗“工程物资”，一边创造“固定资产”。一旦建好了，就该转成固定资产。 工程物资，即为了在建工程而准备的物资 无形资产无形资产，包括专利权、商标权、著作权、土地使用权、特许权、版权和非专利技术等。 无形资产是资产，所以也需要和固定资产一样“折旧”。只是不知道为什么，对无形资产的折旧被另外取了一个名字，叫做“摊销”。 若无形资产使用寿命确定，摊销方法就和固定资产类似；但如果使用寿命无法确定，就没法摊销，只能期末做减值测试。 无形资产可以是买的，可以是股东投入的，也可以是自己研发的。研发，是指研究和开发两个阶段。对无形资产研究阶段的支出，记录为管理费用；对开发阶段的支出，在满足一定的条件下，可以记入无形资产价值里。开发阶段支出，指技术成果或其他知识研究成功后，到真正可以商业化使用前，所花费的支出。 利润高的公司更愿意把研发支出都记入费用中，这样可以减少当期税收支出 商誉没有进行过收购的企业，商誉栏目就是0。 只有在收购活动中，比可辨认净资产公允价值多付的那笔款，才可以被记录为商誉。 公司买了一个受到广泛关注的品牌，或是政府颁发的某种特权，或是一份重要的客户名单，或者是有能力的管理层和核心技术人员等。 公允价值指熟悉市场情况的买卖双方在公平交易和自愿的情况下所确定的价格，或无关联的双方在公平交易的条件下一项资产可以被买卖或者一项负债可以被清偿的成交价格。 有活跃市场报价的，市价就是公允价值；没有活跃市场报价的投资，一般需要专业机构按照某种复杂模型评估出一个公允价值。 长期待摊费用长期待摊费用是企业已经支出的但功效持续一年以上的费用。 常见的主要是对固定资产的改良费用改良和修理之间有啥区别，取决于这次修理（或改良）是只对公司本期收入有贡献，还是在超过一年以上的时间里，都会对公司收入产生作用。 递延所得税资产和负债由于税务局计算的公司利润和公司财务算的不一样，可能大于公司计算的利润，也可能小于公司计算的利润，递延所得税资产和负债便因此而产生 （1）有些费用，虽然公司实际支出或提列了，但税务局根据政策法规不认可。如超过一定额度的招待费、折旧摊销、减值准备、行政罚款、慈善捐款等。 （2）有些公司本期一次性支出的费用，但按照税务局的规定，只能在以后分批扣除，如坏账准备、修理和保修费用、超过年度营收15%的广告费等；而有些收入，被税务局认定为本期收入，但按照公司财务政策，需要在下期才报告。 （3）内部销售的影响。由于税务局是按照一个一个真实公司收税的，他可不管两个交易的公司是什么关系，因而可能产生合并报表范围内企业间的销售，在税务局认为是利润，而在公司合并报表中，并不认为是利润的情况。 （4）公允价值波动损益产生的所得税差异。这部分将在投资相关资产章节中具体谈。 其他流动资产和其他非流动资产自设科目中周转期不超过一年的资产，归入其他流动资产；超过一年的，就放入其他非流动资产。 Operating Revenue收入Revenue realized through primary activities is often referred to as operating revenue. For a company manufacturing a product, or for a wholesaler, distributor or retailer involved in the business of selling that product, the revenue from primary activities refers to revenue achieved from the sale of the product. Similarly, for a company (or its franchisees) in the business of offering services, revenue from primary activities refers to the revenue or fees earned in exchange of offering those services. royalty a sum of money paid to a patentee for the use of a patent or to an author or composer for each copy of a book sold or for each public performance of a work. Non-Operating RevenueRevenues realized through secondary, non-core business activities are often referred to as non-operating recurring revenues. These revenues are sourced from the earnings which are outside of the purchase and sale of goods and services and may include income from interest earned on business capital lying in the bank, rental income from business property, income from strategic partnerships like royalty payment receipts or income from an advertisement display placed on business property. Gains收益Also called other income, gains indicate the net money made from other activities, like the sale of long-term assets. These include the net income realized from one-time non-business activities, like a company selling its old transportation van, unused land, or a subsidiary company. Revenue should not be confused with receipts. Revenue is usually accounted for in the period when sales are made or services are delivered. Receipts are the cash received and are accounted for when the money is actually received. Primary Activity ExpensesAll expenses incurred for earning the normal operating revenue linked to the primary activity of the business. They include the cost of goods sold (COGS), selling, general and administrative expenses (SG&amp;A), depreciation or amortization, and research and development (R&amp;D) expenses. Typical items that make up the list are employee wages, sales commissions, and expenses for utilities like electricity and transportation. research and development (R&amp;D) Selling General and Administrative Expense (SG&amp;A) Secondary Activity ExpensesAll expenses linked to non-core business activities, like interest paid on loan money. the different measures of profitability in a multiple-step income statement are reported at four different levels in a business’ operations – gross, operating, pre-tax and after-tax. As we shall shortly see in the following example, this segregation helps in identifying how the income and profitability are moving/changing from one level to the other Gross profit is the profit a company makes after deducting the costs associated with making and selling its products, or the costs associated with providing its services. sales profit or gross income. Gross profit assesses a company’s efficiency at using its labor and supplies in producing goods or services. The metric mostly considers variable costs—that is, costs that fluctuate with the level of output, such as: MaterialsDirect labor, assuming it is hourly or otherwise dependent on output levelsCommissions for sales staffCredit card fees on customer purchasesEquipment, perhaps including usage-based depreciationUtilities for the production siteShipping fixed costs (that is, costs that must be paid regardless of the level of output). Fixed costs include rent, advertising, insurance, salaries for employees not directly involved in the production and office supplies. Operating Expenses Total Operating Expenses Income from Continuing Operations net other income or expenses (like one time earnings), interest-linked expenses and applicable taxesnon-recurring events, Reducing the total operating expenses from total revenue leads to Operating Income (or Loss) Net sales = gross sales – (customer discounts, returns, and allowances)Gross sales are the sum of all sales during a time period. Net sales are gross sales minus sales returns, sales allowances, and sales discounts. Gross profit = net sales – cost of goods soldCost of goods sold (COGS) is the carrying value of goods sold during a particular period.The cost of goods produced in the business should include all costs of production.[9] The key components of cost generally include: Parts, raw materials and supplies used,Labor, including associated costs such as payroll taxes and benefits, andOverhead of the business allocable to production. Operating profit = gross profit – total operating expensesNet profit = operating profit – taxes – interest The gross profit margin then takes that figure and divides it by revenue to get a handle on how much gross profit is generated on a percentage basis after taking costs into account. net income earning净利润=利润总额-所得税费用利润总额=营业利润+营业外收入-营业外支出营业利润=营业收入 -营业成本 -税金及附加营业税金及附加反映企业经营的主要业务应负担的消费税、资源税、教育费附加、城市维护建设税等。 -销售费用-管理费用-研发费用-财务费用 +其他收益+投资收益+净敞口套期收益净敞口套期收益是套期保值业务中产生的会计确认和计量的不一致，净敞口套期从而实现套期保值双方利得和损失同期确认的目的，套期工具升值了，升值部分就是净敞口套期收益，套期工具贬值了，贬值的部分就是净敞口套期损失。 简单说就是你期权的收益或损失 +公允价值变动收益 fair value公允价值变动收益，是指企业各种以公允价值为计量的资产在持有期间因公允价值变动而形成的收益。1、交易性金融资产（如股票、债券、期货、基金等）公允价值变动损益。2、投资性房地产公允价值变动损益。3、衍生金融资产公允价值变动损益。4、金融负债公允价值变动损益 +资产处置收益资产处置损益是新增加的会计科目，主要用来核算固定资产，无形资产，在建工程等因出售，转让等原因，产生的处置利得或损失。 -信用减值损失信用减值损失是指因应收账款的账面价值高于其可收回金额而造成的损失，其对应科目是坏账准备。企业造成信用减值损失的原因是企业因购货人拒付、破产、死亡等原因无法收回，而遭受的损失。 -资产减值损失资产减值损失（asset impairment loss;Assets Devaluation）是指因资产的可回收金额低于其账面价值而造成的损失。 新会计准则规定资产减值范围主要是固定资产、无形资产以及除特别规定外的其他资产减值的处理。资产减值损失一经确认，在以后会计期间不得转回，消除了一些企业通过计提秘密准备来调节利润的可能，限制了利润的人为波动。资产减值损失在会计核算中属于损益类科目。 财务费用=利息费用-利息收入+其他利息支出，汇兑损失，相关的手续费，其他财务费用，如融资租入固定资产发生的融资租赁费用等。 企业损益类科目是指核算企业取得的收入和发生的成本费用的科目 dividendboard of directorsliquidated清算 ceo to bottom employee assetsliabilitiesequitybook value equity/shares outstanding margin of safety shares outstanding股数 eps price to earning ratiomarket price/epsfor every dollars i spend buying this stock,i should receive 1 dollar in profit 1 year later&lt;15 p/bvevery dollars paid for this company has 1 in book valuesafety&lt;1.5 p/e*p/bv&lt;22.5 stop orderlimit ordermarket order 债券bondcoupond fiscal stimulus财政刺激 ebitroaroeepsbook value per sharepte ratioetp ratio foward earningconsensus ttm earning bondcoupon rate annualface/par valuetermissuematurityredeemable interest rate rise bond prices go downinterest rate drop bond prices go upthe bond’s market price approaches the par value as time progresses simple interestcoupond yield = 1 years coupon payments / par value current yieldthe annual coupon divided by the price compound interest /reinvestytmyield to maturity revenue/sales cost of revenuecost of goods sold(COGS) incl. D&amp;A销售成本Depreciation &amp; Amortization Expense摊销（Amortization）指对除固定资产之外，其它可以长期使用的经营性资产按照其使用年限每年分摊购置成本的会计处理办法。与固定资产折旧类似。折旧（depreciation）是指资产价值的下降，指在固定资产使用寿命内，按照确定的方法对应计折旧额进行系统分摊。 销售成本, 包括料, 工(直接人工, 间接人工), 费(与生产相关的费用, 厂房租金, 设备折旧等) 三部分。 gross profit/incomeGROSS MARGIN利润率 operating expenseOperating expenses are the remaining costs that are not included in COGS. Operating expenses can include: RentUtilitiesSalaries/wagesProperty taxesBusiness travel SG&amp;A expenseselling general and administrativeresearch &amp; developmentother operating expense unusual expenseunusual or extraordinary expensesnot part of the standard business operations.For example, the sale of a business segment, the costs associated with a discontinued line of manufacturing, natural disasters or a change in accounting principles would all qualify as unusual expenses. EBIT after unusual expenseEarnings before interest and taxes (EBIT) is an indicator of a company’s profitability. EBIT can be calculated as revenue minus expenses excluding tax and interest. EBIT is also referred to as operating earnings, operating profit, and profit before interest and taxes. operating income non operating interest income/expense An interest expense is the cost incurred by an entity for borrowed funds. Interest expense is a non-operating expense shown on the income statement.It represents interest payable on any borrowings – bonds, loans, convertible debt or lines of credit. gross interest expenseGross interest is the annual rate of interest to be paid on an investment, security, or deposit account before taxes or other charges are deducted.interest capitalized利息资本化（capitalization of interests） 将借款利息支出确认为一项资产。需要相当长时间才能达到可销售状态的存货以及投资性房地产等所发生的借款利息支出，亦是利息资本化的范围。 other non operating income/expense营业外收支是指与企业的业务经营无直接关系的收益和支出。又称营业外损益营业外收支通常偶然发生，不重复出现，企业难以预见； Equity in Affiliates (Pretax)附属机构; 分支机构; 分公司; 分会; pretax income income tax current/defered配比原则要求，当期的收入要与成本、费用配比。不能只确认收入，不确认相关的成本、费用递延税项的存在，就是为了将应当当期负担的所得税与当期的收入、成本费用进行配比。在财务报表上，企业会根据实际的经营利润计算应缴纳的税款。由于企业在会计核算上与税法规定上有差异，导致利润表上应计的税款与实际缴纳的税款有差异。这个差异，就是递延税项。其中，实际缴纳的多与利润表上的，就是递延所得税资产，表是以后可以少交所得税；反之就是递延所得税负债，表示以后会多交所得税。 dometic/foreign income tax credits所得税抵免 Equity in Affiliates Other After Tax Income (Expense) Consolidated Net IncomeConsolidated net income is the sum of net income of the parent company excluding any income from subsidiaries recognized in its individual financial statements plus net income of its subsidiaries determined after excluding unrealized gain in inventories, income from intra-group transactions, etc.合并净利润是整个企业集团所有权益性证券持有人的净利润；合并净利润不包括子公司少数股东所持有的子公司净利润的份额，而将其视为企业集团的一项费用 net income continuous oprationsExtraordinaries &amp; Discontinued Operationsextraordinary items is a catch-all for irregular or non-recurring events, such as accidents or natural disasters. Discontinued operations refers to a unit or segment of a business that has been sold, abandoned or otherwise discontinued.Discontinued OperationsExtra Items &amp; Gain/Loss Sale Of Assets Cumulative Effect - Accounting Chg有一些会计变更是需要追溯调整的，就是指返回到业务最初状态开始按新的处理方式调整，旧的会计处理和新的处理方式之间的差异，一直累积到现在产生的结果既为累积效应。 including non-controlling interests在合并附属公司的财务报表时，附属公司中的非本公司股份权益被认同为公司对外负债。 Net Income After Extraordinaries Preferred Dividends优先股股利(Dividend on Preferred Stock; Preferred Stock Dividend)，是指企业按优先股发放章程的有关规定，按约定的股息率或金额发放给优先股股东的报酬。 Net Income Available to Common common stockholders minority interest expense在合并附属公司的财务报表时，附属公司中的非本公司股份权益被认同为公司对外负债。 Diluted Shares Outstanding EBITDA, or earnings before interest, taxes, depreciation, and amortization, is a measure of a company’s overall financial performance some other terms库存现金科目：核算企业的库存现金。主要反映企业存放在保险箱中的现金库存现金的使用范围 的票据结算工具主要包括银行汇票、商业汇票、银行本票和支票等 银行汇票结算方式是指利用银行汇票办理转帐结算的方式 票随人走，钱货两清。实行银行汇票结算，购货单位交款，银行开票，票随人走；购货单位购货给票，销售单位验票发货，一手交票，一手交钱；银行见票付款，这样可以减少结算环节，缩短结算资金在途时间，方便购销活动。 商业承兑汇票由银行以外的付款人承兑的票据。 银行本票是申请人将款项交存银行，由银行签发的承诺自己在见票时无条件支付确定的金额给收款人或者持票人的票据。银行汇票为委付证券，银行本票为自付证券。银行本票是出票人自己付款的承诺，银行汇票是出票人要求他人付款的委托或指示 支票是出票人签发的，委托办理支票存款业务的银行在见票时无条件支付确定的金额给收款人或持票人的票据 信用卡主要用于消费性支出 在国际贸易中，为避免交易风险，进口商不愿先将货款付给出口商，出口商也不愿先将货物或单据交给进口商，同时双方都不愿长期占压自己的资金，在此种情况下，银行充当了进出口商之间的中间人和保证人，一面收款，一面交单，并代为融通资金，由此产生了信用证结算方式 委托收款结算是收款人向银行提供收款依据，委托银行向付款人收取款项的一种结算方式 汇兑又称“汇兑结算”，是指企业（汇款人）委托银行将其款项支付给收款人的结算方式。这种方式便于汇款人向异地的收款人主动付款，适用范围十分广泛。 异地托收承付结算的程序如下： 托收承付结算又称“异地托收承付结算”，是指根据购销合同由收款人发货后委托银行向异地购货单位收取货款，购货单位根据合同核对单证或验货后，向银行承认付款的一种结算方式。收款人发出商品；收款人委托银行收款；收款人开户行将托收凭证传递给付款人开户行；付款人开户行通过付款人承付；付款人承认付款；银行间划拨款项；通知收款人货款收妥入账。使用该结算方式的收款单位和付款单位，必须是国有企业，供销合作社以及经营较好，并经开户银行审查同意的城乡集体所有制工业企业 外埠存款，是指企业到外地进行临时或零星采购时，汇往采购地银行开立采购专户的款项 银行汇票存款是指企业在采用银行汇票转账方式时，为了取得银行汇票，按规定存入银行的款项。 在途货币资金指企业同所属单位之间和上下级之间的汇、解款项业务中，到月终时尚未到达的汇入款项。 有价证券按其所表明的财产权利的不同性质，可分为三类：商品证券、货币证券及资本证券。 提货单、购物券、栈单、运货单等就属于商品证券。商品证券的价格取决于票面面值。通常，特定的证券对应特定的商品，商品证券持有者可凭它在一定时间内换取特定的商品，一旦换取后，该证券也就退出流通。 货币证券的范围主要包括期票、汇票、支票和本票等 汇票（Bill of Exchange，Draft）是出票人签发，委托付款人在见票时或者在指定日期无条件支付确定的金额给收款人或者持票人的票据支票是指发票人签发的委托银行等金融机构于见票时支付一定金额给收款人或其他指定人的一种票据本票是指由出票人签发的，承诺自己在见票时无条件支付确定的金额给收款人或持票人的票据 资本证券主要包括股权证券（所有权证券，Equity Security）和债权证券（Debt Security）。 背书指收款人以转让票据权利为目的在汇票上签章并作必要的记载所作的一种附属票据行为。 坏账是指企业无法收回或收回的可能性极小的应收账款。 存货，是指企业在日常活动中持有的以备出售的产成品或商品、处在生产过程中的在产品、在生产过程或提供劳务过程中耗用的材料和物料等存货分类为：在途物资、原材料、在产品、库存商品、发出商品、委托加工物资、周转材料等七大类。 周转材料是指企业在施工过程中能够多次使用，并可基本保持原来的形态而逐渐转移其价值的材料，主要包括钢模、木模板、脚手架和其他周转材料等。 在公司交纳所得税时，公司债券的利息已作为费用从收益中减除，在所得税前列支。而公司股票的股息属于净收益的分配，不属于费用，在所得税后列支wiki实收资本实收资本（Paid-in Capital）指企业实际收到的投资人投入的资本。按投资主体可分为国家资本、集体资本、法人资本、个人资本、港澳台资本和外商资本等。实收资本是指投资者作为资本投入企业的各种财产，是企业注册登记的法定资本总额的来源，它表明所有者对企业的基本产权关系。实收资本的构成比例是企业据以向投资者进行利润或股利分配的主要依据。中国企业法人登记管理条例规定，除国家另有规定外，企业的实收资本应当与注册资本一致。企业实收资本比原注册资本数额增减超过20%时，应持资金使用证明或验资证明，向原登记主管机关申请变更登记。 qfIIThe Qualified Foreign Institutional Investor program, one of the first efforts to internationalize the RMB, represents China’s effort to allow, on a selective basis, global institutional investors to invest in its RMB denominated capital market.[1] Once licensed, foreign investors are permitted to buy RMB-denominated “A shares” in China’s mainland Shanghai and Shenzhen stock exchanges.[2] Thus foreign investors benefit from an opportunity to invest onshore, which is otherwise often insulated from the rest of the world, and subject to capital controls governing the movement of assets in-and-out of the country ifrsInternational Financial Reporting Standards ifrs TrustArcTrustArc is a privacy compliance technology company based in San Francisco, California. The company provides software and services to help corporations update their privacy management processes so they comply with government laws and best practices 结构性产品结构性产品（structured product），又称结构性票据（structured notes）、联动债券、合成债券等，Das(2001)把此产品定义为由固定收益证券和衍生合约结合而成的产品。其中的衍生合约包括远期合约、期权合约、互换合约，衍生合约的标的资产包括外汇、利率、股价（股指）、商品（指数）、信用等。因此，结构性产品是隐含衍生金融产品的证券，常见的产品形式包括股价联动债券、信用联动债券、结构性存款、投资联接保单、商品联动债券、奇异期权嵌入债券等。 衍生工具衍生工具是一种特殊类别买卖的金融工具统称。这种买卖的回报率是根据一些其他金融要素的表现情况衍生出来的。比如资产（商品，股票或债券），利率，汇率，或者各种指数（股票指数，消费者物价指数，以及天气指数）等。这些要素的表现将会决定一个衍生工具的回报率和回报时间。衍生工具的主要类型有期货，期权，权证，远期合约，互换等。 金融工具金融工具如股票、期货、黄金、外汇、保单等也叫金融产品、金融资产、有价证券。因为它们是在金融市场可以买卖的产品，故称金融产品；因为它们有不同的功能，能达到不同的目的，如融资、避险等，故称金融工具；在资产的定性和分类中，它们属于金融资产，故称金融资产；它们是可以证明产权和债权债务关系的法律凭证，故称有价证券。. 保险单保险单简称“保单”。保险人与投保人签订保险合同的书面证明。 portfolioportfolio a range of investments held by a person or organization. 金融资产管理公司1999年，东方、信达、华融、长城四大AMC在国务院借鉴国际经验的基础上相继成立，并规定存续期为10年，分别负责收购、管理、处置相对应的中国银行、中国建设银行和国家开发银行、中国工商银行、中国农业银行所剥离的不良资产。 金融资产管理公司（Asset Management Corporation，简称AMC）在国际金融市场上共有两类：从事“优良”资产管理业务的AMC和“不良”资产管理业务的AMC 银行的不良资产严格意义来讲也称为不良债权，其中最主要的是不良贷款，是指借款人不能按期、按量归还本息的贷款。也就是说，银行发放的贷款不能按预先约定的期限、利率收回本金和利息，，银行的不良资产还有不良债券等 受托，读音shòu tuō，汉语词语，意思为接受别人的委托。企业从银行得到贷款，应依靠自身经营收入到期归还。但如果企业的经营收入不足以偿还银行贷款时，贷款就变成不良贷款，此时银行要采取一切可能的手段收回不良贷款本息，这就是清收。 资产置换被认为是各类资产重组方式当中效果最快、最明显的一种方式资产置换是指上市公司控股股东以优质资产或现金置换上市公司的呆滞资产，或以主营业务资产置换非主营业务资产等情况置换，汉语词汇，读音为zhì huàn，意为替换或指一种元素把某种化合物中的其他元素替换出来。应用于化学、商业、数学。为了完善嘉丰股份的资产结构，提高资产质量，决定对嘉丰股份现有的资产进行置换，即以上房集团的科技含量较高的新型建材和基础设施配套建设等优质资产置换公司现有的纺织资产，公司的主营业务由纺织业变更为新型建材和基础设施配套产业。 券商直投：券商股权投资，投资那些券商认为优良的非上市公司股权，以期获得将来上市以后投资收益，或者是转让股权获得的投资收益，类似于私募股权投资基金。 信托（Trust）是指委托人基于对受托人的信任，将其财产权委托给受托人，由受托人按委托人的意愿以自己的名义，为受益人的利益或特定目的，进行管理和处分的行为。托管，指的是资产托管业务，是接收客户委托，安全保管客户资产、行使监督职责，并提供投资管理相关服务的业务。“托管服务范围包括：基本服务1.资产保管2.资金清算3.投资监督4.财务报告5.保存纪录6.QFII业务”资产托管业务是指具备一定资格的商业银行作为托管人，依据有关法律法规，与委托人签订委托资产托管合同，安全保管委托投资的资产，履行托管人相关职责的业务。委托理财指专业管理人接受资产所有者委托，代为经营和管理资产，以实现委托资产增值或其它特定目标的行为，一般特指证券市场内的委托理财，即投资银行作为管理人，以独立帐户募集和管理委托资金，投资于证券市场的股票、基金、债券、期货等金融工具的组合，实现委托资金增值或其它特定目的的中介业务。清偿，即合同的履行，是指债务人按合同的约定了结债务、配合债权人实现债权目的的行为。清算，是终结已解散公司的一切法律关系，处理公司剩余财产的程序。融资租赁（financial lease）它是指出租人根据承租人（用户）的请求，与第三方（供货商）订立供货合同，根据此合同，出租人出资向供货商购买承租人选定的设备。同时，出租人与承租人订立一项租赁合同，将设备出租给承租人，并向承租人收取一定的租金。租赁期满后，租赁设备可以通过退租、续租或转移给承租人三种方法进行处理。 直接投资指投资者直接开厂设店从事经营，或者投资购买企业相当数量的股份，从而对该企业具有经营上的控制权的投资方式。直接投资的主要特征是投资者对另一经济体的企业拥有永久利益，永久利益意味着直接投资者和企业之间存在着长期的关系，并对企业经营管理施加相当大的影响。 to merge作为四大AMC之一的中国华融最早可追溯至1999年。亚洲金融危机后，为处置国有商业银行不良资产，由国务院牵头设立中国华融、中国信达、东方资产管理、长城资产管理四大AMC，存续期为十年。中国有4家资产管理公司，即中国华融资产管理公司、中国长城资产管理公司、中国东方资产管理公司、中国信达资产管理公司，分别接收从中国工商银行、中国农业银行、中国银行、中国建设银行剥离出来的不良资产。 AMC（Asset Management Companies）即资产管理公司。凡是主要从事此类业务的机构或组织都可以称为资产管理公司（Asset management companies）。 信托是委托人基于对受托人的信任，将其财产权委托给受托人，由受托人按委托人的意愿以自己的名义，为受益人的利益或特定目的，进行管理和处分的行为。 信托（Trust）是一种理财方式，是一种特殊的财产管理制度和法律行为，同时又是一种金融制度Honor of Kings (王者荣耀) kpl king pro league othersKWEBKraneShares CSI China Internet ETF (KWEB child exploitation qualcomn SPAC（Special Purpose Acquisition Company）直译为“特殊目的并购公司”SPAC是区别于传统“IPO上市”和“借壳上市”的第三种上市方式。其创新之处在于，不是买壳上市，而是先行造壳、募集资金，然后再进行并购，最终使并购对象成为上市公司。 spdr Sometimes called “spiders,”A Standard &amp; Poor’s Depositary Receipt, or SPDR, is a type of exchange traded fund estEastern Standard Time (EST)UTC -5 Bipartisanship, sometimes referred to as nonpartisanship, is a political situation, usually in the context of a two-party system, in which opposing political parties find common ground through compromise. “敞口”在金融领域的意思。敞口比较常见的说法就是对风险分析时用到的，表示对风险有暴露的地方 A “reopening stock” is a stock that benefits when investors see signs of more reopenings amid the coronavirus pandemic and falters in the opposite scenario.As the name suggests, these are stocks that are positioned to benefit once the economy reopens after the pandemic. was consistent with 与-一致 warranta document issued by a legal or government official authorizing the police or some other body to make an arrest, search premises, or carry out some other action relating to the administration of justice.show or prove to be right or reasonable. accommodative monetary policies. 宽松的货币政策。 accommodate容纳(of physical space, especially a building) provide lodging or sufficient space for. accommodativewilling to fit in with someone’s wishes or needs.intended to stimulate economic activity by lowering interest rates. sarThe special administrative regions of the People’s Republic of China are one type of provincial-level administrative divisions of the People’s Republic of China directly under Central People’s Government T-NOTE国库券A Treasury note (T-note for short) is a marketable U.S. government debt security with a fixed interest rate and a maturity between two and 10 years. security 证券a certificate attesting证明 credit信用, the ownership of stocks or bonds, or the right to ownership connected with tradable derivatives.衍生品 T-BONDTreasury bonds (T-bonds) are government debt securities issued by the U.S. Federal government that have maturities greater than 20 years. YIELDIn finance, the yield on a security is a measure of the ex-ante return to a holder of the security.an amount produced of an agricultural or industrial product. JPMorgan Chase &amp; Co.J.P. Morgan &amp; Co.","link":"/0002%20Social%20science/%E7%BB%8F%E6%B5%8E%E7%AE%A1%E7%90%86%E5%AD%A6%20Business%20and%20Economics/finance_wiki/"},{"title":"汉语","text":"阜 fù土山。（物资）多：物～民丰。 毓yù生育；养育：钟灵～秀 邑 yì泛指城市：通都大～。县。","link":"/0002%20Social%20science/%E8%AF%AD%E8%A8%80%E5%AD%A6%20Linguistics%20and%20languages/%E6%B1%89%E8%AF%AD/"},{"title":"english words","text":"农业agriculturethe science or practice of farming。Agriculture is farming and the methods that are used to raise and look after crops and animals. introvert不喜欢与人交往的人a quiet person who is more interested in their own thoughts and feelings than in spending time with other people bookmark书签a strip of paper, etc. that you put between the pages of a book when you finish reading so that you can easily find the place again （记录因特网网址的）书签In computing, a bookmark is the address of an Internet site that you put into a list on your computer so that you can return to it easily. escalate（使）扩大;（使）恶化;（使）升级If a bad situation escalates or if someone or something escalates it, it becomes greater in size, seriousness, or intensity. The fighting escalated into a full-scale war. consensual一致同意的A consensual approach, view, or decision is one that is based on general agreement among all the members of a group. nonconsensualnot agreed to by one or more of the people involved funnel漏斗a device that is wide at the top and narrow at the bottom, used for pouring liquids or powders into a small opening 输送，传送(金钱、货物或信息)If you funnel money, goods, or information from one place or group to another, you cause it to be sent there as it becomes available. Gaza加沙地带a coastal region at the southeastern corner of the Mediterranean bordering Israel and Egypt Mediterranean/ˌmedɪtəˈreɪniən/地中海 upend颠倒If you upend something, you turn it upside down. high stake高风险 stake桩a wooden or metal post that is pointed at one end and pushed into the ground in order to support sth, mark a particular place, etc.股份money that sb invests in a company赌注something that you risk losing, especially money, when you try to predict the result of a race, game, etc., or when you are involved in an activity that can succeed or fail Arab阿拉伯a person from the Middle East or N Africa, whose ancestors lived in the Arabian Peninsula peninsula半岛an area of land that is almost surrounded by water but is joined to a larger piece of land dispute putecomputer 争端；纠纷an argument or a disagreement between two people, groups or countries; discussion about a subject where there is disagreement a dispute between the two countries about the border 对…提出质询；对…表示异议（或怀疑）to question whether sth is true and valid [VN] These figures have been disputed. 有人对这些数字提出了质疑。 gutter gutcurb 檐沟a long curved channel made of metal or plastic that is fixed under the edge of a roof to carry away the water when it rains 路旁排水沟a channel at the edge of a road where water collects and is carried away to drains drain 下水道；a pipe that carries away dirty water or other liquid waste （使）流走，流出to make liquid flow away from sth; to flow away [VN] We had to drain the oil out of the engine. 我们必须把发动机里的机油全部放掉。 telltale 能说明问题的showing that sth exists or has happened telltale clues/marks/signs/sounds 能说明问题的种种线索 / 痕迹 / 迹象 / 声响 The telltale smell of cigarettes told her that he had been in the room. 那股明显的香烟味告诉她，他曾在这房间里待过。 triumph 巨大成功；重大成就；伟大胜利a great success, achievement or victory one of the greatest triumphs of modern science 现代科学最重大的成就之一 spur 马刺;靴刺Spurs are small metal wheels with sharp points that are attached to the heels of a rider’s boots. The rider uses them to make their horse go faster.","link":"/0002%20Social%20science/%E8%AF%AD%E8%A8%80%E5%AD%A6%20Linguistics%20and%20languages/english%20words/"},{"title":"earth_science","text":"黄梅地理1公顷 = 0.01 平方千米(km²) 合九铁路，北起安徽合肥，南至江西九江，连接安徽、湖北、江西三省，总长327千米。 京九铁路（Beijing-Kowloon Railway），简称京九线，是中国境内一条连接北京市至香港特别行政区的国铁Ⅰ级铁路；线路呈南北走向，串联中国华北、华中、华东和华南地区,为中国“三横五纵”干线铁路网中的一纵.原京九铁路是北京至九江铁路，即今京九铁路北京至九江段。 北京至九江铁路延长至香港九龙 上海—重庆高速公路，又称沪渝高速公路，简称沪渝高速，中国国家高速公路网编号G50，为中国国家高速公路网东西向干线之一. 上海―平望―湖州―宣城―芜湖―铜陵―池州―安庆―黄梅―黄石―鄂州—武汉―仙桃―荆州―宜昌―恩施―石柱―忠县―垫江―长寿—重庆，全长1786千米。 银武高速延伸后，变为福州—银川高速公路，简称福银高速，中国国家高速公路网编号为G70，起点在福州，途经三明、南平、南城、抚州、南昌、德安、九江、黄梅、黄石、鄂州、武汉、孝感、安陆、随州、襄阳、十堰、商州、西安、咸阳、平凉、中宁等县市，终点在银川，全长2485公里。 武黄高速是一条双向四车道的高速公路，是湖北第二条高速公路，也是湖北第一条在叫法上称之为高速的道路。自武汉市关山大道南环铁路桥至黄石市黄石长江大桥，全长70.299公里。武（汉）黄（石）高速公路是沪渝高速和福银高速的重要路段前身为关山到豹澥的关豹高速S（鄂高速）8 湖北省黄（石）黄（梅）高速公路是国家规划建设的沪渝高速、福银高速的重要组成部分 黄小高速公路，也称G020京福高速公路黄小段.在黄梅交汇口与黄黄高速公路相交，南至小池，接九江长江大桥，全长31公里。 北京—台北高速公路（Beijing–Taipei Expressway），简称“京台高速”，G3, 是中国境内连接北京市和台湾省台北市的高速公路，为中国国家高速公路网7条首都放射线中的第3条,以福建平潭为终点 鄂东长江大桥（E’dong Yangtze River Bridge）是中国湖北省境内连接黄石市和黄冈市的过江通道，位于长江水道之上.2010年4月18日，鄂东长江大桥完成主桥钢箱梁合龙工程，大桥全线贯通 九江长江大桥（Jiujiang Yangtze River Bridge），位于中国江西省九江市浔阳区和湖北省黄冈市黄梅县之间的长江水面上，是双层双线铁路、公路两用桥 [1] ，是中国桥梁建设史上第三座“里程碑”式的桥梁（前两座分别为武汉长江大桥和南京长江大桥）于1993年1月16日建成是京九铁路（与合九铁路共线）和国道G105的重要过江通道 九江二桥（The Second Jiujiang Bridge）是中国境内连接江西省九江市与湖北省黄梅县的过江通道，位于长江水道之上，是福州－银川高速公路（国家高速G70）重要组成部分之一。 于2013年10月28日通车运营九江二桥南起八里湖枢纽，上跨长江水道，北至小池收费站； 线路全长17.004千米、全桥长8462米；桥面为双向六车道城市快速路，设计速度100千米/小时 为秦岭褶皱带的延伸。呈西北—东南走向，东段呈东北—西南走向，大别山是中国长江和淮河的分水岭，山南麓的水流入长江，北麓的水汇入淮河 大别山的最高峰（主峰）叫白马尖（海拔1777米），次主峰多云尖（海拔1763米），第三高峰天河尖（海拔1755米），三峰成品字型三足鼎立 大别山地区是中国革命老区之一，土地革命战争时期全国第二大革命根据地——鄂豫皖革命根据地的中心区域。民国三十六年（1947年），刘邓大军挺进大别山的壮举，揭开了人民解放战争胜利的序幕。 柳界公路是湖北省通往皖西的一条公路干线。柳界公路起于新洲县境柳子港，经新洲、四合庄、林山河、方高坪、上巴河、浠水、蕲春、梅川、黄梅，止于鄂皖交界的界子墩，全长194.94公里。 北京—澳门公路（简称京澳线，编号G105） [7]，是中国的一条国家级南北主干道，起点为北京市永定门桥，终点为澳门特别行政区，全程2717千米。这条国道经过北京市、河北省、山东省、河南省、安徽省、湖北省、江西省、广东省、澳门特别行政区，8个省级行政区 京港高速铁路（Beijing-Hong Kong High-speed Railway），即京港高速线，又名京港客运专线、京九高速铁路、京九客运专线，简称京港高铁、京九高铁，是中国一条连接北京市与香港特别行政区的高速铁路 2021年12月30日，安庆西至庐山段开通运营 京港高速铁路由京雄商高速铁路、商合杭高速铁路北段、合安高速铁路、安九高速铁路、昌九高速铁路、昌赣高速铁路、赣深高速铁路、广深港高速铁路深港段的部分区段及其连接线构成，分段建设、分段通车。合安高速铁路、安九高速铁路 黄黄高速铁路（Huanggang-Huangmei High-speed Railway），简称黄黄高铁，即阜黄高速铁路黄黄段，是中国湖北省黄冈市一条连接黄州区与黄梅县的高速铁路黄黄高速铁路由黄冈东站至黄梅东站，全长126.85千米，设5座车站，设计速度350千米/小时，运营速度310千米/小时。2022年4月22日，黄黄高速铁路开通运营 杭武铁路，即武汉至杭州高速铁路通道，由武黄高铁（武汉至黄冈）、黄黄高铁（黄冈至黄梅）、合九客运专线（黄梅至安庆）、宁安客专安池段、池黄高铁、杭临绩高铁 [2] 组成。黄梅东站，是京九高铁湖北省的一个站点，武汉—安庆—杭州客运专线在黄梅南站与京九客专合九段接轨。","link":"/0003%20Natural%20science/%E5%9C%B0%E7%90%83%E7%A7%91%E5%AD%A6%20Earth%20science/earth_science/"},{"title":"time","text":"Coordinated Universal Time or UTC is the primary time standard by which the world regulates clocks and time.","link":"/0003%20Natural%20science/%E5%9C%B0%E7%90%83%E7%A7%91%E5%AD%A6%20Earth%20science/time/"},{"title":"travel","text":"","link":"/0003%20Natural%20science/%E5%9C%B0%E7%90%83%E7%A7%91%E5%AD%A6%20Earth%20science/travel/"},{"title":"农历","text":"农历农历，是中国现行的传统历法， 属于阴阳合历，也就是阴历和阳历的合历，是根据月相的变化周期，每一次月相朔望变化为一个月，参考太阳回归年为一年的长度，并加入二十四节气与设置闰月以使平均历年与回归年相适应。农历融合阴历与阳历形成为一种阴阳合历历法，因使用“夏正”，古时称为夏历。 现行农历于1970年以后改称“夏历”为“农历”。由中国科学院紫金山天文台负责计算，并于公元2017年颁布了国家标准《农历的编算和颁行》。 年份分为平年和闰年，平年为十二个月，闰年为十三个月 紫金历 - 中华民国、中华人民共和国（1929年- 至今） 月应用可以反映潮汐，潮汐现象是月亮起主导作用，以月相变化为依据的阴历是古时指导海事活动指南。远洋航海、海上捕鱼、海水养殖，海洋工程及沿岸各类生产活动等都受潮汐的影响。 潮汐是指海水在天体（主要是月球和太阳）引潮力作用下所产生的周期性运动，是沿海地区的一种自然现象。在中国古代称白天的潮汐为“潮”，晚上的称为“汐”，合称为“潮汐” 在夏历每月的初一即朔点时刻处太阳和月球在地球的一侧，所以就有了最大的引潮力，所以会引起“大潮”，在夏历每月的十五或十六附近，太阳和月亮在地球的两侧，太阳和月球的引潮力你推我拉也会引起“大潮”；在月相为上弦和下弦时，即夏历的初八和二十三时，太阳引潮力和月球引潮力互相抵消了一部分所以就发生了“小潮”。 大小月月份分为大月和小月，大月三十天，小月二十九天，其平均历月等于一个朔望月。农历年中月以朔望月长度29.5306日为基础，所以大月为30日，小月为29日。为保证每月的第一天（初一）必须是朔日，就使得大小月的安排不固定，而需要通过严格的观测和计算来确定。因此，农历中连续两个月是大月或是小月的事是常有的，甚至还出现过如1990年三、四月是小月，九、十、冬、腊月连续四个月是大月的罕见特例。 朔望月朔望月，又称“太阴月”。是指月球绕地球公转相对于太阳的平均周期，为月相盈亏的平均周期。以从朔到下一次朔或从望到下一次望的时间间隔为长度，平均为29.53059天。我国的先民们把月亮圆缺的一个周期称为一个“朔望月”，把完全见不到月亮的 一天称“朔日”，定为农历的每月初一； 朔望月是指月朔到月朔，或月望到月望，或新月到新月之间周期的长度，即平均日数为29天12小时44分2.86秒。这一周期是月亮绕地球旋转；地球绕太阳旋转，三者之间相对运动而形成的，它不是月亮绕地球旋转一周的实际时间。 如果不考虑地球围绕太阳的转动，单纯计算月亮绕地球旋转一周的时间，那只是27天7小时43分11秒。这一长度叫做“恒星月”。 恒星月:由于在月亮绕地球转动过程中，途径28组恒星星座，作为月亮运行位置的记录，每组恒星各有名目，通称28宿（宫）。月亮每天运行一宿，近28天正好实际绕行地球一周. 定朔计算考虑了日月运行的不均等性，将含有真正“朔”的当天作为每月的开始。 年“岁”和“年”，在古时是有严格区别的：从立春到下一个立春，谓之一岁；从一月一日到下一个一月一日，谓之“一年”。 二十四节气廿四个节气分别为：立春、雨水、惊蛰、春分、清明、谷雨、立夏、小满、芒种、夏至、小暑、大暑、立秋、处暑、白露、秋分、寒露、霜降、立冬、小雪、大雪、冬至、小寒、大寒。 定气 计算考虑太阳在黄道上运动快慢不匀，以春分点为0度起点，太阳在黄道上每运行15度为一个“节气”，每“节气”时间不均等。两个节气之间的天数不一样、短的只有14天、长的达16天。 现行的“二十四节气”来自于三百多年前订立的“黄经度数法”（1645年起沿用至今）， “黄经度数法”是根据太阳在回归黄道上的位置来确定节气的方法，即在一个为360度圆周的“黄道”（一年当中太阳在天球上的视路径）上，划分为24等份，每15°为1等份，以春分点为0度起点（排序上仍把立春列为首位），按黄经度数编排。也就是视太阳从黄经0度出发（此刻太阳垂直照射在赤道上），每当前进15度为一个节气，运行一周又回到春分点，为一回归年。 黄道圆周360度，太阳在黄道上每运行15度为一个“节气”，每“节气”的“度数”均等、“时间”不均等。廿四个节气是24个时间点，“点”具体落在哪天，是天体运动的自然结果。“黄经度数法”划分的节气，始于立春，终于大寒。 闰月闰月（Leap Month），是历法置闰方式的一种。即阴阳历逢闰年所加的1个月。农历属阴阳历，规定不含中气的月份为闰月，并用上月的月份名称或序数称“闰某月”。 十九年七闰 平气闰月兼顾季节时令，采用十九年七闰的方法：在农历十九年中，有十二个平年，为一平年十二个月；有七个闰年，每一闰年十三个月。 计算步骤1为什么采取“十九年七闰”的方法呢? 一个朔望月平均是29.5306日，一个回归年有12.368个朔望月，0.368小数部分的渐进分数是1/2 、1/3 、3/8 、4/11 、7/19 、46/125， 即每二年加一个闰月，或每三年加一个闰月，或每八年加三个闰月……经过推算，十九年加七个闰月比较合适。因为十九个回归年=6939.6018日，而十九个农历年(加七个闰月后)共有235个朔望月，等于6939.6910日，这样二者就差不多了。 计算步骤2希望m个回归年的天数与n个朔望月的天数相等，也就是应有等式：m × 365.2422=n × 29.5306。在这个等式中，我们不能直接求出m和n，但可以求出它们的比例： 其近似值为：在这些分式中，分子表示回归年的数目，分母表示朔望月的数目。例如第六个分数式=表示19个回归年中必须加7个闰月。19个回归年中加7个闰月的结果比较：19个回归年 = 365.2422日 × 19 = 6939.6018日，235个朔望月 = 354.3672日 × 12 + 383.879日 × 7 = 6939.691日。19个回归年中加7个闰月后，矛盾消除得只差：6939.6910 - 6939.6018 = 0.0892（天）——即2小时8分多，这已经是够精确的了。 现代闰月定气闰月 （可近似看成19年7闰） 闰月特指农历每二至三年增加的一个月。为了协调回归年与农历年的矛盾，防止农历年月与回归年即四季脱节，每2~3年置1闰。 一个阴历朔望月平均为29.5306天，12个朔望月为354天或355天，与阳历回归年（约365.25天）相差11天左右，3年累计的时间差距会超过一个月。 一般来说，每过两年多（平均每30个农历月）就会有一个没有中气的月，这正好和需要加闰月的年头相符。 置闰法的规则是依据与阳历回归年相关的二十四节气来定的。一个回归年分为二十四节气，如果二十四节气从立春排到大寒，那么单数就叫做节气，双数叫中气.现行的置闰方法是两个冬至之间，如仅有12个月则不置闰，若有13个月即置闰。置闰的月从“冬至”开始，当出现第一个没有“中气”的月份，这个月就是闰月，其名称是在这个月之前月份的名称前加一个“闰”字。 中气农历用十二个中气分别表征一年的十二个月，中气与中气之间的平均相隔相较一个阴历朔望月会多出近一天。长此以往，总会出现中气在月末的现象，那么接下去的一个月必然会没有中气而只剩节气了。于是这个没有中气的农历月份就被称作上一个月的闰月。 干支历干支历，是以十天干和十二地支进行两两搭配组成60组不同的天干地支组合，用以标记年月日时的历法。","link":"/0003%20Natural%20science/%E5%9C%B0%E7%90%83%E7%A7%91%E5%AD%A6%20Earth%20science/%E5%86%9C%E5%8E%86/"},{"title":"地理","text":"亚伯拉罕诸教亚伯拉罕诸教，又称亚伯拉罕宗教、亚伯拉罕一神诸教、天启宗教、天启诸教、闪族一神诸教、闪米特一神诸教、闪米特诸教等，指世界主要的三个有共同源头的一神教：基督宗教（包括天主教、基督新教与东正教）、伊斯兰教与犹太教。如此称呼，皆因这三个宗教均给予圣经旧约中的亚伯拉罕（阿拉伯语译作易卜拉欣）崇高的地位，且均发源于西亚沙漠地区，来源于闪米特人的原始宗教。 历史上于两河流域一带人们从事游牧生活，有部分人四处宣传教义，并主要以口头传颂其所见所闻留世。 但后期人类发展出城市文明后，这些共同累积的传记、神谕等陆续被相关学者以文字记录，汇编整合为经文一体，即圣经中的旧约部分。 各大教会并开始吸收各部族信徒、与其他含多神教等争夺谁最正确无矛盾。其中以犹太教派发展最为成功，在巴勒斯坦地区中为最早称王。 信仰上，犹太教仅承认《塔纳赫》，即希伯来圣经或称希伯来手稿。 直到经过多年后出现耶稣。他将犹太教视为阶段性、任务已结束的封闭宗教，传递新约。基督教成为古犹太教的新兴教派，编辑而成新约圣经补充了神所教导耶稣的最新教义，并将一神信仰推广至外族人，在罗马帝国的帮助下欧洲成为了基督教世界。 不过也因为基督教的修正倾向，继续分裂成多个宗教教派至今。而传统上犹太教认为基督教改变了神的意思，至今不承认基督教 犹太人违背了耶和华与以色列人定的约（即旧约），所以耶和华派祂的儿子耶稣作为弥赛亚（救世主），耶稣更无私地以自己的生命为全人类赎罪，故上帝不仅与以色列人订约，而与全体人类订立“新约” 伊斯兰教 伊斯兰教与基督教一样，伊斯兰教被认为是在吸收了犹太教之后，又在基督教的经典与教义思想的基础上创立的，同样的伊斯兰教经典古兰经不被前两者承认 较广为人知的有四部：第一部叫做《讨拉特》，有指是旧约中的律法书；第二部叫做《宰蒲尔》，即旧约中的诗篇；第三部叫做《引支勒》，即新约中的福音；第四部叫做《古兰经》。 亚非语系亚非语系，又称非亚语系，全称亚细亚-阿非罗语系，旧称闪米特－含米特语系（省称闪含语系），是现今世界的主要语系之一 亚非语系旧称闪含语系或闪米特-含米特语系，是从《圣经》的传说中，诺亚的两个儿子的名字来源的，圣经说他的儿子闪是希伯来人和亚述人的祖先，另一个儿子含是非洲人的祖先 亚非语系包括六个不同的语族：柏柏尔语族、乍得语族、闪米特语族、库希特语族、奥摩语族和已灭绝的埃及语族 亚非语系中使用人数最多的语言是现代标准阿拉伯语 闪米特语族米特语族，译作闪米特语族、塞姆语族或闪米特米特语族 ，旧称叙利亚-阿拉伯语族，是亚非语系之下的语族之一，起源于中东地区，其下属语言约有3.3亿人作为母语，分布于西亚、北非和非洲之角 “闪米特”一词来源于希伯来圣经创世记，是诺亚的三个儿子之一，相传是希伯来人和亚述人的祖先 闪米特语族中使用人数最多的语言是现代标准阿拉伯语 中东其他国 与中国接壤吉尔吉斯斯坦塔吉克斯坦阿富汗巴基斯坦印度中东其他土库曼斯坦哈萨克斯坦乌兹别克斯坦 伊斯兰教 伊斯兰教（也称回教或天方教，阿拉伯语：الإسلام, al-’islām；发音：[alʔɪsˈlaːm] （关于这个音频文件 聆听）），是以《古兰经》为基础，圣训为辅助的一神教宗教，世界三大宗教之一。穆斯林（伊斯兰信徒）相信《古兰经》为造物主命天使、天神给其最后使者穆罕默德逐字逐句的启示，而圣训则是穆罕默德的言行录。伊斯兰这一名称来自《古兰经》，源自闪语字根S-L-M，意为“追随、服从（真主的律法）”；穆斯林的名字也来自这个字根，意为“追随者”、“和平与善的实践者”。 截至2020年，全球约有19亿穆斯林，占24.9%的世界人口 逊尼派是伊斯兰教最大的教派，占穆斯林总数的75%－90%。他们强调穆斯林社团的历史传统，重视《古兰经》及圣训的宗教权威。这些穆斯林大约在10世纪下半叶自称为“遵奉逊尼的人们”，以区别于其他少数派.他们相信哈里发应该选贤与能由最合资格的人出任，而不是世袭 什叶派是伊斯兰教第二大的宗派，占穆斯林总数的10－20%。什叶派穆斯林主要分布在伊朗、阿塞拜疆、伊拉克南部及南亚，他们自视为是穆斯林里的“精英” 什叶派却相信穆罕默德指定了他的女婿阿里·本·阿比·塔利卜作为他的继承人，并认为只有阿里的一些后裔才能够成为伊玛目（穆斯林的领袖），因此他们认为阿里是第一位伊玛目 和犹太人一样，同属闪族的分支。根据伊斯兰传统的说法，阿拉伯人的祖先是易斯马仪（以实玛利），而易斯马仪则是易斯哈格（以撒）的同父异母兄弟，是易卜拉欣（亚伯拉罕）的长子。因此，犹太人和阿拉伯人同是兄弟，这一对兄弟的纷争已经有一千四百余年了。 伊斯兰恐怖主义（阿拉伯语：إرهاب إسلامي，ʾirhāb ʾislāmī，英语：Islamic terrorism），或称为极端伊斯兰恐怖主义，是团体或个人的伊斯兰教性质暴力恐怖主义，动机多是以《古兰经》的经文或源自圣训的教诲为名目。伊斯兰恐怖主义分子借鉴于古兰经的经文和圣训，把政治性质的暴力行为合理化。 什叶派 真主党 胡塞运动逊尼派 基地组织 塔利班 大部分穆斯林都在亚洲和非洲。全球约62%的穆斯林都在亚洲生活，超过6.82亿人分布在印度次大陆的三个国家（孟加拉、印度、巴基斯坦）及印尼，在西亚，非阿拉伯的土耳其及伊朗是最大的穆斯林占多数的国家。尼日利亚是非洲最大的穆斯林国家，他们的穆斯林人口超过任何一个阿拉伯国家，包括埃及 瓦哈比教派近代伊斯兰教复古主义派别。亦称瓦哈比派运动。18世纪中叶，由阿拉伯半岛纳季德地区的伊斯兰学者穆罕默德·伊本·阿卜杜勒·瓦哈卜(1703-1792)创立。该派自称“认主独一者”。 阿拉伯人/语在伊斯兰教中所谓的蒙昧时代，只有阿拉比亚的游牧民族贝都因人被称为阿拉伯人。 大扩张之后倭马亚王朝建立，只有源出阿拉伯半岛、血统纯正的人才有资格自称阿拉伯人，拥有高贵的身份； 而到了阿拔斯王朝，文明的融合进一步加强。阿拉伯人这个概念，逐渐包括了帝国属下所有使用阿拉伯语、信仰伊斯兰的各族人民。 阿拉伯语 阿拉伯语源自古语言闪米特语，源于叙利亚沙漠 [7]，于5世纪时在北方方言基础上形成统一的文学语言[7]，从公元6世纪开始便有古阿拉伯语的文献，公元7世纪开始，伴随着阿拉伯帝国的扩张，阿拉伯语完全取代了伊拉克、叙利亚、埃及和北非从前使用的语言。 4.阿拉伯帝国 （610年－1258年）阿拉伯帝国（632年－1258年），是阿拉伯半岛上的阿拉伯人于中世纪创建的统治伊斯兰教穆斯林，由哈里发统治的帝国（本意为“哈里发的领地”）。 倭马亚王朝的最大疆域 穆斯林认为是在公元610年开始，伊斯兰教先知穆罕默德开始奉真主之命而在麦加传播伊斯兰教。阿拉伯半岛上的各部落民众开始以伊斯兰教为核心建立一个统一的阿拉伯穆斯林国家。 阿拉伯世界（阿拉伯语：الوطن العربي）是指分布于西亚和北非，以阿拉伯语为主要语言，以伊斯兰教为主要信仰的国家和地区。阿拉伯世界人口总和4.23亿人，主要为阿拉伯民族。 阿拉伯半岛(/əˈreɪbiə/;)位于西亚，其西边和非洲接壤，它从中东向东南方伸入印度洋。面积3,237,500 km2，是世界上最大的半岛 沙特阿拉伯、也门、阿曼、阿拉伯联合酋长国位于阿拉伯半岛上。其中以沙特阿拉伯的面积最大，占据大部分的阿拉伯半岛。 阿拉伯半岛是伊斯兰教的诞生地。伊斯兰教的创教人穆罕默德在这里出生和生活。半岛上的麦加是伊斯兰教的圣地。以阿拉伯半岛为中心的阿拉伯帝国曾横跨欧亚非大陆。今天半岛上所有国家都以伊斯兰教为国教，并以逊尼派占多数。 阿拉伯海（阿拉伯语：بحر العرب）为印度洋的一部分。位于亚洲南部的阿拉伯半岛同印度半岛之间。北部为波斯湾和阿曼湾，西部经亚丁湾通红海。 阿拉伯之春在各地形势图： 政府被数次推翻 政府被推翻 爆发内战 爆发抗议活动以致政府改组 爆发大型抗议活动 爆发小型局部抗议活动 阿拉伯世界之外的军事行动和抗议活动 阿拉伯之春，又称“阿拉伯的觉醒”、“阿拉伯起义”，是指自2010年年底在北非和西亚的阿拉伯国家和其它地区的一些国家发生的一系列以“民主”和“经济”等为主题的社会运动，这些运动多采取公开示威游行和网络串连的方式，其影响之深、范围之广使全世界十分关注。从2011年初开始，其带来的影响与后续效应至今尚未完全结束。 造成这些动荡的主要原因包括：世界油价逐渐下跌导致阿拉伯地区依赖石油出口的国家的经济衰退、失业率居高不下、政府贪污腐败、人民生活贫困、专制统治、政治体制僵化、人权的侵犯；领导人长期执政，不思改革，政治经济分配不透明等等。 2008全球金融危机加剧了阿拉伯世界的经济困难，推动了革命运动的爆发 阿拉伯革命已经成功推翻了6个国家政权。2011年1月14日晚，突尼斯革命的局势恶化导致已执政23年的总统本·阿里下台并流亡沙特阿拉伯。埃及示威浪潮使总统穆巴拉克在2011年2月11日正式宣布下台，权力移交军方，结束长达30年统治。利比亚反对派成立全国过渡委员会，成功推翻卡扎菲长达42年的统治，卡扎菲本人于2011年10月20日被杀害。2012年2月27日，也门政治协议正式生效，已执政33年的总统萨利赫退位，萨利赫本人于2017年12月4日被杀害。2019年4月2日，阿尔及利亚总统布特弗利卡正式辞职，结束了近20年的总统生涯。2019年4月11日，掌权长达30年的苏丹总统巴希尔被军事政变推翻。 阿拉伯之冬是专制主义和伊斯兰极端主义在阿拉伯世界的阿拉伯之春抗议活动之后东山再起的术语 巴勒斯坦国 巴勒斯坦国领土（红色）及实际控制领土（深红色） 迦南人，巴勒斯坦的早期居民，讲闪语族语言，属于闪米特民族的一支。血缘上与阿拉伯人和犹太人相近，在新石器时代由当地人与东方移民混血所产生。他们曾经击败希伯来人（犹太人）对巴勒斯坦的入侵，但后来最终被希伯来人统治。随后融入其他闪米特民族。现代90%黎巴嫩人的DNA来自迦南人。 1988年11月15日，在阿尔及利亚首都阿尔及尔举行的巴勒斯坦全国委员会第19次特别会议通过《独立宣言》，巴勒斯坦解放组织宣布在巴勒斯坦土地上建立首都为耶路撒冷的巴勒斯坦国。 2007年6月因内部两大势力严重不和而形成分裂局面，其中巴勒斯坦伊斯兰抵抗运动（即“哈马斯”）占有加沙地带，而巴勒斯坦民族解放运动（即“法塔赫”）主导的巴勒斯坦自治政府则管治约旦河西岸，受巴勒斯坦民族权力机构监督。 巴勒斯坦国现由巴勒斯坦解放组织正式管理，并宣称拥有西岸和加沙地带；然而，这两个地区自1948年便分别由约旦和埃及占领，自1967年六日战争以来则由以色列占领 巴勒斯坦至今未能正式立国，以巴冲突仍在延续。 黎巴嫩 黎巴嫩共和国（阿拉伯语：لبنان；亚拉姆语：ܠܒܢܢ, 法语：Liban）通称黎巴嫩，位于亚洲西南部（西亚）、地中海东岸，习惯上归属于中东国家。东北部与叙利亚接壤，南部与以色列和巴勒斯坦为邻，西濒地中海。黎巴嫩历史上与基督教关系密切，是中东地区为数不多的共和国和西化的国家之一。 1920年，国联将叙利亚、黎巴嫩委托法国统治，两国分别于1941年和1943年独立。叙利亚不承认黎巴嫩的独立，视其为叙利亚的属地。 1975年，黎巴嫩内乱为本国穆斯林和巴勒斯坦人一方，基督徒为另一方的战争 2005年2月，黎前总理哈里里遇害，叙迫于国际压力，结束了在黎29年的驻军。 尽管黎巴嫩基督徒的大量迁出导致其在该国的多数族裔地位逐步消退，这一群体在今天仍旧代表着黎巴嫩最大的宗教派别之一 约旦叙利亚伊拉克 伊朗和伊拉克都为伊斯兰国家，信奉伊斯兰教。伊朗的伊斯兰教徒以什叶派为主，伊拉克虽然也是什叶派穆斯林占多数，但掌握国家政权的却是逊尼派。 历史上，伊拉克为什叶派发源地，掌握了国家政权的伊朗什叶派不满伊拉克逊尼派大权在握，同样令他们不满意的还有伊拉克并非一个政教合一的国家 伊朗人口主要由波斯人组成，而伊拉克及大多数阿拉伯国家为阿拉伯人占多数。 美索不达米亚 美索不达米亚（亚拉姆语：ܒܝܬ ܢܗܪܝܢ，希腊语：Μεσοποταμία，）是古希腊对两河流域的称谓，μεσο意为中间，ποταμία为古希腊文中河流（阿拉伯语：بِلَاد ٱلرَّافِدَيْن）之意，转化成“（两条）河流中间的地方”。这两条河指的是幼发拉底河和底格里斯河，在两河之间的美索不达米亚平原上产生和发展的古文明称为两河文明或美索不达米亚文明，它大体位于现今的伊拉克，其存在时间从公元前4000年到公元前2世纪，是人类最早的文明。 其西边是叙利亚沙漠，北部是土耳其的托罗斯山脉，东部是伊朗的扎格罗斯山脉，南边滨临波斯湾。幼发拉底河和底格里斯河发源于土耳其东部的山脉和高地，随后几乎平行地向南流入波斯湾，沿两岸形成的冲积平原就是美索不达米亚。 楔形文字 起源和发展于美索不达米亚的文字，由于其外形有些像钉子或楔子，所以被称为楔形文字 新苏美尔时期 前2193年－前2004年 古巴比伦 亚述 前2004年－前605年 新巴比伦 迦勒底人 前605年－前539年 巴比伦文明大致以今天的巴格达城为界，分为南北两部分。北部以古亚述城为中心，称为亚述利亚，或简称亚述；南部以巴比伦城（今巴比伦省希拉市东北郊）为中心，称为巴比伦尼亚，意思为“巴比伦的国土”。巴比伦尼亚又分为两个地区，南部靠近波斯湾口的地区为苏美尔，苏美尔以北地区为阿卡德，美索不达米亚文明最初就是由苏美尔人创造出来的。 科威特埃及古埃及古埃及（阿拉伯语：مصر القديمة）是位于非洲东北部尼罗河中下游地区的古代文明，开始于公元前32世纪左右时美尼斯统一上下埃及建立第一王朝，终止于公元前343年波斯再次征服埃及。 埃及学家一般将古埃及历史和历代法老王朝分为前王朝时期（公元前31世纪之前）、早王朝时期（约公元前3100年—公元前2686年）， 公元前3188年左右，传说上埃及国王美尼斯统一上、下埃及，建立第一王朝，定都孟斐斯（今吉萨省拜德尔舍因（Al Badrashin）拉希纳村（Mit Rahina），孟菲斯并不位于开罗，开罗应位于另一个古城赫利奥波利斯），成为古埃及第一个法老，古埃及从此开始王朝时期。 古王国时期（约公元前2686年—公元前2181年），第一中间期（约公元前2181年—公元前2040年），中王国时期（约公元前2040年—公元前1786年），第二中间期（约公元前1786年—公元前1567年），新王国时期（约公元前1567年—公元前1085年），第三中间期（约公元前1085年—公元前667年），后王朝时期（约公元前667年—公元前332年）， 波斯统治在公元前525年被波斯阿契美尼德帝国所灭，古埃及时代结束。 希腊罗马化埃及 托勒密王朝公元前332年埃及又被亚历山大大帝所统治，亚历山大死后，其部将托勒密占领埃及，建立托勒密王朝，也被称为法老 罗马帝国统治时期随后，古罗马崛起，成为地中海世界大国，埃及也被其占领。 罗马帝国之后公元7世纪，阿拉伯人再次入侵埃及，古埃及原有的文明在这一过程中被阿拉伯文明所取代，而逐渐消失。 1517年，埃及开始受奥斯曼帝国统治，1798年－1801年受法国统治，1801年后英国势力侵入。埃及最终在1922年取得独立，1953年建立共和国，但它已经是一个阿拉伯国家了。 沙特阿拉伯沙特半岛其他巴林卡塔尔阿拉伯联合酋长国阿曼也门 希伯来语希伯来人的名称源自希伯(Eber)。根据《创世记》第10章第22-24节，希伯是挪亚的玄孙、闪的曾孙、亚法撒的孙子 希伯来语（עִבְרִית ‘Ivrit，读音：[iv’ri:t]），属于亚非语系闪米特语族，为古代犹太民族（以色列民族或希伯来民族）一直到现代人民的民族语言、也是基督教和犹太教的宗教语言。过去2500年，希伯来语主要用于《圣经》与相关宗教方面的研究，自从20世纪特别是以色列复国以来，希伯来语作为口语在犹太人中复活 以色列 希伯来人在过去3000年的历史中，犹太人视以色列地为自己的民族和精神生活的核心，称之为“圣地”或“应许之地”。 前12世纪，犹太人的祖先希伯来部落迁此，于前11世纪建立王国，之后一直受古埃及统治直到公元前10世纪撤出巴勒斯坦地区。 大卫王与所罗门王 自19世纪末锡安主义兴起后，1917年英国政府发布贝尔福宣言表态支持犹太复国运动，在巴勒斯坦也掀起数波犹太人回归运动，使得当地犹太人比率不断升高。然而因犹太人离去已约2000年，长久以来早已成为阿拉伯人的传统领域，此种“回归”事实上也对当地阿拉伯居民造成严重伤害，认为犹太人侵略他们居住数千年的土地，因而以阿冲突事件的升高也与犹太人的数量成正比。 1947年，犹太人与阿拉伯人两者之间的冲突不断升级、批评声浪增加，犹太人宣布将于1948年5月14日建立以色列国，英国政府则决定自1948年5月15日起切割其作为巴勒斯坦托管者的身份 1947年11月，联合国大会表决《1947年联合国分治方案》。将巴勒斯坦托管地（约旦河以西[注 2]）再分为两个国家，由犹太人与阿拉伯人分治，划为多块交错的领土，两国领土面积分别占大约55%及45%；至于耶路撒冷则被置于联合国的管理之下，以免双方发生冲突。《1947年联合国分治方案》，蓝色：犹太国家（即以色列）橙色：阿拉伯国家（即巴勒斯坦） 1948年5月14日，在英国的托管期结束前一天，以色列国正式宣布成立。 约旦则占有东耶路撒冷、以色列南部一块山地区域和撒马利亚，后来那里被称为西岸地区；埃及在沿海地区占有一小块的土地，后来被称为加沙地带。 以色列建国时首都在特拉维夫，1950年迁往耶路撒冷，但未获国际社会普遍承认。1980年7月30日，以色列议会通过法案，宣布“完整和统一的耶路撒冷是以色列的首都” 以色列行政区划包括以下六个行政区（括号内为首府）： 1 北部区（拿撒勒）2 海法区（海法）3 中央区（拉姆拉）4 特拉维夫区（特拉维夫）5 耶路撒冷区（耶路撒冷）6 南部区（贝尔谢巴）另外，以色列还有以下三个争议地区（括号内为争议地区所属的以色列行政区划）： A 戈兰高地 （北部区，原叙利亚领土，现由以色列管辖）B 约旦河西岸 （犹大-撒马利亚区，原约旦领土，现部分由巴勒斯坦民族权力机构实际管辖）C 加沙地带 （加沙区，现由巴勒斯坦民族权力机构管辖） 阿尔泰语系主要将突厥语族、蒙古语族和通古斯语族划为一个语系 突厥语族 早期的突厥人起源于东北亚，然后向西迁移。他们在基因上与其他东亚族群密切相关。 突厥语民族，即广义的突厥人（土耳其语：Türk / Türkler），是欧亚大陆使用突厥语族语言的众多族群的统称，源自原始突厥族 突厥汗国（突厥语： türk），又称突厥第一汗国，为原先在柔然统治下的阿史那氏部族，连合使用古突厥语的各游牧部落，于552年在今蒙古国地区建立了由古突厥民族组成的古代帝国，并一度控制漠北、中亚等柔然故地。 以突厥语为官方语言或主要语言的国家和地区。 土耳其土耳其共和国（土耳其语：Türkiye Cumhuriyeti），通称土耳其（土耳其语：Türkiye），是横跨欧亚两洲的国家，其国土包括西亚安纳托利亚半岛、以及巴尔干半岛的东色雷斯地区；其中亚洲部分包含了约97%的领土与87%的人口[5]。北临黑海，南临地中海，东南与叙利亚、伊拉克接壤，西临爱琴海，并与希腊以及保加利亚接壤，东部与格鲁吉亚、亚美尼亚、阿塞拜疆、伊朗接壤。 土耳其这个国名在土耳其语中为“Türkiye”，该词汇来源于奥斯曼土耳其语，意为“突厥人的土地”。 在英语中，土耳其长期被称为“Turkey” 因为“Turkey”一词的含义后来在英语中有“火鸡”、“愚蠢的人”、“失败”等负面的意思，所以有很多土耳其人认为这损害了国家声誉。2021年12月，土耳其总统雷杰普·塔伊普·埃尔多安下令避免使用“Turkey”、“Turkei”、“Turquie”等敏感词汇，将出口产品上“Made in Turkey”的英文标签改为“Made in Türkiye” 古安纳托利亚人自新石器时代起即于此生活，直至亚历山大大帝征服此地[17]。这些民族普遍使用安那托利亚语言（印欧语系的分支之一） 塞尔柱王朝为乌古斯突厥人的一支，9世纪时定居于穆斯林世界边缘的乌古斯叶护国，里海与咸海以北[38]。10世纪时，塞尔柱人由其发源地迁徙至波斯，这一地区也成为大塞尔柱帝国的行政中心 1071年，塞尔柱帝国于曼齐刻尔特战役中击败拜占庭帝国，由此这一区域的突厥化进程开始，土耳其语和伊斯兰教得到传播，安纳托利亚也逐渐由基督教希腊语地区转变为穆斯林土耳其语地区 2016年，伊斯兰教是土耳其的主要宗教，占总人口83％ 现代土耳其人是乌古斯突厥的一部，他们认为突厥的历史可以追溯到公元48年立国的北匈奴。但实际上，历经长期的迁徙和混血，土耳其人和原突厥人在血统和相貌上都相去甚远。土耳其人今天的血统为白种人血统，主要以东伊朗人（东波斯人）和希腊人为主。 Anatolia一般指小亚细亚半岛 小亚细亚半岛(Asia Minor Peninsula)，又称安纳托利亚半岛，亚洲西部的半岛，位于土耳其境内 5.奥斯曼帝国 奥斯曼帝国（英文：Ottoman Empire；1299年 —1923年 ），是土耳其人建立的多民族帝国，因创立者为奥斯曼一世而得名。统治者为起源于中亚突厥游牧部落的奥斯曼人 继承了东罗马帝国的基督教文化及伊斯兰文化，因而东西文明在其得以统合 其后第一次世界大战败于协约国之手，奥斯曼帝国因而分裂。 土耳其语（Türkçe；[ˈtyɾctʃe] （关于这个音频文件 聆听） ），是一种现有7300万到8700万人使用的语言，属突厥语族，主要在土耳其本土使用 土耳其语是突厥语族诸语中使用人数最多的语言。 高加索格鲁吉亚阿塞拜疆亚美尼亚 pavonis孔雀座 现行的国际通用星座划分方式确立于1930年，国际天文联合会在古希腊星座的基础上通过边界划分确立了88个星座区。 按照天球位置进行天区分类，这88个星座可以被分为29个北天星座、12个黄道星座、47个南天星座。 按照星座家族划分方式，又可归类出8个星座家族:大熊家族、黄道家族、英仙家族、武仙家族、猎户家族、幻之水族家族、拜耳家族、拉卡伊家族。 黄道星座家族(黄道上的13个星座): 白羊座、金牛座、双子座、巨蟹座、狮子座、室女座、天秤座、天蝎座、蛇夫座、射手座、摩羯座、水瓶座、双鱼座。(注:属于南天星座的蛇夫座虽然并非黄道星座，但也被黄道带所穿过，属于黄道星座家族) 印欧语系 印欧语系（英语：Indo-European languages），全称印度—欧罗巴语系，是世界上分布最广泛的语系。欧洲、南亚、美洲和大洋洲的大部分国家都采用印欧语系的语言作为母语或官方语言。印欧语系包括443种（SIL统计）语言和方言，母语使用人口有约32亿。 日耳曼语族 西日耳曼语支 盎格鲁-弗里西语 -&gt; 英语 古高地德语 -&gt; 德语 低地法兰克语 -&gt; 荷兰语 -&gt; 南非语 北日耳曼语支（古诺尔斯语） 瑞典语|丹麦语 挪威语 意大利语族 -&gt; 拉丁语 -&gt; 罗曼语族 -&gt; 意大利-西罗曼语支 伊比利亚语支 -&gt; 西班牙语|葡萄牙语 高卢语支 -&gt; 法语 意大利-达尔马提亚语支 -&gt; 意大利语 斯拉夫语族 东斯拉夫语支 俄语 乌克兰语 白俄罗斯语 古斯拉夫语支 波兰语 捷克语|斯洛伐克语 南斯拉夫语支 保加利亚语 塞尔维亚-克罗地亚语 波罗的语族 立陶宛语 希腊语族 希腊语 印度-伊朗语族 伊朗语支 西伊朗语支 -&gt; 南支 -&gt; 波斯语伊朗 西伊朗语支 -&gt; 北支 -&gt; 米底语 -&gt; 库尔德语伊拉克 东伊朗语支 -&gt; 南支 -&gt; 普什图语阿富汗 印度-雅利安语支 雅利安人（英语：Aryan）一般指印度西北部的一支族群。现在“雅利安”几乎仅用于语言学术语印度-雅利安语支中，“雅利安人”就是讲这个语支的语言的人，主要指印度-雅利安人。 在十九世纪，由于对于梵文佛经的误解，一些西方学者产生了种族主义的观念：认为一支金发且肤色白皙的北欧“雅利安人”从北欧出发，征服了世界各处，而创始了各大文明。在此之后，他们和各地当地人种通婚混血，而变得不纯正。 二十世纪初，纳粹德国把优等民族（Herrenrasse）称为雅利安人。他们认为德国人是血统最纯正的北欧民族之一，而对其它种族（尤其是犹太人和吉普赛人）施行歧视、征服和灭绝策略。 吠陀梵语 -&gt; 梵语 西部印地语 -&gt; 印度斯坦语 -&gt; 印地语hindi 凯尔特语族 爱尔兰语 威尔士语 Latin (lingua Latīna [ˈlɪŋɡʷa ɫaˈtiːna] or Latīnum [ɫaˈtiːnʊ̃]) is a classical language belonging to the Italic branch of the Indo-European languages. through the power of the Roman Republic it became the dominant language in the Italian region and subsequently throughout the Roman Empire. 俄罗斯 印度-伊朗语族印度 伊朗 波斯 波斯（拉丁语：Persia）是伊朗在欧洲的古希腊语和拉丁语的旧称译音，是伊朗历史的一部分。 自公元前600年开始，希腊人把这一地区叫作“波斯” 波斯人则从萨珊王朝时期起开始称呼自己的国家为埃兰沙赫尔（Erânshahr or Iranshahr），意为“中古雅利安人帝国”。 1935年，波斯国王礼萨·汗宣布国际上该国应被称作“伊朗”，但“波斯”一词在这之后还有人使用。 在中文里，“波斯”被用于描述1935年之前的伊朗，或该民族从古就有的事物，如波斯语和波斯地毯。现代政治、经济等事物则用“伊朗”一词。其实根据考据，艾兰（Eran）、雅利安（Aryan）、伊朗（Iran）皆是同词音转，具有同源关系，皆为伊朗本身的名字。 伊朗是一个由什叶派主导的伊斯兰共和制国家。伊斯兰教在伊朗拥有至高无上的道德权威，是公共生活的最高准则。 埃兰和米底时期（前2700年－前553年） 中古与近代时期 637年，阿拉伯帝国的穆斯林军在卡迪西亚战役打败波斯萨珊王朝的军队，攻占其首都泰西封，开始了伊斯兰对波斯的征服，同时也终结了波斯地区的琐罗亚斯德教文化。 safavid empire萨法维王朝 萨法维王朝（波斯文：سلسلهٔ صفويان，英文：Safavid dynasty；1501年－1736年） 巴列维王朝时期 1921年2月21日，礼萨·汗上校发动军事政变，占据德黑兰，1925年取得王位，建立巴列维王朝，于1935年改国名为伊朗。美国为了获得伊朗的石油及保持在中东的利益，大力扶持巴列维王朝，伊朗强大的军力俨然成为波斯湾地区的警察。 伊斯兰共和国时期 伊朗伊斯兰革命 1979年4月1日霍梅尼宣布改国名为伊朗伊斯兰共和国，举行公民投票，建立了政教合一的制度。 两伊战争 1.波斯帝国 （前2700年－前553年） 阿契美尼德王朝（古波斯语：𐎧𐏁𐏂，罗马化：Xšāça，直译：帝国），也称波斯帝国或波斯第一帝国，《圣经》中称为玛代波斯/波斯米底亚，是古代波斯地区第一个把领土扩张到大部分中亚和西亚领域的王朝，也是第一个横跨欧亚非三洲的帝国。 阿契美尼德一词的意思是“阿契美尼斯家族中的一员”。阿契美尼斯（古波斯语：𐏃𐎧𐎠𐎶𐎴𐎡𐏁 āHaxāmaniš；[20]） 是bahuvrihi复合词，意为“了解朋友的思想” 阿富汗 阿富汗（普什图语和达利语：افغانستان）是位于亚洲中南部的内陆国家 阿富汗民主共和国建立1978年4月30日1979年苏联军队入侵，处决了阿富汗人民民主党总书记哈菲佐拉·阿明。苏联扶植的阿富汗民主共和国 阿富汗伊斯兰国建立1992年4月28日推翻了苏联扶植的阿富汗民主共和国的圣战者们，建立了阿富汗伊斯兰国 阿富汗伊斯兰酋长国建立1996年9月7日发源于阿富汗坎大哈地区的伊斯兰原教旨主义运动组织-塔利班，于1994年兴起，逐渐发展具有政治与宗教武力的团体，最终在1996年攻陷喀布尔获取政权，得以占领90%的国土，1997年10月改国名为“阿富汗伊斯兰酋长国” 阿富汗伊斯兰共和国建立2004年1月26日 美国与其盟友随着2001年发生的911事件后发起阿富汗战争以及同时支持反对塔利班的北方联盟让塔利班酋长国政权瓦解。2004年1月26日，美国扶持的阿富汗伊斯兰共和国成立。2021年8月美军宣布撤出阿富汗后，塔利班迅速击溃政府军占领绝大多数阿富汗领土 阿富汗伊斯兰酋长国重建2021年8月19日2021年8月19日下午，塔利班取得胜利后，正式宣布重建“阿富汗伊斯兰酋长国” 基督教 Catholc Protestant新教教徒（16世纪脱离罗马天主教）a member of a part of the Western Christian Church that separated from the Roman Catholic Church in the 16th century 正教的；东正教派的belonging to or connected with the Orthodox Church 高卢古罗马人把居住在现今西欧的法国、比利时、意大利北部、荷兰南部、瑞士西部和德国南部莱茵河西岸一带的凯尔特人统称为高卢人。 3.意大利 / 罗马帝国 （前27年-1453年） 罗马自公元前三世纪已经开始并吞行省；四个世纪后,罗马的领土范围已经达到前所未有地辽阔。 罗马帝国可分为前期（前27年—200年）、中期（200年—395年）和后期〔395年—1204年[注 2]/1453年[注 3]〕三个阶段。 西罗马帝国在476年灭亡后，东部帝国（亦称拜占庭帝国）延续到1453年被奥斯曼人攻陷君士坦丁堡为止。 4.东罗马帝国 〔395年—1204年/1453年〕 东罗马帝国是罗马帝国于公元286年实行东西分治后，于原帝国东部（相对于西部的西罗马帝国）分离出的政权；其被当时的西欧世界视为有别于古罗马的新政权，故其灭亡后西欧学界普遍称之为拜占庭帝国。然而其国祚一千余年期间仍自称罗马帝国 拜占庭（希腊语：Βυζάντιον，拉丁语：Byzantium）是一个古希腊城市，也为现今土耳其伊斯坦布尔（君士坦丁堡）的旧名，相传是从墨伽拉来的殖民于公元前667年建立的。拜占庭的名字据说出自他们的王“拜占斯（Βύζας或Βύζαντας）”，直至4世纪中期，该城发展成东罗马帝国（即拜占庭帝国）的中心，更名为君士坦丁堡 法兰克王国 481年 - 843年 法兰克王国（拉丁语：Regnum Francorum，法语：Royaumes francs，德语：Fränkisches Reich），指的是一个5世纪至9世纪间存在于欧洲中欧和西欧的王国 拿破仑帝国 希腊语族希腊希腊共和国在欧洲的位置 希腊共和国在世界上的位置 古希腊 古希腊（希腊语：Ελλάς，罗马化：Ellas）是希腊的一个历史时期，狭义上指希腊地区从公元前12世纪迈锡尼文明毁灭至公元前146年希腊地区被罗马共和国征服为止。广义上指爱琴诸文明在罗马人征服前的全部历史。 青铜时代早在约公元前3650年，爱琴海地区就孕育了灿烂的米诺斯文明（或称克里特文明）， 约公元前16世纪被迈锡尼文明取代，文明中心从克里特岛转向了希腊大陆。 黑暗时代约公元前1200年，多利安人入侵毁灭了迈锡尼文明，希腊历史进入所谓“黑暗时代”或“中古希腊”。 古风时代在公元前九世纪末期，海上贸易再次兴盛，新的城邦国家纷纷建立。 古典时代公元前5世纪初在雅典与斯巴达领导下，希腊城邦联军在两次波希战争战胜波斯帝国。此时希腊文明进入了最高峰，古典哲学，科技，艺术以及民主政治快速发展，获称为“黄金时期”（伯里克利在位）。 伯罗奔尼撒战争结束了雅典民主制，希腊各城邦进入混战。 希腊化时代 公元前4世纪末马其顿国王亚历山大大帝征服希腊地区后，古希腊文化播迁到埃及与印度河流域的广大地区，称为希腊化时期。 2.马其顿王国 （前808年 - 前168年） 马其顿王国（古希腊语：Μακεδονία）是古希腊西北部王国。其史上最辉煌的时期即为亚历山大大帝开创的亚历山大帝国。 亚历山大帝国是历史上继波斯帝国之后第二个地跨欧、亚、非三洲的帝国 前808年卡拉努斯建立阿吉德王朝 前168年第三次马其顿战争战败，被罗马共和国吞并 Aegaeus爱琴海的位置 爱琴海（希腊语：Αιγαίο Πέλαγος；土耳其语：Ege Denizi，或Adalar Deniz）是欧洲与亚洲之间的一个细长陆缘海，位于巴尔干半岛与安纳托利亚之间 爱琴海北侧经达达尼尔海峡、博斯海峽与黑海相连，南侧接地中海。 缘海、陆陆缘海或称边陆缘海（英语：Marginal Sea）指的是大海的四周大部分是由半岛、岛屿或者陆地所环绕的大海；名称差异为陆缘海是地球科学名词，陆陆缘海是地质学名词，边陆缘海是海洋学名词，英文名称都是Marginal Sea 与内海、海湾差异：目前对于内海与边陆缘海的定义都不明确，同一个区域海域对于某一广大海域为边陆缘海，但该区域海域靠近某个单一国家的海域，对该国家来说又可以是一个内海或海湾，并没有明确定义区分此差异。 Austro-Hungariian Empire 奥斯特罗·匈牙利 奥匈帝国奥地利帝国（德语：Kaisertum Österreich、英语：Austrian Empire，1804年-1918年）1156年，神圣罗马帝国皇帝腓特烈一世在位期间，对帝国内部的大国进行了拆解，其中对巴伐利亚的拆解使用了小特权方案，奥地利由边区提升为公国，正式建国。 German Confederation匈牙利 HUNGARY马扎尔人（匈牙利语：magyarok），也可写为马札儿人，由于是匈牙利的主体民族（2016年人口为1200万-1400万），故又称匈牙利人，母语属于乌拉尔语系 欧洲近现代1500年 1880年 World War I World War II EU 亚洲 牧民pastoral people蒙古人 mongol 1200-1500成吉思汗 非洲摩洛哥 Morocco美洲美洲原住民在15世纪末之前本来并没有统一的称法。1492年意大利航海家克里斯托弗·哥伦布航行至美洲时，误以为所到之处为印度，因此将此地的原住民称作“印度人”（西班牙语：“indios”），后人虽然发现了错误，但是原有称呼已经普及，所以英语和其他欧洲语言中称印第安人为“西印度人”，在必要时为了区别，称真正的印度人为“东印度人”。汉语翻译时直接把“西印度人”这个单词翻译成“印第安人”或“印地安人”，免去了混淆的麻烦，到目前仍为最普及的用法。","link":"/0003%20Natural%20science/%E5%9C%B0%E7%90%83%E7%A7%91%E5%AD%A6%20Earth%20science/%E5%9C%B0%E7%90%86wiki/"},{"title":"","text":"美国数学知识点 小学数学： 基本数学操作：加法、减法、乘法、除法。 数字系统：整数、分数、小数、百分数。 几何：形状、线、角、面积、周长、体积。 测量单位：长度、质量、容积、时间。 数据分析：图表、统计、平均值。 初中数学： 代数：方程、不等式、线性函数、多项式。 几何：平面几何、立体几何、三角学。 数学应用：比例、百分比、利率、利润与损失。 数据和概率：统计、概率、数据分析。 有理数和整数：分数、小数、整数操作。 高中数学： 代数和三角学：多项式、根与幂、三角函数、复数。 几何：解析几何、向量、三维几何。 高级函数：指数函数、对数函数、三角函数、多项式函数。 高级代数：二次方程、不等式、函数组合与复合。 微积分：导数、积分、微分方程。 概率与统计：概率、统计分布、抽样与推断。","link":"/0004%20Formal%20science/%E6%95%B0%E5%AD%A6%20Mathematics/math%20wiki/"},{"title":"","text":"THE COMPLETE HIGH SCHOOL STUDY GUIDE – EVERYTHING YOU NEED TO ACE BIOLOGY IN ONE BIG FAT NOTEBOOKUNIT 1: Basics of BiologyChapter 1: Introdution to BiologyWAHT IS BIOLOGYliving things -&gt; organism organism 有机体系a system consisting of parts that depend on each other a living thing, especially one that is extremely small life cycle organisms grow, change, reproduce, and die.the series of changes that organism can go through are called the life cycle. a human life cycle: infancy -&gt; childhood -&gt; adolescence -&gt; adulthood -&gt; fertilization infancy婴儿期；the time when a child is a baby or very young adolescence青春期；the time in a person’s life when he or she develops from a child into an adultWorld Health Organization definition officially designates an adolescent as someone between the ages of 10 and 19. puberty青春期the period of a person’s life during which their sexual organs develop and they become capable of having childrenIt is a process that usually happens between ages 10 and 14 for girls and ages 12 and 16 for boys. fertilization （胚）受精creation by the physical union of male and female gametes（农）施肥making fertile as by applying fertilizer or manure fertilizer肥料Fertilizer is a substance such as solid animal waste or a chemical mixture that you spread on the ground in order to make plants grow more successfully. 粪肥the waste matter from animals that is spread over or mixed with the soil to help plants and crops grow TYPE OF BIOLOGY: disciplines BRANCH THE STUDY OF… Anatomy the bodily structure of organisms. Botany plants. Ecology the relationships between various organisms. Microbiology tiny organisms. Pathology the causes and effects of diseases. Pharmacology the uses and effects of drugs. Physiology the functions of living organisms and their parts. Taxonomy the classification of organisms. Toxicology the nature and effects of poisons. Zoology animals Anatomy解剖学the scientific study of the structure of human or animal bodies Botany植物学the scientific study of plants and their structure Zoology动物学the scientific study of animals and their behaviour Pathology病理学 Pharmacology药理学the scientific study of drugs and their use in medicine Physiology生理学生理学是生物学的一个主要分支，是研究生物机体的各种生命现象，特别是机体各组成部分的功能及实现其功能的内在机制的一门学科。 Taxonomy分类学 THE TOOLS OF THE BILOGIST Microscopes the most basic concept in biology – organisms are made uo of cells e basic function: to show details inobjects that cannot be seen by the naked human eye. compound(light) microscope.It has two lenses: the OCULAR LENS that we look through and the two OBJECTIVE LENSES that are closer to the SLIDE .SLIDE: A thin piece of glass used to hold a specimenSPECIMEN: A sample that is studied. a small amount of sth that shows what the rest of it is like 光学显微镜通常皆由光学部分、照明部分和机械部分组成。无疑光学部分是最为关键的，它由目镜和物镜组成。 电子显微镜有与光学显微镜相似的基本结构特征，但它有着比光学显微镜高得多的对物体的放大及分辨本领，它将电子流作为一种新的光源，使物体成像。 透射电子显微镜因电子束穿透样品后，再用电子透镜成像放大而得名。它的光路与光学显微镜相仿，可以直接获得一个样本的投影。通过改变物镜的透镜系统人们可以直接放大物镜的焦点的像。电子透镜用来聚焦电子，是电子显微镜镜筒中最重要的部件。它用一个对称于镜筒轴线的空间电场或磁场使电子轨迹向轴线弯曲形成聚焦，其作用与光学显微镜中的光学透镜（凸透镜）使光束聚焦的作用是一样的，所以称为电子透镜。光学透镜的焦点是固定的，而电子透镜的焦点可以被调节 X-RAY X-rays are a type of RADIATION that areabsorbed by various things. RADIATIONThe transmission of energy in the form of waves through an object. When a human, or animal, undergoes an X-ray, the image taken of their body reveals the structures that absorbed the most radiation.In the picture, bones appear white because the calcium in them absorbs the most radiation.Everything else in the body absorbs less radiation, causing the color of the organs to look gray or black. MAGNETIC RESONANCE IMAGING SCANS (MRIs)MRIs use a magnet and radio waves to produce detailed images of internal organs and muscles that might not show up in an X-ray.(medical 医) 磁共振成像a method of using a strong magnetic field to produce an image of the inside of a person’s body resonance共振；谐振the sound or other vibration produced in an object by sound or vibrations of a similar frequency from another object Chapter 2: CRITICAL THINKING IN BIOLOGYChapter 3: CHARACTERISTICS OF LIFE They are made of one or more CELLS, The basic units of life. They need energy to live. They respond to STIMULI((使生物产生反应的)刺激Anything that causes a response)–they react to their enviroment(for instance,light,temperature,and touch) LIFE FUNCTIONSAll ORGANISMS (living things) must have the potential to carry out certain behaviors, known as LIFE FUNCTIONS .Life functions are processes that an organism takes on to help it survive. The life functions are: Growth: an increase in the number of cellsAs more cells are made, the organism goes through the process of growth.The growth in cells helps them live better in their environment. Reproduction: the creation of a new organism with its own cells.The new organism is referred to as OFFSPRING(后代).Some offspring are born looking like their parents (for example, human babies);other offspring are born in one form and then change as they grow to another (like tadpoles蝌蚪 changing into frogs). Reproduction can happen with either one- or two-parent organisms. When one parent organism reproduces by itself, the process is called ASEXUAL REPRODUCTION. The offspring looks like the parent. Bacteria usually reproduce asexually. When two parents reproduce, it ’s called SEXUAL REPRODUCTION. Many plants and animals are sexual reproducers. Nutrition营养的补给: the taking in of food(nutrients: Any substance that promotes life and provides energy. All living things need NUTRIENTS to survive. Nutrients keep an organism healthy.) Organisms can be categorized according to how they get their nutrition: AUTOTROPHS , organisms that can make their own food, such as plants. HETEROTROPHS , organisms that cannot make their own food, such as animals. Auto comes from the Greek word autos, meaning “self.” hetero prefix: hetero-异质的;不同的;other; different. heterosexual: sexually or romantically attracted exclusively to people of the other sex. trophThe meaning of TROPH- is nutritive. respiration: the breakdown of nutrients to get energy respiration呼吸the act of breathingthe metabolic processes whereby certain organisms obtain energy from organic molecules metabolic metabolism新陈代谢the chemical processes in living things that change food, etc. into energy and materials for growth UNIT 2: The Chemistry of LifeUNIT 3: Cell TheoryUNIT 4: Bacteria, Viruses, Prions, and ViroidsBacteria细菌bacterium的复数the simplest and smallest forms of life. Bacteria exist in large numbers in air, water and soil, and also in living and dead creatures and plants, and are often a cause of disease. Viruses/ˈvaɪrəsəz/病毒 Prions 朊病毒 Viroids类病毒 UNIT 5: Protistsprotist原生生物free-living or colonial organisms with diverse nutritional and reproductive modes UNIT 6: Fungifungus真菌（如蘑菇和霉）any plant without leaves, flowers or green colouring, usually growing on other plants or on decaying matter. Mushrooms and mildew are both fungi . UNIT 7: PlantsUNIT 8: AnimalsUNIT 9: The Human BodyUNIT 10: GeneticsUNIT 11: Life on EarthUNIT 12: Ecosytems and Habitatshabitat栖息地the place where a particular type of animal or plant is normally foundThe habitat of an animal or plant is the natural environment in which it normally lives or grows.","link":"/0003%20Natural%20science/%E7%94%9F%E7%89%A9%E5%AD%A6%20Biology/Ace%20Biology%20-%20High%20school/"},{"title":"math in primary school","text":"Numbers and Place ValueWhat is the difference between a ‘numeral’ and a ‘number’?A numeral is the symbol, or collection of symbols, that we use to represent a number. Thenumber is the concept represented by the numeral, and therefore consists of a whole networkof connections between symbols, pictures, language and real-life situations. The same number (for example, the one we call ‘three hundred and sixty-six’) can be represented by different numerals – such as 366 in our Hindu-Arabic, place-value system, and CCCLXVI usingRoman numerals Because the Hindu-Arabic system of numeration is now more or less universal, the distinction between the numeral and the number is easily lost. What are the cardinal and ordinal aspects of number? cardinal基数；a number, such as 1, 2 and 3, used to show quantity rather than order ordinal序数词（如第一、第二等）a number that refers to the position of sth in a series, for example ‘first’, ‘second’, etc. s an adjective describing a small setof objects: two brothers, three sweets, five fingers, three blocks, and so on. This idea of a numberbeing a description of a set of things is called the cardinal aspect of number. numbers usedas labels to put things in order. For example, theyturn to page 3 in a book.The numerals and words being used here do not representcardinal numbers, because they are not referring to sets of three things.In these examples, ‘three’ is one thing, which is labelled three because of theposition in which it lies in some ordering process. This is called the ordinal aspect of number. The most important experience of the ordinal aspect of number is whenwe represent numbers as locations on a number strip or as points ona number line There is a further way in which numerals are used,sometimes called the nominal aspect. This is wherethe numeral is used as a label or a name, without anyordering implied. The usual example to give herewould be a number 7 bus. What are natural numbers and integers?use forcounting: {1, 2, 3, 4, 5, 6, …}, going on forever.These are what mathematicians choose to call the setof natural numbers the set of integers: {…, –5, –4, –3, –2, –1, 0, 1,2, 3, 4, 5, …} now going on forever in both directions.includes both positive integers (whole numbers greater than zero) and negative integers (wholenumbers less than zero), and zero itself. The integer –4 is properly named ‘negative four’, the integer +4 is named ‘positive four’, natural numbers are positive integers. What are rational and real numbers? include fractions and decimalnumbers (which, as we shall see, are a particular kind of(是一种特殊的) fraction), we get the set ofrational numbers. The term ‘rational’ derives from the idea that a fraction represents a ratio. The technicaldefinition of a rational number is any number that is the ratio of two integers. Rational numbers enable us to subdivide thesections of the number line between the integers and to label the points in between, there are other real numbers that cannot be written down as exact fractions or decimals – and are therefore not rational. there is no fraction or decimal that is exactly equal to the square root of 50 (written as √50).This means there is no rational number that when multiplied by itself gives exactly the answer50. – we could never get a numberthat gave us 50 exactly when we squared it. But √50 is a real number – in the sense that itrepresents a real point on a continuous number line, somewhere between 7 and 8. It representsa real length. So this is a real length, a real number, butit is not a rational number. It is called an irrational number.利用勾股定理得到平方根数的实际长度 theset of real numbers includes all rational numbers – which include integers, which in turninclude natural numbers – and all irrational numbers. What is meant by ‘place value’?in the Hindu-Arabic systemwe do not use a symbol representing a hundred toconstruct three hundreds: we use a symbol representing three! Just this one symbol is needed to representthree hundreds, and we know that it represents threehundreds, rather than three tens or three ones, becauseof the place in which it is written. in our Hindu-Arabic place-value system, allnumbers can be represented using a finite set of digits,namely, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9. Like most numeration systems, no doubt because of the availability ofour ten fingers for counting purposes, the system usesten as a base. Larger whole numbers than 9 are constructed using powers of the base: ten, a hundred, athousand, and so on. The place in which a digit is written, then, represents that number of one of these powersof ten for example, working from right to left, in the numeral 2345 the 5 represents5 ones (or units), the 4 represents 4 tens, the 3 represents 3 hundreds and the 2 represents2 thousands. thenumeral 2345 is essentially a clever piece of shorthand, condensing a complicated mathematicalexpression into four symbols, as follows:(2 × 103) + (3 × 102) + (4 × 101) + 5 = 2345. Perversely, we work from right to left in determining the place values, withincreasing powers of ten as we move in this direction. But, since we read from left to right,the numeral is read with the largest place value first the principle of exchange.This means that whenever you have accumulated ten in one place, this can be exchanged forone in the next place to the left. This principle of being able to ‘exchange one of these for tenof those’ as you move left to right along the powers of ten, or to ‘exchange ten of these for oneof those’ as you move right to left, is a very significant feature of the place-value system. This principle of exchanging is also fundamental to the ways we do calculations withnumbers. It is the principle of ‘carrying one’ in addition It also means that,when necessary, we can exchange one in any place for ten in the next place on the right, forexample when doing subtraction by decomposition. It also means that,when necessary, we can exchange one in any place for ten in the next place on the right, forexample when doing subtraction by decomposition How does the number line support understanding of place value? What is meant by saying that zero is a place holder?‘three hundred and seven’ represented in base-ten blocks. Translated into symbols,without the use of a zero, this would easily be confused with thirty-seven: 37. The zero is used therefore as a place holder; that is, to indicate the positionof the tens’ place, even though there are no tensthere: 307. It is worth noting, therefore, that when wesee a numeral such as 300, we should not think toourselves that the 00 means ‘hundred’.It is the position of the 3 that indicates that it stands for ‘three hundred’; the function of the zeros is to make thisposition clear whilst indicating that there are no tensand no ones. How is understanding of place value used in ordering numbers?Itis always the first digit in a numeral that is most significant in determining the size of the number. A statement that one number is greater than another (for example, 25 is greater than 16) orless than another (for example, 16 is less than 25) is called an inequality How are numbers rounded to the nearest 10 or the nearest 100?Rounding is an important skill in handling numbersOne skill to be learnt is to round a number or quantity to the nearest something. round a 2-digit number to the nearest ten. 67 lies between 60 and 70, but is nearer to 70 Addition and Subtraction StructuresWhat are the different kinds of situation that primary children might encounter to which the operation of addition can be connected?modelling process: setting up themathematical model corresponding to a given situation. There are two basic categories of real-life problems that are modelled by the mathematicaloperation we call addition. • the aggregation structure;• the augmentation structure. aggregation聚合;the act of gathering something together augmentation增加；the amount by which something increases What is the aggregation structure of addition?aggregation to refer to a situation in whichtwo (or more) quantities are combined into a single quantity and the operation of addition is used to determine thetotal. t the two sets do not overlap.They are called discrete sets. When two sets are combined into one set, they form what is called the union of sets.So another way of describing this addition structureis ‘the union of two discrete sets’. This notion of additionbuilds mainly on the cardinal aspect of number, the ideaof number as a set of things What are some of the contexts in which children will meet addition in the aggregation structure?whenever they are putting together twosets of objects into a single set, to find the totalnumber; in the context of money.finding the total cost of twoor more purchases, or the total bill for a number ofservices any measurement context:n finding the total volumeof water in two containers What is the augmentation structure of addition?augmentation to refer to a situation where a quantity is increased by some amountand the operation of addition is required in order to find the augmented or increased value. What are some of the contexts in which children will meet addition in the augmentation structure?that of money:particularly the idea of increases in price or cost, wage or salary. temperaturean increase in temperature from a given starting temperature. their age: in other measurement contexts, The key language that signals the operation ofaddition is that of ‘increasing’ or ‘counting on’. What is the commutative law of addition?Which set is on the left and which on the right makes no difference to the total number of marbles. The fact that these two additions come to the same result is an example of whatis called the commutative law of addition. We can state this commutative law formally by the following generalization, which is true whatever thenumbers a and b: a + b = b + a. commutative交换的（排列次序不影响结果）giving the same result whatever the order in which the quantities are shown Second, itis important to make use of commutativity inaddition calculations. Particularly when using theidea of counting on, it is nearly always better tostart with the bigger number. For example, itwould not be sensible to calculate 3 + 59 by starting at 3 and counting on 59! The obvious thing to do is to use the commutative lawmentally to change the addition to 59 + 3, then start at 59 and count on 3. subtraction does not have this commutative property What are the different kinds of situation that primary children might encounter to which the operation of subtraction can be connected?• the partitioning structure;• the reduction structure;• the comparison structure;• the inverse-of-addition structure. What is the partitioning structure of subtraction?The partitioning structure refers to a situation in which a quantity is partitioned off in someway or other and subtraction is required to calculate how many or how much remains. What are some of the contexts in which children will meet the partitioning subtraction structure?Partitioning occurs in any practical situation where we ask how many are left, or how much isleft. It also includes situationswhere a subset is identified as possessing some particular attribute and the question asked is,‘how many are not?’ or ‘how many do not?’ money and shopping. What is the reduction structure of subtraction?The reduction structure is similar to ‘take away’ butit is associated with different language. It is simplythe reverse process of the augmentation structure ofaddition. It refers to a situation in which a quantity isreduced by some amount and the operation of subtraction is required to find the reduced value. The essential components of this structure are a starting point and areduction or an amount to go down by.Because of this connection,the idea of subtraction as reduction builds on the ordinal aspect of number. What are some of the contexts in which children will meet subtraction in the reduction structure?Realistic examples of the reduction structure mainlyoccur in the context of money. The key idea whichsignals the operation of subtraction is that of ‘reducing’, What is the comparison structure of subtraction?The comparison structure refers to a completely different set of situations, namely thosewhere subtraction is required to make a comparison between two quantities, as for examplein Figure 7.5. How many more blue cubes are there than red cubes? Subtraction of the smallernumber from the greater enables us to determine the difference, or to find out how muchgreater or how much smaller one quantity is than the other. Comparison can build on both the cardinal aspect ofnumber (comparing the numbers of objects in twosets) and the ordinal aspect (finding the gap betweentwo numbers on a number line). What are some of the contexts in which children will meet subtraction in the comparison structure?Wherever two numbers occur, we will often find ourselves wanting to compare them. Thefirst step in this is to decide which is the larger and which is the smaller and to articulate thisusing the appropriate language. articulate清楚说明to express or explain your thoughts or feelings clearly in words The next stage of comparison is then to go on toask: how many more? How many fewer? How muchgreater? How much less? How much heavier? Howmuch lighter? How much longer? How much shorter?And so on. Answering these questions is where subtraction is involved. What is the inverse-of-addition structure of subtraction?The inverse-of-addition structure refers to situations where we have to determine what mustbe added to a given quantity in order to reach some target. The phrase ‘inverse of addition’underlines the idea that subtraction and addition are inverse processes.The concept of inverse turns up in many situations in mathematics,whenever one operation or transformation undoesthe effect of another one. Hence, to solve aproblem of the form ‘what must be added to x to givey?’ we subtract x from y What are some of the contexts in which children will meet subtraction in the inverse-of-addition structure?any situation where we have a number of objects or a number of individuals and we requiresome more in order to reach a target. Mental Strategies for Addition and SubtractionWhat is the associative law of addition?the associative law of addition is a fundamental property of addition and an axiom of arithmetic. Written formally, as a generalization, it is the assertion that for any numbers a, b and c:a + (b + c) = (a + b) + c. The bracketsindicate which addition should be done first. In simple terms, the associative law says that ifyou have three numbers to add together you get the same answer, whether you start by addingthe second and third or start by adding the first and second. subtraction does not have this property. How important is mental calculation?Vertical layouts for additions and subtractionsespecially lead children to treat the digits in the numbers as though they are individual numbers and then tocombine them in all kinds of bizarre and meaninglessways Mental strategies by their very ad hoc naturelead you to build on what you understand and to usemethods that make sense to you. ad hoc临时安排的；特别的；专门的arranged or happening when necessary and not planned in advance How does counting forwards and backwards help in mental calculations? How do we use multiples of 10 and 100 as stepping stones?Notice what happens when we add 5 to 57 on a hundred square. We have to break the 5 downinto two bits, 3 and 2. The 3 gets us to the next multiple of 10 (60) and then we have 2 moreto count on. This process of using a multiple of ten (60) as a stepping stone is an importantmental strategy for addition and subtraction. Some writers refer to this process as ‘bridging’. Here is how we might use this idea of a steppingstone for calculating, say, 57 + 28. First, we couldcount on in 10s, to deal with adding the 20: 57 … 67,77. Then break the 8 up into 3 and 5, to enable us touse 80 as a stepping stone: 77 + 8 = 77 + 3 + 5 =80 + 5 = 85. A number-line diagram is a very useful image forsupporting this kind of reasoning. Children can betaught to use an empty number line, which is simply a line on which they can put whatever numbersthey like, not worrying about the scale, just ensuringthat numbers are in the right order relative to each other. What is front-end addition and subtraction?Most formal written algorithms for addition and subtraction work with the digits from rightto left, starting with the units. In mental calculations, it is much more common to work fromleft to right. This makes more sense, because you deal with the biggest and most significantbits of the numbers first. One strategy is to mentally break the numbers up into hundreds, tensand ones, and then to combine them bit by bit, starting at the front end – that is, starting byadding (or subtracting) the hundreds.This process is sometimes calledpartitioning into hundreds, tens and ones. So, for example, given 459 + 347, we would think ofthe 459 as (400 + 50 + 9) and the 347 as (300 + 40 + 7). The front-end approach would deal withthe hundreds first (400 + 300 = 700), then the tens(50 + 40 = 90, making 790 so far) and then the ones(for example, 790 + 9 = 799; followed by 799 + 7 =799 + 1 + 6 = 806). Notice that I have used 800 as astepping stone for the last step here. 459 + 347 = (400 + 50 + 9) + (300 + 40 + 7)= (400 + 300) + (50 + 40) + (9 + 7)= 700 + 90 + 9 + 7= 799 + 7 = 799 + 1 + 6 = 800 + 6 = 806. What is compensation in addition and subtraction?You can often convert an addition or subtraction question into an easier question by temporarily adding or subtracting an appropriate small number. For example, many people wouldevaluate 673 + 99 by adding 1 temporarily to the 99, so the question becomes 673 + 100.This gives 773. Now take off the extra 1, to get the answer 772. This strategy is sometimescalled compensation. The trick in the strategy is always to be on the lookout for an easier calculation than theone you have to do. This will often involve temporarily replacing a number ending in a 9 oran 8 with the next multiple of 10. There are other ways of using the strategy of compensation, all of which amount to changing one ormore of the numbers in order to produce an easiercalculation. How should the symbol for ‘equals’ be used in recording calculations?There is a tendency for children (and someteachers) to abuse the equals sign by employing it rather casually just to link the steps in acalculation, without it having any real meaning. How do multiples of 5 help in mental additions and subtractions?Multiples of 5 (5, 10, 15, 20, 25, 30, …) are particularly easy to work with. We can exploit this confidence with multiplesof 5 in many additions and subtractions done mentally. 37 + 26 = (35 + 25) + 2 + 1 = 60 + 2 + 1 = 6377 + 24 = (75 + 25) + 2 – 1 = 100 + 2 – 1 = 101174 – 46 = (175 – 45) – 1 – 1 = 130 – 1 – 1 = 128 How do you relate additions and subtractions to doubles?Sometimes in additions and subtractions we canexploit the fact that most people are fairly confidentwith the processes of doubling and halving. So it is found that young children will often exploittheir facility with doubles to calculate ‘near-doubles’. 48 + 46 could be related to double 46: 46 + 46 = 92, so 48 + 46 = 92 + 2 = 94.62 + 59 could be related to double 60: 60 + 60 = 120, so 62 + 59 = 120 + 2 – 1 = 121.54 – 28 could be related to half 54 (27): 54 – 27 = 27, so 54 – 28 = 27 – 1 = 26.54 – 28 could be related to half 56 (28): 56 – 28 = 28, so 54 – 28 = 28 – 2 = 26. How do you use ‘friendly’ numbers?Wealways have as an option in addition and subtraction touse the compensation approach and temporarilyreplace one of the numbers in a calculation with onethat is ‘more friendly’. To calculate 742 – 146Change the 146 to 142: 742 – 142 = 600Now compensate: 742 – 146 = 600 – 4 = 596Or,Change the 742 to 746: 746 – 146 = 600Now compensate: 742 – 146 = 600 – 4 = 596 compesate弥补to provide sth good to balance or reduce the bad effects of damage, loss, etc. How are mental methods used in estimations?Confidence in handling mental calculations for addition and subtraction and a facility inrounding numbers to the nearest 10, 100, 1000, or higher power of ten (see Chapter 6) areprerequisites for being able to make reasonable estimates for the answer that should beexpected from an addition or a subtraction. In everyday life, we often require no more thanan approximate indication of what the result should be for many of the calculations weengage with – particularly since, in practice, difficult calculations will usually be done on apiece of technology where the likeliest error is that we enter the numbers incorrectly. It is alsoparticularly important to have some rough idea of what size of answer should be expectedwhen using written calculation methods (see Chapter 9), where a small slip in applying aprocedure might produce a huge error. (a) if two numbers arerounded up to estimate their sum then the result willbe an over-estimate;(b) if two numbers are roundeddown to estimate their sum then the result will be anunder-estimate. for subtraction: (a) if the first numberin a subtraction is rounded up and the second numberrounded down then the result will be an over-estimate;(b) if the first number in a subtraction is rounded down and the second number rounded upthen the result will be an under-estimate. Written Methods for Addition and SubtractionHow might children be introduced to column addition?for additions with numbers containing three or more digits we need to usea written method of column addition: this is a way of laying out an addition calculation thatlines up the hundreds, tens and ones in columns. partitioning the numbers into hundreds, tens and ones. The major source of error in using this format is that it encourages childrento think of the digits as separate numbers, losing any sense that they represent hundreds, tensor ones. How do you explain what’s going on when you ‘carry one’ in addition? ten in one column can be exchanged for one in thenext column to the left. When there are more thantwo numbers being added, as in Figure 9.6(b), notethat it is possible to get more than one ten in the totalfor a column, so we may need to carry two, as in thisexample, or more. What about introducing column subtraction?Subtractions are straightforward when each digit in the first number is greater than the corresponding digit in the second.The problem comes when one (or more) of the digitsin the first number is smaller than the corresponding digit in the second number standard written procedure for column subtraction, lining up thehundreds, tens and ones in columns. decomposition, which is the procedure introducedin Figure 9.7(b) and set out in the traditional format in Figure 9.7(d). equal additions. So how does subtraction by decomposition work? There are three important points to note about themethod of decomposition. First, there is the quitenatural idea of exchanging a block in one column forten in the next column to the right when necessary.Second, there is the strong connection between themanipulation of the materials and the recording insymbols, supported by appropriate language. Third,notice that all the action in the recording takes place inthe top line, that is, in the number you are working on,not the number you are subtracting. How does the method of equal additions differ from decomposition? The method is based on the comparison structure of subtraction. and usesthe principle that the difference between two numbers remains the same if you add the samenumber to each one. What is ‘borrowing’ in subtraction?We are not ‘borrowing one’ in decomposition, we are ‘exchanging one of these for ten of those’. What is the problem in decomposition with a zero in the top number? What is the constant difference method?constant difference method, because as we change the subtraction into easier subtractions, we keep the differencebetween the numbers constant. The problem is 802 – 247Add 3 to both numbers: 805 – 250 (that makes it easier)Add 50 to both numbers: 855 – 300 (that makes it really easy!)So the answer is 555. How is addition used to check a subtraction calculation?Because subtraction is the inverse of addition, as was explained in Chapter 7, a subtractioncalculation can always be checked by doing an addition. In general, if a – b = c, then c + b = a Multiplication and Division StructuresWhat are the different kinds of situation to which the operation of multiplication applies?two categories of situationthat have a structure that corresponds to the mathematical operation represented by the symbol formultiplication. • the repeated aggregation structure;• the scaling structure. What is the repeated aggregation structure for multiplication?Repeated aggregation (or repeated addition) is the elementary idea that multiplicationmeans ‘so many sets of’ or ‘so many lots of’.This structure is simply an extension of the aggregation structure of addition What is the scaling structure for multiplication?The scaling structure is a rather more difficult idea.It is an extension of the augmentation structure ofaddition. In that structure, addition means increasinga quantity by a certain amount. With multiplication,we also increase a quantity, but we increase it by ascale factor. I’m not sure whether 3 × 5 means ‘3 sets of 5’ or ‘5 sets of 3’ the commutative law ofmultiplication. This refers to the fact that when you are multiplying two numbers together,the order in which you write them down does notmake any difference. We recognize this commutative property formally by thefollowing generalization, which is true whatever thenumbers a and b: b × a = a × b. division does nothave this property Graspingthe principle of commutativity also cuts down significantly the number of different resultswe have to memorize from the multiplication tables: Is there a picture that can usefully be connected with the multiplication symbol?rectangular array This picture really does make the commutative propertytransparently obvious. Apart from ‘so many sets of so many’, are there other contexts in which children meet multiplication in the repeated aggregation structure?The repeated aggregation structure of multiplicationapplies to what are sometimes referred to as ‘correspondence problems’, in which n objects are connected to each of m objects. For example, if each of28 children in a class requires 6 exercise books, thenthe total number of exercise books required is28 × 6. the number or quantity being multiplied is sometimes called the multiplicand and the number it is being multiplied by is called the multiplier. For example, in ‘Spinach costs 65p a bag, how much for 3 bags?’ the 65 is the multiplicand and the 3 is the multiplier. What are some of the contexts in which children will meet multiplication in the scaling structure?Most obviously, this structure is associated with scale models and scale drawings. This is also the multiplication structure that lies behind the idea of a pro rata increase. For example, if we all get a 13% increase in our salary, then all our salaries get multiplied by thesame scale factor, namely 1.13 Then we also sometimes use this multiplication structure to express a comparison betweentwo numbers or amounts, where we make statements using phrases such as ‘so many timesas much (or as many)’ or ‘so many times bigger (longer, heavier, and so on)’. What are the different kinds of situation to which the operation of division applies?• the equal-sharing-between structure;• the inverse-of-multiplication structure;• the ratio structure. What is the equal-sharing-between structure for division?The equal-sharing-between structure refers to a situation in which a quantity is shared out equally into a givennumber of portions and we are asked to determine howmany or how much there is in each portion. What is the inverse-of-multiplication structure for division?The actual problems that occur in practice which have this inverse-of-multiplication structure can be further subdivided. First, there are problems that incorporate the notion ofrepeated subtraction from a given quantity, such as ‘how many sets of 4 can I get from aset of 20?’ Second, there are those problems that incorporate the idea of repeated addition to reacha target, such as ‘how many sets of 4 do you need to get a set of 20? What is the ratio structure for division?The ratio structure for division refers to situations where we use division to compare twoquantities. Forexample, if A earns £300 a week and B earns £900 a week,we could also compare A’s and B’searnings by looking at their ratio, stating, for example, that B earns three times more than A. What about remainders?The mathematical model is ‘32 ÷ 6 = 5,remainder 2’. This means that sharing 32 equally into 6 groups gives 5 in each group, with 2remaining not in a group Remainders do not occur where division is used to model situations with the ratio structure. What are some of the contexts in which children will meet division in the equal-sharing-between structure?First, the set must be shared intoequal subsets. Second, it isimportant to note that the language is sharingbetween rather than sharing with. What are some of the contexts in which children will meet division in the inverse-of-multiplication structure?How many of these can I afford? This kind of question incorporates the idea of repeated subtraction from a given quantity. How many do we need? This kind of question incorporates the idea of repeated addition toreach a target. For example, how many items priced at £6 each must I sell to raise £150? What about situations using the ratio division structure?Mental Strategies for Multiplication and DivisionWhat are the associative and distributive laws of multiplication?associative law of multiplication. distributive laws ofmultiplication Commutative law of multiplication: a × b = b × aAssociative law of multiplication: (a × b) × c = a × (b × c)Distributive law of multiplication over addition: (a + b) × c = (a × c) + (b × c)Distributive law of multiplication over subtraction: (a – b) × c = (a × c) – (b × c) How are these laws used in multiplication calculations?The commutative law allows you to choose which of the two numbers in a multiplicationquestion should be the multiplicand and which the multiplier It is the commutative law that allows me to switch theorder of two numbers in a multiplication freely like this: 5 × 28 = 28 × 5. think of the 28 as 14 × 2, choose to do 2 × 5 first (to get 10)and then multiply this by 14 I am ‘associating’ the 2 with the 5, rather than with the 14, in order tomake the calculation easier: (14 × 2) × 5 = 14 × (2 × 5). An alternative approach to calculating 28 × 5 would be to split the 28 into 20 + 8 and thento multiply the 20 and 8 separately by the 5(20 + 8) × 5 = (20 × 5) + (8 × 5) Finally, we could choose to think of the 28 as 30 – 2 and then ‘distribute’ the multiplicationby 5 across this subtraction:using the second of the distributive laws of multiplication:(30 – 2) × 5 = (30 × 5) – (2 × 5) What are quotients, dividends and divisors?correspond to the words used in multiplication, introduced in the previous chapter: product,multiplicand and multiplier. Quotient, dividend and divisor are the terms used to identifythe numbers in a division calculation The resultof dividing one number by another is called the quotient. The first number in the division, that which is to bedivided, is called the dividend. The number by which it is divided is called the divisor. Are there any fundamental laws of division?division (like subtraction) is not commutative. Weshould note here that division is also not associative (again like subtraction). division can be distributed across addition and subtraction. Thereare the following two distributive laws of division:Distributive laws of division:(a + b) ÷ c = (a ÷ c) + (b ÷ c)(a – b) ÷ c = (a ÷ c) – (b ÷ c) since 45 = 30 + 15, you can split 45 ÷ 3 into two easier divisions:30 ÷ 3 and 15 ÷ 3,(30 + 15) ÷ 3 = (30 ÷ 3) + (15 ÷ 3) What are the prerequisite skills for being efficient at mental strategies for multiplication and division?The first prerequisite is that you know thoroughlyand can recall easily all the results in the multiplication tables up to 10 × 10. The second prerequisite is that you should be ableto derive from any one of these results a whole seriesof results for multiplications involving multiples of10 and 100. 70 × 8 = 5607 × 80 = 56070 × 80 = 56007 × 800 = 5600700 × 8 = 560070 × 800 = 56,000700 × 80 = 56,000 700 × 80, we can thinkof the 700 as 7 × 100 and the 80 as 8 × 10. Then thewhole calculation becomes: 7 × 100 × 8 × 10. Usingthe freedom granted to us by the commutative andassociative laws of multiplication to rearrange thishow we like, we can think of it as (7 × 8) ×(100 × 10), which leads to 56 × 1000 = 56,000. The third prerequisite is that you should be able torecognize all the division results that are simply theinverses of any of the above results. For example:56 ÷ 8 = 756 ÷ 7 = 8560 ÷ 8 = 705600 ÷ 70 = 8056,000 ÷ 800 = 70 strategies, such as:• the use of factors as an ad hoc approach tomultiplication;• the use of doubling as an ad hoc approach to multiplication;• ad hoc additions and subtractions in multiplication;• ad hoc additions and subtractions in division;• the constant ratio method for division. How can factors be used as an ad hoc approach to multiplication?A factor of any natural number is a natural number by which it can be divided exactlywithout any remainder; This strategy is particularly effective when there arenumbers ending in 5 around, since they are especially easy to multiply by 2 or 4. F 26 × 15 = (13 × 2) × 15 = 13 × (2 × 15) (using the associative law) = 13 × 30 = 390 How can doubling be used as an ad hoc approach to multiplication?any number can be obtainedby adding together some of the following numbers(called the powers of 2): 1, 2, 4, 8, 16, 32, 64 … andso on. For example, 23 = 16 + 4 + 2 + 1. 26 × 1 = 2626 × 2 = 5226 × 4 = 10426 × 8 = 20826 × 16 = 416So, 26 × 23 = 416 + 104 + 52 + 26 = 598 How can you use ad hoc additions and subtractions inmultiplication? First, by breaking up the 26 into 10 + 10 + 2 +2 + 2, on the basis that I am confident in multiplying by10 and by 2, we can transform 26 × 34 into (10 × 34) +(10 × 34) + (2 × 34) + (2 × 34) + (2 × 34) A second ad hoc approach to this calculation would be to think of the 34 as 10 + 10 +10 + 5 – 1, so that 26 × 34 becomes (26 × 10) + (26 × 10) + (26 × 10) + (26 × 5) – (26 × 1), And how can you use ad hoc additions and subtractions in division?make a division much simpler bywriting it as the sum or difference of numbers thatare easier to divide by the given divisor. s calculating how manyclasses of 32 children would be needed for a school of 608. The child’s approach is to buildup to the given total of 608, by an ad hoc process of addition, using first 10 classes, thenanother 5, then a further 2 and another 2. Formally, the child is breaking the 608 up into320 + 160 + 64 + 64 and distributing the division by 32 across this addition as follows:608 ÷ 32 = (320 + 160 + 64 + 64) ÷ 32 = (320 ÷ 32) + (160 ÷ 32) + (64 ÷ 32) + (64 ÷ 32) = 10 + 5 + 2 + 2 = 19 What is the constant ratio method for division?To understand theconstant ratio method for division, think of the division in terms of the ratio structure: ifboth quantities are scaled by the same factor, then their ratio does not change – just as whenyou add the same thing to two numbers, their difference does not change. The division 75 ÷ 5 can be used to demonstrate the application of this principle. Multiplyboth numbers by 2 and the question becomes 150 ÷ 10. So the answer is clearly 15. We can also use the reverse principle: that we do not change the answer to a division calculation if we divide both numbers by the same thing.648 ÷ 24 is the same as 324 ÷ 12 (dividing both numbers by 2)324 ÷ 12 is the same as 108 ÷ 4 (dividing both numbers by 3)108 ÷ 4 is the same as 54 ÷ 2 (dividing both numbers by 2), which is 27 it could lead you astray if you are dealing with a division that does not work out exactlyand you wish to give the answer with a remainder Written Methods for Multiplication and DivisionWhat is short multiplication?Short multiplication refers to a formal way of writing out a multiplication of a numberwith two or more digits by a single-digit number. r the calculation 38 × 4. In essence, all that we do here is to use the distributive law explained in Chapter 11, breaking down the 38 into 30 + 8, and then multiplying the8 by 4 and the 30 by 4 and adding the results. How might multiplication of two 2-digit numbers be introduced?26X34 Thinking of the 26 and the 34 as 20 + 6 and30 + 4 respectively suggests that we can split thearray up into four separate rectangular arrays ofcounters, representing 20 × 30, 20 × 4, 6 × 30 and6 × 4.The answer to the multiplication isobtained by working out the areas of the four separate rectangles and adding them up. This can becalled the areas method for multiplication. 20 × 30 = 600 6 × 30 = 18020 × 4 = 80 6 × 4 = 24 884 The steps in the calculation can be set out in a grid, as shown below. Because of this,many teachers call this the grid method: How do you make sense of long multiplication?The standard algorithm for multiplying together two numbers with two or more digits is usually called long multiplication In practice, the multiplication of 78by 40 is done by first writing down a zero, as inFigure 12.7(b), and then just multiplying 74 by 4,as in (c). The zero has the effect of multiplyingthe result of 74 × 4 by 10, hence producing 74 × 40, as required. There are various solutions to the problem of where to write the little digits that indicatewhat is being carried, some of which can be verymessy and confusing when recorded in a child’shandwriting (or mine, to be honest!). The best way isto be so fluent in short multiplication that you do nothave to write them down at all, What is short division?Short division is a standard algorithm often used for divisions with a single-digit number asthe divisor, such as 75 ÷ 5, First, you divide the 7 (tens) by 5. This gives theresult 1 (ten) remainder 2. The 1 is written in the tens position in the answer above the line.The remainder, 2 (tens), is then exchanged for 20 ones. This exchange is indicated by thelittle 2 written in front of the 5. There are now 25 ones to be divided by 5 What is the ad hoc subtraction method for division? What about long divisionThe conventional algorithm for division, usually known as long division, can involvesome tricky multiplications and is, to say the least, not easy to make sense of. illustrates the method for 648 ÷ 24. I’ll talk you through this. The first step is to ask, howmany 24s are there in 64? The answer to this question is 2, which is written above the 4 in648. You then write the product of 2 and 24 (48) under the 64 and subtract, giving 16. The8 in the 648 is then brought down and written next to the 16, making 168 in this row. Youthen ask, how many 24s are there in 168? The answer to this is 7, which is written abovethe 8 in 648. You then write the product of 7 and 24 (168) under the 168 and subtract it,giving zero. So 648 ÷ 24 = 27, with no remainder. Natural Numbers: Some Key ConceptsThe multiples of any given (natural) number are obtained by multiplying thenumber in turn by each of the natural numbers. multiples of 3 are: 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, and so on; the transitive property. Formally, this means that if A is a multiple of B and B is amultiple of C, then it follows that A is a multiple of C. making use of the digital sum for each number. This is the number you getif you add up the digits in the given number. If you then add up the digits in the digital sum,and keep going with this process of adding the digits until a single-digit answer is obtained,the number you get is called the digital root. some useful tricks for spotting various multiples:• Every natural number is a multiple of 1.• All even numbers (numbers ending in 0, 2, 4, 6 or 8) are multiples of 2.• A number that has a digital sum that is a multiple of 3 is itself a multiple of 3.• The digital root of a multiple of 3 is always 3, 6 or 9.• If the last two digits of a number give a multiple of 4, then it is a multiple of 4.• Any number ending in 0 or 5 is a multiple of 5.• Multiples of 6 are multiples of both 3 and 2. So, any even number with a digital root of 3,6 or 9 must be a multiple of 6.• If the last three digits of a number give a multiple of 8, then the number is a multipleof 8.• A number that has a digital sum that is a multiple of 9 is itself a multiple of 9.• The digital root of a multiple of 9 is always 9.• Any number ending in 0 is a multiple of 10. What is a ‘lowest common multiple’?For example, with 6 and 10, we obtain the following sets ofmultiples:• Multiples of 6: 6, 12, 18, 24, 30, 36, 42, 48, 54, 60, 66, …• Multiples of 10: 10, 20, 30, 40, 50, 60, 70, …The numbers common to the two sets are the ‘common multiples’ of 6 and 10: 30, 60,90, 120, and so on.The smallest of these (30) is known as the lowest common multiple. if I can only buy a certain kind of biscuit in packets of 10 and I want to share allthe biscuits equally between 6 people, the number of biscuits I buy must be a multiple ofboth 6 and 10; so the smallest number I can purchase is the lowest common multiple, whichis 30 biscuits. What is a factor?The concept of factor (see glossary for Chapter 11) is the inverse of multiple. So, if A is amultiple of B then B is a factor of A. all the different rectangular arrays possible with aset of 24 crosses. The dimensions of these arrays are all the possible factor pairs for 24: 1and 24; 2 and 12; 3 and 8; 4 and 6. The mathematical relationship, ‘is a factor of’, also possesses the transitive property, asillustrated in Figure 13.4. So, for example, any factor of 12 must be a factor of 24, because12 is a factor of 24. What about the ‘highest common factor’?If we list all the factors of two numbers,the two sets of factors may have some numbers in common. (Since 1 is a factor of all naturalnumbers, they must at least have this number in common!) The largest of these common factors is called the highest common factor (or greatest common factor). For example, with24 and 30 we have the following two sets of factors:• Factors of 24: 1, 2, 3, 4, 6, 8, 12, 24.• Factors of 30: 1, 2, 3, 5, 6, 10, 15, 30.The factors in common are 1, 2, 3 and 6. So the highest common factor is 6. some teachers in a primary school require 40 exercise books a term and others require 32. It would be convenientto store the exercise books in packs of 8, so that some teachers can pick up 5 packs and others 4 packs. Why 8? Because 8 is the highest common factor of 40 and 32. What is a prime number?Any number that has precisely two factors, and no more than two, is called a prime number A number, such as 10,with more than two factors is sometimes called a composite number, or, because it can bearranged as a rectangular array with more than one row (see Figure 13.5), a rectangularnumber givenany composite number whatsoever, there is only onecombination of prime numbers that, multipliedtogether, gives the number.there is only one primefactorization of any composite number the number 24. This number can be obtained by multiplying together variouscombinations of numbers, such as: 2 × 12, 2 × 2 × 6, 1 × 2 × 3 × 4, and so on. If, however, we stipulate that only prime numbers can be used, there is only one combination that will produce 24: namely, 2 × 2 × 2 × 3. This is called the prime factorization of 24. there is no pattern or formula that willgenerate the complete set of prime numbers. Why are some numbers called squares? A square is a shape, isn’t it?Some rectangles have equal sides: these are the rectangles that are called squares (seeChapter 25). So numbers, such as 1, 4, 9, 16, 25, and so on, which can be represented bysquare arrays, as shown in Figure 13.6, are called square numbers. If we use an array of smallsquares, called square units, as in Figure 13.6(b), rather than just dots, as in Figure 13.6(a),then the number of squares in the array also corresponds to the total area Square numbers are also composite(rectangular) numbers, just as squares are rectangles Most positive integers have an even number of factors.This is because factors tend to come in pairs.square numbers always have an odd number of factors! What are cube numbers?there are those, such as 1, 8 and27, that can be represented by arrangements in the shape of a cube. These cube numberswill turn up in exploring the volumes of cubes with older children. Figure 13.8 shows howthe first three cube numbers are constructed from small cubes, called cubic units. What are square roots and cube roots?Which number, when multiplied by itself, gives 729? Or,which number has a square equal to 729? The answer (27) is called the square root of 729. what is thelength of the side of a cube with a total volume of729 cubic units? Or, in arithmetic terms, whatnumber has a cube equal to 729? The answer (9) is called the cube root of 729. A Are there other sets of geometric shapes that correspond to sets of numbers?Almost any sequence of geometric shapes or patterns can be used to generate a corresponding set of numbers the so-called triangle numbers. These are the numbers that correspond to the particular pattern of triangles of dots shown in Figure 13.10: 1, 3, 6, 10, 15, and soon.","link":"/0004%20Formal%20science/%E6%95%B0%E5%AD%A6%20Mathematics/math_primary/"},{"title":"computer science","text":"The 2012 ACM Computing Classification System on wikipediaHardwarePrinted circuit boardPeripheralIntegrated circuitVery Large Scale IntegrationSystems on Chip (SoCs)Energy consumption (Green computing)Electronic design automationHardware acceleration Computer systems organizationComputer architectureEmbedded systemReal-time computingDependability NetworksNetwork architectureNetwork protocolNetwork componentsNetwork schedulerNetwork performance evaluationNetwork service Software organizationInterpreterMiddlewareVirtual machineOperating systemSoftware quality Software notations and toolsProgramming paradigmProgramming languageCompilerDomain-specific languageModeling languageSoftware frameworkIntegrated development environmentSoftware configuration managementSoftware librarySoftware repository Software developmentControl variableSoftware development processRequirements analysisSoftware designSoftware constructionSoftware deploymentSoftware engineeringSoftware maintenanceProgramming teamOpen-source model Theory of computationModel of computationFormal languageAutomata theoryComputability theoryComputational complexity theoryLogicSemantics AlgorithmsAlgorithm designAnalysis of algorithmsAlgorithmic efficiencyRandomized algorithmComputational geometry Mathematics of computingDiscrete mathematicsProbabilityStatisticsMathematical softwareInformation theoryMathematical analysisNumerical analysisTheoretical computer science Information systemsDatabase management systemInformation storage systemsEnterprise information systemSocial information systemsGeographic information systemDecision support systemProcess control systemMultimedia information systemData miningDigital libraryComputing platformDigital marketingWorld Wide WebInformation retrieval SecurityCryptographyFormal methodsSecurity servicesIntrusion detection systemHardware securityNetwork securityInformation securityApplication security Human–computer interactionInteraction designSocial computingUbiquitous computingVisualizationAccessibility ConcurrencyConcurrent computingParallel computingDistributed computingMultithreadingMultiprocessing Artificial intelligenceNatural language processingKnowledge representation and reasoningComputer visionAutomated planning and schedulingSearch methodologyControl methodPhilosophy of artificial intelligenceDistributed artificial intelligence Machine learningSupervised learningUnsupervised learningReinforcement learningMulti-task learningCross-validation GraphicsAnimationRenderingPhotograph manipulationGraphics processing unitMixed realityVirtual realityImage compressionSolid modeling Applied computingE-commerceEnterprise softwareComputational mathematicsComputational physicsComputational chemistryComputational biologyComputational social scienceComputational engineeringComputational healthcareDigital artElectronic publishingCyberwarfareElectronic votingVideo gamesWord processingOperations researchEducational technologyDocument management","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/0000%20Computer%20Science/"},{"title":"web developer","text":"","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/web%20developer/"},{"title":"","text":"htmlA markup language is a text-encoding system consisting of a set of symbols inserted in a text document to control its structure, formatting, or the relationship between its parts.[1] Markup is often used to control the display of the document or to enrich its content to facilitate automated processing. A markup language is a set of rules governing what markup information may be included in a document and how it is combined with the content of the document in a way to facilitate use by humans and computer programs. most modern markup languages, such as XML, identify document components (for example headings, paragraphs, and tables), with the expectation that technology, such as stylesheets, will be used to apply formatting or other processing. markup meta-languages XML allow designers to specify particular schemas, which determine which elements, attributes, and other features are permitted, and where. The schemas are a set of ‘types’, each associated with a set of properties. The types are arranged in a hierarchy. What is Schema Markup?Firstly, what is Schema? In essence, this is part of adding extra information to online content to allow search engines to have a better picture of what a website is about. This extra information isn’t viewed by users on-screen but inserted as part of HTML code. It is a form of microdata, which is read by the search engine spiders when crawling your website. It helps the search engine understand what your page is actually about. This should be an addition to keywords in your content, which are chosen as means of good SEO practice. “Schema Markup” is the action of adding this data into your site’s coding based on vocabulary from the community at Schema.org. Schema is so relevant because the community is sponsored by Google, Microsoft, Yahoo and Yandex. Knowing which words to use in relation to your content are pre-determined. There is a hierarchical family tree, if you will, to follow. These are words which would benefit users if the sites had mark ups installed on them. Getting started with schema.org using Microdata Some markup languages, such as the widely used HTML, have pre-defined presentation semantics, meaning that their specifications prescribe some aspects of how to present the structured data on particular media. css js ux designFlutter is an open-source UI software development kit created by Google. It is used to develop cross platform applications from a single codebase for any web browser,[4] Fuchsia, Android, iOS, Linux, macOS, and Windows software developmentsoftware development kitA software development kit (SDK) is a collection of software development tools in one installable package. They facilitate the creation of applications by having a compiler, debugger and sometimes a software framework. software frameworkIn computer programming, a software framework is an abstraction in which software, providing generic functionality, can be selectively changed by additional user-written code, thus providing application-specific software. It provides a standard way to build and deploy applications and is a universal, reusable software environment that provides particular functionality as part of a larger software platform to facilitate the development of software applications, products and solutions. Software frameworks may include support programs, compilers, code libraries, toolsets, and application programming interfaces (APIs) that bring together all the different components to enable development of a project or system. In a framework, unlike in libraries or in standard user applications, the overall program’s flow of control is not dictated by the caller, but by the framework.[1] This is usually achieved with the Template Method Pattern. The intent of the template method is to define the overall structure of the operation, while allowing subclasses to refine, or redefine, certain steps Abstractionabstraction抽象a general idea not based on any particular real person, thing or situation; the quality of being abstract Abstraction, in general, is a fundamental concept in computer science and software development.[4] The process of abstraction can also be referred to as modeling and is closely related to the concepts of theory and design.[5] Models can also be considered types of abstractions per their generalization of aspects of reality. software platformA computing platform or digital platform[1] or software platform is an environment in which a piece of software is executed.It may be the hardware or the operating system (OS), even a web browser and associated application programming interfaces, or other underlying software, as long as the program code is executed with it.Computing platforms have different abstraction levels, including a computer architecture, an OS, or runtime libraries. application programming interface (API)An application programming interface (API) is a way for two or more computer programs to communicate with each other. It is a type of software interface, offering a service to other pieces of software.A document or standard that describes how to build or use such a connection or interface is called an API specification. A computer system that meets this standard is said to implement or expose an API. libraryIn computer science, a library is a collection of non-volatile resources used by computer programs, often for software development. These may include configuration data, documentation, help data, message templates, pre-written code and subroutines, classes, values or type specifications.or partitioned data sets. nodejsJavaScript 和 Node.js 相关的工具和包管理器： Yarn：Yarn 是 JavaScript 的包管理器，它与 npm (Node Package Manager) 类似，用于下载、安装和管理 JavaScript 包。Yarn 的主要目标是提供更快的速度和更可靠的依赖管理。 Yeoman (yo)：Yeoman 是一个用于生成项目模板和代码脚手架的工具。通过 Yeoman，你可以创建项目的基本结构，并自定义各种项目文件和配置。 npm：npm 是 Node.js 的默认包管理器，用于安装和管理 JavaScript 包。它是 Node.js 生态系统中的标准工具，允许开发人员轻松地共享和使用 JavaScript 模块。 npx：npx 是一个用于执行 Node.js 包或命令的工具。它通常用于一次性运行某个命令，而不需要全局安装相应的包。这使得你可以在不污染全局命名空间的情况下运行特定的工具或脚本。yaml inferno software QASoftware quality assurance refers to monitoring the software engineering processes and methods used to ensure quality. Code review (sometimes referred to as peer review) is a software quality assurance activity in which one or several people check a program mainly by viewing and reading parts of its source code, and they do so after implementation or as an interruption of implementation. At least one of the persons must not be the code’s author. The persons performing the checking, excluding the author, are called “reviewers” software architectsystem designSystem design is the process of defining the architecture, interfaces, and data for a system that satisfies specific requirements. System design meets the needs of your business or organization through coherent and efficient systems. coherent连贯的If something is coherent, it is well planned, so that it is clear and sensible and all its parts go well with each other. stable diffusionStable Diffusion is a deep learning, text-to-image model released in 2022 based on diffusion techniques. It is primarily used to generate detailed images conditioned on text descriptions, though it can also be applied to other tasks such as inpainting, outpainting, and generating image-to-image translations guided by a text prompt. Inpainting is a conservation process where damaged, deteriorated, or missing parts of an artwork are filled in to present a complete image.[1] This process is commonly used in image restoration. prompt engineeringOne of the most exciting recent advancements is in the realm of artificial intelligence (AI), where machines are trained to think, learn, and even communicate like humans. Among the myriad of developments in areas such as generative AI, there’s a subtle art that’s gaining prominence: prompt engineering. maraid大量an extremely large number of sth prominence出名the state of being important, well known or noticeable subtle不明显的;微妙的Something that is subtle is not immediately obvious or noticeable.机巧的behaving in a clever way, and using indirect methods, in order to achieve sth Imagine having a conversation with a machine where you provide a cue or a “prompt,” and it responds with relevant information or actions. That’s the essence of prompt engineering. It’s about crafting the right questions or instructions to guide AI models, especially Large Language Models (LLMs), to produce desired outcomes. cue提示；信号an action or event that is a signal for sb to do sth prompt提示to encourage sb to speak by asking them questions or suggesting words that they could say 操作系统 数据库graphqlGraphQL is an open-source data query and manipulation language for APIs and a query runtime engine. PostgreSQL, also known as Postgres, is a free and open-source relational database management system emphasizing extensibility and SQL compliance. It was originally named POSTGRES, referring to its origins as a successor to the Ingres database developed at the University of California, Berkeley. comliance遵从the practice of obeying rules or requests made by people in authority serverWEB SERVER cloud server KubernetesKubernetes (/ˌk(j)uːbərˈnɛtɪs, -ˈneɪtɪs, -ˈneɪtiːz, -ˈnɛtiːz/, commonly abbreviated K8s[3]) is an open-source container orchestration system for automating software deployment, scaling, and management. OS-level virtualization is an operating system (OS) paradigm in which the kernel allows the existence of multiple isolated user space instances, called containers (LXC, Solaris containers, Docker, Podman), zones (Solaris containers), virtual private servers (OpenVZ), partitions, virtual environments (VEs), virtual kernels (DragonFly BSD), or jails (FreeBSD jail or chroot jail).[1] Such instances may look like real computers from the point of view of programs running in them. A computer program running on an ordinary operating system can see all resources (connected devices, files and folders, network shares, CPU power, quantifiable hardware capabilities) of that computer. However, programs running inside of a container can only see the container’s contents and devices assigned to the container. paradigm范例；样式a typical example or pattern of sth In system administration, orchestration is the automated configuring, coordinating, and managing of computer systems and software. orchestration编排，管弦乐编曲the act of arranging a piece of music for an orchestra and assigning parts to the different musical instruments orchestra管弦乐队a large group of people who play various musical instruments together, led by a conductor DOCKER 单片机 devOpsdevOpsDevOps is a methodology in the software development and IT industry. Used as a set of practices and tools, DevOps integrates and automates the work of software development (Dev) and IT operations (Ops) as a means for improving and shortening the systems development life cycle. Information technology operations, or IT operations (ITOps), are the set of all processes and services that are both provisioned by an IT staff[33] to their internal or external clients and used by themselves, to run themselves as a business. The term refers to the application of operations management to a business’s technology needs. provision提供；供给the act of supplying sb with sth that they need or want; sth that is supplied Operations management is an area of management concerned with designing and controlling the process of production and redesigning business operations in the production of goods or services. Data centerData center management is the collection of tasks performed by those responsible for managing ongoing operation of a data center A data center (American English) or data centre (Commonwealth English) is a building, a dedicated space within a building, or a group of buildings used to house computer systems and associated components, such as telecommunications and storage systems. it generally includes redundant or backup components and infrastructure for power supply, data communication connections, environmental controls (e.g., air conditioning, fire suppression), and various security devices. gulpgulp is an open-source JavaScript toolkit created by Eric Schoffstall used as a streaming build system (similar to a more package-focused Make) in front-end web development. It is a task runner built on Node.js and npm, used for automation of time-consuming and repetitive tasks involved in web development like minification, concatenation, cache busting, unit testing, linting, optimization, etc. Minification (also minimisation or minimization) is the process of removing all unnecessary characters from the source code of interpreted programming languages or markup languages without changing its functionality. Lint is the computer science term for a static code analysis tool used to flag programming errors, bugs, stylistic errors and suspicious constructs.The term originates from a Unix utility that examined C language source code. A program which performs this function is also known as a “linter”. eslintESLint is a static code analysis tool for identifying problematic patterns found in JavaScript code. It was created by Nicholas C. Zakas in 2013 templates languageTemplates define the presentation of your website by describing what each page should look like. It might be necessary to goto the blog root and install a specific renderer for the template language you have chosen. templatesnpm install hexo-renderer-ejsnpm install hexo-renderer-njksnpm install hexo-render-pug stylesnpm install hexo-renderer-stylusnpm install hexo-renderer-lessnpm install hexo-renderer-sass liquidreactvue ejsPugPug is a high-performance template engine heavily influenced by Haml and implemented with JavaScript for Node.js and browsers. Pug (formerly Jade) is a templating language for Node.js. It is designed to be fast and elegant, and it has a clean and concise syntax. Pug is often used to create HTML pages, but it can also be used to create other types of output, such as XML, JSON, and CSS. pugjs.org HamlHaml (HTML abstraction markup language) is based on one primary principle: markup should be beautiful. It’s not just beauty for beauty’s sake either; Haml accelerates and simplifies template creation down to veritable haiku. veritable十足的a word used to emphasize that sb/sth can be compared to sb/sth else that is more exciting, more impressive, etc. haiku俳句(日本传统诗体，三行为一首，通常有17个音节) Embedded Ruby (ERB)ERB is a templating language based on Ruby. CSS frameworkscssCSS 是层叠样式表（Cascading Style Sheets）的缩写，它是一种用于描述网页上元素外观和布局的标记语言。CSS 用于控制网页的样式，包括文字的字体、颜色、大小，以及元素的边框、间距、宽度和高度等。 CSS 的主要功能包括： 样式定义：通过 CSS，你可以为 HTML 文档中的各个元素定义样式规则。这些规则可以应用于特定的 HTML 元素，例如标题、段落、链接、表格等。 布局控制：CSS 允许你控制元素的位置和布局，包括盒子模型、浮动、定位和弹性布局等。这有助于实现网页的多列布局、居中对齐等复杂结构。 样式继承：CSS 具有层叠性，允许多个样式规则同时应用到同一元素上。这种层叠性的特性允许样式从不同来源（例如浏览器默认样式、外部样式表、内部样式表、内联样式等）中继承和叠加。 响应式设计：通过媒体查询和响应式设计技术，CSS 可以根据不同的设备尺寸和屏幕分辨率自动调整网页布局和样式，以提供更好的用户体验。 动画和过渡：CSS 也支持动画和过渡效果，使开发人员能够创建平滑的动画效果，而无需使用 JavaScript 或其他技术。 CSS 通常与 HTML 结合使用，HTML 用于创建网页的结构和内容，而 CSS 用于定义这些内容的外观和样式。这种分离的方式使得开发人员可以更容易地管理和维护网页的样式，同时也提供了更大的灵活性，允许更改样式而不必修改 HTML 结构。 css预处理器Sass、SCSS 和 Less 都是用于编写层叠样式表（CSS）的预处理器，它们增强了原始的 CSS，提供了更多的功能和便利性。这些预处理器允许你使用变量、嵌套规则、函数、混合（Mixins）等功能来更有效地编写和维护样式。 Sass（Syntactically Awesome Stylesheets）：Sass 是一种CSS预处理器，最初使用缩进的方式来定义样式规则。它引入了变量、嵌套规则和混合等功能，使得样式代码更具可维护性和可读性。Sass的文件扩展名为.sass。 SCSS（Sassy CSS）：SCSS 是 Sass 3 引入的一种新语法，它更接近原始的 CSS 语法，使用花括号和分号来定义规则。SCSS 保留了 Sass 的所有功能，但以更传统的方式书写，这使得它更容易学习和迁移现有的 CSS 代码。SCSS的文件扩展名为.scss。 Less：Less 是另一个流行的CSS预处理器，它也提供了变量、嵌套规则和混合等功能。Less的语法与原始CSS类似，但添加了扩展功能。Less的文件扩展名为.less。 这些预处理器允许你在编写样式时更加模块化、可重用和可维护。在开发大型项目或需要复杂样式的项目中，它们可以显著提高工作效率和代码质量。一旦你编写了这些预处理器的样式文件，需要将它们编译成普通的CSS文件，然后在网页中使用。通常，有许多工具和构建系统可用于自动完成这个编译过程。 StylusStylus 是另一种用于编写层叠样式表（CSS）的CSS预处理器，它提供了一种简洁的、缩进式的语法，旨在减少冗余并提高样式表的可读性。Stylus 与 Sass、SCSS 和 Less 类似，它允许你使用变量、嵌套规则、混合（Mixins）等高级功能来组织和管理样式。 与其他预处理器不同，Stylus的语法更加自由和灵活。它不需要使用大括号 {} 或分号 ;，而是依赖于缩进和换行来定义规则。 bulmahttps://bulma.io/ Bulma: the modernCSS framework thatjust works.Bulma is a free, open source framework that provides ready-to-use frontend components that you can easily combine to build responsive web interfaces. rustRust is a multi-paradigm, general-purpose programming language that emphasizes performance, type safety, and concurrency. paradigma typical example or pattern of something; a model. concurrency In computer science, concurrency is the ability of different parts or units of a program, algorithm, or problem to be executed out-of-order or in partial order, without affecting the outcome. This allows for parallel execution of the concurrent units, which can significantly improve overall speed of the execution in multi-processor and multi-core systems. concurrent(with sth) 并存的；同时发生的existing or happening at the same time Rust has been used in software spanning across different domains. Rust was initially funded by Mozilla as part of developing Servo, an experimental parallel browser engine, in collaboration with Samsung. parallel平行的two or more lines that are parallel to each other are the same distance apart at every point Lua(/ˈluːə/ LOO-ə; from Portuguese: lua [ˈlu(w)ɐ] meaning moon) is a lightweight, high-level, multi-paradigm programming language designed primarily for embedded use in applications.[3] Lua is cross-platform, since the interpreter of compiled bytecode is written in ANSI C,[4] and Lua has a relatively simple C API to embed it into applications Lua, a language designed for use as an extension language for applications in general, used by many different applications. A scripting language or script language is a programming language that is used to manipulate, customize, and automate the facilities of an existing system.[1] Scripting languages are usually interpreted at runtime rather than compiled. A scripting language’s primitives are usually elementary tasks or API calls,and the scripting language allows them to be combined into more programs. Environments that can be automated through scripting include application software, text editors, web pages, operating system shells, embedded systems, and computer games. A scripting language can be viewed as a domain-specific language for a particular environment; in the case of scripting an application, it is also known as an extension language. Cloudflare, Incis an American company that provides content delivery network services, cloud cybersecurity, DDoS mitigation, and ICANN-accredited domain registration services. mitigation减轻;缓解;缓和Mitigation is a reduction in the unpleasantness, seriousness, or painfulness of something. ICANNThe Internet Corporation for Assigned Names and Numbers is an American multistakeholder group and nonprofit organization responsible for coordinating the maintenance and procedures of several databases related to the namespaces and numerical spaces of the Internet, ensuring the network’s stable and secure operation. Much of its work has concerned the Internet’s global Domain Name System (DNS), OpenRestyOpenResty is an nginx distribution which includes the LuaJIT interpreter for Lua scripts. The software was created by Yichun Zhang. It was originally sponsored by Taobao before 2011 and was mainly supported by Cloudflare from 2012 to 2016. Since 2017, it has been mainly supported by OpenResty Software Foundation and OpenResty Inc. Apache一个开放源码的网页服务器，可以在大多数计算机操作系统中运行。由于其多平台和安全性被广泛使用，是最流行的 Web服务器端软件之一。Nginx：免费开源、轻量级、高性能 Web 服务器，由伊戈尔·赛索耶夫为俄罗斯访问量第二的 Rambler.ru 站点开发。 -vendor（某种产品的）销售公司a company that sells a particular product Apache Tomcat(called “Tomcat” for short) is a free and open-source implementation of the Jakarta Servlet, Jakarta Expression Language, and WebSocket technologies.[2] It provides a “pure Java” HTTP web server environment in which Java code can also run. Thus it is a Java web application server, although not a full JEE application server. Jakarta EEformerly Java Platform, Enterprise Edition and Java 2 Platform, Enterprise Edition, is a set of specifications, extending Java SE with specifications for enterprise features such as distributed computing and web services. A Jakarta Servlet, formerly Java Servlet is a Java software component that extends the capabilities of a server. Although servlets can respond to many types of requests, they most commonly implement web containers for hosting web applications on web servers and thus qualify as a server-side servlet web API. Such web servlets are the Java counterpart to other dynamic web content technologies such as PHP and ASP.NET. A Jakarta Servlet is a Java class[1] in Jakarta EE that conforms to the Jakarta Servlet API 什么是 ASP.NET?.NET 是一个开发人员平台，由工具、编程语言、库组成，用于构建许多不同类型的应用程序。 ASP.NET 使用专门用于生成 Web 应用的工具和库扩展了 .NET 开发人员平台。 JamstackJamstack, previously stylized as JAMStack, is a web development architecture pattern[1] and solution stack. The acronym “JAM” stands for JavaScript, API and Markup (generated by a static site generator) In Jamstack websites, the application logic typically resides on the client side (for example, an embedded e-commerce checkout service that interacts with pre-rendered static content), without being tightly coupled to a backend server. Jamstack sites are usually served with a Git-based or headless CMS. Headless content management systemA headless Content Management System, or headless CMS, is a back end-only web content management system that acts primarily as a content repository. A headless CMS makes content accessible via an API for display on any device, without a built-in front end or presentation layer. The term ‘headless’ comes from the concept of chopping the ‘head’ (the front end) off the ‘body’ (the back end). flutterFlutter is an open-source UI software development kit created by Google. It is used to develop cross platform applications from a single codebase for any web browser,[4] Fuchsia, Android, iOS, Linux, macOS, and Windows. fletThe fastest way to build Flutter apps in PythonFlet enables developers to easily build realtime web, mobile and desktop apps in Python. fuchsiaFuchsia is an open-source capability-based operating system developed by Google. In contrast to Google’s Linux-based operating systems such as ChromeOS and Android, Fuchsia is based on a custom kernel named Zircon. capability basedCapability-based security is a concept in the design of secure computing systems, one of the existing security models. A capability (known in some systems as a key) is a communicable, unforgeable token of authority. It refers to a value that references an object along with an associated set of access rights. exploitAn exploit is a piece of software, a chunk of data, or a sequence of commands that takes advantage of a bug or vulnerability to cause unintended or unanticipated behavior to occur on computer software, hardware, or something electronic. osmandOsmAnd is a map and navigation app for Android and iOS. It uses the OpenStreetMap map database for its primary displays, but is an independent app not endorsed by the OpenStreetMap Foundation.","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/cs%20wiki/"},{"title":"","text":"1. health1.1. dietA healthy diet provides the body with essential nutrition: fluid, macronutrients such as protein, micronutrients such as vitamins, and adequate(enough in quantity, or good enough in quality, for a particular purpose or need) fibre and food energy. A healthy diet may contain fruits, vegetables, and whole grains, and may include little to no processed food or sweetened beverages. The requirements for a healthy diet can be met from a variety of plant-based and animal-based foods A whole grain is a grain of any cereal and pseudocereal that contains the endosperm, germ, and bran, in contrast to refined grains, which retain only the endosperm.全谷物是指任何含有胚乳、胚芽和麸皮的谷物和伪谷物，而精制谷物只保留胚乳。 1.1.1. The seven major classes of nutrientsEssential nutrients cannot be synthesized in the organism in sufficient quantities for survival, and therefore must be obtained through the diet. 1.1.1.1. carbohydratesCarbohydrates may be classified as monosaccharides, disaccharides or polysaccharides depending on the number of monomer (sugar) units they contain. They are a diverse group of substances, with a range of chemical, physical and physiological properties. They make up a large part of foods such as rice, noodles, bread, and other grain-based products Monosaccharides contain one sugar unit, disaccharides two, and polysaccharides three or more. 1.1.1.2. fatDifferent foods contain different amounts of fat with different proportions of saturated and unsaturated fatty acids. Some animal products, like beef and dairy products made with whole or reduced fat milk like yogurt, ice cream, cheese and butter have mostly saturated fatty acids (and some have significant contents of dietary cholesterol). Other animal products, like pork, poultry, eggs, and seafood have mostly unsaturated fats. Plants and fish oil generally contain a higher proportion of unsaturated acids, although there are exceptions such as coconut oil and palm kernel oil. Many careful studies have found that replacing saturated fats with cis unsaturated fats in the diet reduces risk of cardiovascular diseases (CVDs), diabetes, or death. These studies prompted many medical organizations and public health departments, including the World Health Organization (WHO), to officially issue that advice. 1.1.1.3. fiberDietary fiber (in Commonwealth English fibre) or roughage is the portion of plant-derived food that cannot be completely broken down by human digestive enzymes. Dietary fiber is a carbohydrate, specifically a polysaccharide, which is incompletely absorbed in humans and in some animals. Like all carbohydrates, when it is metabolized, it can produce four Calories (kilocalories) of energy per gram, but in most circumstances, it accounts for less than that because of its limited absorption and digestibility. 1.1.1.4. mineralsDietary minerals are inorganic chemical elements required by living organisms, other than the four elements carbon, hydrogen, nitrogen, and oxygen that are present in nearly all organic molecules. Macrominerals Elements with recommended dietary allowance (RDA) greater than 150 mg/day are Trace minerals Many elements are required in smaller amounts (microgram quantities), usually because they play a catalytic role in enzymes. Some trace mineral elements (RDA &lt; 200 mg/day) are Ultratrace minerals Ultratrace minerals are an as yet unproven aspect of human nutrition, and may be required at amounts measured in very low ranges of μg/day. 1.1.1.5. proteinsProteins are essential nutrients for the human body. They are one of the building blocks of body tissue and can also serve as a fuel source. The most important aspect and defining characteristic of protein from a nutritional standpoint is its amino acid(氨基酸) composition. During human digestion, proteins are broken down in the stomach to smaller polypeptide chains via hydrochloric acid and protease actions. This is crucial for the absorption of the essential amino acids that cannot be biosynthesized by the body. There are nine essential amino acids which humans must obtain from their diet in order to prevent protein-energy malnutrition and resulting death. They are phenylalanine, valine, threonine, tryptophan, methionine, leucine, isoleucine, lysine, and histidine. 1.1.1.6. vitaminsVitamins are organic molecules (or a set of closely related molecules called vitamers) that are essential to an organism in small quantities for proper metabolic(代谢 the chemical processes in living things that change food, etc. into energy and materials for growth) function. Except for vitamin D, vitamins are essential nutrients, necessary in the diet for good health. Vitamin D can be synthesized in the skin in the presence of UVB radiation. 1.1.1.7. waterWater is excreted from the body in multiple forms; including urine and feces, sweating, and by water vapour in the exhaled breath. Therefore, it is necessary to adequately rehydrate to replace lost fluids. 1.1.2. World Health Organization RecommendationsThe World Health Organization (WHO) makes the following five recommendations with respect to both populations and individuals: Maintain a healthy weight by eating roughly the same number of calories that your body is using. Limit intake of fats to no more than 30% of total caloric intake, preferring unsaturated fats to saturated(饱和) fats. Avoid trans(反式) fats. Eat at least 400 grams of fruits and vegetables per day (not counting potatoes, sweet potatoes(红薯), cassava(木薯), and other starchy roots(淀粉根)). A healthy diet also contains legumes (e.g. lentils(扁豆), beans), whole grains, and nuts. Limit the intake of simple sugars to less than 10% of caloric intake (below 5% of calories or 25 grams may be even better). Limit salt/sodium(钠) from all sources and ensure that salt is iodized(加碘). Less than 5 grams of salt per day can reduce the risk of cardiovascular(心血管) disease. The WHO has stated that insufficient vegetables and fruit is the cause of 2.8% of deaths worldwide. Other WHO recommendations include: ensuring that the foods chosen have sufficient vitamins and certain minerals; avoiding directly poisonous (e.g. heavy metals) and carcinogenic(致癌) (e.g. benzene 苯) substances; avoiding foods contaminated by human pathogens (e.g. E. coli 大肠杆菌, tapeworm eggs 绦虫卵); and replacing saturated fats with polyunsaturated fats in the diet, which can reduce the risk of coronary artery(Coronary means belonging or relating to the heart.冠状动脉) disease and diabetes(糖尿病). 1.1.3. 中国居民膳食指南膳食指南 是以食物为基础、以营养科学为依据的一组原则性建议和群众宣传教育手段。它的目的在于指导大众合理用餐以改善营养，预防与膳食有关的疾病，增进人群的健康。膳食指南是在长期社会实践的过程中发展起来的。 膳食指南的内容 食物多样、谷物为主。各种食物所含营养成分不同，没有一种食物能供给人体所需的全部营养素，所以每日膳食必须由多种多样的食物适当搭配，以满足人体对多种经营素的需要。 多吃蔬菜、水果和薯类。蔬菜水果和薯类都含有较丰富的维生素、矿物质及膳食纤维等营养素，对保护心血管健康，增强抗病力和预防某些癌症有重要作用。 常吃奶类、豆类或其制品。经常吃奶类可以提高儿童、青少年的骨密度，减缓老年人骨质疏松症。豆类营养丰富，含优质蛋白、不饱和脂肪酸、钙及 B 族维生素等多种营养物质，既可改善膳食营养素供给，又可避免吃肉类过多的不利影响。 经常吃适量鱼、禽、蛋、瘦肉，少吃肥肉和荤油。鱼、禽、蛋及瘦肉是优质蛋白、脂溶性维生素和某些矿物质的重要来源。 食量与体力活动要平衡，保持适当的体重。 吃清淡少盐的膳食。食品不应太油腻、太咸，少吃油炸、烟熏食物。每人每日食盐用量以不超过 6 克为宜；少吃咸菜、味精等含钠的食物；吃盐多会增加高血压的危险。 饮酒应限量。白酒除具有能量外，不含有其他的营养素。 吃清洁、卫生、不变质的食物。 平衡膳食宝塔 中国居民平衡膳食宝塔是根据中国居民膳食指南，结合中国居民的膳食，把平衡膳食的原则转化成各类食物的重量，便于大家在日常生活中实行。 平衡膳食宝塔共分五层，包含我们每天应吃的主要食物种类。宝塔各层位置和面积不同，这在一定程度上反映出各类食物在膳食中的地位和应占的比重。谷类食物位居底层，每人每天应该吃 300-500 克；蔬菜和水果占据第二层，每天应吃 400-500 克和 100-200 克；鱼、禽、肉、蛋等动物性食物位于第三层，每天应该吃 125-200 克（鱼虾类 50 克，畜、禽肉 50-100 克，蛋类 25-50 克）；奶类和豆类食物合占第四层，每天应该吃奶类及奶制品 100 克和豆类及豆制品 50 克。第五层塔尖是油脂类，每天不超过 25 克。 宝塔没有建议食糖的摄入量。因为我国居民现在平均吃食糖的量还不多，少吃些或适当多吃些可能对健康的影响不大。但多吃糖有增加龋齿的危险，尤其是儿童、青少年不应吃太多的糖和含糖食品。 宝塔建议的各类食物的摄入量一般是指食物的生重。各类食物的组成是根据全国营养调查中居民膳食的实际情况计算的，所以每一类食物中毒的重量不是指某一种具体食物的重量。 谷类：是指面粉、大米、玉米粉、小麦、高粱等的总和。它们是膳食中能量的主要来源。 蔬菜和水果：蔬菜和水果经常放在一起，因为它们有许多共性。但蔬菜和水果终究是两类食物，各有优势，不能完全彼此替代。 鱼肉蛋：鱼、肉、蛋归为一类，主要提供动物性蛋白质和一些重要的无机盐和维生素。但它们彼此间也有明显区别。 奶类和豆类食物：宝塔建议的 100 克是按蛋白质和钙的含量来折算的，约相当于鲜奶 200 克或奶粉 28 克。中国居民膳食中普遍缺钙，奶类应是首选补钙食物，很难用其他类食物代替。 1.2. exerciseExercise is a body activity that enhances or maintains physical fitness and overall health and wellness Aerobic exercise is any physical activity that uses large muscle groups and causes the body to use more oxygen than it would while resting. The goal of aerobic exercise is to increase cardiovascular(心血管的 connected with the heart and the blood vessels) endurance. Examples of aerobic exercise include running, cycling, swimming, brisk walking, skipping rope, rowing, hiking, dancing, playing tennis, continuous training, and long distance running. Anaerobic exercise is a type of exercise that breaks down glucose in the body without using oxygen; anaerobic means “without oxygen”.Anaerobic exercise, which includes strength and resistance training, can firm, strengthen, and increase muscle mass, as well as improve bone density, balance, and coordination. Flexibility exercises stretch and lengthen muscles. 1.3. sleepAdults (18–64 years) 7 to 9 hours 1.4. self careSelf-care has been defined as the process of establishing behaviors to ensure holistic well-being of oneself, to promote health, and actively manage illness when it occurs. Individuals engage in some form of self-care daily with food choices, exercise, sleep, reading and dental care.","link":"/0005%20Applied%20science/%E5%8C%BB%E5%AD%A6%20Medicine%20and%20health/health/"},{"title":"","text":"农业植物生产类 090101 农学 农学农业工程类 082301 农业工程 工学 《农业气象学》、 《植物生理与生物化学》、 《农业微生物学》、《植物生物技术导论》、《农业生态学》、 《遗传学》、《育种学》、 《植物生理学实验》、 《作物栽培与耕作学》、 《农业经济管理》 谷物为主谷类作物亦称“禾谷类作物”。属于禾本科,只有蓼科植物的荞麦例外。粮食作物主要包括稻子、小麦、大麦、黑麦、燕麦、玉米、高粱、粟、黍、稷等。 小麦和水稻是世界各国最主要的粮食作物，也是人类主要的两大食用作物。 其中的子粒称“谷物”，为食用对象；带壳或稃的称“谷”，去壳的叫“米”，是人们的主食之一。子粒中含有大量的淀粉和一定比例的蛋白质和脂肪等。 单子叶植物（英文名：Monocotyledons，简称monocots），旧名单子叶植物纲（Monocotyledoneae）或百合纲（Liliopsida）单子叶植物种子的胚具1片子叶，植物多为草本单子叶植物实际是由古代的双子叶植物演化而来，是双子叶植物的其中一个特化分支。在传统的克朗奎斯特分类法中，单子叶植物被称做“百合纲”，和双子叶植物的木兰纲并立禾本目（Poales）禾本目是单子叶植物的一个目。 面粉、大米、玉米粉、小麦、高粱 小麦面粉 面粉或小麦粉（英语：wheat flour）是一种由小麦或者其它谷物研磨而成的粉末，是世界上最常见的食品原料之一，经常需要加水变为面团，再蒸烤食用。面粉承担了人类食物中的“主食”和“甜点”的大部分，例如各种面包、馒头、蛋糕、面条、饼、饼干等均由面粉制作。 面筋，是指使生面团具有筋力的物质（麸质或麦麸）。实际上筋力高低主要取决于面粉中的蛋白质含量的高低。越“高筋”所产生的弹力和粘性则越高，反之则越低。 面粉可以分为特高筋面粉、高筋面粉、中筋面粉、低筋面粉及无筋面粉。五种面粉的分别在于其黏度的不同。 高筋面粉蛋白质含量约12.5 ~ 13.5%，蛋白质含量高，因此筋度强，适合各种西式面包因为其韧性较高，经烘焙后蓬松厚实、有小孔、仍得保持形状，极度适合添加巧克力、奶油、肉桂粉、奶酪、果酱等其它食物。 中筋面粉蛋白质含量为9.5 ~ 12.0%，适合绝大部分咸味的中式面食和小部分中式甜点，包括包子、馒头、中式面条、饺子和小笼包等，属于最万用的。 低筋面粉蛋白质含量在8.5%以下，因此筋性亦弱，质地更加柔嫩顺滑，多用来做蛋糕 高粱高粱（Sorghum bicolor (L.) Moench），禾本科高粱属一年生高大草本植物。选地：高粱根系发达吸水吸肥力强，宜选择平坦疏松较肥沃的地块种植。因高粱有抗旱耐涝耐盐碱耐瘠薄的特性，所以低洼易涝地块或是瘠薄干旱的盐碱地块也可种植。因高粱对农药敏感，所以忌选前茬施用长残效类农药的地块。 轮作倒茬高粱忌连作，合理的轮作方式是高粱增产的关键。高粱的理想前茬是大豆茬，其次是玉米茬、马铃薯茬等。适宜的后茬最好是大豆茬、或与玉米、谷子轮作。 收获面积和总产量仅次于小麦、水稻、玉米，是世界四大谷类作物之一。高粱为粗粮，口感不好。其中含有单宁，便秘者少食或不食。高粱淀粉含量高，酿酒没有其他干扰味道，适合酿造中国白酒，是中国白酒中的主要酿造原料。高粱也是传统扫帚的材料 荞麦 荞麦（Fagopyrum esculentum Moench），别名：净肠草、乌麦、三角麦，是蓼科（Polygonaceae） 荞麦适应性较强，对土壤的要求不高，很多土壤条件都能适应，不过最好的还是较疏松的沙壤土。虽然荞麦具有很强的适应能力 荞麦的谷蛋白含量很低，主要的蛋白质是球蛋白。荞麦所含的必需氨基酸中的赖氨酸含量高而蛋氨酸的含量低，氨基酸模式可以与主要的谷物（如小麦、玉米、大米的赖氨酸含量较低）互补。 荞麦的碳水化合物主要是淀粉。因为颗粒较细小，所以和其他谷类相比，具有容易煮熟、容易消化、容易加工的特点。 荞麦含有丰富的膳食纤维，其含量是一般精制大米的10倍；荞麦含有丰富的膳食纤维，膳食纤维被称为人类的第七类营养素，可以促进胃肠蠕动，通便，对于预防便秘有很好的作用，还可以降低血糖血脂，对人类的健康意义重大。 粟sù，是禾本科狗尾草属草本植物。直到宋末，稻、小麦逐渐发展，粟才退居二线。粟一般是指现代的小米,谷粒去皮后称为“小米”，煮粥、煮饭都可以,外壳是黄色 《本草纲目》称粘者为黍，不粘者为稷jì 黍 黍一般是指现代的黄米。黍去皮后叫黄米,粟一般是指现代的小米，外壳的颜色是红色。颗粒比小米要大一些 黍shǔ，属单子叶禾本科黍属一年生草本植物。黍为人类最早的栽培谷物之一，谷粒富含淀粉，供食用或酿酒，它还富含维生素等对儿童生长发育有重要作用的营养物质 有红、白黄、黑几个品种。白黍米粘性次于糯米，红黍米粘性最强，可以煮粥。可以包粽子吃。 蔬菜、水果和薯类十字花科白菜萝卜油菜荠菜卷心菜 葫芦科黄瓜南瓜丝瓜西瓜冬瓜葫芦 茄科马铃薯茄子番茄辣椒烟草枸杞 薯类薯类作物又称根茎类作物，主要包括甘薯、马铃薯、山药、芋类等。这类作物的产品器官是块根和块茎，生长在土壤中，具有生长前期和块根(茎)膨大期两个生理分期。 甘薯甘薯又称番薯、山芋、红薯、地瓜等 马铃薯马铃薯又称土豆、洋芋、山药蛋等 豆类豆类泛指所有能产生豆荚的豆科植物 豆类作物不耐连作，连作时由于噬菌体的繁衍抑制了根瘤菌的发育而影响生长，同时病虫害加重，产量品质降低。所以豆类作物要实行轮作才能获得高产。豆类作物适宜的前茬为禾谷类作物、薯类作物和棉花 豆类作物主要是大豆、蚕豆、红豆、绿豆、黑豆、豇豆、豌豆、刀豆、扁豆、芸豆、鹰嘴豆、木豆等。 黄豆（又称大豆）大豆的营养成分非常丰富，其蛋白质含量高于谷类和薯类食物２.５～８倍，除糖类较低外，其他营养成分，如脂肪、钙、磷、铁和维生素Ｂ１、维生素Ｂ２等人体必需的营养物质，都高于谷类和薯类食物，它是一种理想的优质植物蛋白食物。 大豆可以加工豆腐、豆浆、腐竹等豆制品 发酵豆制品包括腐乳、臭豆腐、豆瓣酱、酱油、豆豉、纳豆等。而非发酵豆制品包括水豆腐、干豆腐（百页）、豆芽 毛豆是尚未成熟的食用大豆，约在荚果种子生长至八分熟时采收。毛豆一词，可指此鲜豆荚或鲜豆荚内的八分熟种子。因为此时期的豆荚外皮尚有很多细毛，所以得名； 黑豆 绿豆 蚕豆 豌豆 豇jiāng豆 豇豆（Vigna unguiculata (L.) Walp.），豆科豇豆属一年生缠绕、草质藤本或近直立草本植物豇豆的嫩豆荚和豆粒味道鲜美，食用方法多种多样，可炒、煮、炖、拌、做馅等。嫩豆荚可炒食，也可凉拌，另外还可用于加工腌泡、速冻、干制、保鲜菜,加工成罐头等。干种子还可以煮粥、煮饭、制酱、制粉。 豇豆耐高温，不耐低温，属于短日性作物，喜强光，光照弱时易落花落荚，耐旱力较强，但不耐涝，选择土壤肥沃、疏松的地区种植。 奶类中国居民膳食中普遍缺钙，奶类应是首选补钙食物，很难用其他类食物代替。 禽、蛋、鱼、瘦肉湖北省黄梅县的蔬菜种植湖北省黄梅县的蔬菜种植季节和可种植的蔬菜种类会受到当地气候、土壤和季节变化的影响。以下是一些通常在黄梅县每个季节可以栽种的蔬菜和一般的栽种日期： 春季蔬菜（一般从3月到5月）： 菠菜：3月至4月 生菜：3月至4月 芥菜：3月至4月 大葱：3月至4月 青椒：3月至4月 茄子：3月至4月 胡萝卜：3月至4月 韭菜：3月至4月 莴苣：3月至4月 夏季蔬菜（一般从6月到8月）： 黄瓜：4月至5月 西红柿：4月至5月 南瓜：5月至6月 丝瓜：5月至6月 豆角（四季豆）：4月至5月 辣椒：4月至5月 茄子：4月至5月 秋季蔬菜（一般从9月到11月）： 白菜：8月至9月 大白菜：8月至9月 青菜：8月至9月 胡萝卜：8月至9月 萝卜：8月至9月 莴苣：8月至9月 韭菜：8月至9月 冬季蔬菜（一般从12月到2月）： 白菜：10月至11月 萝卜：10月至11月 小白菜：10月至11月 韭菜：10月至11月 这些日期是一般性的指导，实际的种植时间会受到当地的气候、土壤状况和具体品种的影响。为了获得更准确的种植时间建议，最好咨询黄梅县的当地农业部门、农业专家或有经验的农民，以根据具体条件进行种植计划。此外，也要随时根据当地的天气情况和气候变化进行调整。 上面的秋季和春季种植时，相同蔬菜种植，种子有不同吗通常情况下，同一种蔬菜的种子在春季和秋季种植时是相同的。然而，在不同的季节种植同一种蔬菜时，有一些注意事项和变化： 品种选择：虽然同一种蔬菜的种子在不同季节的种植中通常是相同的，但你可以选择适应特定季节的蔬菜品种。有些蔬菜品种被培育成春季或秋季优先的品种，以适应当时的气温和日照条件。因此，你可以在购买种子时查看品种适应的季节。 种子处理：有些蔬菜的种子需要特殊的处理，例如浸泡、冷藏或提前育苗，以适应不同的季节条件。这些种子处理方法可能会在不同季节的种植中有所变化。 播种日期：尽管同一种蔬菜的种子在不同季节可以使用相同的品种，但播种日期可能会有所不同。春季和秋季的气温和光照条件不同，因此需要根据当地的气象条件来确定最佳的播种日期。 生长周期：春季和秋季同一种蔬菜的生长周期可能会有所不同。在秋季种植时，由于日照时间减少，一些蔬菜可能会生长得较慢。 总之，虽然同一种蔬菜的种子在不同季节的种植中通常是相同的，但你需要考虑气温、日照、播种日期和特定品种的因素，以确保蔬菜在不同季节的种植中获得最佳生长条件。最好根据当地的气候和季节特点来制定种植计划。如果你有疑问，可以咨询当地的农业专家或种子供应商，以获取更具体的建议。 查询蔬菜种植知识和种植指南的中国农业网站以下是一些可以查询蔬菜种植知识和种植指南的中国农业网站： 中国农业部官方网站：中国农业部的官方网站通常提供了广泛的农业信息和资源，包括蔬菜种植的指南和技术资料。你可以在中国农业部官方网站上查找相关信息。 湖北省农业厅官方网站：湖北省农业厅的网站可能提供适用于湖北地区的蔬菜种植指南。你可以搜索”湖北省农业厅”并访问其官方网站来获取相关信息。 中国农业大学：中国农业大学通常在其网站上发布有关农业和蔬菜种植的研究成果和指南。你可以访问中国农业大学官方网站查找相关信息。 中国农业科学院：中国农业科学院是一个重要的农业研究机构，其网站上可能提供有关蔬菜种植的研究和技术指导。你可以访问中国农业科学院官方网站查找相关信息。 中国农村网：中国农村网是一个提供农村农业信息的综合性网站，包括蔬菜种植方面的内容。你可以访问中国农村网查找相关信息。 农业应用程序：一些农业应用程序也提供了有关蔬菜种植的信息和工具，如农事日历、天气预报等。你可以在应用商店中搜索相关农业应用程序，如”农业助手”、”农场通”等。 请注意，这些网站和资源可能会不断更新和变化，因此建议定期查看官方网站和应用程序以获取最新的种植信息和指南。同时，你也可以考虑联系当地的农业部门或农业专家，以获取特定地区的种植建议和支持。 湖北东部的可耕种传统农作物包括以下一些主要品种 水稻（Rice）：湖北是中国主要的水稻产区之一。水稻的种植季节通常是春季和夏季。播种时间通常在4月至5月之间，而收获时间在8月至10月之间，具体时间会根据具体的品种和种植方法有所不同。 小麦（Wheat）：小麦是湖北东部的冬季作物。播种时间通常在10月至11月之间，而收获时间在4月至6月之间，具体时间也会因品种和气候条件而异。 玉米（Corn）：玉米通常在春季进行播种，时间在4月至5月之间。收获时间则在8月至10月之间，取决于品种和气候。 大豆（Soybeans）：大豆的种植季节也是春季，通常在4月至5月之间进行播种，而收获时间在8月至10月之间。 红薯（Sweet Potatoes）：红薯是湖北东部的重要作物之一，通常在春季进行种植，时间在4月至5月之间。收获时间通常在9月至11月之间，具体时间取决于品种和生长条件。 需要注意的是，播种和收获日期可能会因气候、土壤条件和具体的农作物品种而有所不同。种植者通常会根据当地的气象和土壤情况来确定最佳的时间。此外，现代农业技术也可以影响作物的种植和收获时间。因此，最好的做法是咨询当地的农业专家或农民，以获取最准确的信息。 种植土豆在湖北东部地区种植土豆需要考虑当地的气候、土壤和品种选择。以下是一个基本的土豆种植方案，但请注意，具体的步骤和时间表可能会因当地条件而异。在种植前，建议咨询当地的农业专家或农民，以获取更详细的指导。 土壤准备： 首先，进行土壤测试以了解土壤的营养状况和pH值。土壤的pH应在5.0至6.0之间，这对于土豆的生长较为理想。 清理田地，去除杂草和石头。 品种选择： 选择适合当地气候和土壤条件的土豆品种。湖北东部的气候可能会在不同季节有所不同，因此要选择适应这种气候的品种。 播种： 春季是土豆的主要播种季节。在湖北东部，播种通常在4月至5月之间进行。 在准备好的土壤中，根据品种和行距的要求挖槽或开沟。行距通常在30至45厘米之间，而槽深度约为10至15厘米。 将土豆种子切成块，每个块应包含至少一个眼（芽）。种子块应在槽中均匀分布，通常每隔30至45厘米放一个块。 覆盖土豆种子块，确保它们与土壤接触紧密。 生长和护理： 保持土壤湿润，但不要过于浸泡。土豆需要充足的水分，特别是在开花和结薯期间。 定期除草，以确保杂草不会竞争土壤中的养分和水分。 鉴于土壤测试的结果，可能需要施加适当的肥料，以满足土豆的养分需求。 收获： 土豆的收获通常在生长季节后的90至120天进行，具体时间取决于品种和生长条件。 使用铁锹或铲子轻轻挖出土豆块，小心不要损伤它们。将土豆清洗干净，晾干，然后储存在凉爽、干燥、通风良好的地方。 以上是一个一般的土豆种植方案的概述，但请注意，成功种植土豆还需要密切关注气象条件和土壤状况，以及在不同生长阶段采取适当的护理措施。在整个种植季节中，定期监测和管理病虫害也非常重要。最好的做法是与当地的农业专家或农民合作，以获取实际的建议和指导。 红薯种植在湖北东部，红薯通常是通过插蔓条的方式进行种植。以下是一个详细的种植方案，包括母株的播种时间和后续步骤： 播种母株薯块： 选择健康的母株：在春季，通常在3月至4月之间，选择健康的红薯母株薯块。这些薯块应该没有明显的病害或损伤，并且具有良好的生长特征。 储存和发芽：将选好的母株薯块储存在温暖、湿润的环境中，让它们发芽。通常需要2至4周的时间，直到薯块上出现足够多的蔓条。 插蔓条：3. 蔓条的准备：等到蔓条足够长（大约15-20厘米）后，小心地将蔓条剪下，确保每个蔓条上有几个叶片。 插蔓条：在4月至6月之间，选择适当的时间，将蔓条插入土壤中。通常，蔓条之间的距离应保持在30-40厘米，而蔓条在行内的距离可以略宽，以便红薯的生长和扩展。 土壤和管理：5. 土壤准备：在插蔓条之前，确保土壤富含有机物质，排水良好，并且PH值适宜。红薯在富含有机质和排水良好的土壤中生长最佳。 管理和施肥：定期除草，确保红薯获得足够的养分。可以在播种时添加适当的肥料，然后根据土壤测试的结果进行追加施肥。 灌溉：保持土壤湿润，但不要过度浸水。红薯需要足够的水分来生长，特别是在干旱的季节。 病虫害管理：密切监测植株，防止病虫害的发生，并采取必要的措施来控制它们，以确保作物的健康生长。 收获：9. 收获时间：红薯的收获时间通常在9月至11月之间，具体时间取决于品种和生长条件。当蔓叶开始枯萎，并且地下块茎已经成熟时，可以开始收获。 谨慎收获：小心地挖起地下块茎，避免损伤它们。将红薯清洗干净，然后储存在阴凉、通风良好的地方。 这是一般的红薯种植方案，但具体的细节可能会因当地气候和土壤条件而异。建议咨询当地的农业专家或农民，以获取适用于您特定地区的最佳实践建议。 好的，以下是去掉重复后的答案： 一年四季在湖北省黄梅县可以种植的蔬菜 春季（3月至5月） 早春蔬菜： 菠菜：3月上旬播种，4月上旬收获。 芹菜：3月中旬播种，5月上旬收获。 韭菜：3月下旬播种，5月中旬收获。 香菜：3月下旬播种，5月中旬收获。 中春蔬菜： 番茄：4月上旬播种，6月上旬收获。 黄瓜：4月上旬播种，6月上旬收获。 辣椒：4月中旬播种，7月中旬收获。 茄子：4月中旬播种，7月中旬收获。 夏季（6月至8月） 夏秋蔬菜： 南瓜：6月上旬播种，8月上旬收获。 西葫芦：6月上旬播种，8月上旬收获。 豆角：6月中旬播种，8月中旬收获。 豇豆：6月中旬播种，8月中旬收获。 耐热蔬菜： 苦瓜：6月下旬播种，9月下旬收获。 丝瓜：6月下旬播种，9月下旬收获。 冬瓜：6月下旬播种，9月下旬收获。 秋季（9月至11月） 秋季蔬菜： 大白菜：8月上旬播种，10月上旬收获。 小白菜：8月上旬播种，10月上旬收获。 青菜：8月中旬播种，10月中旬收获。 萝卜：8月中旬播种，10月中旬收获。 冬季（12月至2月） 越冬蔬菜： 大葱：9月上旬播种，11月上旬收获，可持续采收至翌年2月。 蒜苗：9月上旬播种，11月上旬收获，可持续采收至翌年2月。 菠菜：9月中旬播种，11月中旬收获，可持续采收至翌年2月。 芹菜：9月中旬播种，11月中旬收获，可持续采收至翌年2月。 茼蒿：10月上旬播种，12月上旬收获，可持续采收至翌年3月。 小油菜：10月上旬播种，12月上旬收获，可持续采收至翌年3月。 芥菜：10月中旬播种，12月上旬收获，可持续采收至翌年3月。 麦苗：11月上旬播种，1月上旬收获，可持续采收至翌年3月。 温室蔬菜： 番茄：11月中旬播种，1月月中旬收获。 黄瓜：11月中旬播种，1月月中旬收获。 辣椒：11月中旬播种，1月月中旬收获。 茄子：11月中旬播种，1月月中旬收获。 备注： 以上表格仅供参考，实际种植时间和收获时间可能会因气候条件、品种选择等因素而有所差异。 建议您根据当地的气候条件和您的个人喜好选择合适的蔬菜品种进行种植。 希望以上信息对您有所帮助。","link":"/0005%20Applied%20science/%E5%86%9C%E4%B8%9A%E5%AD%A6%20Agriculture/%E5%86%9C%E4%B8%9Awiki/"},{"title":"","text":"ebookamazon bookset browser vpn -&gt; usathe book product category can show up","link":"/0005%20Applied%20science/%E5%9B%BE%E4%B9%A6%E9%A6%86%20%E6%83%85%E6%8A%A5%E4%B8%8E%E6%96%87%E7%8C%AE%E5%AD%A6%20Library%20and%20museum%20studies/amazon%20ebook/"},{"title":"","text":"问题分析问题是什么 what事情不是按预定的行为进行物体的状态不是预期的 原因 why引起问题的上一行为（事情）是什么 后果引发的后果会是什么 位置 where在什么系统环境下 时间 when什么时候开始发生 怎么办 how怎么修正，步骤是什么 系统分析 模块 输入输出（相互影响、作用）","link":"/0001%20Humanities/%E5%93%B2%E5%AD%A6%20Philosophy/self%20help/problem%20solve/"},{"title":"","text":"make a plantime management计划A scheme is someone’s plan for achieving something Planning is the process of thinking regarding the activities required to achieve a desired goal.It involves the use of logic and imagination to visualise not only a desired end result, but the steps necessary to achieve that result. time management Planning is the process of thinking regarding the activities required to achieve a desired goal. It involves of various demands upon a person relating to work, social life, family, hobbies, personal interests, and commitments with the finite nature of time. Using time effectively gives the person “choice” on spending or managing activities at their own time and expediency. expediency不得已而做的事Expediency means doing what is convenient rather than what is morally right. Setting priorities and goals ABCD analysisA technique that has been used in business management for a long time is the categorization of large data into groups. These groups are often marked A, B, C and D—hence the name. Activities are ranked by these general criteria: A – Tasks that are perceived as being urgent and important,B – Tasks that are important but not urgent,C – Tasks that are unimportant but urgent,D – Tasks that are unimportant and not urgent.Each group is then rank-ordered by priority - to further refine the prioritization, some individuals choose to then force-rank all “B” items as either “A” or “C”. The Eisenhower Method Using the Eisenhower Decision Principle, tasks are evaluated using the criteria important/unimportant and urgent/not urgent, and then placed in according quadrants in an Eisenhower Matrix (also known as an “Eisenhower Box” or “Eisenhower Decision Matrix”). Tasks in the quadrants are then handled as follows. Important/Urgent quadrant tasks are done immediately and personally, e.g. crises, deadlines, problems.Important/Not Urgent quadrant tasks get an end date and are done personally, e.g. relationships, planning, recreation.Unimportant/Urgent quadrant tasks are delegated, e.g. interruptions, meetings, activities.Unimportant/Not Urgent quadrant tasks are dropped, e.g. time wasters, pleasant activities, trivia. delegate授(权);If you delegate duties, responsibilities, or power to someone, you give them those duties, those responsibilities, or that power so that they can act on your behalf. A basic “Eisenhower box” to help evaluate urgency and importance. Items may be placed at more precise points within each quadrant. POSEC method POSEC is an acronym for “Prioritize by Organizing, Streamlining, Economizing and Contributing”. The method dictates a template which emphasizes an average individual’s immediate sense of emotional and monetary security. It suggests that by attending to one’s personal responsibilities first, an individual is better positioned to shoulder collective responsibilities. Inherent in the acronym is a hierarchy of self-realization, which mirrors Abraham Maslow’s hierarchy of needs. Prioritize your time and define your life by goals. Organize things you have to accomplish regularly to be successful (family and finances). Streamline things you may not like to do, but must do (work and chores). Economize things you should do or may even like to do, but they’re not pressingly urgent (pastimes and socializing). Contribute by paying attention to the few remaining things that make a difference (social obligations). chres琐事Chores are tasks such as cleaning, washing, and ironing that have to be done regularly at home. obligation义务;责任If you have an obligation to do something, it is your duty to do that thing. Implementation of goalsA task list (also called a to-do list or “things-to-do”) is a list of tasks to be completed, such as chores or steps toward completing a project. It is an inventory tool which serves as an alternative or supplement to memory. Writer Julie Morgenstern suggests “do’s and don’ts” of time management that include: Map out everything that is important, by making a task list.Create “an oasis of time” for one to manage.Say “No”.Set priorities.Don’t drop everything. GTD (Getting Things Done) Getting Things Done was created by David Allen. The basic idea behind this method is to finish all the small tasks immediately and a big task is to be divided into smaller tasks to start completing now. The reasoning behind this is to avoid the information overload or “brain freeze” which is likely to occur when there are hundreds of tasks. The thrust of GTD is to encourage the user to get their tasks and ideas out and on paper and organized as quickly as possible so they’re easy to manage and see. 制定计划制定计划是一种组织和管理时间、资源和目标的有效方式。以下是一些步骤，可帮助你制定和实施计划： 明确你的目标： 定义你要实现的具体目标。确保目标具体、可测量、可实现、与你的价值观和长期目标一致。 将大目标分解为更小的、可管理的子目标或任务。 制定时间表： 为每个子目标或任务分配截止日期，以确保它们按计划完成。 创建一个时间表或日程表，将任务和活动安排在适当的时间段内。 列出任务： 将需要完成的任务和活动列成清单。这可以包括工作任务、个人事务、学习计划、锻炼等。 设置优先级： 根据任务的重要性和紧急性，确定任务的优先级顺序。使用工具如任务列表或任务管理应用来帮助管理和优先安排任务。 分配资源： 确定完成任务所需的资源，包括时间、人力、资金、工具等。确保这些资源可用并合理分配。 制定行动计划： 为每个任务制定具体的行动计划，包括步骤和所需的资源。这有助于明确如何执行任务。 跟踪和评估进展： 定期监视和评估你的进展，确保你按照计划前进。如果需要，进行调整以应对变化和挑战。 保持灵活性： 计划可能会面临变化和意外情况，所以要保持灵活性，准备应对这些变化。 奖励自己： 设定一些奖励机制，以激励自己完成任务和达到目标。奖励可以是小的自我鼓励，也可以是一些特殊的待遇或庆祝活动。 寻求支持： 如果需要，与朋友、家人或同事分享你的计划，寻求他们的支持和鼓励。有时，与他人分享目标可以帮助你更好地坚持计划。 学会管理时间： 学习时间管理技巧，例如设置时间块、减少分心、避免拖延等，以提高效率。 反思和学习： 定期回顾你的计划，了解你的成功和挑战，以及如何改进未来的计划。 最重要的是，制定计划是为了更好地组织和实现目标，但也要保持灵活性，因为生活中总会出现变化。根据需要进行调整，并继续朝着你的目标前进。","link":"/0001%20Humanities/%E5%93%B2%E5%AD%A6%20Philosophy/self%20help/time%20management/"},{"title":"","text":"打印一张长为2，宽为X的矩形，对折之后长宽分别是X和1，那么为了保证相似，就要求1:X=X:2。得到的比例为。然而297除以210，得到的是1.414，接近于，而这个比例正是一张纸对折之后和原来的纸型相似的比例。 按大小算，略大于一般的16开纸。A系列的制定基础首先是求取一张长宽比为√2且面积为1平方米(m²)的纸张。因此这张纸的宽长分别为 841 毫米和 1189 毫米(长宽比为√2:1)，并且编号为A0。若将A0纸张的长边对切为二，则得到两张A1的纸张，其宽长均为 594 毫米和841 毫米。依此方式继续将A1纸张对切，则可以依序得到A2、A3、A4等等纸张尺寸。在制定标准时，尺寸均以整数为准，因此对切的纸张尺寸若带有小数(小于 1 毫米)则会舍入计算。 B系列的制定基础首先是求取宽边的长度为1米且面积为√2平方米(m²)的纸张。因此这张纸的宽长分别为 1000 毫米和 1414 毫米(长宽比为√2:1)，并将其编号为B0。若将B0纸张的长边对切为二，则得到两张B1的纸张，其宽长均为 707 毫米和 1000 毫米。依此方式继续将B1纸张对切，则可以依序得到B2、B3、B4等等纸张尺寸。和A系列相比，B系列的纸张面积是同号A系列的√2倍，例如B4纸张面积是A4的√2倍。 C系列的制定基础是将A系列和B系列的尺寸作几何平均而求得的。例如C4的纸张尺寸是A4和B4尺寸的几何平均，且纸张长宽比仍为√2:1。这样一来，C4的尺寸系介于A4和B4之间，A4的纸张可以装入C4大小的信封袋中，而C4的纸张可以装入B4大小的信封袋中。 A4纸是由国际标准化组织的ISO 216定义的，规格为21*29.7cm（210mm×297mm），世界上多数国家所使用的纸张尺寸都是采用这一国际标准。 打印机普及以前多采用B组纸张。C组纸张尺寸主要使用于信封。","link":"/0005%20Applied%20science/%E5%9B%BE%E4%B9%A6%E9%A6%86%20%E6%83%85%E6%8A%A5%E4%B8%8E%E6%96%87%E7%8C%AE%E5%AD%A6%20Library%20and%20museum%20studies/%E6%89%93%E5%8D%B0wiki/"},{"title":"","text":"摄像头計算攝影（Computational Photography）是指利用數字運算而非採用傳統的光學過程的數字圖像拍攝。計算攝影可以提高相機的性能，可具備膠捲相機所不具備的特性，也可以減少相機模組的成本和尺寸；常見的數碼全景功能所需的機內計算，HDR圖像、利用光學組件的光場（light field）相機捕捉的立體場景信息（Scene Information）生成3D圖像、景深的增強和選擇性的散焦（Post Focus）都歸屬於計算攝影。 光場是用來描述通過空間中每一個點和每一個方向的光的量的一個函數。麥可·法拉第首先提出光應被理解為一個場（1846年的演講題為《光線振動思考（Thoughts on Ray Vibrations）》），就像磁場一樣。 潜望式镜头 物体离得近，就需要短焦距的镜头成像；物体离得远，就需要长焦距的镜头成像，才能使得同样一个物理拍出同样的大小。要想拍清楚远处的东西，就需要长焦距。 不一定非得装两块反光镜，如果装一个反光棱镜，传感器的位置相应的调整即可。","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Hardware/phone/"},{"title":"","text":"降噪耳机 是指利用某种方法达到降低噪音的一种耳机。降噪耳机有两种分别为：主动降噪耳机和被动降噪耳机。主动降噪功能就是通过降噪系统产生与外界噪音相等的反相声波，将噪音中和，从而实现降噪的效果。被动式降噪耳机主要通过包围耳朵形成封闭空间，或者采用硅胶耳塞等隔音材料来阻挡外界噪声。 home assistant小米有米家APP、苹果有homekit、华为有智慧生活……，而我只想自己手机里只有一个智能家居APP，而不是小米米家、欧瑞博、博联broadlink、海尔智家、美的美居、萤石等一堆APP，并且我也不想操控空调我打开美的美居，想看下摄像头又得打开萤石APP，控制插座又打开博联APP，反复在不同APP间跳转。这些对终端消费者来说都是十分糟糕的体验，也是各个智能家居厂商各自为政造成的恶果。而home assistant可以同时接入小米、博联、美的、海康威视等等智能家居，实现了各品牌智能家居的统一管理，一下这个世界就清净舒服多了。","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Hardware/home%20assistant/"},{"title":"Computer DIY","text":"Motherboard 主板Form factorForm factor is a hardware design aspect that defines and prescribes the size, shape, and other physical specifications of components, particularly in electronics ATX (Advanced Technology Extended) is a motherboard and power supply configuration specification, patented by David Dent in 1995 at Intel It was the first major change in desktop computer enclosure, motherboard and power supply design in many years, improving standardization and interchangeability of parts. The specification defines the dimensions; the mounting points; the I/O panel; and the power and connector interfaces among a computer case, a motherboard, and a power supply. ATX（Advanced Technology Extended）主板规格由英特尔公司在1995年制定。 ATX connectorsATX allowed each motherboard manufacturer to put these ports in a rectangular area on the back of the system with an arrangement they could define themselves, though a number of general patterns depending on what ports the motherboard offers have been followed by most manufacturers. Cases are usually fitted with a snap-out panel, also known as an I/O plate or I/O shield, in one of the common arrangements. I/O plates are usually included with retail motherboards to allow installation in any suitable case. The computer will operate correctly without a plate fitted, although there will be open gaps in the case which may compromise the EMI/RFI screening and allow ingress of dirt and random foreign bodies. Some ATX motherboards come with an integrated I/O plate. A notable issue with the ATX specification was that it was last revised when power supplies were normally placed at the top of many old computer cases rather than at the bottom, as with many modern computer cases. This has led to some problematic standard locations for ports, in particular the 4/8 pin CPU power.Modern power supplies often have longer cables to alleviate this issue. EATXEATX (Extended ATX) is a bigger version of the ATX motherboard with 12 × 13 in (305 × 330 mm) dimensions. the extra size of EATX makes it the typical form factor for dual socket systems, and with sockets that support four or eight memory channels, for single socket systems with a large number of memory slots. E-ATX motherboards and cases are still in production (as of 2020), and support quad-channel memory across 8 slots of ram, up to 4 PCI-e expansion slots for up to 4 double slot graphics cards and a single CPU such as the AMD Ryzen Threadripper 3990X. Although true E-ATX is 12 × 13 in (305 × 330 mm) most motherboard manufacturers also refer to motherboards with measurements 12 × 10.1 in (305 × 257 mm), 12 × 10.4 in (305 × 264 mm), 12 × 10.5 in (305 × 267 mm) and 12 × 10.7 in (305 × 272 mm) as E-ATX. ATX motherboard size comparison; rear is on left. microATX (244 × 244 mm) Standard ATX (305 × 244 mm) Ultra ATX (366 × 244 mm) Extended ATX (EATX) (305 × 330 mm) WTX (356 × 425 mm) SSI MEB (411 × 330 mm) SSI CEBThe Compact Electronics Bay Specification (CEB) as well as EEB, MEB and TEB (“Thin Electronics Bay”) are standard form factors for dual or multi processor motherboards defined by the Server System Infrastructure (SSI) Forum. The specification is intended for value servers and workstations based on the Intel Xeon, and AMD Epyc processors (X399/C600 chipsets) Name Form factor (Height × Length) Compact Electronics Bay (CEB) 12 × 10.5 in (305 × 267 mm) Enterprise Electronics Bay (EEB) 12 × 13 in (305 × 330 mm) Midrange Electronics Bay (MEB) 16.2 × 13 in (411 × 330 mm) Ultra ATXUltra ATX is an 14.4 × 9.6 in (366 × 244 mm) motherboard form factor proposed by Foxconn during CES in January 2008. In principle, it is simply an oversized version of ATX that supports 10 expansion slots, as opposed to the seven slots of ATX, and it requires a full-tower computer case to support the added height of the motherboard. Video cards often trend towards double-slot designs, due to the need for a large heatsink to effectively cool the graphics chipset. As a consequence, the expansion slot below the slot used by the graphics card is effectively blocked and cannot be used. This leaves an ATX quad-graphics system with effectively no expansion slots, as all of the additional slots are blocked by the video cards. The main purpose of Ultra ATX is to overcome this limitation and allow high-end systems to incorporate quad-graphics with additional room for expansion. WTX Discontinued 2008Smaller boards ATX, Mini-ITX, and AT motherboard compatible dimensions and bore positions ATX motherboard size comparison; rear is on left. FlexATX (229 × 191 mm) microATX (244 × 244 mm) Mini ATX (284 × 208 mm) Standard ATX (305 × 244 mm) Extended ATX (EATX) (305 × 330 mm) WTX (356 × 425 mm) Other standards for smaller boards (including microATX, FlexATX, nano-ITX, and mini-ITX) usually keep the basic rear layout but reduce the size of the board and the number of expansion slots. microATXthe popular microATX size removes 2.4 inches (61 mm) and three slots, leaving four. In computer design, microATX (sometimes referred to as μATX, uATX or mATX) is a standard motherboard form factor introduced in December 1997. The maximum size of a microATX motherboard is 9.6 × 9.6 in (244 × 244 mm). microATX (µATX、mATX或uMTX)主板标准于1997年12月发表，大小是9.6吋×9.6吋（24.4cmx24.4cm）。它的长度比Standard ATX短20%，Standard ATX标准大小为12×9.6寸。由于长度减少，扩充槽由ATX最多7条减少到4条。 Mini ATXMini ATX or Mini-ATX is a generic name that may be used by motherboard manufacturers to describe a small motherboard, and has been used by AOpen in reference to a motherboard design with dimensions 15 × 15 cm (5.9 × 5.9 in). Mini-ATX motherboards were designed with MoDT (Mobile on Desktop Technology) which adapt mobile CPUs for lower power requirements and less heat generation, which may be beneficial for home theater PCs (HTPC), in-car PCs, or industrial use. The term miniATX was originally used in (now obsolete versions of) Intel’s ATX specification, and denoted motherboards with dimensions of 284 x 208 mm (11.2 x 8.2 in.), before being abandoned in v2.1 in favor of the microATX specification. The two terms refer to different specifications and should not be conflated. Mini ITXAs of 2010 Mini ITX has widely replaced FlexATX as the most common small form factor mainboard standard. INTEL 500 SERIAL CHIPSETH510B560H570Z590 Z590定位旗舰、H570定位高端、B560定位主流、H510定位入门字幕前缀现在有：X（最高端的HEDT），Z（消费级的MSDT旗舰），B（主流型号），H（另一个主流型号，不能超频），Q（商用），W（嵌入式，工作站）。 P的话现在已经不用了。H310：入门级，价格最低，适合家用办公。建议搭配奔腾G5400\\G5500这类CPU使用。B360：主流级，价格适中，适合后缀不带k的CPU。建议搭配酷睿i3-8100\\i5-8400\\i5-8500\\i5-8600\\i7-8700等。H370：中高端，价格稍贵，建议搭配酷睿i7-8700使用。Z370：高端级，价格贵，能超频，支持4000+高频内存，适合超频玩家。建议搭配i3-8350k/i5-8600k/i7-8700k等后缀带K的CPU。（注：英特尔后缀带k的CPU是可以超频的CPU）高端主板买华硕；中端主板买技嘉、华擎；AMD主板买微星；入门主板买映泰、七彩虹。 E-ATX型主板是高性能主板，芯片组多为X299、X399，适用于AMD的线程撕裂者、英特尔的i9-7920X等CPU，价格昂贵，很少见。ATX型主板俗称“大板”，形状类似长方形，这类主板由于更大，所以有更多的插槽和接口，可扩展性较高。比如装双显卡、视频采集卡、PCI网卡等。M-ATX型主板俗称“小板”，形状接近正方形，这类主板该有的接口都有，不过PCI-E插槽数量较少，可扩展性较小。但价格比大板便宜，预算不多的用户可以选择。mini-ITX型主板体型更小，这类主板的接口仅属于刚刚够用，几乎没有扩展性，这种主板仅适用于桌面小机箱，较少见。 From system startup to application launching, Intel® Optane™ memory is smart technology that personalizes and accelerates your computing experience on Intel® Core™-based PCs. It learns your most frequently used documents, images, videos, and applications; keeps them handy for quick access; and remembers them—even after powering off the PC. Intel Turbo Boost is Intel’s trade name for a feature that automatically raises certain versions of its processors’ operating frequency when demanding tasks are running, thus enabling a higher resulting performance. Generally speaking, the main difference between the two board types is that the Z590 motherboards permit CPU overclocking, whereas the B560 motherboards do not the Z590 boards tend to have a greater number of PCIe 4.0 slots available. The Platform Controller Hub (PCH) is a family of Intel’s single-chip chipsets, first introduced in 2009. It is the successor to the Intel Hub Architecture, which used two chips - a northbridge and southbridge instead, and first appeared in the Intel 5 Series. multiple graphics cards and a RAID array of PCIe/NVMe storage, or other bandwidth-hungry hardware into your system, these higher-end platforms are definitely the way to go. Components CPU sockets (or CPU slots) in which one or more microprocessors may be installed.Given the high thermal design power of high-speed computer CPUs and components, modern motherboards nearly always include heat sinks and mounting points for fans to dissipate excess heat. The chipsetThe chipset which forms an interface between the CPU, main memory, and peripheral buses In a computer system, a chipset is a set of electronic components on one or more ULSI integrated circuits known as a “Data Flow Management System” that manages the data flow between the processor, memory and peripherals. It is usually found on the motherboard of computers. Chipsets are usually designed to work with a specific family of microprocessors. Memory slotsinto which the system’s main memory is to be installed, BIOSRead-only memory (ROM), which stores the BIOS that runs when the computer is powered on or otherwise begins execution, a process known as Bootstrapping, or “booting” or “booting up”.Non-volatile memory chips (usually flash memory in modern motherboards) containing the system’s firmware or BIOS The BIOS (Basic Input Output System) includes boot firmware and power management firmware. Newer motherboards use Unified Extensible Firmware Interface (UEFI) instead of BIOS. Buses that connect the CPU to various internal components and to expand cards for graphics and sound. clock generatorThe clock generator which produces the system clock signal to synchronize the various componentsThe CMOS (complementary MOS) battery, which powers the CMOS memory for date and time in the BIOS chip. This battery is generally a watch battery. Power connectorsPower connectors, which receive electrical power from the computer power supply and distribute it to the CPU, chipset, main memory, and expansion cards.As of 2007, some graphics cards (e.g. GeForce 8 and Radeon R600) require more power than the motherboard can provide, and thus dedicated connectors have been introduced to attach them directly to the power supply.Power MOSFETs make up the voltage regulator module (VRM), which controls how much voltage other hardware components receive. Slots for expansion cards (the interface to the system via the buses supported by the chipset) Connectors for hard disk drives, optical disc drives, or solid-state drives, typically SATA and NVMe now logic and connectors to support commonly used input devices, such as USB for mouse devices and keyboards. Integrated peripheralsDisk controllers for SATA drives, and historical PATA drivesHistorical floppy-disk controllerIntegrated graphics controller supporting 2D and 3D graphics, with VGA, DVI, HDMI, DisplayPort, and TV outputintegrated sound card supporting 8-channel (7.1) audio and S/PDIF outputEthernet network controller for connection to a LAN and to receive InternetUSB controllerWireless network interface controllerBluetooth controllerTemperature, voltage, and fan-speed sensors that allow software to monitor the health of computer components. Motherboard connectorPCIePCI-Express(peripheral component interconnect express)是一种高速串行计算机扩展总线标准 But outside of PCIe 4.0 SSDs, most devices haven’t taken major advantage of PCIe 4.0 yet. there’s a limited number of HSIO (high-speed input/output) lanes and PCIe lanes that all of your components must share..many mainstream motherboards compensate for bandwidth limitations by switching some connections off when you install hardware in specific slots. For example, adding a PCIe M.2 drive may disable some SATA ports, or installing a card in a third PCIe slot may disable a second (or third) M.2 slot, etc. USBUSB，是英文Universal Serial Bus（通用串行总线）的缩写，是一个外部总线标准，用于规范电脑与外部设备的连接和通讯。是应用在PC领域的接口技术。 Type-A是电脑、电子配件中最广泛的接口标准，鼠标、U盘、数据线上大多都是此接口，体积也最大。Type-B一般用于打印机、扫描仪、USBHUB等外部USB设备。Type-C拥有比Type-A及Type-B均小得多的体积，是最新的USB接口外形标准，这种接口没有正反方向区别，可以随意插拔 USB 3.2 Gen 1 – SuperSpeed, 5 gigabit per second (Gbit/s) data signaling rate over 1 lane using 8b/10b encoding (effective 500 MB/s) , the same as USB 3.1 Gen 1 and USB 3.0.USB 3.2 Gen 2 – SuperSpeed+,[56] 10 gigabit per second (Gbit/s) data rate over 1 lane using 128b/132b encoding (effective 1,212 MB/s), the same as USB 3.1 Gen 2.USB 3.2 Gen 1×2 – SuperSpeed+, new 10 gigabit per second (Gbit/s) data rate over 2 lanes using 8b/10b encoding (effective 1 GB/s).USB 3.2 Gen 2×2 – SuperSpeed+, new 20 gigabit per second (Gbit/s) data rate over 2 lanes using 128b/132b encoding (effective 2,424 MB/s). USB-C connectivity, which lets the monitor use a single cable for both video signal and power. ThunderboltEthernetAnalog audio jack其他接口S/PDIF接口是一种数字音频传输接口，全称为Sony/Philips Digital Interconnect Format， Secure Digital, officially abbreviated as SD, is a proprietary non-volatile memory card format developed by the SD Association (SDA) for use in portable devices. CPUCPU Socket LGA 1155LGA全称是Land Grid Array，直译过来就是栅格阵列封装 Supports 1R 2933/ 2666/ 2133 MHz1DPC 1R Max speed up to 4800+ MHz1DPC 2R Max speed up to 4266+ MHz2DPC 1R Max speed up to 4400+ MHz2DPC 2R Max speed up to 4000+ MHzSingle rank, dual rank and DIMM(s) per channel, respectively.为了满足笔记本电脑对内存尺寸的要求，SO-DIMM（Small Outline DIMM Module）也开发了出来，它的尺寸比标准的DIMM要小很多，DIMM全称Dual-Inline-Memory-Modules，中文名叫双列直插式存储模块.1条单面内存，插DIMM-A2 | 2条单面内存插 DIMM-A2/B2 最高可以跑到4800+1条双面内存，插DIMM-A2 | 2条双面内存插 DIMM-A2/B2 最高可以跑到4266+4条单面内存，最高可以跑4400+4条双面内存，最高可以跑4000+ 10th Gen Intel Core i7 / i9 processors support 2933 / 2800 / 2666 / 2400 / 2133 natively, others will run at the maximum transfer rate of DDR4 2666MHz. 11th Gen Intel processors support 3200 / 2933 / 2800 / 2666 / 2400 / 2133 natively. CPU后缀代表的意思英特尔： 1.后缀F表示无核显 2.后缀K代表可以超频。T：低压版桌面处理器，功耗和性能都比不带后缀的产品低。代表作Core i7-8700T。 X：带有这一后缀的CPU一般都具有王霸之气，基本上就是当代最强桌面级CPU的代号，一般会搭配X99/X299/X399这类平台使用，代表作Core i7-7820X。AMD： 1.后缀G代表有核显 2.后缀X代表加强版 3.后缀XT代表超级加强版 In computing, Direct Media Interface (DMI) is Intel’s proprietary link between the northbridge and southbridge on a computer motherboard. In 2021, with the release of 500 series chipsets, Intel increased the amount of DMI 3.0 lanes from four to eight, doubling the bandwidth. [8] DMI 4.0, set for release in 2021 with 600 series chipsets, will have 8 lanes each providing 16 GT/s, two times faster compared to DMI 3.0 x8. gigahertz (GHz), or billion cycles per second. Advantages of Intel Core i5-11500TLower power consumption (35W vs 65W), meaning that the rival with higher TDP might require a better cooler or other thermal solution. Advantages of Intel Core i5-11500 Rocket Lake is Intel’s codename for its 11th generation Core microprocessors. Released on March 30, 2021Up to 20 CPU lanes of PCI Express 4.0[25]DDR4-3200 memory support[3]USB 3.2 Gen 2×2Optional USB4 / Thunderbolt 4 when paired with Intel JHL8540 Thunderbolt 4 ControllerDMI 3.0 x8 link with Intel 500 Series Chipsets Graphics card(GPU)Scalable Link Interface (SLI) is a brand name for a multi-GPU technology developed by NVIDIA for linking two or more video cards together to produce a single output. SLI is an application of parallel processing for computer graphics, meant to increase the processing power available for graphics. ROG-STRIX-RTX3060-O12G-GAMING12GB 192-Bit GDDR6The width of the memory bus through which the graphics data are transferred. The greater the bus width is, the more data the bus can transfer in a clock cycle.Effective Memory Clock 15 GbpsThe memory type for all current gaming grade video cards is GDDR5, which mostly runs at a real clock frequency of around 1000MHz to around 2000MHz. GDDR5 uses what is called “quad pumped” technology, which within one clock cycle can do four data transfers. Thus the effective memory clock, or data rate, is 1000MHzx4 to 2000MHzx4. This makes comparisons easier.Core Clock 1882 MHzThe core clock is the speed at which the graphics processor on the card operates, measured in megahertz (MHz).2 x HDMI 2.1 3 x DisplayPort 1.4aMulti-Monitor Support 4HDMI (High-Definition Multimedia Interface) is a compact audio/video interface for transmitting uncompressed digital data. HDMI supports ?on a single cable ?any uncompressed TV or PC video format, including standard, enhanced, and high-definition video; up to eight channels of compressed or uncompressed digital audio; and a Consumer Electronics Control (CEC) connection.DisplayPort is a digital display interface standard issued by the Video Electronics Standards Association (VESA) since 2006. It defines a new royalty-free digital audio/video interconnection, intended to be used primarily between a computer and its display monitor, or between a computer and a home-theater system.3584 CUDA CoresA CUDA Core is a single process core in NVIDIA GPU chips. The more CUDA Cores a GPU contains, the more powerful it is (also depending on clock speed, memory size, and frequency).CUDA（Compute Unified Device Architecture），是显卡厂商NVIDIA推出的运算平台。 CUDA™是一种由NVIDIA推出的通用并行计算架构，该架构使GPU能够解决复杂的计算问题。 它包含了CUDA指令集架构（ISA）以及GPU内部的并行计算引擎。PCI Express 4.0Interface is the part of the video card that plugs into your computer’s motherboard. It is through interface that your graphics card and computer exchange data. The most common interfaces for video card are PCI Express x16 and x8. PCI Express has undergone several revisions, and the current mainstream revisions are PCI Express 3.0 and PCI Express 4.0. The PCI Express 4.0 is the latest commonly used standard and offers a bandwidth two times that of PCI Express 3.0, while maintaining backward and forward compatibility. DirectX 12 UltimateMicrosoft DirectX is a collection of application programming interfaces (APIs) for handling tasks related to multimedia, especially game programming and video, on Microsoft platforms.OpenGL 4.6OpenGL (Open Graphics Library) is a cross-language, multi-platform application programming interface (API) for rendering 2D and 3D vector graphics. The API is typically used to interact with a graphics processing unit (GPU) to achieve hardware-accelerated rendering. Thermal Design PowerThermal design power (TDP) is the maximum amount of heat generated by a component in watts that the cooling system needs to dissipate to keep the component in check. It is often a specification for CPU, GPU or system on chip. TDP is not the exact amount of power a component will draw, but can be used as a basic indicator. The higher the TDP, the more power the component will draw from power supply and the more cooling the component will require. To cool the component properly, you need a cooler that is rated at or above the TDP of the component. Max Resolution 7680 x 4320HDCP2.2High-bandwidth Digital Content Protection (HDCP), is a form of digital copy protection developed by Intel Corporation to prevent copying of digital audio and video content as it travels across connections. Types of connections include DisplayPort (DP), Digital Visual Interface (DVI), and High-Definition Multimedia Interface (HDMI), as well as less popular (or now defunct) protocols like Gigabit Video Interface (GVIF) and Unified Display Interface (UDI).The system is meant to stop HDCP-encrypted content from being played on unauthorized devices, or on devices which have been modified to copy HDCP content. MSI RTX 2060 GAMING Z 6G 6GB 192-Bit GDDR6Boost Clock 1830 MHz1 x HDMI 2.0b 3 x DisplayPort 1.41920 CUDA CoresPCI Express 3.0 x16Radeon RX 5700 XTPCIe 4.0 x16 video compression standardHigh Efficiency Video Coding (HEVC), also known as H.265 and MPEG-H Part 2, is a video compression standard designed as part of the MPEG-H project as a successor to the widely used Advanced Video Coding (AVC, H.264, or MPEG-4 Part 10). The Moving Picture Experts Group (MPEG) is an alliance of working groups of ISO and IEC that sets standards for media coding, including compression coding of audio, video, graphics and genomic data, and transmission and file formats for various applications. DirectXMicrosoft DirectX is a collection of application programming interfaces (APIs) for handling tasks related to multimedia, especially game programming and video, on Microsoft platforms. Direct3D (the 3D graphics API within DirectX) is widely used in the development of video games for Microsoft Windows and the Xbox line of consoles. Direct3D is also used by other software applications for visualization and graphics tasks such as CAD/CAM engineering. As Direct3D is the most widely publicized component of DirectX, it is common to see the names “DirectX” and “Direct3D” used interchangeably. DisplayPort HDMIData storageSSDHDD，Hard Disk Drive的缩写 NAS（Network Attached Storage：网络附属存储）按字面简单说就是连接在网络上，具备资料存储功能的装置，因此也称为“网络存储器”。 SATA（Serial ATA）硬盘，又称串口硬盘，是未来PC机硬盘的趋势，已基本取代了传统的PATA硬盘。SATA的全称是Serial Advanced Technology Attachment，ESATA是一种数据接口。说到外置存储设备（如移动硬盘）的接口 M.2接口是为超极本（Ultrabook）量身定做的新一代接口标准，以取代原来的mSATA接口。无论是更小巧的规格尺寸，还是更高的传输性能，M.2都远胜于mSATA。 NVM Express（NVMe），或称非易失性内存主机控制器接口规范（英语：Non Volatile Memory Host Controller Interface Specification，缩写：NVMHCIS）依托于PCIe总线，NVMe设备可适用于各种支持PCIe总线的物理插槽上，包括标准尺寸的PCIe扩展卡（一般是4个PCIe通道）、采用U.2物理连接界面（SFF-8639）的2.5英寸/3.5英寸标准尺寸固态硬盘驱动器、SATA Express总线（兼容于PCIe）的设备、M.2规格扩展卡等。在NVMe出现之前，高端SSD只得以采用PCI Express总线制造，但需使用非标准规范的接口。若使用标准化的SSD接口，操作系统只需要一个驱动程序就能使用匹配规范的所有SSD。这也意味着每个SSD制造商不必用额外的资源来设计特定接口的驱动程序。 RAID stands for redundant array of independent disks. This is a type of data storage virtualization technology that lumps physical disk drive components together to drive data redundancy and/or improvement. A RAID card manages a PC’s hard disk drives or solid-state drives (SSDs) so that they work together and drive redundancy and/or performance. It can be hardware (a RAID card) or software. WD BLUE™ SATA SSDForm Factor M.2 2280/2.5’’3D NAND SATA SSD for capacities up to 2TB 3D NAND是英特尔和镁光的合资企业所研发的一种新兴的闪存类型，通过把内存颗粒堆叠在一起来解决2D或者平面NAND闪存带来的限制Sequential read speeds up to 560 MB/s and sequential write speeds up to 530 MB/s.interface SATA WD BLACK SN750 NVME SSDThermal Without HeatsinkInterface PCIeForm Factor m.2 2280Read speeds up to 3,470 MB/s (1TB models) for improved load times. sumsung 980 PRO PCIe® 4.0 NVMe® SSD InterfacePCIe® Gen 4.0 x 4, NVMe® 1.3cnot pcie 4.0 with a PCIe 4.0² interface that’s 2x faster than PCIe 3.0 SSDs³ and 12x faster than Samsung SATA SSDs⁴ Only Intel 11th Gen processors support PCIe 4.0 x4 mode, this slot will be disabled for other CPUsProduct TypeForm factor of the memory unitThe size, configuration or physical arrangement of driveNVMe® SSDNVMe (Non-Volatile Memory Express) is an open logical-device interface specification for accessing non-volatile storage media attached via PCI Express bus.M.2 (2280) Read/Write Speeds7,000/5,000 MB/s 970 EVO Plus NVMe® M.2 SSD 1TB HHD接口的不同也是 SSD 和 eMMC，UFS 的重要区别之一。一个SSD，为了达到高并行高性能的要求，有多个Flash 芯片，这样就可以在每个芯片上进行相互独立的读写操作，以并行性来提高硬盘吞吐量，还可以增加冗余备份。而手机中为了节省空间和功耗，通常只有一片密度较高的 Flash 芯片。 eMMC 和 UFS 都是面向移动端 Flash 的标准eMMC 是一个起源较早的技术，全称叫 embedded MultiMedia CardMMC前面加了个embedded，主要就是为了突出现在这个设备是embedded 在电路板上。eMMC 和 MMC一样，沿用了 8 bit 的并行接口。用高速串行接口取代了并行接口，而且还是全双工的，也就是可以读写同时进行。所以相比 eMMC， UFS的理论性能提高不少，甚至可以达到一些SSD的水准 Universal Flash Storage (UFS) is a flash storage specification for digital cameras, mobile phones and consumer electronic devices. It was designed to bring higher data transfer speed and increased reliability to flash memory storage, while reducing market confusion and removing the need for different adapters for different types of cards. M.2插槽也是有两种的，一种是金手指有两个缺口的Socket 2跟金手指只有一个缺口的Socket 3，如上图所示。这两种可以走不同的通道，我们后面会说到。 PCI-E跟SATA3简单说就是数据走的“路”，PCI-E就像是特别宽大的路，数据可以走的特别快，而SATA3与之相比更像是一条崎岖的小路，数据走的特别慢，但是CPU内部就那么大一点，修不了特别多的大路，所以PCI-E通道也就仅有那么几条。 M.2（Socket 2）的固态可以走SATA3或者PCI-E 3.0×2通道(就是两条PCI-E)，而M.2（Socket 3）的固态则可以走PCI-E 3.0×4通道；需要说的是每条PCI-E 3.0的带宽是8Gbps，而SATA 3.0的带宽则只有6Gbps。 AHIC是针对SATA这种弯路的交通规则，然后开发者发现，这种针对弯路的规范，数据只能一个一个通过的规则用在宽敞的PCIE通道上面实在太浪费了，于是针对PCIE通道又开发出了NVME规范，可以让很多数据同时通过。 Removable data storageOptical disc(CD, DVD, Blu-ray)Flash memoryFloppy diskDisk packMemoryLPDDR内存全称是Low Power Double Data Rate SDRAM，中文意为低功耗双倍数据速率内存，又称为mDDR（Mobile DDR SDRM），是美国JEDEC固态协会面向低功耗内存制定的通信标准，主要针对于移动端电子产品。手机内存总听过吧，手机参数里4GB/6GB/8GB就是这东西的规格，也就是低功耗内存。 同步动态随机存取内存（synchronous dynamic random-access memory，简称SDRAM）是有一个同步接口的动态随机存取内存（DRAM）。异步DRAM(asynchronous DRAM) SDRAM从发展到现在已经经历了五代，分别是：第一代SDR SDRAM，第二代DDR SDRAM，第三代DDR2 SDRAM，第四代DDR3 SDRAM，第五代，DDR4 SDRAM。 G 是英文‘专门’的第一个字母 在显卡上意思就是为显卡专门DDR内存 DDR=Double Data Rate双倍速率,DDR SDRAM=双倍速率同步动态随机存储器，人们习惯称为DDR，其中，SDRAM 是Synchronous Dynamic Random Access Memory的缩写，即同步动态随机存取存储器。 加装了马甲的内存条与普通内存条相比是加装了散热模块，比普通内存条有更好的散热性能。ddr4Standard transfer rates are 1600, 1866, 2133, 2400, 2666, 2933, and 3200 MT/s Channel Supported Dual ChannelIn the fields of digital electronics and computer hardware, multi-channel memory architecture is a technology that increases the data transfer rate between the DRAM memory and the memory controller by adding more channels of communication between them. Theoretically this multiplies the data rate by exactly the number of channels present. Dual, triple, and quad-channel memory employ two, three, and four channels respectively. NAND FlashThe type of flash memory in the deviceSamsung V-NAND 3-bit MLC Sequential Read SpeedUp to 3,500 MB/sSequential Write SpeedUp to 3,300 MB/s Cache MemorySamsung 1GB Low Power DDR4 SDRAM CMK16GX4M2Z3200C16\\288-Pin DDR4 SDRAMCurrently there are four major types of server memory available on the market: the latest DDR4 SDRAM, DDR3, DDR2 ,and the relatively dated DDR1. A server system can only take the kind of memory is was designed to take. Mixing different types of memory in a system is unworkable, and may cause hardware damage. SpeedDDR4 3200 (PC4 25600) StandardsDDR4-1600 (PC4-12800)DDR4-1866 (PC4-14900)DDR4-2133 (PC4-17000)DDR4-2400 (PC4-19200)DDR4-2666 (PC4-21333)DDR4-2933 (PC4-23466)DDR4-3200 (PC4-25600) CAS Latency 16Column Address Strobe (CAS) latency, or CL, is the delay time between the moment a memory controller tells the memory module to access a particular memory column on a RAM module, and the moment the data from the given array location is available on the module’s output pins. In general, the lower the CL, the better. NAND It is typically a type of dynamic RAM (DRAM), such as synchronous DRAM (SDRAM), Attribute NAND NORMain application File storage Code executionStorage capacity High LowCost per bit LowActive power LowStandby power LowWrite speed FastRead speed FastExecute in place (XIP) No YesReliability High Power Supply (PSU)A power supply unit (PSU) converts mains AC to low-voltage regulated DC power for the internal components of a computer.Modern personal computers universally use switched-mode power supplies. Dimensions of an ATX power supply are 150 mm width, 86 mm height, and typically 140 mm depth, although the depth can vary from brand to brand. Power ratingThe overall power draw on a PSU is limited by the fact that all of the supply rails come through one transformer and any of its primary side circuitry, like switching components. Total power requirements for a personal computer may range from 250 W to more than 1000 W for a high-performance computer with multiple graphics cards. Personal computers without especially high performing CPUs or graphics cards usually require 300 to 500 W. Power supplies are designed around 40% greater than the calculated system power consumption. This protects against system performance degradation, and against power supply overloading. Power supplies label their total power output, and label how this is determined by the electric current limits for each of the voltages supplied. The system power consumption is a sum of the power ratings for all of the components of the computer system that draw on the power supply. EfficiencyPower Supply ConnectorsTypically, power supplies have the following connectors (all are Molex (USA) Inc Mini-Fit Jr, unless otherwise indicated): ATX motherboard power connector (usually called P1): This is the connector that goes to the motherboard to provide it with power. The connector has 20 or 24 pins. One of the pins belongs to the PS-ON wire (it is usually green). This connector is the largest of all the connectors. In older AT power supplies, this connector was split in two: P8 and P9. A power supply with a 24-pin connector can be used on a motherboard with a 20-pin connector. In cases where the motherboard has a 24-pin connector, some power supplies come with two connectors (one with 20-pin and other with 4-pin, i.e. 20+4-pin form) which can be used together to form the 24-pin connector.12V only power connector (labelled P1, though it is not compatible with the ATX 20 or 24 pin connector): This is a 10 or 16-pin Molex connector supplying the motherboard with three or six 12 V lines with common returns, a ‘supply OK’ signal, a ‘PSU ON’ signal and a 12 or 11 V auxiliary supply. One pin is left unused.[34]12V only System monitoring (P10): This is a 171822-8 AMP or equivalent connector carrying a supply to the PSU fan and sense returns.[34]ATX12V 4-pin power connector (also called the P4 power connector). A second connector that goes to the motherboard (in addition to the 24-pin ATX motherboard connector) to supply dedicated power for the processor.4+4-pin For the purpose of backwards compatibility, some connectors designed for high-end motherboards and processors, more power is required, therefore EPS12V has an 8-pin connector. 4-pin peripheral power connector4-pin Peripheral power connectors: These are the other, smaller connectors that go to the various disk drives of the computer. Most of them have four wires: two black, one red, and one yellow. Unlike the US standard mains electrical wire color-coding, each black wire is a ground, the red wire is +5 V, and the yellow wire is +12 V. In some cases these are also used to provide additional power to PCI cards such as FireWire 800 cards.4-pin Molex (Japan) Ltd power connectors (usually called Mini-connector, mini-Molex, or Berg connector): This is one of the smallest connectors that supplies a 3.5-inch floppy drive with power. In some cases, it can be used as an auxiliary connector for Accelerated Graphics Port (AGP) video cards. Its cable configuration is similar to the Peripheral connector.Auxiliary power connectors: There are several types of auxiliary connectors, usually in 6-pin form, designed to provide additional power if it is needed.Serial ATA power connectors: a 15-pin connector for components that use SATA power plugs. This connector supplies power at three different voltages: +3.3, +5, and +12 V, in three pins per wire, one designed to precharge capacitive loads on for hot-plugging designed backplanes.6-pin Most modern computer power supplies include six-pin connectors that are generally used for PCI Express graphics cards, but a newly introduced eight-pin connector should be seen on the latest model power supplies. Each PCI Express 6-pin connector can output a maximum of 75 W.6+2-pin For the purpose of backwards compatibility, some connectors designed for use with high end PCI Express graphics cards feature this kind of pin configuration. It allows either a six-pin card or an eight-pin card to be connected by using two separate connection modules wired into the same sheath: one with six pins and another with two pins. Each PCI Express 8-pin connector can output a maximum of 150 W.12-pin for PCI Express graphics cards, each PCI Express 12-pin connector can output a maximum of 648 W (12V, 9A), 2 150 W 8-pin can be combined via an adapter cable to form one 648 W 12-pin.16-pin (12VHPWR) for PCI Express graphics cards, each PCI Express 16-pin connector can output a maximum of 662 W (12V, 9.2A), 12 power pins, 4 contact pins. Introduced on ATX 3.0.An IEC 60320 C14 connector with an appropriate C13 cord is used to attach the power supply to the local power grid. ATX specification for power supplyATX power supplies generally have the dimensions of 150 × 86 × 140 mm (5.9 × 3.4 × 5.5 in) That last dimension, the 140 mm depth, is frequently varied, with depths of 160, 180, 200 and 230 mm used to accommodate higher power, larger fan and/or modular connectors. The ATX specification requires the power supply to produce three main outputs, +3.3 V, +5 V and +12 V. Low-power −12 V and +5 VSB (standby) supplies are also required. The −12 V supply is primarily used to provide the negative supply voltage for RS-232 ports and is also used by one pin on conventional PCI slots primarily to provide a reference voltage for some models of sound cards. The 5 VSB supply is used to produce trickle power to provide the soft-power feature of ATX when a PC is turned off, as well as powering the real-time clock to conserve the charge of the CMOS battery. ATX power supply revisionsOriginal ATXATX, introduced in late 1995, defined three types of power connectors: 4-pin “Molex connector” – transferred directly from AT standard: +5 V and +12 V for P-ATA hard disks, CD-ROMs, 5.25 inch floppy drives and other peripherals.4-pin Berg floppy connector – transferred directly from AT standard: +5 V and +12 V for 3.5 inch floppy drives and other peripherals.20-pin Molex Mini-fit Jr. ATX motherboard connector – new to the ATX standard.A supplemental 6-pin AUX connector providing additional 3.3 V and 5 V supplies to the motherboard, if needed. This was used to power the CPU in motherboards with CPU voltage regulator modules which required 3.3 volt and/or 5 volt rails and could not get enough power through the regular 20-pin header.The power distribution specification defined that most of the PSU’s power should be provided on 5 V and 3.3 V rails, because most of the electronic components (CPU, RAM, chipset, PCI, AGP and ISA cards) used 5 V or 3.3 V for power supply. The 12 V rail was only used by computer fans and motors of peripheral devices (HDD, FDD, CD-ROM, etc.) ATX 3.0The specifications for ATX 3.0 were released in February 2022. af逆变器是把直流电能（电池、蓄电瓶）转变成定频定压或调频调压交流电（一般为220V,50Hz正弦波）的转换器。 alternating current (AC) electric power to low-voltage direct current (DC) power A power supply unit (PSU) converts alternating current (AC) electric power to low-voltage direct current (DC) power for the computer. Laptops can run on built-in rechargeable battery. The PSU typically uses a switched-mode power supply (SMPS), with power MOSFETs (power metal–oxide–semiconductor field-effect transistors) used in the converters and regulator circuits of the SMPS. VRM stands for voltage regulator module. Some modern CPUs and GPUs (aka graphics cards) use VRMs to control and lower the voltage (V) sent to these components in order to avoid exceeding their maximum voltage capabilities. VRMs are especially important for overclocking a CPU or GPU. In theory, VRMs should mean the power supplied to the component is consistent and steady. SuperNOVA 750 GAType ATX12VMaximum Power 750W Modular Full ModularA modular power supply provides a detachable cable system, offering the ability to remove unused connections at the expense of a small amount of extra electrical resistance introduced by the additional connector. This reduces clutter, removes the risk of dangling cables interfering with other components, and can improve case airflow. Many modular supplies have some permanent multi-wire cables with connectors at the ends, such as PC main and 4-pin Molex, though newer supplies marketed as “Fully Modular” allow even these to be disconnected.. Energy-Efficient 80 PLUS GOLD Certified MTBF &gt;100,000 HoursLife span is usually specified in mean time between failures (MTBF), where higher MTBF ratings indicate longer device life and better reliability. Using higher quality electrical components at less than their maximum ratings or providing better cooling can contribute to a higher MTBF rating because lower stress and lower operating temperatures decrease component failure rates. Main Connector 24PinThe main power connector is used to directly connect the motherboard and the PSU. Two types of main power connectors are often utilized in today’s PSU: the 20-pin and 24-pin formats. To provide compatibility with older motherboards featuring 20-pin power socket designs, some PSUs provide 20+4-pin main power connector. This type of power connector is very versatile, and can easily be used with both 20-pin and 24-pin motherboard. There are more and more motherboards providing 24-pin power connector socket (many motherboards with 24-pin socket can still work with 20-pin power supplies).+12V Rails SingleThe +12v is the main power your computer uses. CPU, motherboard and VGA card, along with others components, use it to run. The higher current the 12v rails can offer, the more wattage it can output. Special attention should be paid to the +12v spec if you want to build a SLI/CrossFire setup with multiple VGA cards.PCI-Express Connector 6 x 6+2-Pinncludes 6-pin, 8-pin, and 6+2-pin, for use with high-end video cards. Each PCI Express 6-pin connector can output a maximum of 75 W. And each PCI Express 8-pin (6+2-pin) connector can output a maximum of 150 W.SATA Power Connector 8A 15-pin connector for components which use SATA power plugs. This connector supplies power at three different voltages: +3.3, +5, and +12 volts. 1 x 24 Pin ATX2 x 8pin(4+4) EPS (CPU)The EPS connector is meant to supply power to a motherboard cpu socket6 x 8pin(6+2) PCIe9 x SATA4 x Four-Pin Peripheral1 x Floppyfloppy disk的接口。也叫软驱 Case机箱 风扇A computer case, also known as a computer chassis, is the enclosure that contains most of the hardware of a personal computer. The components housed inside the case (such as the CPU, motherboard, memory, mass storage devices, power supply unit and various expansion cards) are referred as the internal hardware, while hardware outside the case (typically cable-linked or plug-and-play devices such as the display, speakers, keyboard, mouse and USB flash drives) are known as peripherals. peripheral/pəˈrɪfərəl/附带的not as important as the main aim, part, etc. of sth Case sizes and shapesCases can come in many different sizes and shapes, which are usually determined by the form factor of the motherboard since it is physically the largest hardware component in most computers. Consequently, personal computer form factors typically specify only the internal dimensions and layout of the case. Tower cases are often categorized as mini-tower, midi-tower, mid-tower, or full-tower. The terms are subjective and inconsistently defined by different manufacturers. Full tower cases are typically 56 cm (22 in) or more in height and intended to stand on the floor. They can have anywhere from six to ten externally accessible drive bays. However, as computing technology moves from floppy disks and CD-ROMs to large capacity hard drives, USB flash drives, and network-based solutions, more recent full tower cases typically only have none, one, or two external bays for CD drives, with the internal bays moved elsewhere in the case to improve airflow. Today, full tower cases are commonly used by enthusiasts as showpiece display cases with custom water cooling, lighting, and tempered glass (replacing acrylic). Mid-tower cases are smaller, about 46 cm (18 in) high with two to four external bays. A mini-tower case will typically have only one or two external bays. The marketing term midi-tower sometimes refers to cases smaller than mid-tower but larger than mini-tower, typically with two to three external bays. qgasvgsgdf塔式机箱（Tower case），即通常说的立式机箱。塔式机箱按照大小可分为全塔、中塔和mini塔三类，不过业界并没有在大小方面就此形成统一的分类标准。通常全塔机箱拥有4个以上的光驱位，中塔机箱拥有3-4个光驱位，而mini塔仅有1-2个光驱位。 Obsidian Series 750DType ATX Full Tower External 5.25 Drive Bays 3Internal 3.5 Drive Bays 6 x Combo 3.5” / 2.5”Internal 2.5 Drive Bays 4 Fan Options Front: 2 x 120mm / 2 x 140mm fan (2 x 140mm fan included)Rear: 1 x 140mm fan (included)Top: 3 x 120mm / 2 x 140mm fanBottom: 2 x 120mm fan Radiator OptionsFront: 240/280mmTop: 240/280/360mmRear: 120/140mmBottom: 120/240mmFor case fans go for 140mm fans that has the letters AF in them since that stands for AirFlowFor the radiator you will 95% of the time want to have fans that has the letters SP in them since that stands for Static Pressure. There are two main stats for a fan. There’s the CFM (cubic feet per minute) rating, which describes how good it is at moving air when there isn’t any obstruction. There’s also static pressure, which describes how good it is at forcing air through obstructions. On a radiator, you need high static pressure, and for case fans, you want high CFM in order to make your CPU achieve higher clock speeds than it’s rated for out of the box, you’ll likely spend extra on an enhanced cooling system and a high-end motherboard. By the time you factor in all these extra costs, you may be better off budgeting another $50-$100 (£40-80) for a CPU that comes with higher clock speeds out of the box. Wi-FiWi-Fi uses multiple parts of the IEEE 802 protocol family and is designed to interwork seamlessly with its wired sibling Ethernet. IEEE 802.11b: 5.5 Mbit/s and 11 Mbit/s, 2.4 GHz standard (1999)IEEE 802.11a: 54 Mbit/s, 5 GHz standard (1999, shipping products in 2001)IEEE 802.11g: 54 Mbit/s, 2.4 GHz standard (backwards compatible with b) (2003) IEEE 802.11n: Higher Throughput WLAN at 2.4 and 5 GHz; 20 and 40 MHz channels; introduces MIMO to Wi-Fi (September 2009)IEEE 802.11n-2009 or 802.11n is a wireless-networking standard that uses multiple antennas to increase data rates. The Wi-Fi Alliance has also retroactively labelled the technology for the standard as Wi-Fi 4. It standardized support for multiple-input multiple-output, frame aggregation, and security improvements, among other features, and can be used in the 2.4 GHz or 5 GHz frequency bands. a single-band router operates on the (somewhat) newer 802.11n standard, also known as “Wireless-N.” Wireless-N routers on a 2.4 GHz band offer theoretical speeds of up to 800 Mbps—“theoretical” meaning that you’ll probably never see these speeds during day-to-day use, given real-world factors such as your Internet service limitations. IEEE 802.11ac-2013 or 802.11ac is a wireless networking standard in the 802.11 set of protocols (which is part of the Wi-Fi networking family), providing high-throughput wireless local area networks (WLANs) on the 5 GHz band.[a] The standard has been retroactively labelled as Wi-Fi 5 by Wi-Fi Alliance. In addition to supporting the 2.4 GHz Wireless-N standard, dual-band routers support the 5 GHz frequency band, operating on the newer 802.11ac standard. At their theoretical best, that means they support aggregate speeds up to 2,167 Mbps or more. Beamforming is a radio wave technology that is written into the next generation IEEE Wi-Fi 802.11ac standard. This technology allows the beamformer (Router) to transmit radio signal in the direction of the beamformee (Client), thus creating a stronger, faster and more reliable wireless communication.Think of beamforming as a radio transmission from the transmitter to the receiver, customized according to their relative locations. A NETGEAR router with Beamforming+ scans the entire wireless network, understands the parametric of each client, and optimizes the Wi-Fi communication with each client by transmitting focused and directional radio signals. 802.11ac-class device wireless speeds are often advertised as AC followed by a number, that number being the highest link rates in Mbit/s of all the simultaneously-usable radios in the device added up. For example, an AC1900 access point might have 600 Mbit/s capability on its 2.4 GHz radio and 1300 Mbit/s capability on its 5 GHz radio. No single client device could connect and achieve 1900 Mbit/s of throughput, but separate devices each connecting to the 2.4 GHz and 5 GHz radios could achieve combined throughput approaching 1900 Mbit/s. 802.11ac Wave1，确实没什么好介绍的，它就是还没有引入MU-MIMO技术、4空间流以及160MHz频宽的初代802.11ac标准。不过相较于802.11n，在无线传输速率方面，初代11ac依然可以倚靠着新的256QAM调制方式和新的80MHz频宽做到秒杀。 IEEE 802.11ax: High Efficiency WLAN at 2.4, 5 and 6 GHz; introduces OFDMA to Wi-Fi(February 2021)IEEE 802.11ax-2021 or 802.11ax is an IEEE standard for wireless local-area networks (WLANs) and the successor of 802.11ac. It is marketed as Wi-Fi 6 [2.4 GHz and 5 GHz] and Wi-Fi 6E [6 GHz] by the Wi-Fi Alliance. It is also known as High Efficiency Wi-Fi, for the overall improvements to Wi-Fi 6 clients under dense environments. It is designed to operate in license-exempt bands between 1 and 7.125 GHz, including the 2.4 and 5 GHz bands already in common use as well as the much wider 6 GHz band (5.925–7.125 GHz in the US).The main goal of this standard is enhancing throughput-per-area in high-density scenarios, such as corporate offices, shopping malls and dense residential apartments. While the nominal data rate improvement against 802.11ac is only 37%,:qt the overall throughput improvement (over an entire network) is 400% (hence High Efficiency).:qt This also translates to 75% lower latency. Multi-user MIMO (MU-MIMO) is a set of multiple-input and multiple-output (MIMO) technologies for multipath wireless communication, in which multiple users or terminals, each radioing over one or more antennas, communicate with one another. Mesh WiFi or Whole Home WiFi systems consists of a main router that connects directly to your modem, and a series of satellite modules, or nodes, placed around your house for full WiFi coverage. They are all part of a single wireless network and share the same SSID and password, unlike traditional WiFi routers. Comparing range extenders to whole home WiFi is like comparing apples to oranges. Range extenders are certainly effective when it comes to increasing the range of your router, but they do so at the expense of WiFi performance, which gets cut in half.You might also experience connection issues when jumping from the router to the extender, because you’ll need to switch networks manually. BLUETOOTHWi-Fi Protected Access (WPA), Wi-Fi Protected Access II (WPA2), and Wi-Fi Protected Access 3 (WPA3) are the three security and security certification programs developed by the Wi-Fi Alliance to secure wireless computer networks. The Alliance defined these in response to serious weaknesses researchers had found in the previous system, Wired Equivalent Privacy (WEP).[1] An RF module (short for radio-frequency module) is a (usually) small electronic device used to transmit and/or receive radio signals between two devices. Several carrier frequencies are commonly used in commercially available RF modules, including those in the industrial, scientific and medical (ISM) radio bands such as 433.92 MHz, 915 MHz, and 2400 MHz. 在无线电发射设备，包括手机（具有Wi-Fi或者蓝牙功能），蓝牙耳机，无线路由器，无线网卡等无线产品上均有体现。CMIIT ID即无线电发射设备型号核准代码。只有带有我国无线电发射设备型号核准代码的无线电发射设备才是可以在我国国内销售和使用的无线电发射设备。 The network connection style used in classic Bluetooth is a traditional point-to-point connection that looks like the hub-and-spoke model known as a star topology. Devices can only talk to the central controller and not directly to each other. Therefore, the hub must relay message traffic between devices if that is needed for the application. In 2010, a new version of Bluetooth (Bluetooth 4.0) was introduced, known as Bluetooth Low-Energy (BLE) or Bluetooth Smart.BLE added a point-to-multipoint/ broadcast model that is useful for a short-range navigation beacon mode 路由器互联网业务internet service互联网行业的创新业务:人工智能，物联网，云 ISP（ 接入服务提供商）内容服务提供商 ICP RJ是Registered Jack的缩写，意思是“注册的插座”。在FCC（美国联邦通信委员会标准和规章）中RJ是描述公用电信网络的接口，计算机网络的RJ45是标准8位模块化接口的俗称在家用的ADSL Modem（调制解调器）上还会有RJ11接口，它比RJ45接口略小，主要用来连接电话线使用。需要说明的是，RJ11接口为4或6针，而RJ45则为8针接口，所以RJ45插头不能插入RJ11接口，反之RJ11插头也不能插入RJ45接口（虽然在物理接口上是可以实现的） 为达到最佳兼容性，制作直通线时一般采用T568B标准.网络传输线分为直通线、交叉线和全反线。直通线用于异种网络设备之间的互连，例如，计算机与交换机。交叉线用于同种网络设备之间的互连，例如，计算机与计算机。 平衡了千兆与万兆的2.5千兆网卡,2.5G网卡具有高达2500Mbps的传输速率，是千兆网卡速度的2.5倍 无线通信Wireless USB was a short-range, high-bandwidth wireless radio communication protocolUSB(universal serial bus，通用串行总线)作为一个计算机与外设之问的接口方案，因其具有使用方便、传输速度快、端口易扩展等特点，The standard is now obsolete, and no new hardware has been produced for many years 超宽带（UWB，Ultra Wide Band）WPAN的目标是用无线电或红外线代替传统的有线电缆，以低价格和低功耗在10m范围内实现个人信息终端的智能化互联，组建个人化信息网络。其最普遍的应用是连接电脑、打印机、无绳电话、PDA以及信息家电等设备。实现WPAN的主要技术有：IEEE802．11b(Win)、Home RF、IrDA、蓝牙(Bluetooth)以及超宽带等五种。 蓝牙Mesh网络是用于建立多对多（many：many）设备通信的低能耗蓝牙（Bluetooth Low Energy，也称为Bluetooth LE）新的网络拓扑。 ZigBee译为”紫蜂”，是一种低速短距离传输的无线网上协议，。主要特色有低速、低耗电、低成本、短时延，高容量 ZigBee的响应速度较快，一般从睡眠转入工作状态只需15ms，节点连接进入网络只需30ms，进一步节省了电能。相比较，蓝牙需要3～10s、 而蓝牙则是两台设备之间相互进行数据传输，是一种点对点的连接方式。从这方面看起来，蓝牙的数据安全性更高一些。 其次，由于蓝牙使用的是微带天线，体积小，方便集成到设备中，而且蓝牙模块成本很低，因此蓝牙设备的普及率非常高 免执照频段。使用工业科学医疗(ISM)频段 RoHS是由欧盟立法制定的一项强制性标准，它的全称是《关于限制在电子电气设备中使用某些有害成分的指令》(Restriction of Hazardous Substances)该标准的目的在于消除电器电子产品中的铅、汞、镉、六价铬、多溴联苯和多溴二苯醚（注意：PBDE正确的中文名称是指多溴二苯醚，多溴联苯醚是错误的说法）共6项物质，并重点规定了镉的含量不能超过0.01%。 OFDM(Orthogonal Frequency Division Multiplexing)即正交频分复用技术，实际上OFDM是MCM(Multi Carrier Modulation)，多载波调制的一种。 多载波调制(Multicarrier Modulation)采用了多个载波信号。它把数据流分解为若干个子数据流，从而使子数据流具有低得多的传输比特速率，利用这些数据分别去调制若干个载波。 基带：Baseband 信源（信息源，也称发射端）发出的没有经过调制（进行频谱搬移和变换）的原始电信号所固有的频带（频率带宽），称为基本频带，简称基带。 无线Mesh组网的原理，是主路由通过WiFi和子路由进行通信，从而完成数据的传输。如何WiFi信号弱或者无法覆盖，那么子路由也无法带来畅快的上网体验。 使用电力线组网，用户最怕的组网性能衰减问题。在实际使用中网络传输当家中使用微波炉、电暖气等大功率电器时，通过电力线的网络传输就会变慢。 Power-line communication (also known as power-line carrier or PLC) carries data on a conductor that is also used simultaneously for AC electric power transmission or electric power distribution to consumers.。 G.hn is a specification for home networking with data rates up to 2 Gbit/s and operation over four types of legacy wires: telephone wiring, coaxial cables, power lines and plastic optical fiber. HomePlug is the family name for various power line communications specifications under the HomePlug designation, Electromagnetic interferenceOne of the concerns with all powerline systems, when compared to dedicated data wiring, is that the route of the wiring is not known in advance, and is generally already optimized for power transmission. This means that there will be situations where the system will radiate a significant fraction of the energy, in the form of radio frequency interference, or be vulnerable to the ingress of external signals. PA（功率放大器）有效增强信号发射功率，LNA（低噪声放大器）可以提高信号接收灵敏度。在放大微弱信号的场合，放大器自身的噪声对信号的干扰可能很严重，因此希望减小这种噪声，以提高输出的信噪比。低噪声放大器， 噪声系数很低的放大器。一般用作各类无线电接收机的高频或中频前置放大器， LDPC是Low Density Parity Check Code英文缩写，意思是低密度奇偶校验码 近场通信（Near Field Communication，简称NFC），是一种新兴的技术，使用了NFC技术的设备（例如移动电话）可以在彼此靠近的情况下进行数据交换，是由非接触式射频识别（RFID）及互连互通技术整合演变而来的，通过在单一芯片上集成感应式读卡器、感应式卡片和点对点通信的功能，利用移动终端实现移动支付、电子票务、门禁、移动身份识别、防伪等应用。 NFC标准为了和非接触式智能卡兼容，规定了一种灵活的网关系统，具体分为三种工作模式：点对点通信模式、读写器模式和NFC卡模拟模式。 近距无线通信技术除NFC外，主要还包括射频识别（RFID)、蓝牙（Bluetooth）、紫蜂（ZigBee）、红外、 Wi-Fi等技术。 NFC 技术具有极高的安全性，在短距离通信中具有性能优势，更重要的是成本较低，因此自其 2003 年问世以来，得到众多企业的关注和支持。 射频识别（RFID）是 Radio Frequency Identification 的缩写。RFID技术的基本工作原理并不复杂：标签进入阅读器后，接收阅读器发出的射频信号，凭借感应电流所获得的能量发送出存储在芯片中的产品信息（Passive Tag，无源标签或被动标签），或者由标签主动发送某一频率的信号（Active Tag，有源标签或主动标签），阅读器读取信息并解码后，送至中央信息系统进行有关数据处理。 小米空白门卡是小米手机基于NFC的功能之一，让用户可以摆脱实体门卡的束缚。不过也有用户会遇到门卡无法模拟的情形。这种情形不是因为门卡频率不符，就是因为被加密了。这时候就需要使用小米空白门卡功能了。 虚位密码在用法上就用最简单的方法补足了这三个缺点，正确密码长度和内容不变，在正确密码前后加入随意按下的数字，只要整串数字中有完整且未拆分的正确的密码，就可以通过验证。 projection120寸16:9幕布尺寸为2.6*1.5米,幕布的大小=投影距离/（ 0.87 X 0.0254 X 投射比）。 有了上面这个公式可以做以下计算： 可以很快的算出多远的距离配多大的幕布了，比如，要投2米远，投影仪的投射比是1.2，幕布最小要买多大尺寸的？ 幕布的大小=2 / (0.87X0.0254X1.2)=75寸。 当然也可以根据幕布画面尺寸算投影距离。买的幕布画面尺寸是80寸，投影仪的投射比是1.2，那么投影距离是多少？ 投影距离=80X 0.87 X 0.0254 X 1.2=2.12米。 当然，也可以很快算出什么空间配什么投射比的投影仪？比如，想在2.5米远的距离实现100寸的画面，选什么样的投影仪。 投射比=2.5 / (100X0.87X0.0254)=1.13 投射比=投影距离/画面宽度。从这个公式可以看出：该比值越小，说明相同投影距离，投射画面的宽度越大。普通投影机的投射比，通常在1.5-1.9之间。当投射比小于1时，为短焦镜头; 而当投射比达到0.6以下，为超短焦镜头。 如果投射比是一个定值，则表示投影距离固定时，画面大小也固定了，只能调整镜头进行聚焦，但是画面大小不能变化。 There are three main technologies used for projection – DLP, LCD and LED. DLP (Digital Light Processing) uses a chip made of tiny microscopic mirrors and a spinning colour wheel to create an image. DLP projectors deliver sharp images, don’t need any filters, have a better response time as well as 3D capabilities. The effective lamp life of a DLP projector is only 2000-5000 hours and some people see colour ghosting/banding in some scenes. On the other hand, LCD projectors use liquid crystal displays, have no moving parts and thus are generally less expensive. If you are on a budget a single chip LCD projector is ideal while 3-chip LCDs offer better colour saturation, lower noise levels and work better for movies. However, LCDs require constant filter maintenance and output less contrast. The LEDs in LED projectors have a lifespan of over 20,000 hours. They deliver better colours, have lower power consumption and virtually zero maintenance costs. Also, LED projectors are smaller and generate less heat. Do keep in mind that LED projectors have limited brightness compared to LCD or DLP so they are not recommended if your room has a lot of ambient light. 5,000 hours is still over three years of use at four hours a night. Trigger OUT接口（12V DC输出）对于家庭影院应用来说具有很高的实用价值，主要用于触发电动屏幕或照明控制等外部设备。在打开投影机的时候，幕布会自动放下，照明设备会自动关闭；当关闭投影机时，幕布则会自动收起，照明设备会自动开启，充分享受到智能家居带来的乐趣。USB接口确实可以传输音频与视频信号，通用性好于VGA接口。但是，此功能在应用中具有一定局限性，传输音视频时可能会出现一些延迟，因此更适合以PPT、图片为主的商务演示。目前，爱普生、富可视均有部分投影机提供USB传输功能，让你在商务演示之前，不用再苦苦寻觅VGA线，拿一根常见的USB线就足够了。网络接口网络投影功能，投影机在接入网络后，可以直接访问指定电脑的IP地址，将电脑画面通过网络直接投影出来。 Monitor(Screen)显示器A light-emitting diode (LED)Liquid-crystal display (LCD)Organic light-emitting diode (OLED)A quantum dot display is a display device that uses quantum dots (QD),AMOLED (active-matrix organic light-emitting diode, /ˈæmoʊˌlɛd/) is a type of OLED display device technology.Cathode-ray tube (CRT) High-dynamic-range (HDR) standard-dynamic-range (SDR)Hybrid log–gamma (HLG) is a backwards-compatible high dynamic range (HDR) standard HLG是最广泛，推广成本最低，接受度也最高的。 HDR 10次之。 Dolby Vision最高端，不是一用户能接触到的， 显示技术AMD FreeSync and Nvidia G-Sync both allow the monitor and the graphics card to coordinate the refresh rate of the screen with the output of the GPU,a given monitor will likely provide support for only one or the other format. LDPC是Low Density Parity Check Code英文缩写，意思是低密度奇偶校验码 FHD意思是全高清，即FULL HD，全称为Full High Definition。一般能达到分辨率1920*1080 HD（分辨率&lt;=1280*720） UHD根据国际电信联盟（ITU）发布的“超高清UHD”标准的建议是，屏幕的物理分辨率达到38402160（4K2K）及以上的显示称之为超高清，是普通FullHD（1920*1080）宽高的各两倍，面积的四倍。 LCD投影机按内部液晶板的片数可分为单片式和三片式两种，现代液晶投影机大都采用3片式LCD板。三片式LCD投影机是用红、绿、蓝三块液晶板分别作为红、绿、蓝三色光的控制层。 DLP是“Digital Light Processing”的缩写，即为数字光处理，也就是说这种技术要先把影像信号经过数字处理，然后再把光投影出来。它是基于TI（美国德州仪器）公司开发的数字微镜元件——DMD（Digital Micromirror Device）来完成可视数字信息显示的技术。说得具体点，就是DLP投影技术应用了数字微镜晶片（DMD）来作为主要关键处理元件以实现数字光学处理过程。 LCOS（Liquid Crystal on Silicon），即液晶附硅，也叫硅基液晶，是一种基于反射模式，尺寸非常小的矩阵液晶显示装置。这种矩阵采用CMOS技术在硅芯片上加工制作而成。1、3LCD优势在于亮度和易于安装，而DLP优势在于灰阶以及3d无串扰。DLP比3LCD总体而言更进步一些。 2、对于遮光良好有合适幕布的用DLP会达到出色的效果，例如家用的，卧室用的投影仪。 3、对于遮光不良而且投的画面又比较大的有时只能选择3LCD，例如办公室用的，教室用的传统投影仪。 色域Wide color gamut (WCG) 色域（Color Space)，又被称为色彩空间，它代表了一个色彩影像所能表现的色彩具体情况,Adobe RGB是由Adobe公司推出的色域标准，sRGB是由惠普与微软公司于1997年共同开发的，其中“S”可解释为“标准”（Standard)。Adobe RGB较之sRGB有更宽广的色彩空间，它包含了sRGB所没有的CMYK色域，层次较丰富，但色彩饱和较低。sRGB对于绿色部分色域覆盖非常少。这个就导致一个很严重的问题，那就是对花草森林等场景的色彩表现力不足。也正是因为这样，它对显示器的要求不高，所以现在市面上大多数显示器都能达到sRGB100%。P3 色域广义上包含了 DCI-P3 和 Display P3, 前者是影视行业标准，Display P3 是 Apple 在 DCI-P3 基础上参考了 sRGB 而修订出的自己的标准，在白点和伽马上与 DCI-P3 不同，但是能覆盖的颜色相同，相对于 sRGB 除了蓝色都有较大提升。DCI-P3是一种应用于数字影院的色域，它是一种以人类视觉体验为主导的色域标准,最新的标准为Rec.2020DCI-P3是一款更加注重于视觉冲击，而不是色彩全面性的色域。并且相对其他色彩标准，它拥有更广阔的红色/绿色系色彩范围。Digital Cinema Initiatives, LLC (DCI) is a consortium of major motion picture studios, formed to establish specifications for a common systems architecture for digital cinema systems. Rec.709是1990年国际电信联盟指定的HDTV的统一色彩标准，它的色彩范围和用于互联网媒体的sRGB色彩空间几乎相同。DCI-P3是美国电影行业推出的一种广色域标准，也是目前数字电影回放设备的色彩标准之一，它呈现的色域相比Rec.709色域大了25%，主要是绿色和红色的范围更广。BT.2020则是国际电信联盟针对超高清UHD（4K及8K）视频制作与显示系统指定的一个标准，这个标准涵盖了分辨率、色域、色深等很多指标，其中色域方面其相比Rec.709具有更大的范围，甚至超过了DCI-P3。 ITU international telecommucication uionREC RECOMMENDATION NTSC是National Television Standards Committee (美国)国家电视标准委员会.NTSC色域指的是NTSC标准下的颜色的总和目的是为了给当时刚出现不久的 CRT 彩色电视定制一套标准，由于实在是太过于古老72%NTSC：100%的sRGB色域约等于72%的NTSC色域 100%sRGB/72%NTSC 以上色域的屏幕，是不错的屏幕 90%AdobeRGB/90%NTSC 以上的屏幕，是非常优秀的屏幕。 尼特是亮度的单位，1nit=1 cd/m²亮度的单位是坎德拉/平方米（cd/m2）亮度是人对光的强度的感受。A “nit” is another way to describe a brightness of 1 candela per square meter (cd/m2). An average candle produces roughly 1 candela.lumens typically only apply to projectors. It tells you how much light energy something is throwing out, but not exactly how “bright” it will appear. That’s because you’re not looking directly at a projector. If a projector has “2,000 lumens” for example, it’s going to appear differently bright whether you use a 50-inch screen or a 150-inch screen.The candela per square metre (symbol: cd/m2) is the derived SI unit of luminance. The unit is based on the candela, the SI unit of luminous intensity, and the square metre, the SI unit of area. The nit (symbol: nt) is a non-SI name also used for this unit (1 nt = 1 cd/m2).[1] The term nit is believed to come from the Latin word nitēre, “to shine” TüV标志是德国TüV专为元器件产品定制的一个安全认证标志，在德国和欧洲得到广泛的接受。应用安全标准的目的是：防止家电产品、机械产品、汽车产品使用过程中可能产生的各种危险所造成的人身伤害和财产损失。包括电击或触电，温度过高或火灾，机械方面存在的危险，放射性危险，化学性危险。 USB-PD 是由 USB-IF 组织制定的一种快速充电规范，是目前主流的快充协议之一。 USB-PD 快充协议是以 Type-C 接口输出的，但不能说有 Type-C 接口就一定支持 USB-PD 协议快充PD快充协议是什么 PD的全名应该叫做USB Power Delivery Specification，是USB的标准化组织推出的一个快速充电的标准。USB PD 3.0的协议理论上需要USB 3.0的接口 The Unified Extensible Firmware Interface is a publicly available specification that defines a software interface between an operating system and platform firmware 规模以上工业企业，即年主营业务收入为2000万元及以上的工业法人单位。 Quantitative easing (QE) is a form of unconventional monetary policy in which a central bank purchases longer-term securities from the open market in order to increase the money supply and encourage lending and investment. CNAS认可，为中国合格评定国家认可委员会(China National Accreditation Service for Conformity Assessment，CNAS)的认证英文缩写，是在原中国认证机构国家认可委员会（CNAB）和中国实验室国家认可委员会(CNAL)基础上合并重组而成的。1.国际认可论坛（IAF）互认2.国际实验室认可合作组织(ILAC)实验合作组织互认3.中国CNAS认证与区域组织互认：4.与太平洋认可合作组织(PAC)互认5.与亚太实验室认可合作组织（APLAC）互认 EMI(Electro Magnetic Interference)直译是“电磁干扰”，是指电子设备(干扰源)通过电磁波对其他电子设备产生干扰的现象。有矛就有盾，有电磁干扰就有抗电磁干扰。下面请出我们的第二位主角EMS。EMS(Electro Magnetic Susceptibility)直译是“电磁敏感度”，是指由于电子设备受到外界的电磁能量，造成自身性能下降的容易程度。EMC(Electro Magnetic Compatibility)直译是“电磁兼容性”，是指电子设备所产生的电磁能量既不对其他电子设备产生干扰，也不受其他电子设备的电磁能量干扰的能力 An alternative to Quantum Dots, phosphor-coated LEDs have a chemical coating to alter the light’s output.\\ oled This stands for organic light-emitting diode. In an OLED display, the pixels also produce their own light, eliminating the need for an additional LED backlight, making OLED screens super thin. Because each pixel can be individually turned off when not in use, OLED displays create a perfect black, which is why you will see claims of “infinite contrast” on some OLED models. Today most monitors that use LCD technology are backlit with LEDs, so typically if you’re buying a monitor it’s both an LCD and LED display. 液晶显示器的常用面板有TN（Twisted Nematic扭曲向列型）、IPS（In-Plane-Switching平面转换型）、VA（Vertical Alignment多象限垂直配向型）三种类型，前两种相对常见。 TN屏就是较早前常见的软屏，用手能按出水波纹，这是较早使用的LCD面板之一，目前也在大量使用，因为它的技术成熟，成本低。TN屏响应速度快，可以达到1ms的响应时间，不会出现残影。使用这种材质的屏幕通常用来作为职业电竞屏，通过快速响应，TN屏可无损呈现高速变化的场景细节。缺陷也很明显，输出灰阶少，原生只有6bit色彩，画面色彩偏白、可视角度小，显示效果一般，通过不同角度观看会出现偏色和亮度差别。因此，如果你从事设计、影视后期相关工作或在观影娱乐时对屏幕色彩有较高要求，不建议使用这种屏幕。 IPS屏面板较硬，用手指轻触屏幕，画面不会变形。IPS屏在色彩显示、可视角度等方面比TN面板好上不少，对于色彩的呈现范围与准确性也都有亮眼的表现，广视角是IPS面板的原生优势，不论哪个角度观看都不会产生色偏。目前跟影像处理有关的专业屏幕大多采用IPS面板。 为了改良推出了Nano-IPS、Fast-IPS面板，响应时间有了大提升，不少搭配这两种面板的显示器达到了1ms（GTG）响应时间超级高的Fast IPS显然更好一些。而想两者兼备的话就选择NanoIPS面板 灰阶响应时间 [1] ，也就是GTG（Grey To Grey）。说到灰阶响应时间，首先来看一下什么是灰阶。我们看到液晶屏幕上的每一个点，即一个像素，它都是由红、绿、蓝（RGB）三个子像素组成的，要实现画面色彩的变化，就必须对RGB三个子像素分别做出不同的明暗度的控制，以“调配”出不同的色彩。这中间明暗度的层次越多，所能够呈现的画面效果也就越细腻。以8 bit的面板为例，它能表现出256个亮度层次（2的8次方），我们就称之为256灰阶。 MPRT全拼是Moving Picture Response Time，翻译过来叫“动态画面响应时间”，MPRT只是一种降低画面模糊的技术手段， 国际照明委员会（英语：International Commission on illumination，法语：Commission Internationale de l´Eclairage，采用法语简称为CIE [1] ）是由国际照明工程领域中光源制造、照明设计和光辐射计量测试机构组成的非政府间多学科的世界性学术组织，是技术、科学、文化方面的非营利组织。 VESA方案主要与显示器的最大峰值亮度能力相关联，每个数字代表背光最大亮度规格。例如，VESA DisplayHDR 400适用于可达到400 cd / m2峰值亮度的屏幕 视频电子标准协会（Video Electronics Standards Association, VESA）是由代表来自世界各地的、享有投票权利的140多家成员公司的董事会领导的非盈利国际组织DisplayPort：显示设备端口，是数字显示设备图像和声音接口的标准化格式。 通过此HDR 400认证将屏幕标记为支持HDR，这是毫无意义和误导我们的感受 BC1.2 (Battery Charging v1.2)是USB-IF下属的BC(Battery Charging)小组制定的协议，主要用于规范电池充电的需求，该协议最早基于USB2.0协议来实现。BC1.2引入了充电端口识别机制，主要包括以下几个USB端口类型：1.标准下行端口（SDP） SDP端口支持USB协议，最大电流500mA，可以认为SDP就是普通的USB接口 2.专用充电端口（DCP） DCP不支持数据协议，支持快充，可以提供大电流，DCP主要用于墙充等专用充电器 3.充电下行端口（CDP） CDP既支持数据协议也支持快充 USB-IF组织推出PD协议（Power Delivery 功率传输协议），有望统一快充市场。 Color accuracyΔE(Delta-E)，指的是在均匀颜色感觉空间中，人眼感觉色差的测试单位·这种测试方法用于当用户指定或接受某种颜色时，生产商用以保证色彩一致性的量度·。ΔE值在1.6到之间3.2，人眼基本上是分辨不出色彩的差异，这里只有少数专业级显示器，在6.5到13之间时，色彩差别已经可以判别，但色调本身仍然相同。此时市面上大多数消费级液晶显示器都在这个档次上； HDCP(High -bandwidth Digital Content Protection)：高带宽数字内容保护技术。HDCP协议是用来防止视频内容在传输的过程被完整的复制下来 接口高清多媒体接口（High Definition Multimedia Interface，HDMI [1] ）是一种全数字化视频和声音发送接口，可以发送未压缩的音频及视频信号。HDMI 1.4标准兼容的功能都应支持ARCHDMI 2.1还提供了新的和改进的ARC版本，称为增强音频回传通道（eARC）将支持杜比全景声（Dolby Atmos）和其他未压缩的声音格式。It offers new enhancements for video games like variable refresh rate (VRR) and automatic low-latency mode (ALLM) and the ability to pass 4K signals to the TV at up to 120Hz, for ultra-smooth motion. HEVC (H.265)Stands for “High-Efficiency Video Coding.” A new compression technology developed to make large 4K UHD video files smaller and, therefore, easier to stream over broadband Internet connections. HEVC is said to double the data compression ratio over H.264, the predominant encoding technology used today for 1080p videos while retaining the same video quality. A smart TV or streaming set-top box must be able to decode HEVC to playback 4K Ultra HD video D65光源是标准光源中最常用的人工日光，其色温为6500K。英文名：Artificial Daylight 6500K。标准光源箱中的D65光源是模拟人工日光，保证在室内、阴雨天观测物品的颜色效果时，有一个近似在太阳光底下观测的照明效果。 基本科学指标数据库（Essential Science Indicators，简称ESI）是由世界著名的学术信息出版机构美国科技信息研究所（ISI）于2001年推出的衡量科学研究绩效、跟踪科学发展趋势的基本分析评价工具。 AUX接口（Auxiliary）是指音频输入接口，可以输入包括mp3在内的电子声频设备的音频（一般的耳机插孔），可通过车上的音响来输出这些设备内的音乐。 DTS [1] 成立于1993年，总部设于美国加州Calabasas从最初声名卓著的多声道音频技术先锋，到DTS发展为蓝光的必备音频标准之一。并在电影数字传输和与其他各种互联网相关的消费电子平台上获得了广泛的应用Digital Theater System DTS-HD Master Audio (DTS-HD MA; known as DTS++ before 2004[1]) is a multi-channel, lossless audio codec developed by DTS as an extension of the lossy DTS Coherent Acoustics codec (DTS CA; usually itself referred to as just DTS).DTS-HD Master Audio (DTS-HD MA; known as DTS++ before 2004[1]) is a multi-channel, lossless audio codec developed by DTS as an extension of the lossy DTS Coherent Acoustics codec (DTS CA; usually itself referred to as just DTS). S/PDIF的全称是Sony/Philips Digital Interconnect Format，是索尼与飞利浦公司合作开发的一种民用数字音频接口协议 antenna这个单词词语，这个单词其实是天线意思，所以它的对应接口实际上就是天线接口，是专门用来接天线的端口。 AV接口实现了音频和视频的分离传输，在成像方面可以避免音频与视频互相干扰而导致的画质下降。AV接口在电视与DVD连接中使用的比较广，是每台电视必备的接口之一音频、视频分离的视频接口，一般由三个独立RCA插头组成，其中V接口连接混合视频信号，为黄色插口；L接口连接左声道声音信号，为白色插口；R接口连接右声道声音信号，为红色插口。AV接口，音频（Audio ）和视频（Video ）的简称. AV端口（又称复合端口）原文为Composite video connecto 美国无线电公司（Radio Corporation of America，RCA）在1930年代的大多收音机中采用了这样的连接方式，也正是这种接头得名的原因。RCA端子（RCA jack，或RCA connector），俗称梅花头、莲花头，是一种应用广泛的端子，可以应用的场合包括了模拟视频/音频（例：AV端子(三色线)）、数字音频（例：S/PDIF）与色差分量（例：色差端子）传输等。 UPS即不间断电源(Uninterruptible Power Supply)，是一种含有储能装置的不间断电源。主要用于给部分对电源稳定性要求较高的设备，提供不间断的电源。当市电输入正常时，UPS 将市电稳压后供应给负载使用，此时的UPS就是一台交流式电稳压器，同时它还向机内电池充电；当市电中断（事故停电）时， UPS 立即将电池的直流电能，通过逆变器切换转换的方法向负载继续供应220V交流电，使负载维持正常工作并保护负载软、硬件不受损坏。UPS 设备通常对电压过高或电压过低都能提供保护。 Thunderbolt技术融合PCI Express和DisplayPort两种通信协议。其中PCI Express用于数据传输，可以非常方便的进行任何类型设备扩展；DisplayPort用于显示，能同步传输1080p乃至超高清视频和最多八声道音频。并且两条通道在传输时都有自己单独的通道，不会产生任何干扰。雷电接口物理外观多为Type-C接口。。Thunderbolt使用铜质线缆，长度限制为3米。 DisplayPort（简称DP）是一个由PC及芯片制造商联盟开发，视频电子标准协会（VESA）标准化的数字式视频接口标准。此接口的设计是为取代传统的VGA、DVI和FPD-Link（LVDS）接口。 Speaker and Sound cardother input/output deviceskeyboardmousemicrophonewebcam半导体A logic gate is an idealized model of computation or physical electronic device implementing a Boolean function, a logical operation performed on one or more binary inputs that produces a single binary output. 数字集成电路按导电类型可分为双极型集成电路（主要为TTL）和单极型集成电路（CMOS、NMOS、PMOS等） PMOS logicNMOS logic CMOS是Complementary Metal Oxide Semiconductor（互补金属氧化物半导体）的缩写。它是指制造大规模集成电路芯片用的一种技术或用这种技术制造出来的芯片，是电脑主板上的一块可读写的RAM芯片。因为可读写的特性，所以在电脑主板上用来保存BIOS设置完电脑硬件参数后的数据，这个芯片仅仅是用来存放数据的。 Complementary metal–oxide–semiconductor (CMOS, pronounced “see-moss”), also known as complementary-symmetry metal–oxide–semiconductor (COS-MOS), is a type of metal–oxide–semiconductor field-effect transistor (MOSFET) fabrication process that uses complementary and symmetrical pairs of p-type and n-type MOSFETs for logic functions. CMOS technology is also used for analog circuits such as image sensors (CMOS sensors), data converters, RF circuits (RF CMOS), and highly integrated transceivers for many types of communication. A transistor is a semiconductor device used to amplify or switch electronic signals and electrical power Transistor–transistor logic (TTL) is a logic family built from bipolar junction transistors. Its name signifies that transistors perform both the logic function (the first “transistor”) and the amplifying function (the second “transistor”), as opposed to resistor–transistor logic (RTL) or diode–transistor logic (DTL). Resistor–transistor logic (RTL) (sometimes also transistor–resistor logic (TRL)) is a class of digital circuits built using resistors as the input network and bipolar junction transistors (BJTs) as switching devices. A resistor is a passive two-terminal electrical component that implements electrical resistance as a circuit element. Diode–transistor logic (DTL) is a class of digital circuits that is the direct ancestor of transistor–transistor logic. It is called so because the logic gating function (e.g., AND) is performed by a diode network and the amplifying function is performed by a transistor (in contrast with RTL and TTL). A diode is a two-terminal electronic component that conducts current primarily in one direction (asymmetric conductance); it has low (ideally zero) resistance in one direction, and high (ideally infinite) resistance in the other. 行业多晶硅的需求主要来自于半导体和太阳能电池polycrystalline silicon多晶硅，是单质硅的一种形态。熔融的单质硅在过冷条件下凝固时，硅原子以金刚石晶格形态排列成许多晶核，如这些晶核长成晶面取向不同的晶粒，则这些晶粒结合起来，就结晶成多晶硅。 tsmc台湾积体电路制造股份有限公司Taiwan Semiconductor Manufacturing Company manufacturer’s suggested retail price (MSRP) 锦标，本是锦制的标旗，后泛指授给竞赛优胜者的奖品。锦标赛（Championships/ Tournament）指不同地区或竞赛大组的优胜者之间的一系列决赛之一。锦标赛是排名在一定水平上的人才可以参加，而且每个国家的选手数量限制。 over-the-air (OTA) The conference therefore established the Greenwich Meridian as the prime meridian and Greenwich Mean Time (GMT) as the world’s time standard.UTC is one of several closely related successors to GMT. 2002年的电子政府法案(E-Government Act)包含联邦信息安全管理法案(Federal Information Security Management Act，FISMA)。FISMA要求政府机构和部门要设置信息管理和信息系统的基本安全目标来提高安全性，强制实行了联邦信息处理标准(Federal Information Processing Standard，FIPS)。 Definition of ‘aka’a. is an abbreviation for ‘also known as. ‘ a.k.a. is used especially when referring to someone’s nickname or stage name. 半导体产业中有两大分支：集成电路和分立器件。Discrete device 芯片设计企业（Fabless）、晶圆代工厂（Foundry）、封测厂（OSAT）完成，形成产业链协同效应。IDM（Integrated Design and Manufacture）垂直整合制造 ，指从设计、制造、封装测试到销售自有品牌IC都一手包办的半导体垂直整合型公司。Fabless，是Fabrication（制造）和less（无、没有）的组合，是指“没有制造业务、只专注于设计”的集成电路设计的一种运作模式，也用来指代未拥有芯片制造工厂的IC设计公司，经常被简称为“无晶圆厂”（晶圆是芯片\\硅集成电路的基础，无晶圆即代表无芯片制造）；通常说的IC design house（IC设计公司）即为Fabless。Foundry，在集成电路领域是指专门负责生产、制造芯片的厂家。Foundry原意为铸造工厂、翻砂车间、玻璃熔铸车间，从它的字面意思可以看出其与集成电路的联系，因为硅集成电路的制造也跟“玻璃”和“砂”有关。OEM（Original Equipment Manufacturer，指的是品牌、设计、销售一方和生产一方进行合作的模式，俗称“代工”、“贴牌”；而ODM（Original Design Manufacturer）则是生产制造商，除了担任制造这个主要责任外，还有部分是自己设计的。介于两者之间的Fablite模式，即“轻晶圆”模式OSAT，全称为Outsourced Semiconductor Assembly and Testing，字面意思就是「外包半导体（产品）封装和测试」，是为一些Foundry公司做IC产品封装和测试的产业链环节。 MOS memory MPU / MCU Analog Logic ASIC ASSPAn application-specific integrated circuit (ASIC /ˈeɪsɪk/) is an integrated circuit (IC) chip customized for a particular use, rather than intended for general-purpose use.An application-specific standard product or ASSP is an integrated circuit that implements a specific function that appeals to a wide market. As opposed to ASICs that combine a collection of functions and are designed by or for one customer, ASSPs are available as off-the-shelf components. ASSPs are used in all industries, from automotive to communications.mpu A microprocessor is a computer processor where the data processing logic and control is included on a single integrated circuit, or a small number of integrated circuits.mcu A microcontroller (MCU for microcontroller unit) is a small computer on a single VLSI integrated circuit (IC) chip. A microcontroller contains one or more CPUs (processor cores) along with memory and programmable input/output peripherals.DSP 数字信号处理器Very large-scale integration (VLSI) is the process of creating an integrated circuit (IC) by combining millions or billions of MOS transistors onto a single chip.SoC：System on Chip的缩写，称为系统级芯片，也有称片上系统，意指它是一个产品，是一个有专用目标的集成电路，其中包含完整系统并有嵌入软件的全部内容。 复合增长率来衡量，由于它是长期时间基础上的核算，所以更能够说明产业或产品增长或变迁的潜力和预期。复合年均增长率，简称CAGR（Compound Annual Growth Rate)。是一项投资在特定时期内的年度增长率。 半导体产品包括集成电路、光电器件、分立器件、传感器四大类光电器件（Optoelectronics）包括半导体显示、半导体灯、光耦合器、光开关、图像传感器和其他光感应和发射半导体器件等传感器/执行器（Sensors &amp; Actuators）指电学特性被设计成与温度、压力、位移、速度、加速度、应力、应变或任何其他物理、化学或生物特性相关的半导体器件，包括温度传感器、压力传感器、磁场传感器、执行器等。所有光学传感器归类于光电子类别。分立器件（Discretes）包括二极管、小信号和开关晶体管、功率晶体管、整流器、晶闸管等。晶闸管Thyristor具有硅整流器件的特性，能在高电压、大电流条件下工作， 半导体行业包括设计、制造、封测三个环节。也称晶圆制造：半导体制造环节指由晶圆制造厂完成的前道工艺，包括氧化/扩散、光刻、刻蚀、离子注入、薄膜生长、清洗与抛光、金属化等七大工艺步骤薄膜生长、刻蚀和光刻设备为晶圆制造核心设备，其市场规模最大半导体硅片是最重要的晶圆制造材料，封测环节指由封测厂完成的后道工艺，包括贴膜、磨片、贴片、划片、装片、键合、测试等 2022 年二季度全球前十大晶圆代工厂的合计市占率达98%，其中台积电稳居全球第一，市占率为 53.4%；排名第二的三星市占率为 16.5%；其他厂商市占率均为个位数。 IP（Intellectual Property）是指集成电路设计中预先设计、验证好的功能模块，通常由第三方 IP 供应商开发，并提供成熟的IP 模块给芯片设计公司用于集成，可有效缩短芯片设计周期并提升芯片性能。当前国际上绝大部分SoC都是基于多种不同 IP 组合进行设计的IP 核分为软核、硬核和固核三种。按照开发完成度，IP 核可划分为软核、固核、硬核三类,软核一般指使用硬件描述语言（HDL）形式提供给客户的代码文件，其中不涉及具体电路元件实现等功能，软核代码直接参与设计的编译流程，以HDL代码形式呈现；固核设计程度介于软核与硬核之间，用户可以根据需求重新定义性能参数，内部连线表可根据需求进行优化，最终以HDL 门级电路网表呈现；硬核是设计阶段最终产品，提供给用户光掩模图和全套工艺文件。从完成IP核所花费的成本来讲，硬核代价最大；从使用灵活性来讲，软核最高。CPU IP 占比 36.0%，DSP IP 占比 5.1%，GPU/ISP IP 占5.1%，接口IP 占比 22.1%，其他合计占比 26.9%。ISP(Image Signal Processing) 图像信号处理。主要用来对前端图像传感器输出信号处理的单元，以匹配不同厂商的图像传感器。 摩尔定律由英特尔创始人之一戈登·摩尔在 1965 年提出，是指集成电路上可以容纳的晶体管数目在大约每经过 18 个月到 24 个月便会增加一倍。逻辑制程CMOS 严格按照摩尔定律推进半导体工艺主要包括 BJT、PMOS、NMOS、CMOS、BiCMOS、BCD、HV-CMOS 等。BJT 工艺（Bipolar Junction Transistor，双极型晶体管）PMOS 工艺（Positive channel Metal Oxide Semiconductor，P 沟道金属氧化物半导体）NMOS 工艺（Negative channel Metal Oxide Semiconductor，N 沟道金属氧化物半导体）CMOS 工艺（Complementary Metal Oxide Semiconductor，互补金属氧化物半导体）：CMOS 是将 NMOS 和 PMOS 制造在同一个芯片上，利用互补对称电路来配置连接 PMOS 和 NMOS 从而形成逻辑电路，静态功耗理论上接近零。CMOS 工艺成为超大规模集成电路的主流工艺。BiCMOS 工艺将双极型和CMOS 器件制造在同一个芯片上。主要用于 RF 电路、LED 控制驱动和 IGBT 控制驱动；IGBT(Insulated Gate Bipolar Transistor)，绝缘栅双极型晶体管，是由（Bipolar Junction Transistor，BJT）双极型三极管和绝缘栅型场效应管（Metal Oxide Semiconductor，MOS）组成的复合全控型电压驱动式功率半导体器件。非常适合应用于直流电压为600V及以上的变流系统“RF 是Radio Frequency的缩写，表示可以辐射到空间的电磁频率，频率范围从300KHz～30GHz之间。射频简称RF”BCD 工艺将双极型、CMOS 和 DMOS（扩散 MOS）器件制作在同一芯片上。DMOS 器件可以耐高压，适合高压功率部分。BCD 工艺主要用于电压管理、显示驱动等；HV-CMOS 将高压 MOS 和 CMOS 制作在同一芯片上，高压MOS器件可以承受高压，但电流驱动能力较弱，成本低于BCD 工艺，适合只需要驱动高压信号，而没有大功率要求的芯片，主要用于 ACDC、DCDC、高压数模混合电路、LCD 和 LED 屏幕驱动等。在制程进入20nm 以下时，原有的Planar FET（平面场效应晶体管，一面有栅极）面临漏电和栅极对通道控制不足等问题，为了继续提高集成度，FinFET(鳍式场效应晶体管，三面有栅极)和GAAFET（全栅场效应晶体管，四面有栅极）被研发出来。 TV Programming ratedAlthough TV-14 is technically for ages 14 and up, Netflix’s notice implies 15 instead, as it states “Parents Strongly Cautioned. May not be suitable for ages 14 and under.”D: Intensely Suggestive DialogueL: Strong Coarse LanguageS: Intense Sexual ContentV: Intense Violence Programming rated TV-PG as stated in the United States TV Parental Guidelines signifies content with parental guidance suggestedD: Mildly Suggestive DialogueL: Infrequent Coarse LanguageS: Mild Sexual ContentV: Mild Violence TV-Y icon.svg TV-Y – This program is aimed at a very young audience, including children from ages 2–6.[67] TV-Y7 icon.svg TV-Y7 – This program is designed for children age 7 and above.[67] TV-Y7-FV icon.svg Some programs may be given the “FV” content descriptor if they exhibit more ‘fantasy violence’ that may be more intense or combative than other programs rated TV-Y7.[67]TV-G icon.svg TV-G – Most parents would find this program suitable for all ages.[67] Programs rated TV-G are generally suitable for all ages. The FCC states that “this rating does not signify a program designed specifically for children, most parents may let younger children watch this program unattended.”[67] The thematic elements portrayed in programs with this rating contain little or no violence, no strong language, and little or no sexual dialogue or situations.[68] TV-PG icon.svg TV-PG – Parental guidance is recommended; these programs may be unsuitable for younger children.[67] TV-14 icon.svg TV-14 – This program contains some material that many parents would find unsuitable for children under 14 years of age.[67] TV-MA icon.svg TV-MA – This program is intended to be viewed by adults and therefore may be unsuitable for children under 17.[67] pay televisionThematic material is rated based on a ten-code system, designated with a two- or three-letter abbreviation and corresponding descriptor: AC – Adult ContentAL – Adult LanguageGL – Graphic Language (exclusive to R/TV-MA-rated programs)MV – Mild ViolenceV – ViolenceGV – Graphic ViolenceBN – Brief NudityN – NuditySSC – Strong Sexual Content (exclusive to R/TV-MA-rated programs)RP – Rape Irl is an abbreviation for the phrase in real life. Use irl when you want to distinguish reality from something that happens in games, on social media, or on TV. gameA massively multiplayer online game (MMOG, or more commonly, MMO) is an online game with large numbers of players, often hundreds or thousands, on the same server. A MUD (/mʌd/; originally multi-user dungeon, with later variants multi-user dimension and multi-user domain)通常将缩写字直译为“网络泥巴”或是简称“泥巴”(英文 mud 的意思为泥巴)。是一款多人即时的虚拟世界，通常以文字描述为基础。 MUD 结合了角色扮演、砍杀、玩家与玩家对战、互动小说与在线聊天等元素，玩家可以阅读或查看房间、物品、其他玩家、非玩家角色的描述，并在虚拟世界中做特定动作。 玩家通常会通过输入类似自然语言的指令来与虚拟世界中的其他玩家互动。 Third-person shooter (TPS) is a subgenre of 3D shooter games in which the gameplay consists primarily of shooting. It is closely related to first-person shooters, but with the player character visible on-screen during play. While 2D shoot ‘em up games also employ a third-person perspective, the TPS genre is distinguished by having the game presented with the player’s avatar as a primary focus of the camera’s view. An arcade game or coin-op game is a coin-operated entertainment machine typically installed in public businesses such as restaurants, bars and amusement arcades. 2.5D (two-and-a-half dimensional, alternatively pseudo-3D or three-quarter) perspective Windows Display Driver Model WDDM is the graphic driver architecture for video card drivers running Microsoft Windows versions beginning with Windows Vista. A system on a chip (SoC; /ˌɛsˌoʊˈsiː/ es-oh-SEE or /sɒk/ sock[nb 1]) is an integrated circuit (also known as a “chip”) that integrates all or most components of a computer or other electronic system. These components almost always include a central processing unit (CPU), memory, input/output ports and secondary storage, often alongside other components such as radio modems and a graphics processing unit (GPU) – all on a single substrate or microchip Virtual reality (VR) is an interactive, computer-generated depiction of a real or artificial world or activity. Mixed reality (MR) is an interactive depiction or view of combined real-world and computer-generated elements. Augmented reality (AR) is a real-world view with additional, computer-generated enhancements.XR encompasses augmented reality (AR), virtual reality (VR) and mixed reality (MR)eXtended Reality (XR) is a ‘catch-all’ term for technologies that enhance or replace our view of the world. a key fact, point, or idea to be remembered, typically one emerging from a discussion or meeting. Estimated Time of Arrival尤其用于军方，作为军事用语，如，ETA 3 minutes,其意思就是预计三分钟之后到达。 耐受性（Tolerance）是指人体对药物反应性降低的一种状态，按其性质有先天性和后天获得性之分。耐受性是一种生物学现象，是药物应用的自然结果。. 策略角色扮演游戏（Strategy Role-Playing Game）的，简称SRPG。是一种在日本十分流行的、带有战术性的（通常为战棋类）的角色扮演游戏。在日本，被称为“模拟角色扮演”（シミュレーションRPG），在美国被称为战术角色扮演（Tactical role-playing game）。因为“模拟角色扮演”（即策略角色扮演，Simulation RPG）和“角色扮演模拟游戏”（Role-playing Simulation）很容易混淆，所以不建议使用这种称呼。 Life simulation games form a subgenre of simulation video games in which the player lives or controls one or more virtual characters (human or otherwise). Such a game can revolve around “individuals and relationships, or it could be a simulation of an ecosystem”.[1] Other terms include artificial life game[1] and simulated life game (SLG). SLG=Simulation Game，策略类游戏。现特指回合制策略游戏以及即时SLG。有别于SIM（Simulation）类“生活“模拟游戏，SLG虽然也是缩写的simulation（模拟但与经营类意思不同），却是“战争策略“模拟游戏的总称。 模拟经营游戏，是电子游戏类型的一种，由玩家扮演管理者的角色，对游戏中虚拟的现实世界进行经营管理。 ACG即日本动画（Anime）、漫画（Comics）与电子游戏（Games） “TVB Superchannel”, tvbstvb Television Broadcasts Limited (TVB) is a television broadcasting company based in Hong Kong. 智能硬件3C 指 计算机、通讯、消费电子产品 FWA 指 Fixed Wireless Access，即固定无线接入 OTT 指 Over-The-Top，即互联网机顶盒 “Original Design Manufacturer，即自主设计制造，指结构、外观、工艺等主要由生产商自主开发，产品以客户的品牌进行销售的一种运营模式” ict Information and communications technology 智能硬件指的是具备联网、感知、交互、推理学习能力的硬件产品。 Low-power wide-area networking (LPWAN) – Wireless networks designed to allow long-range communication at a low data rate, reducing power and cost for transmission. Available LPWAN technologies and protocols: LoRaWan, Sigfox, NB-IoT, Weightless, RPMA.LTE Cat NB1 26 kbit/sNarrowband Internet of things (NB-IoT) is a low-power wide-area network (LPWAN) radio technology standard developed by 3GPP for cellular devices and servicesLTE Cat M1 1 Mbit/sLTE-M or LTE-MTC (“Long-Term Evolution Machine Type Communication”), is a type of low-power wide-area network radio communication technology standard developed by 3GPP for machine-to-machine and Internet of Things (IoT) applications.LTE Cat 1 10 Mbit/s 微机电系统Microelectromechanical systems (MEMS), also written as micro-electro-mechanical systems (or microelectronic and microelectromechanical systems) TWS的全称是True Wireless Stereo,意思是真正无线立体声。TWS技术是基于蓝牙芯片技术发展而来的。蓝牙耳机左右是连在一起的，现在则左右成了两只，成了“真无线” osd是on screen display的简称，是屏幕菜单式调节方式。2、通过屏幕来调节显示器的各项信息的矩形菜单 显示面板驱动IC(DDIC) 车机车机指的是安装在汽车里面的车载信息娱乐产品的简称，车机在功能上能够实现人与车，车与外界（车与车）的信息通讯。 A human interface device or HID is a type of computer device usually used by humans that takes input from humans and gives output to humans.Since HID’s original definition over USB, HID is now also used in other computer communication buses. This enables HID devices that traditionally were only found on USB to also be used on alternative buses. This is done since existing support for USB HID devices can typically be adapted much faster than having to invent an entirely new protocol to support mouse, touchpad, keyboards, and the like. Known buses that use HID are: Bluetooth HID – Used for mouse and keyboards that are connected via Bluetooth 数字信号处理Digital Signal Process 智能锁市场中锁芯的等级按照国家标准来判定可以分为a级、b级和超b级，其中指纹锁绝大部分使用b级和超b级，而业内将超b级称之为c级。 指静脉识别是静脉识别的一种，首先通过指静脉识别仪取得个人手指静脉分布图，从手指静脉分布图依据专用比对算法提取特征值，通过近红外光线照射，利用CCD摄像头获取手指静脉的图像，将手指静脉的数字图像存贮在计算机系统中，将特征值存储。实际上它和初代指纹识别的方式比较接近，依靠的是图像特征比对来进行认证和识别。 coupledlinked or connected in a pair or pairs.CCD感光元件，英文全称：Charge-coupled Device，中文全称：电荷耦合元件。可以称为CCD图像传感器。CCD是一种半导体器件，能够把光学影像转化为数字信号。 光学指纹头（来自度娘） 借助光学技术采集指纹是历史最久远、使用最广泛的技术。将手指放在光学镜片上，手指在内置光源照射下，用棱镜将其投射在CCD（电荷耦合器件）上，进而形成脊线（指纹图像中具有一定宽度和走向的纹线）呈黑色、谷线（纹线之间的凹陷部分）呈白色的数字化的、可被指纹设备算法处理的多灰度指纹图象。 半导体手续费头（来自度娘） 无论是电容式还是电感式，其原理类似，在一块成千上万半导体器件的“平板”上，手指贴在其上与其构成了电容（电感）的另一面，由于手指平面凸凹不平，凸点处和凹点处接触平板的实际距离大小就不一样，形成了电容（电感）数值就不一样，设备根据这个原理将采集到的不同的数值汇总，就完成了指纹采集。 半导体指纹识别模块只是、识别活体指纹，安全性高，也就是说半导体指纹头可穿透皮肤表发层，所以网上盛传的硅胶模拟指纹在这里基本上起不了什么作用，识别活体指纹锁的好处在于指纹基本上不能被复制或者仿制。 半导体指纹识别模块不易保养，半导体指纹头的采集窗口会受到污渍汗渍以及静电的影响，容易被划花，所以需要使用时注意保护和养护，不然使用寿命难以保障 相对湿度（Relative Humidity ），用RH表示。表示空气中的绝对湿度与同温度和气压下的饱和绝对湿度的比值，得数是一个百分比。 LR6电池特色是适用于大电流用电器具，如电动玩具、照相机闪光灯、剃须刀等，使用时间较长；而R6P电池虽也可用于上述这些用电器，但使用时间仅为LR6电池的1/3。从价格上看，R6P电池零售价约1元/只，LR6电池2～3元/只 Chemistry IEC nameZinc–carbon R6Alkaline LR6 The International Electrotechnical Commission[3] (IEC; in French: Commission électrotechnique internationale) is an international standards organization that prepares and publishes international standards for all electrical, electronic and related technologies – collectively known as “electrotechnology”.电气、电子电工 The Advanced Encryption Standard (AES), also known by its original name Rijndael (Dutch pronunciation: [ˈrɛindaːl]), is a specification for the encryption of electronic data established by the U.S. National Institute of Standards and Technology (NIST) in 2001 Cryptography密码学 过滤器总溶解固体（英文：Total dissolved solids，缩写TDS），又称溶解性固体总量，测量单位为毫克/升（mg/L）,它表明1升水中溶有多少毫克溶解性固体。由于天然水中所含的有机物以及呈分子状的无机物一般可以不考虑，所以一般也把含盐量称为总溶解固体。 reverse osmosis反渗透又称逆渗透，是一种以压力差为推动力，从溶液中分离出溶剂的膜分离操作。对膜一侧的料液施加压力，当压力超过它的渗透压时，溶剂会逆着自然渗透的方向作反向渗透。从而在膜的低压侧得到透过的溶剂，即渗透液；高压侧得到浓缩的溶液，即浓缩液。 PPIDPI（Dots Per Inch，每英寸点数）是一个量度单位DPI是打印机、鼠标等设备分辨率的度量单位。是衡量打印机打印精度的主要参数之一，一般来说，DPI值越高，表明打印机的打印精度越高。 PPI（pixels per inch）","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Hardware/computer_DIY/"},{"title":"","text":"系统集成系统集成( system integration)通常是指将软件、硬件与通信技术组合起来为用户解决信息处理问题的业务，集成的各个分离部分原本就是一个个独立的系统，集成后的整体的各部分之间能彼此有机地和协调地工作，以发挥整体效益，达到整体优化的目的。 传统 IT 基础架构由通常的硬件和软件组件组成：设施、数据中心、服务器、网络硬件台式计算机和企业应用软件解决方案。 virtualization+server+storage+networking IaaS — Infrastructure as a ServiceIaaS —基础架构即服务cloud-based services, pay-as-you-go for services such as storage, networking, and virtualization. runtime+middleware+operatingSystem PaaS — Platform as a ServicePaaS —平台即服务hardware and software tools available over the internet. data+applications SaaS — Software as a Servicesoftware that is available via a third-party over the internet.SaaS —软件即服务 互联网的域名注册及虚拟主机等都是基本服务游戏、语音聊天、可视电话、短信、股票、投资信息、培训等等都是互联网增值服务。互联网增值服务是通过互联网的除域名注册及虚拟主机等基本服务以外的服务。主要以网络社区为基础平台，通过用户之间的沟通和互动，激发用户自我表现和娱乐的需求，从而给个人用户提供各类通过付费才可获得的个性化增值服务和虚拟物品消费服务，主要服务包括会员特权、网络虚拟形象、道具、个人空间装饰、个人交友服务等。 ICTInformation and communications technology","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Information%20systems/%E7%B3%BB%E7%BB%9F%E9%9B%86%E6%88%90/"},{"title":"","text":"Depending on the age of your hardware, you should have a choice of one or more of the following options, listed in order of preference:● Wi-Fi Protected Access 2 (WPA2). Based on the 802.11i standard, WPA2 provides thestrongest protection for consumer-grade wireless networks. It uses 802.1x-based authentication and Advanced Encryption Standard (AES) encryption; combined, these technologies ensure that only authorized users can access the network and that any intercepteddata cannot be deciphered. WPA2 comes in two flavors: WPA2-Personal and WPA2-Enterprise. WPA2-Personal uses a passphrase to create its encryption keys and is currently thebest available security for wireless networks in homes and small offices. WPA2-Enterpriserequires a server to verify network users. All wireless products sold since early 2006 mustsupport WPA2 to bear the Wi-Fi CERTIFIED label.● Wi-Fi Protected Access (WPA). WPA is an earlier version of the encryption schemethat has since been replaced by WPA2. It was specifically designed to overcome weaknesses of WEP. On a small network that uses WPA, clients and access points use a sharednetwork password (called a preshared key, or PSK) that consists of a 256-bit number ora passphrase that is from 8 to 63 bytes long. (A longer passphrase produces a strongerkey.) With a sufficiently strong key based on a truly random sequence, the likelihood of asuccessful outside attack is slim. Most modern network hardware supports WPA only forbackward compatibility.● Wired Equivalent Privacy (WEP). WEP is a first-generation scheme that dates backbefore the turn of the century. It suffers from serious security flaws that make it inappropriate for use on any network that contains sensitive data. Most modern Wi-Fi equipmentsupports WEP for backward compatibility with older hardware, but we strongly adviseagainst using it unless no other options are available.","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Network/network/"},{"title":"","text":"国内公共DNS DoH/DoT/DoQDOT DNS over TLS (DoT) is a network security protocol for encrypting and wrapping Domain Name System (DNS) queries and answers via the Transport Layer Security (TLS) protocol. IP V41.1 腾讯 DNS腾讯 DNS 基于 BGP Anycast 技术，不论用户身在何地，都可就近访问服务。支持谷歌 ECS 协议，配合 DNSPod 权威解析，可以给用户提供出最准确的解析结果，承诺不劫持解析结果。 IPv4：119.29.29.29DoH：https://doh.pub/dns-queryDoH：https://1.12.12.12/dns-queryDoH：https://120.53.53.53/dns-queryDoH：https://sm2.doh.pub/dns-query (国密)DoT：dot.pubDoT：1.12.12.12DoT：120.53.53.531.2 阿里 DNS阿里 DNS 线路支持包括电信、移动、联通、鹏博士、广电网、教育网及海外 150 个国家或地域，支持用户 ECS 扩展技术，智能解析；支持 DoT/DoH 协议，保护用户隐私，安全防劫持。 IPv4：223.5.5.5IPv4：223.6.6.6DoH：https://223.5.5.5/dns-queryDoH：https://223.6.6.6/dns-queryDoH：https://dns.alidns.com/dns-queryDoT：dns.alidns.com 国内 IPv6 DNS下一代互联网国家工程中心 IPv6 DNS下一代互联网国家工程中心（CFIEC），由北京市发改委于 2012 年认定的北京市工程研究中心，并于 2015 年由国家发改委批复升级为国家地方联合工程研究中心。 IPv6：240C::6666IPv6：240C::6644DoT：dns.ipv6dns.comDoH：https://dns.ipv6dns.com/dns-queryDNS64：240c::64 #纯 IPv6 访问 IPv4，需同时具备 DNS64 和 NAT64 服务可以阿里云 IPv6 DNSIPv6：2400:3200::1IPv6：2400:3200:baba::1DoH：https://2400:3200::1/dns-queryDoH：https://2400:3200:baba::1/dns-query红鱼 rubyfish IPv6 DNSDoT：v6.rubyfish.cnDoH：https://v6.rubyfish.cn/dns-query腾讯 IPv6 DNS2402:4e00::","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Network/DNS%20for%20users%20in%20China/"},{"title":"","text":"chrome keyboard shortcutMouse shortcutsOpen a link in a current tab (mouse only) Drag a link to a tabOpen a link in new background tab Ctrl + Click a linkOpen a link, and jump to it Ctrl + Shift + Click a linkOpen a link, and jump to it (mouse only) Drag a link to a blank area of the tab stripScroll horizontally on the page Shift + Scroll your mousewheelDisplay your browsing historyRight-click Back Back or click &amp; hold Back BackRight-click Next Next or click &amp; hold Next NextSave the current webpage as a bookmark Drag the web address to the Bookmarks BarSwitch between maximized and windowed modes Double-click a blank area of the tab strip Address bar shortcutsJump to the address bar Ctrl + l or Alt + d or F6Search using a different search engine Type a search engine name and press TabSearch with your default search engine Type a search term + EnterOpen a new tab and perform a Google search Type a search term + Alt + EnterAdd www. and .com to a site name, and open it in the current tab Type a site name + Ctrl + EnterSearch from anywhere on the page Ctrl + k or Ctrl + e Google Chrome feature shortcutsOpen the Chrome Task Manager Shift + EscOpen the Find Bar to search the current page Ctrl + f or F3Jump to the next match to your Find Bar search Ctrl + gJump to the previous match to your Find Bar search Ctrl + Shift + g Tab and window shortcutsOpen a new tab, and jump to it Ctrl + tOpen your home page in the current tab Alt + HomeJump to the next open tab Ctrl + Tab or Ctrl + PgDnJump to the previous open tab Ctrl + Shift + Tab or Ctrl + PgUpJump to a specific tab Ctrl + 1 through Ctrl + 8Jump to the rightmost tab Ctrl + 9Open the previous page from your browsing history in the current tab Alt + Left arrowOpen the next page from your browsing history in the current tab Alt + Right arrowClose the current tab Ctrl + w or Ctrl + F4 Webpage shortcutsReload the current page F5 or Ctrl + rReload the current page, ignoring cached content Shift + F5 or Ctrl + Shift + rStop the page loading EscTurn full-screen mode on or off F11Scroll down a webpage, a screen at a time Space or PgDnScroll up a webpage, a screen at a time Shift + Space or PgUpGo to the top of the page HomeGo to the bottom of the page End Open the Home page in the current tab Alt + Home","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Applied%20computing/chrome_keyboard_shortcut/"},{"title":"excel","text":"查重 数据格式要一致 在进行集合运算时，我们需要确保参与运算的数据集合的格式一致，否则可能会出现计算错误的情况。 数据重复要去重 在进行集合运算时，我们需要注意去重，否则可能会出现重复计算的情况。 VLOOKUP(lookup_value, table_array, col_index_num, range_lookup) =VLOOKUP(要查找的内容、要查找的位置、包含要返回的值的范围内的列号、返回表示为 1/TRUE 或 0/FALSE 的近似或精确匹配项)。 =VLOOKUP（查找值，包含查找值的范围，包含返回值的范围中的列号，近似匹配 (TRUE) 或精确匹配 (FALSE)）。 要查找的值，也被称为查阅值。 查阅值所在的区域。 请记住，查阅值应该始终位于所在区域的第一列，这样 VLOOKUP 才能正常工作。 例如，如果查阅值位于单元格 C2 内，那么您的区域应该以 C 开头。 区域中包含返回值的列号。 例如，如果指定 B2:D11 作为区域，那么应该将 B 算作第一列，C 作为第二列，以此类推。 （可选）如果需要返回值的近似匹配，可以指定 TRUE；如果需要返回值的精确匹配，则指定 FALSE。 如果没有指定任何内容，默认值将始终为 TRUE 或近似匹配。 交集 intersection 对 range_lookup 使用绝对引用通过使用绝对引用，可以向下填充公式，这样该公式始终在完全精确的查找区域内查找。 =C2 单元格 C2 单元格 C2 中的值。 =A1:F4 单元格 A1 到 F4 所有单元格中的值，但您必须在键入公式后按 Ctrl+Shift+Enter。 =Sheet2!B2 Sheet2 上的单元格 B2 Sheet2 上单元格 B2 中的值。 若要引用 用途 列 A 和行 10 交叉处的单元格 A10 在列 A 和行 10 到行 20 之间的单元格区域 A10:A20 在行 15 和列 B 到列 E 之间的单元格区域 B15:E15 行 5 中的全部单元格 5:5 行 5 到行 10 之间的全部单元格 5:10 列 H 中的全部单元格 H:H 列 H 到列 J 之间的全部单元格 H:J 列 A 到列 E 和行 10 到行 20 之间的单元格区域 A10:E20 绝对引用、相对引用和混合引用之间的区别 相对引用 公式中的相对单元格引用（如 A1）是基于包含公式和单元格引用的单元格的相对位置。 如果公式所在单元格的位置改变，引用也随之改变。 如果多行或多列地复制或填充公式，引用会自动调整。 默认情况下，新公式使用相对引用。 例如，如果将单元格 B2 中的相对引用复制或填充到单元格 B3，将自动从 =A1 调整到 =A2。 复制的公式具有相对引用 复制的公式具有相对引用绝对引用 公式中的绝对单元格引用（如 $A$1）总是在特定位置引用单元格。 如果公式所在单元格的位置改变，绝对引用将保持不变。 如果多行或多列地复制或填充公式，绝对引用将不作调整。 默认情况下，新公式使用相对引用，因此您可能需要将它们转换为绝对引用。 例如，如果将单元格 B2 中的绝对引用复制或填充到单元格 B3，则该绝对引用在两个单元格中一样，都是 =$A$1。 复制的公式具有绝对引用 复制的公式具有绝对引用混合引用 混合引用具有绝对列和相对行或绝对行和相对列。 绝对引用列采用 $A1、$B1 等形式。 绝对引用行采用 A$1、B$1 等形式。 如果公式所在单元格的位置改变，则相对引用将改变，而绝对引用将不变。 如果多行或多列地复制或填充公式，相对引用将自动调整，而绝对引用将不作调整。 例如，如果将一个混合引用从单元格 A2 复制到 B3，它将从 =A$1 调整到 =B$1。 复制的公式具有混合引用 复制的公式具有混合引用 使用通配符如果 range_lookup 为 FALSE 且 lookup_value 为文本，您可在 lookup_value 中使用通配符 - 问号 (?) 和星号 (*)。 问号匹配任何单个字符。 星号匹配任何字符序列。 如果要查找实际的问号或星号，则在字符前键入代字号 (~)。 例如，=VLOOKUP(“Fontan?”,B2:E7,2,FALSE) 将使用最后一个字母搜索 Fontana 的所有实例，该实例可能有所不同。 请确保您的数据中不包含错误的字符在第一列中搜索文本值时，请确保第一列中的数据没有前导空格、尾部空格、直引号（’ 或 “）与弯引号（‘或“）不一致或非打印字符。 否则，VLOOKUP 可能返回意外的值。 要获得准确的结果，请尝试使用 CLEAN 函数或 TRIM 函数删除单元格中表格值后后面的后置空格。 删除文本中的空格和非打印字符删除文本中所有不能打印的字符。 对从其他应用程序导入的文本使用 CLEAN，将删除其中含有的当前操作系统无法打印的字符。 例如，可以使用 CLEAN 删除某些通常出现在数据文件开头和结尾处且无法打印的低级计算机代码。 CLEAN 函数用于删除文本中 7 位 ASCII 码的前 32 个非打印字符（值为 0 到 31）。 在 Unicode 字符集中，有附加的非打印字符（值为 127、129、141、143、144 和 157）。 CLEAN 函数自身不删除这些附加的非打印字符。 除了单词之间的单个空格之外，移除文本中的所有空格。 对于从另一个可能含有不规则间距的应用程序收到的文本，可以使用 TRIM。 重要: TRIM 函数专用于剪裁文本中的 7 位 ASCII 空格字符（值 32）。 在 Unicode 字符集中，存在名为不间断空格字符的附加空格字符，其十进制值为 160。 通常在网页中使用此字符作为 HTML 实体 &amp;nbsp;。 TRIM 函数本身不会删除此不间断空格字符。 可使用 SUBSTITUTE 函数，将值较高的 Unicode 字符（值 127、129、141、143、144、157 和 160）替换为 7 位 ASCII 字符（TRIM 和 CLEAN 函数专门用于此类字符）。 将一个单元格的内容分配到相邻列中您可以分割单元格的内容，并将构成部分分布到多个相邻单元格中。 例如，如果工作表包含”全名”列，可以将该列拆分为两列 -“名字”列和”姓氏”列。 在“数据”选项卡上的“数据工具”组中，单击“分列”。 删除重复值在” 数据”选项卡 上的”数据 工具 “ (，单击” 删除重复) “。 删除重复值时，唯一的影响是单元格或表格区域的值。 单元格或表格区域外部的其他值不会更改或移动。 删除重复项时，将保留列表中值的第一次出现，但会删除其他相同的值。 由于要永久删除数据，因此建议先将原始单元格或表格区域复制到另一个工作表或工作簿，然后再删除重复值。 突出显示唯一值或重复值若要突出显示唯一值或重复值，请使用”开始”选项卡上”样式”组中”条件格式”命令 在”开始”选项卡上的”样式”组中，单击”条件格式”的小箭头，然后单击”突出显示单元格规则”，然后选择”重复值”。 TRANSPOSE 函数你需要切换或旋转单元格。 可通过复制、粘贴和使用“转置​​”选项来执行此操作。 但这样做会创建重复的数据。 首先选择一些空白单元格。 但请确保选择的单元格数量与原始单元格数量相同，但方向不同。 输入公式后，Ctrl+Shift+Enter。 为什么？ 因为 TRANSPOSE 函数仅在数组公式中 使用，所以这就是数组公式的完成方式。 简而言之，数组公式是应用于多个单元格的公式。 由于在步骤 1 (选择了多个单元格，不是吗？) ，该公式将应用于多个单元格。 下面是按 Ctrl+Shift+Enter 后的结果： 并集 union差集 A-B 查找A列中与B列不同的部分在c列（结果列）第一行输入：=IF(COUNTIF($B:$B,A1)=0,A1,””)【向下复制公式。鼠标放在C1单元格右下角处，变为黑色十字“＋”时，右单击鼠标，向下拉动进行填充。】 COUNTIF COUNTIF 是一个统计函数，用于统计满足某个条件的单元格的数量；例如，统计特定城市在客户列表中出现的次数。 COUNTIF 的最简形式为： =COUNTIF(要检查哪些区域? 要查找哪些内容?) 例如： =COUNTIF(A2:A5,”London”) =COUNTIF(A2:A5,A4) 数据 数据 苹果 32 橙子 54 桃子 75 苹果 86 公式 说明 =COUNTIF(A2:A5,”苹果”) 统计单元格 A2 到 A5 中包含“苹果”的单元格的数量。 结果为“2”。 =COUNTIF(A2:A5,A4) 统计单元格 A2 到 A5 中包含“桃子”（A4 中的值）的单元格的数量。 结果为 1。 if IF 函数是 Excel 中最常用的函数之一，它可以对值和期待值进行逻辑比较。 因此 IF 语句可能有两个结果。 第一个结果是比较结果为 True，第二个结果是比较结果为 False。 例如，=IF(C2=”Yes”,1,2) 表示 IF(C2 = Yes, 则返回 1, 否则返回 2)。","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Applied%20computing/excel/"},{"title":"google search","text":"basicHow to search on GoogleLearn a few tips and tricks to help you easily find information on Google. Tip 1: Start with the basicsNo matter what you’re looking for, start with a simple search like where’s the closest airport?. You can always add a few descriptive words if necessary. If you’re looking for a place or product in a specific location, add the location. For example, bakery seattle. Tip 2: Search using your voiceTired of typing? To search with your voice, tap the Microphone . Tip 3: Choose words carefullyWhen you decide what words to put in the search box, try words that are likely to appear on the site you’re looking for. For example, instead of saying my head hurts, say headache, because that’s the word a medical site uses. Tip 4: Don’t worry about the little thingsSpelling: Google’s spell checker automatically uses the most common spelling of a given word, whether or not you spell it correctly.Capitalization: A search for New York Times is the same as a search for new york times.Tip 5: Find quick answersFor many searches, Google will do the work for you and show an answer to your question in the search results. Some features, like information about sports teams, aren’t available in all regions. Weather: Search weather to see the weather in your location or add a city name, like weather seattle, to find weather for a certain place.Dictionary: Put define in front of any word to see its definition.Calculations: Enter a math equation like 3*9123, or solve complex graphing equations.Unit conversions: Enter any conversion, like 3 dollars in euros.Sports: Search for the name of your team to see a schedule, game scores and more.Quick facts: Search for the name of a celebrity, location, movie, or song to find related information. Find search information about a resultStart a search on Google.After the URL for a search result, select More .In the “About this result” panel, scroll to “Your search &amp; this result.” learn more about a web page Find info about the source &amp; topic Do a search on Google. After the URL for a search result, select More . In the “Source” section, select More about this page. Depending on the info available, you might find 2 sections on this page: About the SourceAbout the Topic Learn more about the source description:At the top of the “About the source” section, you might find a description of the source from a reference site. These descriptions come from Google’s Knowledge Graph.in their own words:This is a description of the source as represented by the site itself.platform information:For some social platforms, this section provides information about the social account or channel that the page represents, not the social platform.site first indexed my google:This is the date Google first crawled this site. Learn more about the Topic top newsThese are high quality news headlines about the same story as the page you are learning more about from different sources. related resultsThese are web results from other sources about the same topic as the page you want to learn more about. Depending on the topic, these results might contain a combination of news articles, scientific studies, longform pieces, or shopping websites. filters and tools all filters:imagesmapsshoppingvideosnewsbooksflightsfinance tools:last update:anytimepast hourpast 24 hourspast weekpast monthpast yearcustom range… from 8/31/2023 to 8/26/2023 all resultsverbatim verbatim /vɜːrˈbeɪtɪm/ 一字不差地If you repeat something verbatim, you use exactly the same words as were used originally. Go to Advanced Search from GoogleImportant: Advanced Search isn’t available for all types of results. On your computer, do a search on google.com. Below the search box, select the type of results: All, Images, Videos, or Books. For more search options, to the right of the search bar, click Settings and then Advanced search. Use Advanced Search query fieldsImportant: Search query fields can vary across Advanced Search pages. In Advanced Search, you can choose words or phrases to include or remove from your results. You can choose: “All these words”: Results use all the words you enter. “This exact word or phrase”: Results include one exact word or phrase you enter. “Any of these words”: Results include at least one of the words you enter. “None of these words”: Results don’t have any of the words you enter. “Numbers ranging from”: Results include a number between the 2 numbers you enter. quote search Sometimes people know they absolutely, positively only want webpages that mention a particular word or phrase. For example, maybe you want to find out about phone chargers but only those that support wireless charging. Fortunately, Google Search has a special operator for that: quotation marks. Put quotes around any word or phrase, such as [“wireless phone chargers”], and we’ll only show pages that contain those exact words or phrases. Now we’re making quoted searches better. The snippets we display for search results (meaning the text you see describing web content) will be formed around where a quoted word or phrase occurs in a web document. That means you can more easily identify where to find them after you click the link and visit the content. On desktop, we’ll also bold the quoted material. all these words:Type the important words: tricolor rat terrier this exact word or phrase:Put exact words in quotes: “rat terrier” any of these words:Type OR between all the words you want: miniature OR standard none of these words:Put a minus sign just before words you don’t want: -rodent, -“Jack Russell” numbers ranging from: toPut 2 periods between the numbers and add a unit of measure: 10..35 lb, $300..$500, 2010..2011 Then narrow your results by… language:Find pages in the language you select. region:Find pages published in a particular region. last update:Find pages updated within the time you specify. site or domain:Search one site (like wikipedia.org ) or limit your results to a domain like .edu, .org or .gov terms appearing:Search for terms in the whole page, page title, or web address, or links to the page you’re looking for. file type:Find pages in the format you prefer.like .pdf, .ps, .dwf, .kml, .kmz, .xls, .ppt, .doc, .rtf, or .swf. usage rights:Find pages you are free to use yourself.-&gt; license SafeSearch: Remove explicit results. explicitSomething that is explicit is expressed or shown clearly and openly, without any attempt to hide anything.sexually explicit scenes in films and books Advanced Image SearchTry these filters Image size: Find images by size or dimensions.like large, medium, icon, large than 400X300, … , large than 1024X768, large than 2 PM, … , large than 70 PM Aspect ratio: Find images that are a specific shape like tall, square, wide, or panoramic. Colors in image: Find full color, black and white, or transparent images. Or, search for images with a specific color. Type of image: Find a specific type of image like photos, clip art, or line drawings. Or, search for face or animated images. Region: Find images published in a certain region. Site or domain: Search one site like sfmoma.org. Or limit your results to a domain like .edu, .org, or .gov. SafeSearch: Remove explicit results. Learn more about SafeSearch. File type: Find images in a specific format, like JPG, GIF, PNG, BMP, SVG, WEBP, ICO, or RAW. Usage rights: Find images that have license info attached to them.like Creative commons license, Commercial &amp; other license clip art剪贴画（计算机程序或网站中供用户复制自用的图像和符号）pictures and symbols that are stored in computer programs or on websites for computer users to copy and add to their own documentsready-made pieces of computerized graphic art that can be used to decorate a document Advanced Video SearchTry these filters Language: Find videos in a specific language. Duration: Find videos that are 0–4 minutes, 4–20 minutes, or more than 20 minutes. Posting date: Find videos posted or updated within a specific time period, like within the past hour, day, week, month, or year. Quality: Limit results to HD videos. Site or domain: Search one site like youtube.com. Or, limit your results to a domain like .edu, .org, or .gov. Subtitles: Find videos with closed captions.SafeSearch: Remove explicit results. Advanced Book SearchTry these filters Search: Choose what to include in your search, like:Books with a limited preview or full view available.Books with a full view available only.Google eBooks only. Content: Limit results to a specific type, like books, magazines, or newspapers. Language: Find books written in a specific language. Title: Enter the title of a book. Author: Find books written by a certain author. Publisher: Limit results to a certain publisher. Subject: Find books about a specific topic. Publication date: Limit results to books published between specific dates. ISBN: Find a book by its International Standard Book Number (ISBN). ISSN: Find a book by its International Standard Serial Number (ISSN). View web pages cached in Google Search ResultsCached links show you what a web page looked like the last time Google visited it. Google Search Console is a web service by Google which allows webmasters to check indexing status, search queries, crawling errors and optimize visibility of their websites. Important: If you use Search Console for your webpage, use the URL Inspection Tool for debugging.About cached linksGoogle takes a snapshot of each web page as a backup in case the current page isn’t available. These pages then become part of Google’s cache. If you click a link that says “Cached,” you’ll see the version of the site that Google stored. If the website you’re trying to visit is slow or not responding, you can use the cached link instead. How to get to a cached linkOn your computer, do a Google search for the page you want to find.In search results, next to the site’s URL, click down arrow Down arrow or More and then Cached.To go to the live page, at the top, click current page.Tip: If there’s a cached page that you need removed from Google Search results, Search for the topic in other waysIf you don’t find the info you want, search for a topic in different ways to get a wide range of helpful info. Some things you might consider: Start with a general search, then get more specific. Use neutral terms. For example, search cats as pets instead of are cats good pets. Use “About this result” to check which of your search terms show up in each result (for example, “cats” and “good” versus “cats” and “bad”). Try different search terms. If you try multiple searches on a topic and don’t get many relevant results, the topic may be too new or may not have much written about it. You may need to wait and search again later. Explore results from multiple sources, not just the top result.","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Applied%20computing/google%20search/"},{"title":"","text":"live streaming settingslive streaming video settingTelevisions are of the following resolutions Standard-definition television (SDTV): 480i (NTSC-compatible digital standard employing two interlaced fields of 243 lines each) 576i (PAL-compatible digital standard employing two interlaced fields of 288 lines each) Enhanced-definition television (EDTV): 480p (720 × 480 progressive scan) 576p (720 × 576 progressive scan) High-definition television (HDTV): 720p (1280 × 720 progressive scan) 1080i (1920 × 1080 split into two interlaced fields of 540 lines) 1080p (1920 × 1080 progressive scan) Ultra-high-definition television (UHDTV): 4K UHD (3840 × 2160 progressive scan) 8K UHD (7680 × 4320 progressive scan) interlaced and progressivethe “i” in this example indicates an “interlaced” image scan. Besides interlaced there is also another method, known as “progressive” scan. Interlaced: In the first frame, only the odd numbers of vertical lines are displayed, the even lines stay blank. In the following frame, the even numbers of vertical lines will be displayed, while the odd lines stay blank. This method effectively halves the required bandwidth and reduces flicker. Also it allows for better adaption of different frame rates, as overlapping frames can be merged into each other.Progressive: Each frame carries the full amount of vertical lines and the full image information is displayed on every single frame. Whilst requiring more video bandwidth, it will allow for better image quality compared to the interlaced method. Luminance/chrominance systems in generalThe primary advantage of luma/chroma systems such as Y′UV, and its relatives Y′IQ and YDbDr, is that they remain compatible with black and white analog television (largely due to the work of Georges Valensi). The Y′ channel saves all the data recorded by black and white cameras, so it produces a signal suitable for reception on old monochrome displays. In this case, the U and V are simply discarded. If displaying color, all three channels are used, and the original RGB information can be decoded. Another advantage of Y′UV is that some of the information can be discarded in order to reduce bandwidth. The human eye has fairly little spatial sensitivity to color: the accuracy of the brightness information of the luminance channel has far more impact on the image detail discerned than that of the other two. Understanding this human shortcoming, standards such as NTSC and PAL reduce the bandwidth of the chrominance channels considerably. (Bandwidth is in the temporal domain, but this translates into the spatial domain as the image is scanned out.) Y’CbCr Color ModelIn the Y’CbCr color model, the three colors Red, Green, and Blue are not expressed as an individual value like it is done in RGB. Instead, the information will be encoded into a luminance value (Y) and two chrominance components (Cb, Cr) chromaChrominance (chroma or C for short) is the signal used in video systems to convey the color information of the picture (see YUV color model), separately from the accompanying luma signal (or Y’ for short). Chrominance is usually represented as two color-difference components: U = B′ − Y′ (blue − luma) and V = R′ − Y′ (red − luma). Chroma SubsamplingChroma Subsampling is a method to reduce the amount of data information of a Y’CrCb video signal. The perception of the human visual system (HVS) is less sensitive to color information than it is to changes in luminance, or brightness. So even if the human vision is capable of resolving differences in luminance in fine detail, it may not recognize if chroma information is greatly reduced in the resulting picture. Basically, a video signal that takes advantage of Chroma Subsampling will use less bandwidth because the color information in the signal has a lower resolution than the brightness information. Frame RateThe frame rate of a video signal defines how many consecutive images will be displayed in a finite amount of time, to result in a motion picture perception at the viewer. Usually the frame rate is expressed in frames per second (FPS). Good examples are the two major television standards NTSC and PAL, which are referring to a frame rate of 30 FPS (NTSC) and 25 FPS (PAL). Those frame rates originated from the frequency of the mains power supply in the counties in which each standard has been established. Modern theatrical film runs at 24 FPS. This is the case for both physical film and digital cinema systems. Video over EthernetIn a single digital video signal, there are 5 relevant factors to determine how much data is required: Video Resolution - Which is the size of the digital video image - (examples: 4k, 1080p, 720p, etc… ) Frame Rate - The speed at which the digital image is refreshed - (examples: 60hz, 30hz, etc… ) Color space - The gamut of possible colors that can be represented by the color encoding of a signal. (examples: RGB, YUV, Y’CrCb) Chroma Sub-sampling - The reduction of color information by using fewer bits per pixel at a cost of color space. (examples: 4:4:4, 4:2:2, 4:2:0) Color bit-depth - This is the binary number which represents the total number of possible values for each color component. In much like digital audio, the more bits we have the greater depth possible for the signal. (examples: 10-bit, 12-bit). exampleLet’s take one example of an uncompressed video signal that is a common signal format: 1080p, 60 Hz, YUV 4:2:2, 10-bit = 2.49 Gbps We can read this line as a combination of all of the parameters we have shown above. If we were to break this statement out into a series of sentences, we read this as a digital video signal that has a resolution of 1080p with a frame rate of 60Hz. It utilizes the YUV color space and 4:2:2 chroma sub-sampling for each YUV component. There are 10-bits used for each of the three color components listed. To calculate the bandwidth we start with the resolution of the image: 1920 * 1080 (for 1080p) = 2,073,600 pixels in an image of this size. Then multiply by the refresh rate: 2,073,600 * 60Hz = 124,416,000 total pixels (per second) You can think of this number 124,416,000 as the number of pixels a display will have shown in one second of video. Now we need to remember that each pixel is made up of three components, each of them are of a certain bit depth. Furthermore we might be “sub sampling” a set of pixels to help reduce the data footprint with a small trade off in image detail. We start with the Chroma subsampling ratio of 4:2:2. This ratio is applied over a 2 x 4 block of pixels or a total of 8 pixels as we previously learned. Thus we first need to take our total number of pixels and divide them by 8: 124,416,000 pixels / 8 pixels in our 2x4 row = 15,552,000 blocks of 8 pixels. Now we calculate what we know regarding our Chroma subsampling ratio and apply that to the number of blocks making sure to include our 10-bit color bit-depth per component: Y’ = 8 pixels * 10-bits = 80 total bits for Y’ for each 8 pixel block U = 4 pixels * 10-bits = 40 total bits for U for each 8 pixel block V = 4 pixels * 10-bits = 40 total bits for V for each 8 pixel block Now we add those all together and multiply that against the number of blocks to finally arrive at the total amount of data required for this video signal: 160 bits for each 8 pixel block * 15,552,000 blocks = 2,488,320,000 total bits required for one second of video. Or more nicely expressed: 2.49 Gbps Compression — Intra-Frame: M-JPEG, JPEG 2000 Interframe: MPEG-4 part 10 / H.264 (AVC), H.265 (HVEC) Latency As low as 33 msec 200 msec or higher Bandwidth High Low Compression &lt; 25:1 &gt; 25:1 Processing Symmetric Asymmetric Error Tolerance High Low (Reference Frames) broadband speedA broadband speed of 2 Mbit/s or more is recommended for streaming standard-definition video, for example to a Roku, Apple TV, Google TV or a Sony TV Blu-ray Disc Player. 5 Mbit/s is recommended for high-definition content and 9 Mbit/s for ultra-high-definition content. Streaming media storage size is calculated from the streaming bandwidth and length of the media using the following formula (for a single user and file):storage size in megabytes is equal to length (in seconds) × bit rate (in bit/s) / (8 × 1024 × 1024). For example, one hour of digital video encoded at 300 kbit/s (this was a typical broadband video in 2005 and it was usually encoded in 320 × 240 resolution) will be: (3,600 s × 300,000 bit/s) / (8 × 1024 × 1024) requires around 128 MB of storage. Using a multicast protocol the server sends out only a single stream that is common to all users. Therefore, such a stream would only use 300 kbit/s of server bandwidth. youtubeRecommended bitrate setting ranges are based on video ingestion resolution and frame rate. These recommendations are the same for AV1 and HEVC. an estimation on the usage in different resolutions240p: 225MB per hour360p: 315MB per hour480p: 562.5MB per hour720p at 30FPS: 1237.5MB (1.24GB) per hour720p at 60FPS: 1856.25MB (1.86GB) per hour1080p at 30FPS: 2.03GB per hour1080p at 60FPS: 3.04GB per hour1440p (2K) at 30FPS: 4.28GB per hour1440p (2K) at 60FPS: 6.08GB per hour2160p (4K) at 30FPS: 10.58GB per hour2160p (4K) at 60FPS: 15.98GB per hour These calculations are based on YouTubes data and has been calculated according to this. For 480p video (standard quality), YouTube recommends a bitrate between 500 and 2,000Kbps. Let’s average these two extremes and use 1,250Kbps. 1,250Kbps (kilobits per second) divided by 1,000 gives us 1.25Mbps (megabits per second). Since there are eight bits in one byte, 1.25Mbps divided by eight equals roughly 0.156 megabytes per second of video. Multiplying this by 60 seconds means that 480p video uses around 9.375MB of data per minute on YouTube. “9.375MB per minute times 60 minutes in an hour results in roughly 562.5MB of data per hour of YouTube streaming at 480p.”","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Applied%20computing/streaming/"},{"title":"Regex 正则表达式","text":"正则表达式（Regular Expression简写为Regex），又称为规则表达式，它是一种强大的文本匹配模式，其用于在字符串中查找匹配符合特定规则的子串。 正则表达式由一些普通字符（比如英文字母，数字）和元字符（代表特定含义）组成。 正则表达式作为一个字符模板，在字符串中匹配一个或多个符合特定规则的子串。 基本匹配正则表达式其实就是在执⾏搜索时的格式，它由⼀些字⺟和数字组合⽽成。 例如：⼀个正则表达式 the ，它表示⼀个规则：由字⺟t 开始，接着是h ，再接着是e 。 “the” =&gt; The fat cat sat on the mat. 正则表达式123匹配字符串123。它逐个字符的与输⼊的正则表达式做⽐较。 正则表达式是⼤⼩写敏感的，所以The不会匹配the。 “The” =&gt; The fat cat sat on the mat. \\ 转义字符，常用于转义元字符反斜线 \\ 在表达式中⽤于转义紧跟其后的字符。⽤于指定 { } [ ] / \\ + * . $ ^ | ? 这些特殊字符。 \\s搜索空格，这个小写的s有“空格”之意。此模式不仅匹配空格，还包括回车符、制表符、换页符和换行符等字符。你可以将其看做与字符集[\\r\\t\\f\\n\\v]类似。 \\S搜索非空格。使用它将不再匹配回车符、制表符、换页符和换行符等字符，也可用否定字符集[^\\r\\t\\f\\n\\v]表示。 空白字符有：空格(‘ ’)、换页(‘\\f’)、换行(‘\\n’)、回车(‘\\r’)、水平制表符(‘\\t’)、垂直制表符(‘\\v’)六个。 \\f 匹配换页符 换页: \\f = U+000c在打印机上,加载下一页.在某些终端模拟器中,它会清除屏幕. \\n 匹配换行符\\r 匹配回车符 终端中，回车效果是输出回到本行行首，结果可能会将这一行之前的输出覆盖掉 在文本文件中在Windows平台上，换行符是回车符（CR，Carriage Return）和换行符（LF，Line Feed）的组合（即CRLF）；在Unix/Linux平台上，换行符只是一个LF字符；在MacOS上，换行符是一个CR字符。 setting -&gt; eol -&gt; \\n (LF) \\t 匹配制表符\\v 匹配垂直制表符 垂直制表: \\v = U+000b将表单放在下一行标签位置. 一般文本编辑器对\\r \\v \\f 的显示是没有控制效果的。 qita\\w \\d \\s 元字符元字符. 可匹配任意(除了换行符\\n)的单字符，意思就是. 可以代表任意（除了换行符\\n）的单字符。 定位符单词边界\\b与\\B符号\\b 是指一个单词边界，比如空白字符和标点符号、其他符号（如-）、换行符等。符号\\B 表示非单词边界。 开始位置^与结束位置$符号^ 表示匹配的子串在行首，符号$ 表示匹配的子串在行尾。 限定符用于限定一个子表达式出现的次数，一共6 种 字符 含义 * 匹配前面的子表达式零次或多次 + 匹配前面的子表达式一次或多次 ? 匹配前面的子表达式零次或一次 {n} 匹配前面的子表达式n次 {n,} 匹配前面的子表达式至少n次 {n,m} 匹配前面的子表达式n 到m 次 符号* 模式串ab*c，表示字符a和c 之间需要出现0 次或多次字符b。 符号+ 模式串ab+c，表示字符a和c 之间需要出现1 次或多次字符b，即至少出现1次字符b。 符号? 模式串ab?c，表示字符a和c 之间需要出现0 次或1次字符b。 符号{n}和{n,}和{n,m}ab{3}c：符号b 出现的次数必须是3ab{3,}c：符号b 出现的次数必须大于等于3ab{3,5}c：符号b 出现的次数必须在3 和5之间，包括3 和 5 不常用贪婪匹配和懒惰匹配*和 + 限定符都是贪婪的，因为它们会尽可能多的匹配文字，只有在它们的后面加上一个 ? 就可以实现非贪婪或最小匹配。 在正则表达式中，可用贪婪（greedy）匹配查找符合正则表达式的字符串的最长的可能字符串，并将其作为匹配结果返回。而懒惰（lazy）匹配是查找符合正则表达式的字符串的最短的可能字符串。 正则表达式默认采⽤贪婪匹配模式，在该模式下意味着会匹配尽可能⻓的⼦串。 我们可以使⽤ ? 将贪婪匹配模式转化为惰性匹配模式。 “.at” =&gt; The fat cat sat on the mat. “.?at” =&gt; The fat cat sat on the mat. lizi: 玩儿吃鸡游戏，晚上一起上游戏，干嘛呢？打游戏啊 玩.*游戏玩儿吃鸡游戏，晚上一起上游戏，干嘛呢？打游戏 玩.*?游戏玩儿吃鸡游戏 逻辑或|符号 | 写在两个子表达式之间表示逻辑或的意思。 字符簇[]写在中括号[] 内的多个字符代表逻辑或的意思。 模式串a[bef]c，表示a和c中间的字符必须是b或e或f。 当符号^ 写在中括号[] 内时，表示逻辑非的意思。 模式串a[^bef]c，表示a和c中间的字符不能是b或e或f。 符号- 写在中括号[]，表示范围的意思： 示例 含义 [a-z] 表示a 到z 之间的任意字符 [A-Z] 表示A 到Z 之间的任意字符 [0-9] 表示0 到9 之间的任意数字，含义同\\d [^0-9] 表示任意非数字，含义同\\D [A-Za-z0-9_] 表示任意字母，数字或下划线，含义同\\w [^A-Za-z0-9_] 表示任意非字母，非数字，非下划线，含义同\\W [ \\f\\r\\t\\n] 表示任意的空白字符，含义同\\s [^ \\f\\r\\t\\n] 表示任意的非空白字符，含义同\\S 字符组合()写在小括号()中的多个字符，会被看成一个整体。 (…) 中包含的内容将会被看成⼀个整体，和数学中⼩括号 () 的作⽤相同。例如, 表达式 (ab)匹配连续出现 0 或更多个 ab 的字符串 。 如果没有使⽤ (…) ，那么表达式 ab 将匹配连续出现 0 或更多个 b 。 再⽐如之前说的 {} 是⽤来表示前⾯⼀个字符出现指定次数。 但如果在 {} 前加上特征标群(…) 则表示整个标群内的字符重复 n 次。 我们还可以在 () 中⽤ 或字符 | 表示或。 例如， (c|g|p)ar 匹配 car 或 gar 或 par “(c|g|p)ar” =&gt; The car is parked in the garage. (abc){2,}abc出现的次数必须大于等于2 捕获组使用捕获组复用模式 正则表达式中的字符串模式多次出现，手动重复输入这些正则表达式是浪费时间的。有一个更好的方法可以用于你的字符串中有多个重复子串时进行指定，这个方法就是捕获组。 用括号”()”可以定义捕获组，用于查找重复的子串，即把会重复的字符串模式的正则表达式放在括号内。 要指定重复字符串出现的位置，可以使用反斜线”&quot; + 数字的形式。该数字从1开始，并随着用括号定义的捕获组数量而增加。比如\\1匹配正则表达式中通过括号定义的第一个捕获组。 使用捕获组来匹配字符串中连续出现3次的数字，每个数字由空格分隔，正则表达式为 (\\d+)\\s\\1\\s\\1 \\1代表捕获组(\\d+)内正则表达式匹配的结果，而不是正则表达式\\d+。因此，这个正则表示可以匹配123 123 123，但是不能匹配120 210 220。 （注意：是先捕获后复用，即先执行表达式得到结果之后再复用） 在替换中使用捕获组复用模式如果我们在搜索替换中希望保留搜索字符串中的某些字符串作为替换字符串的一部分，可以使用”$”符号访问搜索字符串中的捕获组。 比如，在搜索正则表达式中的捕获组为capture groups，则替换的正则表达式中可以直接使用$1复用搜索正则表达式中的捕获组capture groups。 在VSCode中，如果想要把项目中所有的HTML标签中的h改为H，搜索正则表达式&lt;h(\\d)&gt;就可以查找出所有标签，如&lt;h1&gt;、&lt;h2&gt;、&lt;h3&gt;、&lt;h4&gt;等，其中还定义了捕获组(\\d)。 替换的正则表达式&lt;H$1&gt;使用$1复用了搜索正则表达式中定义的捕获组(\\d)，如下图所示。 (pattern)匹配 pattern 并获取这一匹配。所获取的匹配可以从产生的 Matches 集合得到，在VBScript 中使用 SubMatches 集合，在JScript 中则使用 $0…$9 属性。要匹配圆括号字符，请使用 ‘(‘ 或 ‘)‘。 (?:pattern)匹配 pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。 这在使用 “或” 字符 (|) 来组合一个模式的各个部分是很有用。例如， ‘industr(?:y|ies) 就是一个比 ‘industry|industries’ 更简略的表达式。 (?=pattern)正向肯定预查（look ahead positive assert），在任何匹配pattern的字符串开始处匹配查找字符串。 这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。 例如，”Windows(?=95|98|NT|2000)”能匹配”Windows2000”中的”Windows”，但不能匹配”Windows3.1”中的”Windows”。 预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。 | (exp) | 匹配exp并捕获到自动命名的组中| (?&lt;name&amp;&gt;exp) | 匹配exp并捕获到名为name的组中| (?:exp) | 匹配exp但是不捕获匹配的文本| (?=exp) | 匹配exp前面的位置| (?&lt;=exp) | 匹配exp后面的位置 (?&lt;name&gt;exp) 匹配exp并捕获到名为name的组中 *? 重复任意次，但尽可能少重复a.ba.?b将正则表达式应用于aabab，前者会匹配整个字符串aabab，后者会匹配aab和ab两个字符串 +? 重复1次或多次，但尽可能少重复?? 重复0次或1次，但尽可能少重复{M,N}? 重复M到N次，但尽可能少重复{M,}? 重复M次以上，但尽可能少重复","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/Regex%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"},{"title":"","text":"VS2015发布安装包1编译工程 编写并调试你的工程，保证工程能编译运行 2查看框架 项目 -&gt; xx属性(P)… -&gt; 应用程序 查看目标框架（修改后请重新编译工程以确保可行性） 生成 生成 -&gt; 配置选择release 创建数字签名证书（已有可跳过此步） 使用OFFICE工具下的VBA项目的数字证书工具生成一个证书 或自行搜索数字证书生成方法 签名 签名 -&gt; 选中为clickonce清单签名 -&gt; 从存储区选择 发布准备 发布 -&gt; 发布文件夹位置（生成的安装包的位置） 发布 -&gt; 应用程序文件（查看需要打包的文件） 发布 -&gt; 系统必备组件（选择需要安装的必备组件） 发布 -&gt; 选项（设置发布语言，发行者名称等） 发布 -&gt; 发布版本（就是版本号） 准备系统必备组件（以 .NET Framework 4.5.2为例） 发布 -&gt; 系统必备组件 选中 创建用于安装系统必备组件的安装程序 选中 Microsoft .NET Framework 4.5.2 (x86 和 x64) 选中 从与我的应用程序相同的位置下载系统必备组件 准备系统必备组件安装包（以 .NET Framework 4.5.2为例） 点击立即发布 在错误列表中查看缺失的安装包 从网上下载对应的离线安装包 微软下载https://www.microsoft.com/en-us/search/DownloadResults.aspx?FORM=DLC&amp;ftapplicableproducts=%5e%22AllDownloads%22&amp;sortby=+weight&amp;q=developer+software 准备系统必备组件安装包（以 .NET Framework 4.5.2为例） 离线安装包下载完后 把英文版安装包（ENU）拷贝到 %VS安装目录%\\SDK\\Bootstrapper\\Packages\\DotNetFX452\\ 把语言包（CNS等）拷贝到 %VS安装目录%\\SDK\\Bootstrapper\\Packages\\DotNetFX452\\zh-Hans（或其他对应语言）\\ *默认VS安装目录为 C:\\Program Files (x86)\\Microsoft Visual Studio 14.0 准备系统必备组件安装包（以 .NET Framework 4.5.2为例） 再次点击立即发布 如果有以下警告，可参照下一步 也可以忽略警告，跳过下一步 特性值不匹配警告（以 .NET Framework 4.5.2为例） 右键英文版安装包 -&gt; 属性 -&gt; 数字签名 -&gt; 选中列表 -&gt; 详细信息 -&gt; 查看证书 -&gt; 详细信息 -&gt; 公钥 -&gt; 复制内容到文本文档并删除空格 右键编辑英文版安装包位置下 %VS安装目录%\\SDK\\Bootstrapper\\Packages\\DotNetFX452\\product.xml 用上述公钥内容替换掉PublicKey的值 中文语言包安装包操作方法同上 发布 点击立即发布 发布成功后，你就可以把整个发布文件夹打包发给别人安装了 Application Files 文件夹内存放有所有历史版本的信息，你可以把旧版本的文件夹删除，只保留最新的版本文件夹 dotnetfx452 文件夹内存放的是系统必备组件安装包 setup.exe 就是安装程序","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/Visual%20Studio%202015%E5%8F%91%E5%B8%83%E5%AE%89%E8%A3%85%E5%8C%85/"},{"title":"markdown","text":"1.1. 目录 create table of content 1. asdf 1.1. 目录 1.2. 标题 1.2.1. asdfs asdf 1.2.2. adsff 1.3. 段落文本 asdf 1.4. code blocks Fenced Code Blocks 1.5. 列表 1.6. quote 引用 1.7. link 链接 image Reference-style Links Footnotes 1.8. table 表格 update section numberremove section numberupdate table of content 1.2. 标题 Use the Find All References (Shift+Alt+F12) command to find all locations in the current workspace where a Markdown header or link is referenced: 1.2.1. asdfs asdf Tired of accidentally breaking links when you change a Markdown header? Try using Rename Symbol (F2) instead. After you type the new header name and press Enter, VS Code will update the header as well as automatically updating all links to that header: 1.2.2. adsff1.3. 段落文本 asdfSmart selection uses the following commands: Expand: Shift+Alt+Right Shrink: Shift+Alt+Left ctrl + bctrl + ialt + s helloasfd hhadslfjo I need &lt;mark&gt;to highl&lt;/mark&gt;ight these ==very important words==. hellow his is something,asdfasdflj asdflj asdflj adswflj asdf asdf lasdfj asdf,aswdf asdfolj asdfasdfaasdfhello asdfh asdhfhelloagfasdf,hello asdf asdf.a asdfqo weasdf To create paragraphs, use a blank line to separate one or more lines of text. asdf asdflj asldfj ldfjas ,asdf asdflj asldfj ldfjas ,asdf asdflj asldfj ldfjas ,asdf asdflj asldfj ldfjas,asdf asdflj asldfj ldfjas ,asdf asdflj asldfj ldfjas ,asdf asdflj asldfj ldfjas ,asdf asdflj asldfj ldfjas ,asdf asdflj asldfj ldfjas ,asdf asdflj asldfj ldfjas ,asdf. asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf &emsp;&emsp;hello helo hello helo hello helo hello helo hello helo hello helo hello helo hello helo hello helo hello helo hello helo hello helo hello helo hello helo hello helo hello helo hello helo &emsp;&emsp;中文中文中文中文中文中文中文中文中文中文中文中文中文中文中文中文中文中文中文中文中文中文中文中文中文中文中文中文中文中文中文中文中文中文中文 1.4. code blocks Unless the paragraph is in a list, don’t indent paragraphs with spaces or tabs. 中文阿斯蒂芬 阿三地方了 orgies 中文阿斯蒂芬 阿三地方了 orgies 中文阿斯蒂芬 阿三地方了 orgies 中文阿斯蒂芬 阿三地方了orgies Code blocks are normally indented four spaces or one tab. When they’re in a list, indent them eight spaces or two tabs. &lt;html&gt; &lt;head&gt; &lt;title&gt;Test&lt;/title&gt; &lt;/head&gt; To denote a word or phrase as code, enclose it in backticks (`). At the command prompt, type nano wesfdal sdaf asdf fas. Fenced Code Blocks12345{ &quot;firstName&quot;: &quot;John&quot;, &quot;lastName&quot;: &quot;Smith&quot;, &quot;age&quot;: 25} &gt; To fix violations of this rule, use a consistent style (either indenting or code fences). 12345{ &quot;firstName&quot;: &quot;John&quot;, &quot;lastName&quot;: &quot;Smith&quot;, &quot;age&quot;: 25} 1.5. 列表 Unless the paragraph is in a list, don’t indent paragraphs with spaces or tabs. To add another element in a list while preserving the continuity of the list, indent the element four spaces or one tab, as shown in the following examples. asdf asdf asdf asdfhelo asdf asdfl asdflj asdfl j asdflj asdfl j lasdfj asdf asdfl asdflj asdfl j asdflj asdfl j lasdfj asdf asdfl asdflj asdfl j asdflj asdfl j lasdfj asdf asdfl asdflj asdfl j asdflj asdfl j lasdfj asdf, dsf asdfl asdfl lasdfj asdf hello world ni hao ni hao nihao nihao asdf asdf asdf asdfv asdf asdfa asg asdf asdf asdf asdf asdf asdf asdf anotthre table asdf asdfl asdfl asdf asdf asdf asdf asdf asf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf hehloo asdf asdf asdf asdf asdf asdf asdf asdf asdf sdf asdf sdaf asdf asdf asdf asdf asdf dfas asdf asdf asdf hehehe aoefqwfh asdf asdf asdf asdf asdgv asdf asdf asdfa sdaf asdf asdf asdf asdfa sdaf asd asdfa sdaf asd asdfa sdaf asd asdfa sdaf asd asdfa sdaf asd asdfa sdaf asd asdfa sdaf asd asdfa sdaf asd asdfa sdaf asd asdfa sdaf asd asdfa sdaf asd asdfa sdaf asd asdfa sdaf asd asdfa sdaf asd asdf qwrg asdgf Write the press release Update the website Contact the media 1.6. quote 引用 asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf lolasdfasdf For compatibility, put blank lines before and after blockquotes. asdfhk asdf asdf asdf asdf asdf . asdf asdf asdf asdf asdf asdfh asdf 1.7. link 链接liucf2010@sina.com https://www.baidu.com http://www.example.com My favorite sarch engine is Duck Duck go. My favorite search engine is Duck Duck Go. image Path completionsPath completions help with create links to files and images. These paths are shown automatically by IntelliSense as you type the path of an image or link, and can also be manually requested by using Ctrl+Space.Paths starting with / are resolved relative to the current workspace root, while paths staring with ./ or without any prefix are resolved relative to the current file. Path suggestions are automatically shown when you type / or can be manually invoked by using Ctrl+Space. To add a link to an image, enclose the Markdown for the image in brackets, and then add the link in parentheses. You can Drag and drop a file from VS Code’s Explorer or from your operating system into a Markdown editor. Start by dragging a file from VS Code’s Explorer over your Markdown code and then hold down Shift to start dropping it into the file. If you prefer using the keyboard, you can also Copy and paste a file or image data into a Markdown editor. With automatic Markdown link updating, VS Code will automatically update Markdown links whenever a linked to file is moved or renamed. You can enable this feature with the markdown.updateLinksOnFileMove.enabled setting. Path IntelliSense can also help you link to headers within the current file or within another Markdown file. Start the path with # to see completions for all the headers in the file (depending on your settings, you may need to use Ctrl+Space to see these): asdf Accept one of these completions to insert the full link to that header, even if it’s in another file: sdafqg I love supporting the EFF.This is the Markdown Guide.See the section on code. Reference-style Linkstishi hobbit-hole In a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole, filled with the endsof worms and an oozy smell, nor yet a dry, bare, sandy hole with nothing in it to sit down on or toeat: it was a hobbit-hole, and that means comfort. link &lt;a href=&quot;https://www.example.com/my great page&quot;&gt;link&lt;/a&gt; FootnotesHere’s a simple footnote,[^1] and here’s a longer one.[^bignote] [^1]: This is the first footnote.[^bignote]: Here’s one with multiple paragraphs and code. Indent paragraphs to include them in the footnote. `{ my code }` Add as many paragraphs as you like. 1.8. table 表格 left center right 1 2 3 45 768 987","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/markdown%E5%AD%A6%E4%B9%A0/"},{"title":"git wiki","text":"git config –global http.proxy 127.0.0.1:10809git config –global https.proxy 127.0.0.1:10809 git config –global http.sslVerify “false” Commits are shown in green as 5-character IDs, and they point to their parents. Branches are shown in orange, and they point to particular commits. The current branch is identified by the special reference HEAD, which is “attached” to that branch. In this image, the five latest commits are shown, with ed489 being the most recent. main (the current branch) points to this commit, while stable (another branch) points to an ancestor of main’s commit. How does Git know what branch you’re currently on? It keeps a special pointer called HEAD. git basicTypically, you’ll want to start making changes and committing snapshots of those changes into your repository each time the project reaches a state you want to record. each file in your working directory can be in one of two states: tracked or untracked. Tracked files are files that were in the last snapshot, as well as any newly staged files; they can be unmodified, modified, or staged.In short, tracked files are files that Git knows about. Untracked files are everything else — any files in your working directory that were not in your last snapshot and are not in your staging area. When you first clone a repository, all of your files will be tracked and unmodified because Git just checked them out and you haven’t edited anything. As you edit files, Git sees them as modified, because you’ve changed them since your last commit. As you work, you selectively stage these modified files and then commit all those staged changes, and the cycle repeats. Checking the Status of Your FilesThe main tool you use to determine which files are in which state is the git status command. If you run this command directly after a clone, you should see something like this: 1234567891011121314151617$ git statusOn branch mainYour branch is ahead of 'origin/main' by 1 commit. (use &quot;git push&quot; to publish your local commits)Changes to be committed: (use &quot;git restore --staged &lt;file&gt;...&quot; to unstage) new file: _posts/category level1/category level2/git wiki.mdChanges not staged for commit: (use &quot;git add &lt;file&gt;...&quot; to update what will be committed) (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory) modified: _posts/category level1/category level2/temp002.mdUntracked files: (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed) assets/images/git wiki/ Tracking New FilesIn order to begin tracking a new file, you use the command git add. To begin tracking the README file, you can run this: $ git add README Staging Modified Files “Changes not staged for commit” — which means that a file that is tracked has been modified in the working directory but not yet staged. To stage it, you run the git add command. git add is a multipurpose command — you use it to begin tracking new files, to stage files, and to do other things like marking merge-conflicted files as resolved. It may be helpful to think of it more as “add precisely this content to the next commit” rather than “add this file to the project”. Git stages a file exactly as it is when you run the git add command. If you commit now, the version of CONTRIBUTING.md as it was when you last ran the git add command is how it will go into the commit, not the version of the file as it looks in your working directory when you run git commit. If you modify a file after you run git add, you have to run git add again to stage the latest version of the file: Ignoring FilesOften, you’ll have a class of files that you don’t want Git to automatically add or even show you as being untracked. These are generally automatically generated files such as log files or files produced by your build system. In such cases, you can create a file listing patterns to match them named .gitignore. Setting up a .gitignore file for your new repository before you get going is generally a good idea so you don’t accidentally commit files that you really don’t want in your Git repository. The rules for the patterns you can put in the .gitignore file are as follows: Blank lines or lines starting with # are ignored. Standard glob patterns work, and will be applied recursively throughout the entire working tree. You can start patterns with a forward slash / to avoid recursivity. You can end patterns with a forward slash / to specify a directory. You can negate a pattern by starting it with an exclamation point !. 1234567891011121314151617# ignore all .a files*.a# but do track lib.a, even though you're ignoring .a files above!lib.a# only ignore the TODO file in the current directory, not subdir/TODO/TODO# ignore all files in any directory named buildbuild/# ignore doc/notes.txt, but not doc/server/arch.txtdoc/*.txt# ignore all .pdf files in the doc/ directory and any of its subdirectoriesdoc/**/*.pdf Viewing Your Staged and Unstaged ChangesIf the git status command is too vague for you — you want to know exactly what you changed, not just which files were changed — you can use the git diff command. Committing Your ChangesNow that your staging area is set up the way you want it, you can commit your changes. Remember that anything that is still unstaged — any files you have created or modified that you haven’t run git add on since you edited them — won’t go into this commit. They will stay as modified files on your disk. Alternatively, you can type your commit message inline with the commit command by specifying it after a -m flag, like this: $ git commit -m &quot;Story 182: fix benchmarks for speed&quot; Removing FilesTo remove a file from Git, you have to remove it from your tracked files (more accurately, remove it from your staging area) and then commit. The git rm command does that, and also removes the file from your working directory so you don’t see it as an untracked file the next time around. If you simply remove the file from your working directory, it shows up under the “Changes not staged for commit” Then, if you run git rm, it stages the file’s removal: Another useful thing you may want to do is to keep the file in your working tree but remove it from your staging area. In other words, you may want to keep the file on your hard drive but not have Git track it anymore. This is particularly useful if you forgot to add something to your .gitignore file and accidentally staged it, like a large log file or a bunch of .a compiled files. To do this, use the –cached option: $ git rm --cached README You can pass files, directories, and file-glob patterns to the git rm command. That means you can do things such as: $ git rm log/\\*.log Note the backslash \\ in front of the *. This is necessary because Git does its own filename expansion in addition to your shell’s filename expansion. This command removes all files that have the .log extension in the log/ directory. If you rename a file in Git, no metadata is stored in Git that tells it you renamed the file. However, Git is pretty smart about figuring that out after the fact $ git mv file_from file_to However, this is equivalent to running something like this: $ mv README.md README$ git rm README.md$ git add READMEGit figures out that it’s a rename implicitly, so it doesn’t matter if you rename a file that way or with the mv command. you can use any tool you like to rename a file, and address the add/rm later, before you commit. github git vsCode proxy setting vsCode setting 123&quot;http.proxyAuthorization&quot;: null,&quot;http.proxy&quot;: &quot;http://127.0.0.1:8000&quot;,&quot;https.proxy&quot;: &quot;http://127.0.0.1:8000&quot; git bash command 12git config -global http.proxy http://127.0.0.1:8000git config -global https.proxy http://127.0.0.1:8000 basic commands The four commands above copy files between the working directory, the stage (also called the index), and the history (in the form of commits). git add files copies files (at their current state) to the stage. git commit saves a snapshot of the stage as a commit. git reset – files unstages files; that is, it copies files from the latest commit to the stage. Use this command to “undo” a git add files. You can also git reset to unstage everything. git checkout -- *files* copies files from the stage to the working directory. Use this to throw away local changes. ou can use git reset -p, git checkout -p, or git add -p instead of (or in addition to) specifying particular files to interactively choose which hunks copy. It is also possible to jump over the stage and check out files directly from the history or commit files without staging first. git commit -a is equivalent to running git add on all filenames that existed in the latest commit, and then running git commit. git commit *files* creates a new commit containing the contents of the latest commit, plus a snapshot of files taken from the working directory. Additionally, files are copied to the stage.git checkout HEAD -- *files* copies files from the latest commit to both the stage and the working directory. git diffThere are various ways to look at differences between commits. Below are some common examples. Any of these commands can optionally take extra filename arguments that limit the differences to the named files. git commitWhen you commit, git creates a new commit object using the files from the stage and sets the parent to the current commit. It then points the current branch to this new commit. In the image below, the current branch is main. Before the command was run, main pointed to ed489. Afterward, a new commit, f0cec, was created, with parent ed489, and then main was moved to the new commit. This same process happens even when the current branch is an ancestor of another. Below, a commit occurs on branch stable, which was an ancestor of main, resulting in 1800b. Afterward, stable is no longer an ancestor of main. To join the two histories, a merge (or rebase) will be necessary. Sometimes a mistake is made in a commit, but this is easy to correct with git commit –amend. When you use this command, git creates a new commit with the same parent as the current commit. (The old commit will be discarded if nothing else references it.) git branchgit branch name will create a new branch named “name”. Creating branches just creates a new tag pointing to the currently checked out commit. git checkoutgit checkout has many uses, but the main one is to switch between branches.For example, to switch from master branch to dev branch, I would type git checkout dev. The checkout command is used to copy files from the history (or stage) to the working directory, and to optionally switch branches. When a filename is not given but the reference is a (local) branch, HEAD is moved to that branch (that is, we “switch to” that branch), and then the stage and working directory are set to match the contents of that commit. Any file that exists in the new commit (a47c3 below) is copied; any file that exists in the old commit (ed489) but not in the new one is deleted; and any file that exists in neither is ignored. When a filename is not given and the reference is not a (local) branch — say, it is a tag, a remote branch, a SHA-1 ID, or something like main~3 — we get an anonymous branch, called a detached HEAD. This is useful for jumping around the history. Say you want to compile version 1.6.6.1 of git. You can git checkout v1.6.6.1 (which is a tag, not a branch), compile, install, and then switch back to another branch, say git checkout main. However, committing works slightly differently with a detached HEAD; this is covered below. When a filename (and/or -p) is given, git copies those files from the given commit to the stage and the working directory. For example, git checkout HEAD~ foo.c copies the file foo.c from the commit called HEAD~ (the parent of the current commit) to the working directory, and also stages it. (If no commit name is given, files are copied from the stage.) Note that the current branch is not changed. When HEAD is detached, commits work like normal, except no named branch gets updated. (You can think of this as an anonymous branch.) Once you check out something else, say main, the commit is (presumably) no longer referenced by anything else, and gets lost. Note that after the command, there is nothing referencing 2eecb. In addition to checking out branches, you can also checkout individual commits. git checkout bb92e0egit commitNot a good idea to make commits while in a detached HEAD state. git checkout bb92e0egit branch branchname1git commit You can combine git branch and git checkout into a single command by typing git checkout -b branchname. This will create the branch if it does not already exist and immediately check it out.when you commit, the HEAD is the new branch. undo commitgit resetgit reset will move HEAD and the current branch back to wherever you specify, abandoning any commits that may be left behind. This is useful to undo a commit that you no longer need. This command is normally used with one of three flags: “–soft”, “–mixed”, and “–hard”. The soft and mixed flags deal with what to do with the work that was inside the commit after you reset, and you can read about it here. Since this visualization cannot graphically display that work, only the “–hard” flag will work on this site. The ref “HEAD^” is usually used together with this command. “HEAD^” means “the commit right before HEAD. “HEAD^^” means “two commits before HEAD”, and so on. !!Note that you must never use git reset to abandon commits that have already been pushed and merged into the origin. This can cause your local repository to become out of sync with the origin. Don’t do it unless you really know what you’re doing. The reset command moves the current branch to another position, and optionally updates the stage and the working directory. It also is used to copy files from the history to the stage without touching the working directory. If a commit is given with no filenames, the current branch is moved to that commit, and then the stage is updated to match this commit. If –hard is given, the working directory is also updated. If –soft is given, neither is updated. If a commit is not given, it defaults to HEAD. In this case, the branch is not moved, but the stage (and optionally the working directory, if –hard is given) are reset to the contents of the last commit. git revertTo undo commits that have already been pushed and shared with the team, we cannot use the git reset command. Instead, we have to use git revert. git revert will create a new commit that will undo all of the work that was done in the commit you want to revert. combine branchesgit mergegit merge will create a new commit with two parents. The resulting commit snapshot will have the all of the work that has been done in both branches. If there was no divergence between the two commits, git will do a “fast-forward” method merge. A merge creates a new commit that incorporates changes from other commits. Before merging, the stage must match the current commit. The trivial case is if the other commit is an ancestor of the current commit, in which case nothing is done. The next most simple is if the current commit is an ancestor of the other commit. This results in a fast-forward merge. The reference is simply moved, and then the new commit is checked out. Otherwise, a “real” merge must occur. You can choose other strategies, but the default is to perform a “recursive” merge, which basically takes the current commit (ed489 below), the other commit (33104), and their common ancestor (b325c), and performs a three-way merge. The result is saved to the working directory and the stage, and then a commit occurs, with an extra parent (33104) for the new commit. “git merge” used to allow merging two branches that have no common base by default, which led to a brand new history of an existing project created and then get pulled by an unsuspecting maintainer, which allowed an unnecessary parallel history merged into the existing project. The command has been taught not to allow this by default, with an escape hatch –allow-unrelated-histories option to be used in a rare event that merges histories of two projects that started their lives independently. git rebasegit rebase will take the commits on this branch and “move” them so that their new “base” is at the point you specify. The reason I put “move” in quotations because this process actually generates brand new commits with completely different IDs than the old commits, and leaves the old commits where they were. For this reason, you never want to rebase commits that have already been shared with the team you are working with. A rebase is an alternative to a merge for combining multiple branches. Whereas a merge creates a single commit with two parents, leaving a non-linear history, a rebase replays the commits from the current branch onto another, leaving a linear history. In essence, this is an automated way of performing several cherry-picks in a row. The above command takes all the commits that exist in topic but not in main (namely 169a6 and 2c33a), replays them onto main, and then moves the branch head to the new tip. Note that the old commits will be garbage collected if they are no longer referenced. remote server Showing Your RemotesTo see which remote servers you have configured, you can run the git remote command. It lists the shortnames of each remote handle you’ve specified. If you’ve cloned your repository, you should at least see origin — that is the default name Git gives to the server you cloned from: 12345678910$ git clone https://github.com/schacon/ticgitCloning into 'ticgit'...remote: Reusing existing pack: 1857, done.remote: Total 1857 (delta 0), reused 0 (delta 0)Receiving objects: 100% (1857/1857), 374.35 KiB | 268.00 KiB/s, done.Resolving deltas: 100% (772/772), done.Checking connectivity... done.$ cd ticgit$ git remoteorigin You can also specify -v, which shows you the URLs that Git has stored for the shortname to be used when reading and writing to that remote: $ git remote -vorigin https://github.com/schacon/ticgit (fetch)origin https://github.com/schacon/ticgit (push) Adding Remote RepositoriesWe’ve mentioned and given some demonstrations of how the git clone command implicitly adds the origin remote for you. Here’s how to add a new remote explicitly. To add a new remote Git repository as a shortname you can reference easily, run git remote add &lt;shortname&gt; &lt;url&gt;: 12345678$ git remoteorigin$ git remote add pb https://github.com/paulboone/ticgit$ git remote -vorigin https://github.com/schacon/ticgit (fetch)origin https://github.com/schacon/ticgit (push)pb https://github.com/paulboone/ticgit (fetch)pb https://github.com/paulboone/ticgit (push) if you want to fetch all the information that Paul has but that you don’t yet have in your repository, you can run git fetch pb: 12345678 $ git fetch pbremote: Counting objects: 43, done.remote: Compressing objects: 100% (36/36), done.remote: Total 43 (delta 10), reused 31 (delta 5)Unpacking objects: 100% (43/43), done.From https://github.com/paulboone/ticgit * [new branch] master -&gt; pb/master * [new branch] ticgit -&gt; pb/ticgit Paul’s master branch is now accessible locally as pb/master — you can merge it into one of your branches, or you can check out a local branch at that point if you want to inspect it. git fetchAs you just saw, to get data from your remote projects, you can run: $ git fetch &lt;remote&gt; git fetch will update all of the “remote tracking branches” in your local repository. Remote tracking branches are tagged in grey. It’s important to note that the git fetch command only downloads the data to your local repository — it doesn’t automatically merge it with any of your work or modify what you’re currently working on. You have to merge it manually into your work when you’re ready. git pullA git pull is a two step process that first does a git fetch, and then does a git merge of the remote tracking branch associated with your current branch. If you have no current branch, the process will stop after fetching. If your current branch is set up to track a remote branch, you can use the git pull command to automatically fetch and then merge that remote branch into your current branch. If you have a tracking branch set up as demonstrated in the last section, either by explicitly setting it or by having it created for you by the clone or checkout commands, git pull will look up what server and branch your current branch is tracking, fetch from that server and then try to merge in that remote branch. Tracking branches are local branches that have a direct relationship to a remote branch. If you’re on a tracking branch and type git pull, Git automatically knows which server to fetch from and which branch to merge in. If you clone a repository, the command automatically adds that remote repository under the name “origin” by default, the git clone command automatically sets up your local master branch to track the remote master branch (or whatever the default branch is called) you can set up other tracking branches if you wish — ones that track branches on other remotes, or don’t track the master branch. The simple case is the example you just saw, running git checkout -b &lt;branch&gt; &lt;remote&gt;/&lt;branch&gt;. $ git checkout -b sf origin/serverfix Branch sf set up to track remote branch serverfix from origin.Switched to a new branch ‘sf’Now, your local branch sf will automatically pull from origin/serverfix. If you already have a local branch and want to set it to a remote branch you just pulled down, or want to change the upstream branch you’re tracking, you can use the -u or --set-upstream-to option to git branch to explicitly set it at any time. $ git branch -u origin/serverfix Branch serverfix set up to track remote branch serverfix from origin. If you want to see what tracking branches you have set up, you can use the -vv option to git branch. This will list out your local branches with more information including what each branch is tracking and if your local branch is ahead, behind or both. 1234567hint: If you are planning on basing your work on an upstreamhint: branch that already exists at the remote, you may need tohint: run &quot;git fetch&quot; to retrieve it.hint:hint: If you are planning to push out a new local branch thathint: will track its remote counterpart, you may want to usehint: &quot;git push -u&quot; to set the upstream config as you push. 1234$ git pushfatal: The current branch newbrachname has no upstream branch.To push the current branch and set the remote as upstream, use git push --set-upstream origin newbrachname 12345$ git branch -vv iss53 7e424c3 [origin/iss53: ahead 2] Add forgotten brackets master 1ae2a45 [origin/master] Deploy index fix* serverfix f8674d9 [teamone/server-fix-good: ahead 3, behind 1] This should do it testing 5ea463a Try something new So here we can see that our iss53 branch is tracking origin/iss53 and is “ahead” by two, meaning that we have two commits locally that are not pushed to the server.We can also see that our master branch is tracking origin/master and is up to date.Next we can see that our serverfix branch is tracking the server-fix-good branch on our teamone server and is ahead by three and behind by one, meaning that there is one commit on the server we haven’t merged in yet and three commits locally that we haven’t pushed.Finally we can see that our testing branch is not tracking any remote branch. It’s important to note that these numbers are only since the last time you fetched from each server. This command does not reach out to the servers, it’s telling you about what it has cached from these servers locally. If you want totally up to date ahead and behind numbers, you’ll need to fetch from all your remotes right before running this. You could do that like this: $ git fetch --all; git branch -vv git pushA git push will find the commits you have on your local branch that the corresponding branch on the origin server does not have, and send them to the remote repository. By default, all pushes must cause a fast-forward merge on the remote repository. If there is any divergence between your local branch and the remote branch, your push will be rejected. In this scenario, you need to pull first and then you will be able to push again. If you have a branch named serverfix that you want to work on with others, you can push it up the same way you pushed your first branch. Run git push &lt;remote&gt; &lt;branch&gt;: $ git push origin serverfix You can also do git push origin serverfix:serverfix, which does the same thing — it says, “Take my serverfix and make it the remote’s serverfix.” You can use this format to push a local branch into a remote branch that is named differently. If you didn’t want it to be called serverfix on the remote, you could instead run git push origin serverfix:awesomebranch to push your local serverfix branch to the awesomebranch branch on the remote project. exampleyou have a Git server on your network at git.ourcompany.com. If you clone from this, Git’s clone command automatically names it origin for you, pulls down all its data, creates a pointer to where its master branch is, and names it origin/master locally. Git also gives you your own local master branch starting at the same place as origin’s master branch, so you have something to work from. If you do some work on your local master branch, and, in the meantime, someone else pushes to git.ourcompany.com and updates its master branch, then your histories move forward differently. Also, as long as you stay out of contact with your origin server, your origin/master pointer doesn’t move. To synchronize your work with a given remote, you run a git fetch &lt;remote&gt; command (in our case, git fetch origin). This command looks up which server “origin” is (in this case, it’s git.ourcompany.com), fetches any data from it that you don’t yet have, and updates your local database, moving your origin/master pointer to its new, more up-to-date position. you have another internal Git server that is used only for development by one of your sprint teams. This server is at git.team1.ourcompany.com. You can add it as a new remote reference to the project you’re currently working on by running the git remote add command.Name this remote teamone, which will be your shortname for that whole URL. Now, you can run git fetch teamone to fetch everything the remote teamone server has that you don’t have yet. Because that server has a subset of the data your origin server has right now, Git fetches no data but sets a remote-tracking branch called teamone/master to point to the commit that teamone has as its master branch. It’s important to note that when you do a fetch that brings down new remote-tracking branches, you don’t automatically have local, editable copies of them. In other words, in this case, you don’t have a new serverfix branch — you have only an origin/serverfix pointer that you can’t modify. To merge this work into your current working branch, you can run git merge origin/serverfix. If you want your own serverfix branch that you can work on, you can base it off your remote-tracking branch: $ git checkout -b serverfix origin/serverfixBranch serverfix set up to track remote branch serverfix from origin.Switched to a new branch ‘serverfix’This gives you a local branch that you can work on that starts where origin/serverfix is. How to create a new repository which is a clone of another repository There’s probably several ways to do this, including a smarter one, but this is how I would do this: Make a new repo on Github called SecondProject.Locally clone your MyfirstProject, either from disk or from Github. Then use git pull on the branches you need to move to the second repo. git remote set-url origin git@github.com:yourname/SecondProject.git Push it.Note that the clone retains a shared history with MyfirstProject, which is useful if you change your mind about the “never merge” bit. 2Clone your MyfirstProject to your local machine.Delete .git foldergit initPublish your new project 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test (newbrachname)$ cd ../test1lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test1$ git clone git@github.com:lucfe2010/images-1.gitCloning into 'images-1'...remote: Enumerating objects: 13, done.remote: Counting objects: 100% (13/13), done.remote: Compressing objects: 100% (9/9), done.remote: Total 13 (delta 2), reused 9 (delta 2), pack-reused 0Receiving objects: 100% (13/13), 160.86 KiB | 285.00 KiB/s, done.Resolving deltas: 100% (2/2), done.lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test1$ cd images-1/lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test1/images-1 (master)$ git remote -vorigin git@github.com:lucfe2010/images-1.git (fetch)origin git@github.com:lucfe2010/images-1.git (push)lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test1/images-1 (master)$ git branch -vv* master 0a5aeaa [origin/master] Upload by PicGolcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test1/images-1 (master)$ git remote remove originlcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test1/images-1 (master)$ git remote -vlcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test1/images-1 (master)$ git branch -vv* master 0a5aeaa Upload by PicGolcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test1/images-1 (master)$ git remote add origin git@github.com:lucfe2010/test.gitlcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test1/images-1 (master)$ git remote -vorigin git@github.com:lucfe2010/test.git (fetch)origin git@github.com:lucfe2010/test.git (push)lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test1/images-1 (master)$ git branch -v* master 0a5aeaa Upload by PicGolcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test1/images-1 (master)$ git pushfatal: The current branch master has no upstream branch.To push the current branch and set the remote as upstream, use git push --set-upstream origin masterTo have this happen automatically for branches without a trackingupstream, see 'push.autoSetupRemote' in 'git help config'.lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test1/images-1 (master)$ git push -u origin masterTotal 0 (delta 0), reused 0 (delta 0), pack-reused 0remote: remote: Create a pull request for 'master' on GitHub by visiting:remote: https://github.com/lucfe2010/test/pull/new/masterremote:To github.com:lucfe2010/test.git * [new branch] master -&gt; masterbranch 'master' set up to track 'origin/master'.lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test1/images-1 (master)$ git remote -vorigin git@github.com:lucfe2010/test.git (fetch)origin git@github.com:lucfe2010/test.git (push)lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test1/images-1 (master)$ git branch -vv* master 0a5aeaa [origin/master] Upload by PicGo---lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1$ cd test3lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test3$ git clone git@github.com:lucfe2010/test.gitCloning into 'test'...remote: Enumerating objects: 11, done.remote: Counting objects: 100% (11/11), done.remote: Compressing objects: 100% (7/7), done.remote: Total 11 (delta 2), reused 11 (delta 2), pack-reused 0Receiving objects: 100% (11/11), 160.61 KiB | 309.00 KiB/s, done.Resolving deltas: 100% (2/2), done.lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test3$ git remote -vfatal: not a git repository (or any of the parent directories): .gitlcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test3$ cd testlcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test3/test (newbrachname)$ git remote -vorigin git@github.com:lucfe2010/test.git (fetch)origin git@github.com:lucfe2010/test.git (push)lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test3/test (newbrachname)$ git branch -vv* newbrachname 6c2d445 [origin/newbrachname] 4253lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test3/test (newbrachname)$ git remote set-url origin git@github.com:lucfe2010/images-1.gitlcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test3/test (newbrachname)$ git remote -vorigin git@github.com:lucfe2010/images-1.git (fetch)origin git@github.com:lucfe2010/images-1.git (push)lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test3/test (newbrachname)$ git branch -vv* newbrachname 6c2d445 [origin/newbrachname] 4253lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test3/test (newbrachname)$ git pushEverything up-to-date---lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test4$ git clone git@github.com:lucfe2010/test.gitCloning into 'test'...remote: Enumerating objects: 11, done.remote: Counting objects: 100% (11/11), done.remote: Compressing objects: 100% (7/7), done.remote: Total 11 (delta 2), reused 11 (delta 2), pack-reused 0Receiving objects: 100% (11/11), 160.61 KiB | 261.00 KiB/s, done.Resolving deltas: 100% (2/2), done.lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test4$ cd testlcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test4/test (newbrachname)$ git remote -vorigin git@github.com:lucfe2010/test.git (fetch)origin git@github.com:lucfe2010/test.git (push)lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test4/test (newbrachname)$ git branch -vv* newbrachname 6c2d445 [origin/newbrachname] 4253lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test4/test (newbrachname)$ git remote add myrepo git@github.com:lucfe2010/images-1.gitlcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test4/test (newbrachname)$ git remote -vmyrepo git@github.com:lucfe2010/images-1.git (fetch)myrepo git@github.com:lucfe2010/images-1.git (push)origin git@github.com:lucfe2010/test.git (fetch)origin git@github.com:lucfe2010/test.git (push)lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test4/test (newbrachname)$ git branch -vv* newbrachname 6c2d445 [origin/newbrachname] 4253lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test4/test (newbrachname)$ git branch myblcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test4/test (newbrachname)$ git checkout mybSwitched to branch 'myb'lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test4/test (myb) $ git fetch myreporemote: Enumerating objects: 3, done.remote: Counting objects: 100% (3/3), done.remote: Compressing objects: 100% (3/3), done.remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0Unpacking objects: 100% (3/3), 56.66 KiB | 118.00 KiB/s, done.From github.com:lucfe2010/images-1 * [new branch] main -&gt; myrepo/main * [new branch] master -&gt; myrepo/master * [new branch] myb -&gt; myrepo/myb * [new branch] newbrachname -&gt; myrepo/newbrachnamelcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test4/test (myb)$ git branch -u myrepo/mybbranch 'myb' set up to track 'myrepo/myb'.lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test4/test (myb) $ git branch -vv* myb 6c2d445 [myrepo/myb] 4253 newbrachname 6c2d445 [origin/newbrachname] 4253lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test4/test (myb) $ git pullAlready up to date.---lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test5$ git clone git@github.com:lucfe2010/test.gitCloning into 'test'...remote: Enumerating objects: 11, done.remote: Counting objects: 100% (11/11), done.remote: Compressing objects: 100% (7/7), done.remote: Total 11 (delta 2), reused 11 (delta 2), pack-reused 0Receiving objects: 100% (11/11), 160.61 KiB | 302.00 KiB/s, done.Resolving deltas: 100% (2/2), done.lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test5$ cd testlcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test5/test (newbrachname)$ git remote -vorigin git@github.com:lucfe2010/test.git (fetch)origin git@github.com:lucfe2010/test.git (push)lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test5/test (newbrachname)$ git branch -v* newbrachname 6c2d445 4253lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test5/test (newbrachname)$ git remote add myrepo git@github.com:lucfe2010/images-1.gitlcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test5/test (newbrachname)$ git remote -vmyrepo git@github.com:lucfe2010/images-1.git (fetch)myrepo git@github.com:lucfe2010/images-1.git (push)origin git@github.com:lucfe2010/test.git (fetch)origin git@github.com:lucfe2010/test.git (push)lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test5/test (newbrachname)$ git fetch myreporemote: Enumerating objects: 3, done.remote: Counting objects: 100% (3/3), done.remote: Compressing objects: 100% (3/3), done.remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0Unpacking objects: 100% (3/3), 56.66 KiB | 118.00 KiB/s, done.From github.com:lucfe2010/images-1 * [new branch] main -&gt; myrepo/main * [new branch] master -&gt; myrepo/master * [new branch] myb -&gt; myrepo/myb * [new branch] newbrachname -&gt; myrepo/newbrachnamelcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test5/test (newbrachname)$ git checkout -b myb myrepo/mybSwitched to a new branch 'myb'branch 'myb' set up to track 'myrepo/myb'.lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test5/test (myb) $ git branch -vv* myb 6c2d445 [myrepo/myb] 4253 newbrachname 6c2d445 [origin/newbrachname] 4253lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test5/test (myb) $ git remote -vmyrepo git@github.com:lucfe2010/images-1.git (fetch)myrepo git@github.com:lucfe2010/images-1.git (push)origin git@github.com:lucfe2010/test.git (fetch)origin git@github.com:lucfe2010/test.git (push)lcf@DESKTOP-LCF MINGW64 ~/Documents/lucfe_website_test/test_git_1/test1/test5/test (myb) $ git pullAlready up to date.","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/git%20wiki/"},{"title":"","text":"vs code shortcut1查找替换Ctrl+F | 查找Ctrl+H | 查找替换 F3 / Shift+F3 | Find next/previousAlt+Enter | Select all occurences of Find match Ctrl+D | Add selection to next Find match下一个匹配的也被选中 Ctrl+Shift+L | Select all occurrences of current selection同时选中所有匹配的Ctrl+F2 | Select all occurrences of current word Ctrl+K Ctrl+D | Move last selection to next Find match将光标移动到，搜索结果中的下一个 Ctrl+Shift+F | 整个文件夹中查找 file to include or excludepath segment匹配符： * to match one or more characters in a path segment? to match on one character in a path segment ** to match any number of path segments ,including none {} to group conditions e.g. {**/*.html,**/*.txt} matches all html and txt files [] to declare a range of characters to match e.g., example.[0-9] to match on example.0,example.1, … 2显示相关 全屏：F11 zoomIn/zoomOut：Ctrl + =/Ctrl + - 侧边栏显/隐：Ctrl+B 侧边栏4大功能显示： Show Explorer Ctrl+Shift+E Show Search Ctrl+Shift+F Show Git Ctrl+Shift+G Show Debug Ctrl+Shift+D Ctrl+Shift+M Show Problems panel Ctrl+` Show integrated terminal 输出Show Output Ctrl+Shift+U 预览markdown Ctrl+Shift+V Alt+Z Toggle word wrap Shift+Alt+0 Toggle editor layout (horizontal/vertical) ctrl k + ctrl s = 打开快捷键一览表。 ctrl + , user settting Ctrl+M Toggle Tab moves focus 6编辑器与窗口管理 新建文件 Ctrl+NCtrl+F4, Ctrl+W Close editorCtrl+Shift+T Reopen closed editor历史打开文件之间切换 Ctrl+Tab，Alt+Left，Alt+Right Ctrl+Shift+PgUp / PgDn Move editor left/right Ctrl+K P Copy path of active file show command palette主命令框 Ctrl+Shift+P模式。或 F1 在Ctrl+P下输入&gt;又可以回到主命令框 Ctrl+Shift+P模式。 quick open, go to file直接输入文件名，快速打开文件? 列出当前可执行的动作! 显示Errors或Warnings，也可以Ctrl+Shift+M跳转到行数，也可以Ctrl+G直接进入 @ 跳转到symbol（搜索变量或者函数），也可以Ctrl+Shift+O直接进入 # Show all Symbols，也可以Ctrl+T Rich languages editing重命名：比如要修改一个方法名，可以选中后按F2，输入新的名字，回车，会发现所有的文件都修改过了。 跳转到下一个Error或Warning：当有多个错误时可以按F8逐个跳转 查看diff 在explorer里选择文件右键 Set file to compare，然后需要对比的文件上右键选择Compare with ‘file_name_you_chose’. Ctrl+Space 或 Ctrl+I Trigger suggestion Ctrl+. Quick Fix 代码格式化：Shift+Alt+F，或Ctrl+Shift+P后输入format code Ctrl+K Ctrl+F Format selection 重构代码跳转到定义处：F12定义处缩略图：只看一眼而不跳转过去Alt+F12 列出所有的引用：Shift+F12同时修改本文件中所有匹配的：Ctrl+F12 editing KEYS ACTION Ctrl + [ / ] 代码行缩进 Ctrl + Shift + [ / ] 折叠打开代码块 Ctrl+K Ctrl+0 Fold (collapse) all regions Ctrl+K Ctrl+J Unfold (uncollapse) all regions Ctrl + X 如果不选中，默认复制或剪切一整行 Ctrl + C 如果不选中，默认复制或剪切一整行 Alt + Up / Down 上下移动一行 Shift+Alt+Up 或 Shift+Alt+Down 向上向下复制一行 Ctrl+Enter 在当前行下边插入一行 Ctrl+Shift+Enter 在当前行上方插入一行 光标相关 KEYS ACTION Home 移动到行首： End 移动到行尾： Ctrl+End 移动到文件结尾： Ctrl+Home 移动到文件开头： Ctrl+Shift+\\ 移动到后半个括号 Ctrl+L Select current line 选中当前行 Shift+End 选择从光标到行尾 Shift+Home 选择从行首到光标处 Ctrl + Shift + K 删除光标所在行 Ctrl + Left / Right 一个单词一个单词的移动光标 Shift + Left / Right 一个字母一个字母的加入选择 Ctrl + Shift + Left / Right 一个单词一个单词的加入选择 Shift + Up / Down 一行行的加入选择 Shift + Alt + Left / Right Shrink/expand selection（光标所在单词，文档高亮显示相同的） Ctrl + Alt + Left / Right 不常用移动窗口到右侧 multi cursor KEYS ACTION Alt+Click Multi-Cursor：可以连续选择多处，然后一起修改，添加cursor Ctrl+Alt+Down 或 Ctrl+Alt+Up Insert cursor above / below Ctrl + Shift + Alt + (arrow key) Column (box) selection Shift+Alt+I Insert cursor at end of each line selected Ctrl+U 回退上一个光标操作 Ctrl+↑ / ↓ Scroll line up/down Alt+PgUp / PgDn Scroll page up/down, not change the cusor location commentCtrl+K Ctrl+C Add line commentCtrl+K Ctrl+U Remove line commentCtrl+/ Toggle line commentShift+Alt+A Toggle block comment 8","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/vs%20code%20shortcut/"},{"title":"","text":"vbs操作txt文本文件常用方法创建文件 dim fso, fset fso = server.CreateObject(“Scripting.FileSystemObject”)set f = fso.CreateTextFile(“C:\\test.txt”, true) ‘第二个参数表示目标文件存在时是否覆盖f.Write(“写入内容”)f.WriteLine(“写入内容并换行”)f.WriteBlankLines(3) ‘写入三个空白行（相当于在文本编辑器中按三次回车）f.Close()set f = nothingset fso = nothing 打开并读文件 dim fso, fset fso = server.CreateObject(“Scripting.FileSystemObject”)set f = fso.OpenTextFile(“C:\\test.txt”, 1, false) ‘第二个参数 1 表示只读打开，第三个参数表示目标文件不存在时是否创建f.Skip(3) ‘将当前位置向后移三个字符f.SkipLine() ‘将当前位置移动到下一行的第一个字符，注意：无参数response.Write f.Read(3) ‘从当前位置向后读取三个字符，并将当前位置向后移三个字符response.Write f.ReadLine() ‘从当前位置向后读取直到遇到换行符（不读取换行符），并将当前位置移动到下一行的第一个字符，注意：无参数response.Write f.ReadAll() ‘从当前位置向后读取，直到文件结束，并将当前位置移动到文件的最后if f.atEndOfLine then response.Write(“一行的结尾！”)end ifif f.atEndOfStream then response.Write(“文件的结尾！”)end iff.Close()set f = nothingset fso = nothing 打开并写文件 dim fso, fset fso = server.CreateObject(“Scripting.FileSystemObject”)set f = fso.OpenTextFile(“C:\\test.txt”, 2, false) ‘第二个参数 2 表示重写，如果是 8 表示追加f.Write(“写入内容”)f.WriteLine(“写入内容并换行”)f.WriteBlankLines(3) ‘写入三个空白行（相当于在文本编辑器中按三次回车）f.Close()set f = nothingset fso = nothing 判断文件是否存在 dim fsoset fso = server.CreateObject(“Scripting.FileSystemObject”)if fso.FileExists(“C:\\test.txt”) then response.Write(“目标文件存在”)else response.Write(“目标文件不存在”)end ifset fso = nothing 移动文件 dim fsoset fso = server.CreateObject(“Scripting.FileSystemObject”)call fso.MoveFile(“C:\\test.txt”, “D:\\test111.txt”) ‘两个参数的文件名部分可以不同set fso = nothing 复制文件 dim fsoset fso = server.CreateObject(“Scripting.FileSystemObject”)call fso.CopyFile(“C:\\test.txt”, “D:\\test111.txt”) ‘两个参数的文件名部分可以不同set fso = nothing 删除文件 dim fsoset fso = server.CreateObject(“Scripting.FileSystemObject”)fso.DeleteFile(“C:\\test.txt”)set fso = nothing 创建文件夹 dim fsoset fso = server.CreateObject(“Scripting.FileSystemObject”)fso.CreateFolder(“C:\\test”) ‘目标文件夹的父文件夹必须存在set fso = nothing 判断文件夹是否存在 dim fsoset fso = server.CreateObject(“Scripting.FileSystemObject”)if fso.FolderExists(“C:\\Windows”) then response.Write(“目标文件夹存在”)else response.Write(“目标文件夹不存在”)end ifset fso = nothing 删除文件夹 dim fsoset fso = server.CreateObject(“Scripting.FileSystemObject”)fso.DeleteFolder(“C:\\test”) ‘文件夹不必为空set fso = nothing","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/vbs%E6%93%8D%E4%BD%9Ctxt%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/"},{"title":"","text":"#基本语法YAML 使用键值对的形式记录信息，标准格式是 key: value键: 值#基本规则大小写敏感使用缩进表示层级关系禁止使用 tab 缩进，只能使用空格键缩进长度没有限制，只要元素对齐就表示这些元素属于一个层级使用 # 表示注释字符串可以不用引号标注（但是建议你最好还是加上引号） 三种数据结构 scalar 纯量scalar 不可再分割的量，这个你无需了解，因为了解了也没什么卵用。 map 散列表键值对的集合，只要是出于同于缩进级别下的键值对，都可以称为一个 map map 有两种写法，最简单，也是最常用的就是前面的那种写法，如 hexo-tag-dplayer: cdn: value default: value等价于 {hexo-tag-dplayer: {cdn: value, default: value}}#或者是hexo-tag-dplayer: {cdn: value, default: value} list 数组划重点，这是本篇文章最有用的一节 list 的表示形式同样有两种 key: value1 value2或者 key: [value1, value2]map 和 list 可以相互嵌套使用","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/yaml%20wiki/"},{"title":"","text":"cpu缓存如果数据写入 Cache 之后，内存与 Cache 相对应的数据将会不同，这种情况下 Cache 和内存数据都不一致了，于是我们肯定是要把 Cache 中的数据同步到内存里的。 写直达 保持内存与 Cache 一致性最简单的方式是，把数据同时写入内存和 Cache 中，这种方法称为写直达（Write Through）。 如果数据已经在 Cache 里面，先将数据更新到 Cache 里面，再写入到内存里面；如果数据没有在 Cache 里面，就直接把数据更新到内存里面。 写回 为什么缓存没命中时，还要定位 Cache Block？这是因为此时是要判断数据即将写入到 cache block 里的位置，是否被「其他数据」占用了此位置，如果这个「其他数据」是脏数据，那么就要帮忙把它写回到内存。 在多核心的 CPU 里，每个核心都有各自的 L1/L2 Cache，而 L3 Cache 是所有核心共享使用的。 CPU 都是多核的，由于 L1/L2 Cache 是多个核心各自独有的，那么会带来多核心的缓存一致性（Cache Coherence） 的问题 要保证做到下面这 2 点： 第一点，某个 CPU 核心里的 Cache 数据更新时，必须要传播到其他核心的 Cache，这个称为写传播（Write Propagation）；第二点，某个 CPU 核心里对数据的操作顺序，必须在其他核心看起来顺序是一样的，这个称为事务的串行化（Transaction Serialization）。 C 号核心先收到了 A 号核心更新数据的事件，再收到 B 号核心更新数据的事件，因此 C 号核心看到的变量 i 是先变成 100，后变成 200。而如果 D 号核心收到的事件是反过来的，则 D 号核心看到的是变量 i 先变成 200，再变成 100，虽然是做到了写传播，但是各个 Cache 里面的数据还是不一致的。保证 C 号核心和 D 号核心都能看到相同顺序的数据变化，比如变量 i 都是先变成 100，再变成 200，这样的过程就是事务的串行化。 要实现事务串行化，要做到 2 点： CPU 核心对于 Cache 中数据的操作，需要同步给其他 CPU 核心；要引入「锁」的概念，如果两个 CPU 核心里有相同数据的 Cache，那么对于这个 Cache 数据的更新，只有拿到了「锁」，才能进行对应的数据更新。 写传播的原则就是当某个 CPU 核心更新了 Cache 中的数据，要把该事件广播通知到其他核心。最常见实现的方式是总线嗅探（Bus Snooping）。 总线嗅探只是保证了某个 CPU 核心的 Cache 更新数据这个事件能被其他 CPU 核心知道，但是并不能保证事务串行化。 基于总线嗅探机制实现了事务串行化，也用状态机机制降低了总线带宽压力，这个协议就是 MESI 协议，这个协议就做到了 CPU 缓存一致性。 MESI 协议其实是 4 个状态单词的开头字母缩写，分别是： Modified，已修改Exclusive，独占Shared，共享Invalidated，已失效 「已修改」状态就是我们前面提到的脏标记，代表该 Cache Block 上的数据已经被更新过，但是还没有写到内存里。而「已失效」状态，表示的是这个 Cache Block 里的数据已经失效了，不可以读取该状态的数据。 「独占」和「共享」状态都代表 Cache Block 里的数据是干净的，也就是说，这个时候 Cache Block 里的数据和内存里面的数据是一致性的。 「独占」和「共享」的差别在于，独占状态的时候，数据只存储在一个 CPU 核心的 Cache 里，而其他 CPU 核心的 Cache 没有该数据。 在「独占」状态下的数据，如果有其他核心从内存读取了相同的数据到各自的 Cache ，那么这个时候，独占状态下的数据就会变成共享状态。 「共享」状态代表着相同的数据在多个 CPU 核心的 Cache 里都有，所以当我们要更新 Cache 里面的数据的时候，不能直接修改，而是要先向所有的其他 CPU 核心广播一个请求，要求先把其他核心的 Cache 中对应的 Cache Line 标记为「无效」状态，然后再更新当前 Cache 里面的数据。 例子 当 A 号 CPU 核心从内存读取变量 i 的值，数据被缓存在 A 号 CPU 核心自己的 Cache 里面，此时其他 CPU 核心的 Cache 没有缓存该数据，于是标记 Cache Line 状态为「独占」，此时其 Cache 中的数据与内存是一致的；然后 B 号 CPU 核心也从内存读取了变量 i 的值，此时会发送消息给其他 CPU 核心，由于 A 号 CPU 核心已经缓存了该数据，所以会把数据返回给 B 号 CPU 核心。在这个时候， A 和 B 核心缓存了相同的数据，Cache Line 的状态就会变成「共享」，并且其 Cache 中的数据与内存也是一致的；当 A 号 CPU 核心要修改 Cache 中 i 变量的值，发现数据对应的 Cache Line 的状态是共享状态，则要向所有的其他 CPU 核心广播一个请求，要求先把其他核心的 Cache 中对应的 Cache Line 标记为「无效」状态，然后 A 号 CPU 核心才更新 Cache 里面的数据，同时标记 Cache Line 为「已修改」状态，此时 Cache 中的数据就与内存不一致了。如果 A 号 CPU 核心「继续」修改 Cache 中 i 变量的值，由于此时的 Cache Line 是「已修改」状态，因此不需要给其他 CPU 核心发送消息，直接更新数据即可。如果 A 号 CPU 核心的 Cache 里的 i 变量对应的 Cache Line 要被「替换」，发现 Cache Line 状态是「已修改」状态，就会在替换前先把数据同步到内存。 小数乘 2 取整法，将十进制中的小数部分乘以 2 作为二进制的一位，然后继续取小数部分乘以 2 作为下一位，直到不存在小数为止。 进程运行状态（Running）：该时刻进程占用 CPU；就绪状态（Ready）：可运行，由于其他进程处于运行状态而暂时停止运行；阻塞状态（Blocked）：该进程正在等待某一事件发生（如等待输入/输出操作的完成）而暂时停止运行，这时，即使给它CPU控制权，它也无法运行；当然，进程还有另外两个基本状态： 创建状态（new）：进程正在被创建时的状态；结束状态（Exit）：进程正在从系统中消失时的状态； NULL -&gt; 创建状态：一个新进程被创建时的第一个状态；创建状态 -&gt; 就绪状态：当进程被创建完成并初始化后，一切就绪准备运行时，变为就绪状态，这个过程是很快的；就绪态 -&gt; 运行状态：处于就绪状态的进程被操作系统的进程调度器选中后，就分配给 CPU 正式运行该进程；运行状态 -&gt; 结束状态：当进程已经运行完成或出错时，会被操作系统作结束状态处理；运行状态 -&gt; 就绪状态：处于运行状态的进程在运行过程中，由于分配给它的运行时间片用完，操作系统会把该进程变为就绪态，接着从就绪态选中另外一个进程运行；运行状态 -&gt; 阻塞状态：当进程请求某个事件且必须等待时，例如请求 I/O 事件；阻塞状态 -&gt; 就绪状态：当进程要等待的事件完成时，它从阻塞状态变到就绪状态； 线程 同一个进程内多个线程之间可以共享代码段、数据段、打开的文件等资源，但每个线程各自都有一套独立的寄存器和栈，这样可以确保线程的控制流是相对独立的。 线程与进程最大的区别在于：线程是调度的基本单位，而进程则是资源拥有的基本单位。所以，所谓操作系统的任务调度，实际上的调度对象是线程，而进程只是给线程提供了虚拟内存、全局变量等资源。 当进程拥有多个线程时，这些线程会共享相同的虚拟内存和全局变量等资源，这些资源在上下文切换时是不需要修改的；","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20organization/operating_system/"},{"title":"3d print","text":"","link":"/0005%20Applied%20science/%E5%B7%A5%E7%A8%8B%E4%B8%8E%E6%8A%80%E6%9C%AF%E7%A7%91%E5%AD%A6%20Engineering%20and%20technology/%E6%9C%BA%E6%A2%B0%E5%B7%A5%E7%A8%8B%20Mechanical%20engineering/3d%20print/"},{"title":"","text":"汽车A plug-in hybrid electric vehicle (PHEV) is a hybrid electric vehicle whose battery pack can be recharged by plugging a charging cable into an external electric power source, in addition to internally by its on-board internal combustion engine-powered generator.A battery electric vehicle (BEV), pure electric vehicle, only-electric vehicle, fully electric vehicle or all-electric vehicle is a type of electric vehicle (EV) that exclusively uses chemical energy stored in rechargeable battery packs, with no secondary source of propulsion (a hydrogen fuel cell, internal combustion engine, etc.). “sport utility cars \\ off-road 4x4 \\ SUV /////The earliest type of passenger vehicle is called an “”off-roader””, “”four-by-four”” or “”four-wheel drive””. Off-road vehicles usually more focussed on off-road capability than SUVs and crossover SUVs (often compromising their on-road ride quality or handling)运动型多功能车\\Crossover SUV跨界SUV”“The terms “”unibody”” and “”unit-body”” are short for “”unitized body””, “”unitary construction””, or alternatively (fully) integrated body and frame/chassis. It is defined as:[10] A type of body/frame construction in which the body of the vehicle, its floor plan and chassis form a single structure. Such a design is generally lighter and more rigid than a vehicle having a separate body and frame.”multi purpose cars \\ MPV \\ Minivan Vans with sliding rear doors“executive cars luxury cars \\ Executive \\ Large \\\\\\ Executive，即行政级轿车”D-segment large cars \\ Large family car \\ Mid-sizeC-segment medium cars \\ Small family car \\ CompactA-segment mini cars B-segment small cars \\ Supermini \\Minicompact SubcompactSports cars are designed to emphasize handling, performance, or the thrill of driving. Trailer拖车，挂车","link":"/0005%20Applied%20science/%E5%B7%A5%E7%A8%8B%E4%B8%8E%E6%8A%80%E6%9C%AF%E7%A7%91%E5%AD%A6%20Engineering%20and%20technology/%E4%BA%A4%E9%80%9A%E8%BF%90%E8%BE%93%E5%B7%A5%E7%A8%8B%20Transportation/%E6%B1%BD%E8%BD%A6wiki/"},{"title":"diy cnc","text":"","link":"/0005%20Applied%20science/%E5%B7%A5%E7%A8%8B%E4%B8%8E%E6%8A%80%E6%9C%AF%E7%A7%91%E5%AD%A6%20Engineering%20and%20technology/%E6%9C%BA%E6%A2%B0%E5%B7%A5%E7%A8%8B%20Mechanical%20engineering/DIY%20CNC/"},{"title":"","text":"谐波变速器 打印机针式打印机右图是LQ-1600K打印头的工作原理图，它是拍合式打印头。 从图可以看出，平时打印针受复位弹簧的弹力作用处于离开驱动线圈状态，当驱动线圈通过电流时，激励打印针尾部的衔铁向驱动线圈运动，同时带动打印针沿着多层导向板向色带撞击，使色带和打印纸压向卷简。这时，色带上的油墨被打印针的撞击渗透到打印纸上，留下一个小圆点。当驱动线圈中的电流消失后，打印针被复位弹簧复位回到原始状态，完成一次打印动作。 喷墨打印机是将彩色液体油墨经喷嘴变成细小微粒喷到印纸上,有的喷墨打印机有三个或四个打印喷头，以便打印黄、品红青黑四色;有的是共用一个喷头，分四色喷印。 激光打印机 硒鼓表面先由充电极充电，使其获得一定电位，之后经载有图文映像信息的激光束的曝光，便在硒鼓的表面形成静电潜像，经过磁刷显影器显影，潜像即转变成可见的墨粉像，在经过转印区时，在转印电极的电场作用下，墨粉便转印到普通纸上，最后经预热板及高温热滚定影，即在纸上熔凝出文字及图像。 充电光鼓表面光导体材料在不见光的情况下为绝缘体，呈中性状态，不带有任何电荷。 充电电极是一根与感光鼓轴平行的钨丝，其上带有5～7kV的直流高压，当硒鼓表面与钨丝非常接近时，周围的空气被电离产生电晕放电，使感光鼓带上了电荷 扫描曝光当硒鼓表面经过钨丝电极时，其表面被充上正电，光导层与底基的界面感应出负电。当激光光束中有光部分照到硒鼓表面的某个区域时，称为曝光。经曝光后的地方电阻率 明显地降低，表面的正电荷与界面的负电荷便中和消失,由于硒碲合金颗粒之间具有良好的绝缘性能，未经曝光的表面正电荷仍保持不变，即形成一层静电潜像。 显影把光导体表面形成的“静电潜像”，经过”显影”显示出墨粉图像，这个过程称为“电子显影”。 显影器中装有铁粉及碳粉，经摩擦后铁粉带正电，碳粉带负电，这样铁粉被碳粉包围而吸附了碳粉的铁粉又被永久磁铁吸附，形成类似于毛刷似的一层铁粉与碳粉混合物。 当硒鼓表面从这层磁刷下经过时，碳墨粉因带负电而被吸到硒鼓表面仍保持着正电的部分，形成了可见的碳粉图像。 加热定影将打印吸附在纸上的墨粉图像，利用加压热熔的方法，使溶化的墨粉浸入打印纸中，形成固定图像的过程，称为“定影”。","link":"/0005%20Applied%20science/%E5%B7%A5%E7%A8%8B%E4%B8%8E%E6%8A%80%E6%9C%AF%E7%A7%91%E5%AD%A6%20Engineering%20and%20technology/%E6%9C%BA%E6%A2%B0%E5%B7%A5%E7%A8%8B%20Mechanical%20engineering/%E6%9C%BA%E6%A2%B0wiki/"},{"title":"","text":"液压wiki液压控制阀是指液压传动系统或液压控制系统中用来控制液体压力、流量和方向的元件。其中控制压力的称为压力控制阀，控制流量的称为流量控制阀，控制通、断和流向的称为方向控制阀。 “压力控制阀按用途分为溢流阀、减压阀和顺序阀。①溢流阀：能控制液压系统在达到调定压力时保持恒定状态。用于过载保护的溢流阀称为安全阀。②减压阀：能控制分支回路得到比主回路油压低的稳定压力。减压阀按它所控制的压力功能不同，又可分为定值减压阀（输出压力为恒定值）、定差减压阀（输入与输出压力差为定值）和定比减压阀（输入与输出压力间保持一定的比例）。”流量控制阀：Ø流量控制阀是通过改变阀口大小来改变液阻实现流量调节的阀。液压伺服阀，是一种输出量与输入量成一定函数关系并能快速响应的液压控制阀 压力一、压力的概念： (1)定义 ①垂直作用于物体单位面积上的力叫做压力。②物体的单位面积上受到的压力的大小叫做压强。 (2)单位在国际单位制中,压强的单位是帕斯卡,简称帕,即牛顿/平方米。 (3)公式:p=F/S p表示压强,单位帕斯卡(简称帕,符号Pa)F表示压力,单位牛顿(N)S表示受力面积,单位平方米 离心泵的扬程以叶轮中心线为基准，分由两部分组成。从水泵叶轮中心线至水源水面的垂直高度，即水泵能把水吸上来的高度，叫做吸水扬程，简称吸程；从水泵叶轮中心线至出水池水面的垂直高度，即水泵能把水压上去的高度，叫做压水扬程，简称压程。 即 水泵扬程= 吸水扬程 + 压水扬程 离心泵扬程是指单位重量液体通过泵所获得的能量，它包括位能、压力能和速度能等几个部分扬程与压力的计算公式为H=(p2-p1)/ρg+(v2²-v1²)/2g+z2-z1 出口压力为零，流速为零时进口压力和扬程换算公式如下：p=ρgh 1MPa的压力约等于100m扬程， 1毫米水柱（mmH2O）=9.80665帕（Pa） 1巴（bar）=100千帕（kPa）1工程大气压=98.0665千帕（kPa）1物理大气压（atm）=1标准大气压=101.325千帕（kPa）=760mm汞柱=10.336m水柱。 巴是常用在工程领域的单位，Mpa的国际单位，公斤力是中国常常用来表示压强的单位。他们之间的换算关系是：1 bar = 0.1 Mpa = 1.01971621 kgf/cm2","link":"/0005%20Applied%20science/%E5%B7%A5%E7%A8%8B%E4%B8%8E%E6%8A%80%E6%9C%AF%E7%A7%91%E5%AD%A6%20Engineering%20and%20technology/%E6%9C%BA%E6%A2%B0%E5%B7%A5%E7%A8%8B%20Mechanical%20engineering/%E6%B6%B2%E5%8E%8Bwiki/"},{"title":"","text":"风机“平准化度电成本（Levelized Cost of Energy，简称“LCOE”）为对项目生命周期内的成本和发电量进行平准化后计算得到的度电成本。风电项目生命周期内的成本通常包括设备购置成本、设计成本、工程建设成本等前期投资成本，以及项目建成后的运营维护成本等。”通常在额定功率固定的条件下，叶片长度越长，则风机的额定风速越低，从而风机在低风速情况下获得的功率越高，年发电量也越高。为了促进风电项目增效降本，风电行业持续推进风机大型化创新风机的零部件包括风塔、叶片、齿轮箱、发电机等，根据中商产业研究院数据，风塔成本在风机生产成本中的占比最高，达到 29%。由于风塔成本在风机生产成本中的占比高，因此风机大型化升级有助于降低每单位装机容量对应的风机生产成本。当前国产化程度较低的零部件主要为主轴轴承。，海上风电项目投资成本中约 45%为风机购置安装费用，20%-25%为基础建设费，其他费用包括塔筒、海上升压站、用海（地）费用、海缆费用、陆上集控中心和基本预备费等。由于陆上风电不需要建设海上升压站以及铺设海缆等，发电设备成本在项目成本中占比更高，根据上市公司运达股份披露数据，发电设备购置费占陆上风电项目投资成本的比例为 68%，风机采购成本变动对陆上风电项目成本影响更为明显。风机大型化、核心风电设备国产化有助于促进我国风机采购成本下降，从而推动风电项目 LCOE 下降，风机的主要原材料为钢材。风电全产业链方面，上游主要由风电设备行业构成，包括风电零部件行业以及风电整机行业。风电零部件行业代表性上市公司主要有新强联、天顺风能等；风电整机行业代表性企业主要有明阳智能、金风科技等。风电运营行业处于产业链的中游位置，代表性上市公司主要有三峡能源、龙源电力等。下游主要由电网行业及电力用户构成，电网行业代表性企业主要有国家电网、南方电网等，电网公司通过输配电网将电力输送到终端电力用户。电网行业主要负责输配电，并在该过程中获得输配电价，盈利能力相对稳定由于中游的市场集中度高，以大型国有发电企业为代表的风电运营商具有较强议价能力，可向上游风电设备生产商转移成本压力，因此风电运营行业的盈利能力相对较强。“风电运营行业的市场竞争者主要分为三类，（1）第一类是大型国有发电企业，主要包括国家能源投资集团有限责任公司（简称“国家能源集团”）、国家电力投资集团有限公司（简称“国家电投”）、中国华能集团有限公司（简称“华能集团”）、中国大唐集团有限公司（简称“大唐集团”）和中国华电集团有限公司（简称“华电集团”）；（2）第二类是地方性国有能源企业，该类企业在与当地政府及当地企业合作方面具有一定的竞争优势；（3）第三类是民营企业、外资企业等风电运营企业。”截至 2021 年末，国家能源集团、国家电投、华能集团、大唐集团这四大国有发电企业的风电机组装机容量为 14284 万千瓦，约占全国风电机组装机容量的 43%，大型国有发电企业占据主要市场份额，市场集中度高。2019-2021 年末火电、水电、风电、太阳能发电、核电机组装机容量的年均复合增速分别为 4.41%、4.49%、25.32%、22.38%、4.53%，风电、太阳能发电的装机容量增速相对较快。 7轴承是用途较为广泛的机械设备零部件，主要作用是支撑旋转轴或其它运动体，引导转动或移动运动并承受由轴或轴上零件传递而来的载荷。轴承根据工作时运转的轴与轴承座之间的摩擦性质，可分为滑动轴承和滚动轴承两类，其中滚动轴承是轴承工业的主要产品，通常所说的轴承，一般指滚动轴承。只要涉及旋转轴的机械结构就需要轴承来起到支撑和减小摩擦的作用轴承的主机配套类型较多，风电轴承是其中一类，在下游应用领域中，汽车领域应用占比为 40%，电工轴承占比 15%，机床轴承占比10%，工程机械轴承占比 7%，风电轴承是第五大类别，约占轴承总需求量的 6%。轴承产业链的上游原材料主要是轴承钢以及少部分的非金属材料零部件主要包括内圈外圈、滚动体、保持器和密封圈。瑞典斯凯孚、德国舍弗勒、日本恩斯克等八家轴承企业在国际轴承市场的市场占有率合计达到 70%以上，而国内企业主要占据中低端市场。风电工况恶劣，对轴承的可靠性要求较高，因此风电轴承相较其他应用领域具有更高的技术复杂度，是风电领域国产化难度较高的两大部件之一，另一个是控制系统。双馈式风机为例，风电轴承主要分变桨、偏航轴承和传动系统轴承（主轴、齿轮箱及电机轴承）两大类，每台风力发电机内各类轴承配套数量为主轴轴承 1-2 个（小兆瓦用 1 个，大兆瓦用 2 个）、偏航轴承 1 个、变桨轴承 3 个、发电机轴承 1 套和齿轮箱轴承 1 套。主轴和齿轮箱轴承用到球面滚子轴承、单排/双排大直径圆锥滚子轴承和圆筒形滚柱轴承等，应用于偏航、变桨的旋转枢轴轴承等。 偏航轴承:连接机舱和塔筒，跟踪风向的变化，确保最大的发电量变桨轴承:位于叶片与轮毂之间，调整桨叶迎风角度，使其达到最佳状态风电轴承的关键技术主要体现在设计、材料、防腐和密封等方面，主轴轴承和齿轮箱轴 承还需进行高精度加工，偏航、变桨轴承则需要解决好游隙设计和磨削加工滚道技术等。轴承设计对设备运行的寿命和稳定性有重要影响 前国内部分厂家能够生产风电轴承，但主要集中在 2MW 及以下风电轴承，对于 3MW 及以上风电轴承，由于技术难度高，国内生产还处于起步阶段，进口依赖度较高，中大型轴承本土产量占比不足 13%。齿轮箱轴承目前的国产化程度较低,由于齿轮箱的工况更加恶劣，鉴于高昂的维保成本，对齿轮箱轴承的稳定性和可靠性要求更高统一变桨控制的机组在运行过程中面临湍流、风切变等外部气动条件时，每个叶片接受一个大小相同的变桨命令来调节桨距角，以确保机组保持额定状态，无法实现风轮载荷平衡，并会因此引起传动链的震动，最终会增加机组疲劳载荷，从而导致机组制造成本的增加、安全稳定性的下降和使用寿命的缩短。为解决机组载荷不平衡的问题，独立变桨技术的研究应运而生.以单个叶片上的受力状况或风速条件为输入，单独为每个叶片给定各自的桨距角附加值，从而使各个叶片的受力状况趋于一致，从而减小由湍流、风切变等外部因素引起的风轮面内载荷不平衡以及机组振动，从而降低整机疲劳载荷，降低机组制造成本，提高机组运行的安全可靠性。独立变桨系统包括液压变桨距系统和电动变桨距系统两种。大型风力发电机组发展的趋势是采用电动变桨距系统。独立变桨轴承的结构也将从单排、双排、球轴承向承载力更强的三排圆柱滚子轴承转变，单套价值量有所提升，驱动变桨轴承市场扩容。 国内风电机组中，水平轴风电机组是主要机型，水平轴主要包括双馈型机组（带增速齿轮箱）、直驱型机组（不带增速齿轮箱）和半直驱型机组（带中速齿轮箱的直驱系统）,其中又以双馈型机组为主，双馈和直驱型机组全面对比：各具优劣势，中长期半直驱/直驱型占比提升双馈式风电机组一般采用的是转子交流励磁双馈发电机，其结构与绕线式异步电机类似永磁直驱风电机组取消了增速齿轮箱，风轮轴直接和发电机轴直接相连，发电机多采用永磁式结构的转子的同步发电机，无须外部提供励磁电源。转子的转速随风速的变化而改变，其交流电的频率也随之变化，经过全功率电力电子变频器将频率不定的交流电整流成直流电，再逆变成与电网同频率的交流电输出同功率的直驱机组和双馈机组由效率不同带来的成本差异是不明显的。对比度电成本来看，度电成本最低的是永磁半直驱机组，其次是双馈机组，度电成本最高的是永磁直驱机组。从可靠性方面来看，直驱机组的可靠性最高长期来看，风机往更高功率方向演进，半直驱和直驱具有天然的可靠性优势，两者的装机占比有望进一步提升。 调心性能，可以自动调整因轴与轴承座之间的角度误差所产生的倾斜或轴的挠曲。调心滚子轴承可以承受较大的径向载荷与双向轴向载荷。 单列圆锥滚子轴承可以承受一个方向的轴向载荷。并能限制轴相对轴承座一个方向的轴向位移。 “双列圆锥滚子轴承在承受以径向负荷同时，可承受双向轴向负荷，可在轴承的轴向游隙范围内，限制轴承或外壳的双向轴向位移。” 变桨控制意味着叶片可以在 0°到 90°之间转动。在风速低于额定速度（通常为 12m/s）时，风轮叶片会转动到完全朝向风向，即桨距为 0°。当风速增大时，可以控制叶片桨距，将风机的输出功率调整到其额定值。当风速达到预定极限时（通常为 28m/s），风机将叶片转动到 90°，停止发电。 滚动体行业具有较高的技术壁垒。 svf水面光伏电站是指在水塘（鱼蟹塘等）、中小型湖泊、水库、蓄水池、采煤塌陷区形成的湖泊等水上建立的光伏发电站 变流器控制双馈异步风力发电机实现软并网，减小并网冲击电流对电机和电网造成的不利影响。变流器通过对双馈异步风力发电机的转子进行励磁，使得双馈发电机的定子侧输出电压的幅值、频率和相位与电网相同，并且可根据需要进行有功和无功的独立解耦控制。风电变流器可以优化风力发电系统的运行，实现宽风速范围内的变速恒频发电，改善风机效率和传输链的工作状况，减少发电机损耗，提高运行效率，提升风能利用率。","link":"/0005%20Applied%20science/%E5%B7%A5%E7%A8%8B%E4%B8%8E%E6%8A%80%E6%9C%AF%E7%A7%91%E5%AD%A6%20Engineering%20and%20technology/%E6%9C%BA%E6%A2%B0%E5%B7%A5%E7%A8%8B%20Mechanical%20engineering/%E9%A3%8E%E6%9C%BAwiki/"},{"title":"","text":"炼钢地条钢是用中频炉把废钢铁熔化，再倒入简易铸铁模具内冷却而成。其间，既不进行任何分析化验，也无温度等质量控制，用这种方法炼出的钢，90%以上属于不合格产品。 双碳，即碳达峰与碳中和的简称碳达峰（peak carbon dioxide emissions） [11] 就是指在某一个时点，二氧化碳的排放不再增长达到峰值，之后逐步回落 [3] 。碳达峰是二氧化碳排放量由增转降的历史拐点，标志着碳排放与经济发展实现脱钩，达峰目标包括达峰年份和峰值碳中和（carbon neutrality），节能减排术语。碳中和是指国家、企业、产品、活动或个人在一定时间内直接或间接产生的二氧化碳或温室气体排放总量，通过植树造林、节能减排等形式，以抵消自身产生的二氧化碳或温室气体排放量，实现正负抵消，达到相对“零排放”。 “特钢又被称为特种钢或特殊钢，专指由于成分、结构、生产工艺特殊而具有特殊物理、化学性能或者特殊用途的钢铁产品”高端、特种装备制造领域 “钢铁是钢和铁的合称。根据国家标准《钢分类》，钢是指以铁为主要元素，含碳量一般在2%以下，并含有其他元素的材料，如硅、锰、磷、硫等，故又被称为铁碳合金。” 钢铁的性能一般分为力学性能1、化学性能2和工艺性能3。其中力学性能也称机械性能，是钢材最重要的使用性能，包括强度4、硬度5、塑性6和韧性7。力学性能是指钢材在不同环境（温度、介质、湿度）下，承受各种外加载荷（拉伸、压缩、弯曲、扭转、冲击、交变应力等）时所表现出的力学特性。强度指材料抗变形或断裂的能力，强度越高，钢材承受力越大。硬度指材料表面抗硬物压力能力，硬度越高，说明钢的耐磨性越好，即不容易磨损。塑性指材料发生变形而不断裂的能力，塑性越高，说明钢材的延展性越好，即容易拉丝或轧板。韧性也叫冲击韧性，指材料抵抗冲击变形的能力，韧性越高，说明钢材抵抗运动载荷的能力越强。 化学性能是指钢材与周围介质扫触时抵抗发生化学或电化学反应的性能。工艺性能是指钢材承受各种加工、处理的能力。碳是决定钢铁机械性能的主要元素，含碳量越高，钢铁的硬度越高，但为了保持其强度、韧性和塑性，含碳量一般不超过 1.7%。而硫、磷、氧、氮多对钢铁性能有所损害，如硫含量越高，钢铁的韧性、耐腐蚀性和可焊性越低，需严格控制其含量。根据化学性能的不同，可将钢铁分为非合金钢、低合金钢、合金钢三大类合金钢可根据主要使用特性分为工程结构用钢、机械结构用钢、不锈、耐蚀和耐热钢、工具钢、轴承钢、特殊物理性能钢和其他。特殊物理性能钢，在钢的定义范围内具有特殊磁性、电性、弹性、膨胀性等物理特性的钢，包括软磁钢、永磁钢、无磁钢以及特殊弹性钢、特殊膨胀钢、高电阻钢和合金等。按照质量等级从低到高又可将这三类钢铁分别分为普通、优质和特殊三大类。从制钢流程来分，可将钢铁分为生铁、粗钢和钢材三大类。生铁，又称“铁水”，是铁矿石经高炉冶炼的产品，根据碳存在形式不同可分为白口铁、灰口铁和球墨铸铁9；粗钢，即钢坯，是由生铁氧化加工或废钢经过电弧炉等设备提纯，将含碳量和其他元素降到规定范围，符合最终钢材所要求的化学成分的钢水；钢材是粗钢通过铸、扎、锻、挤等工艺加工而成的各种形状、尺寸和性能的产品。根据断面形状的不同，一般分为线材、型材、板材、管材和金属制品等类型。白口铁中的碳以碳化铁的形式存在，断面呈白色，坚硬而脆，通常用于炼钢；灰口铁中的碳以片状石墨的形式存在，断面为灰色，具有良好的切削、耐磨和铸造性能，主要用于各种铸件；球墨铸铁中的碳以球状石墨的形态存在，其机械性能远胜于灰口铁而接近于钢，主要用于韧性、强度要求高的铸件。 球炼铁主要方法包括高炉法、熔融还原法、直接还原法等。其中高炉法是现代炼铁的主要方式，即以铁矿石为原料、焦炭为燃料和还原剂，经过高温将铁矿石还原成液态生铁，并除去有害元素硫。“炼钢分为转炉炼钢和平炉炼钢两大类，其中转炉炼钢为全球主流工艺，即以铁水为原料，废钢作为冷却剂，通入氧气，并除去多余的碳、磷和剩余的硫，制成粗钢。按照性能要求，还可添加适量的硅锰等合金元素。”短流程不需制铁，可直接用电弧炉将废钢冶炼为粗钢。废钢为主要原材料，经破碎、分装后装入电炉，利用石墨电极与废钢之间产生电弧所发生的热量来熔炼废钢，通过脱气等流程后得到合格钢水。我国长流程粗钢产量占比约 89.4%，高出世界平均水平高18.6BP；短流程炼钢的主要原材料为废钢，但我国工业起步较晚，废钢资源较少，导致废钢成本较高。长流程吨钢耗电量较少。电弧炉炼钢依靠电力产热使废铁熔化，而高炉炼铁则主要由焦炭提供热量，转炉炼钢则通过铁液本身的物理热和组分之间的化学反应产生热量，因此吨钢耗电较少。无论是长流程炼钢还是短流程炼钢，原材料的波动基本与钢材价格一致。铁矿石是长流程炼钢最主要的原材料。铁矿石占长流程炼钢成本的 47%，根据含铁矿物种类，可将常用于炼铁的铁矿石分为磁铁矿、赤铁矿、褐铁矿和菱铁矿全球铁矿石原矿储量 180012亿吨，其中澳大利亚 500 亿吨（27.8%）、巴西 340 亿吨（18.9%）、俄罗斯250 亿吨（13.9%）、中国 200 亿吨（11.1%），四国储量占全球总量的71.7%。世界铁矿资源整体品位较高，平均品位为 46.7%.我国铁矿石品位仅为 34.5%，低于全球平均品位。2020 年，全球铁矿石出口量16.6 亿吨，其中澳大利亚铁矿石出口 8.7 亿吨，巴西出口 3.4 亿吨，占全球铁矿石总出口量的 73.4%。我国铁矿石进口依赖度高，主要进口国为澳大利亚。进口铁矿的价格大多低于国产铁矿的价格..进口矿价格优势来自于两方面：一方面，由于我国铁矿埋藏较深，采矿成本远高于国外。国内铁矿石开采成本（不含运费）约为 80美元/吨，而海外大型企业仅为 20-30 美元/吨；另一方面，我国选矿成本要高于国外。由于我国多贫矿，不能直接用于高炉炼铁，需要经过选矿、人工造块等流程后品位才能与进口矿相当，与富矿相比需要花费更多的选矿成本。根据废钢来源，可分为社会采购废钢14、自产废钢15和进口废钢。社会采购废钢包括加工废钢和折旧废钢。加工废钢是钢材下游的制造商，如汽车、家电、机械等制造商，在生产装配过程中产生的废钢；折旧废钢指各种钢铁制品使用寿命到期后，报废产生的废旧钢铁。 自产废钢也称内部废钢，指钢厂在生产、轧材过程中产生的切头、切尾、切屑、边角料等，是钢铁生产企业自用，不参与社会流通的废钢。““地条钢16”出清，释放我国长期被地条钢挤占的废钢资源”表观消费量是指当年产量加上净进口量（当年进口量减出口量）。特点是较易取得相关数据。钢材的表观消费量，就是钢材的全国产量加上净进口量的总和，但是这些钢材可能并不全都被消费掉了，要扣减其他损耗和仓储等等才是真实的实际消费量。废钢价格显著高于铁矿石价格建筑业和制造业是消费两大支柱，房地产是驱动钢铁消费变化的主要行业。建筑业包括基建和地产，制造业包括机械、汽车、家电、造船、集装箱和能源化工等。地产、基建和机械是钢铁下游消费的主要领域，三者占比占整体消费的七成以上。房地产消费占比最高，2021 年占比为 36.5%；其次为基建和机械，占比分别为 21.1%和 16.1%。产能等量或减量置换就是对于钢铁、水泥等产能过剩行业，必须首先通过在全国或某一个区域（集团公司）内淘汰落后产能、整合重组原有企业，把落后产能或技术含量比较低的产能淘汰，之后再增加新产能，新建、扩建项目新增产能应等于或小于淘汰的产能，只有在减少或不增加产能的前提下才能审批新的建设项目，原则上不再核准和支持单纯扩大产能的项目。对外购铁矿石依赖度高的钢铁厂更倾向于建设在毗邻深水码头的沿海地区。举例来说，江苏省本土几乎没有铁矿石资源，但受益于沿江港口的优势，粗钢产量位于全国第二位；进出口对我国总需求和总供给的影响较小。2021 年我国钢材出口需求仅占总需求的 6.5%；从供给端来看，2021 年我国钢材进口量仅占总供给的 1%。产能产量双控仍然是政策管控的重点，国内粗钢产量持续下降趋势延续，但产能利用率进一步提升。","link":"/0005%20Applied%20science/%E5%B7%A5%E7%A8%8B%E4%B8%8E%E6%8A%80%E6%9C%AF%E7%A7%91%E5%AD%A6%20Engineering%20and%20technology/%E6%9D%90%E6%96%99%E7%A7%91%E5%AD%A6%20Materials%20science%20and%20engineering/%E7%82%BC%E9%92%A2wiki/"},{"title":"","text":"Electrical &amp; Electronic Engineering wiki推挽输出 开漏输出 晶圆晶圆（英语：Wafer）是半导体晶体圆形片的简称，其为圆柱状半导体晶体的薄切片，用于集成电路制程中作为载体基片，以及制造太阳能电池；由于其形状为圆形，故称为晶圆。最常见的是硅晶圆，另有氮化镓晶圆、碳化硅晶圆等；一般晶圆产量多为单晶硅圆片。 晶圆是最常用的半导体材料，按其直径分为3英寸、4英寸、5英寸、6英寸、8英寸等规格，近来发展出12英寸甚至研发更大规格（14英寸、15英寸、16英寸、20英寸以上等）。晶圆越大，同一圆片上可生产的集成电路（integrated circuit, IC）就越多，可降低成本；但对材料技术和生产技术的要求更高 2001年，新蛋集团成立于美国洛杉矶。2020年10月，Newegg新蛋与联络智能有限公司联合宣布，双方已签署合并协议和计划，Newegg新蛋的原股东将成为LLIT的大股东，公司将更名为“NeweggCommerce，Inc.” 表面贴装(SMT)PCB（Printed Circuit Board)为印刷电路板。SMT是表面组装技术（表面贴装技术）（Surface Mounted Technology的缩写），是电子组装行业里最流行的一种技术和工艺。 EMS= Electronics Manufacturing Services电子服务制造 Complementary metal–oxide–semiconductor (CMOS, pronounced “see-moss”, /siːmɑːs/, /-ɒs/) is a type of metal–oxide–semiconductor field-effect transistor (MOSFET) fabrication process that uses complementary and symmetrical pairs of p-type and n-type MOSFETs for logic functions.[1] CMOS technology is used for constructing integrated circuit (IC) chipsThe metal–oxide–semiconductor field-effect transistor (MOSFET, MOS-FET, or MOS FET) is a type of field-effect transistor (FET), most commonly fabricated by the controlled oxidation of silicon. It has an insulated gate, the voltage of which determines the conductivity of the device. This ability to change conductivity with the amount of applied voltage can be used for amplifying or switching electronic signals. A metal-insulator-semiconductor field-effect transistor (MISFET) is a term almost synonymous with MOSFET. Another synonym is IGFET for insulated-gate field-effect transistor.A bipolar junction transistor (BJT) is a type of transistor that uses both electrons and electron holes as charge carriers. In contrast, a unipolar transistor, such as a field-effect transistor, uses only one kind of charge carrier. A bipolar transistor allows a small current injected at one of its terminals to control a much larger current flowing between the terminals, making the device capable of amplification or switching.A transistor is a semiconductor device used to amplify or switch electrical signals and power. The transistor is one of the basic building blocks of modern electronics.[1] It is composed of semiconductor material, usually with at least three terminals for connection to an electronic circuit. A voltage or current applied to one pair of the transistor’s terminals controls the current through another pair of terminals. Because the controlled (output) power can be higher than the controlling (input) power, a transistor can amplify a signal. Some transistors are packaged individually, but many more are found embedded in integrated circuits.晶圆（英语：Wafer）是半导体晶体圆形片的简称，其为圆柱状半导体晶体的薄切片，用于集成电路制程中作为载体基片，以及制造太阳能电池；由于其形状为圆形，故称为晶圆In electronics, a wafer [also called a slice or substrate] is a thin slice of semiconductor, such as a crystalline silicon (c-Si), used for the fabrication of integrated circuits and, in photovoltaics, to manufacture solar cells. ；laswdvf逆变器是把直流电能（电池、蓄电瓶）转变成定频定压或调频调压交流电（一般为220V,50Hz正弦波）的转换器。A power inverter, inverter or invertor is a power electronic device or circuitry that changes direct current (DC) to alternating current (AC).[1] The resulting AC frequency obtained depends on the particular device employed. Inverters do the opposite of rectifiers“整流器A rectifier is an electrical device that converts alternating current (AC), which periodically reverses direction, to direct current (DC), which flows in only one direction. The reverse operation is performed by the inverter. The process is known as rectification, since it “”straightens”” the direction of current.”“Uninterruptible power suppliesAn uninterruptible power supply (UPS) uses batteries and an inverter to supply AC power when mains power is not available. When mains power is restored, a rectifier supplies DC power to recharge the batteries.”“Electric motor speed controlInverter circuits designed to produce a variable output voltage range are often used within motor speed controllers. ““In refrigeration compressorsAn inverter can be used to control the speed of the compressor motor to drive variable refrigerant flow in a refrigeration or air conditioning system to regulate system performance.”inverter-equipped systems have a variable-frequency drive that control the speed of the motor and thus the compressor and cooling output. The variable-frequency AC from the inverter drives a brushless or induction motor, the speed of which is proportional to the frequency of the AC it is fed, so the compressor can be run at variable speeds—eliminating compressor stop-start cycles increases efficiencyA variable-frequency drive (VFD) is a type of motor drive used in electro-mechanical drive systems to control AC motor speed and torque by varying motor input frequency and, depending on topology, to control associated voltage or current variation. VFDs may also be known as ‘AFDs’ (adjustable-frequency drives), ‘ASDs’ (adjustable-speed drives), ‘VSDs’ (variable-speed drives), ‘AC drives’, ‘micro drives’, ‘inverter drives’ or, simply, ‘drives’.Systems using VFDs can be more efficient than those using throttling control of fluid flow, such as in systems with pumps and damper control for fans. Scalar control \\ V/f (Volts per Hertz) control \\\\标量Scalars are real numbers used in linear algebra, as opposed to vectors.Vector control, also called field-oriented control (FOC), is a variable-frequency drive (VFD) control method in which the stator currents of a three-phase AC or brushless DC electric motor are identified as two orthogonal components that can be visualized with a vector. One component defines the magnetic flux of the motor, the other the torque.Direct torque controlA relay is an electrically operated switch.Relays are used where it is necessary to control a circuit by an independent low-power signal, or where several circuits must be controlled by one signal. “Power gridGrid-tied inverters are designed to feed into the electric power distribution system”A solar inverter is a balance of system (BOS) component of a photovoltaic system and can be used for both grid-connected and off-grid systems.光伏A photovoltaic system, also PV system or solar power system, is an electric power system designed to supply usable solar power by means of photovoltaics. A printed circuit board (PCB; also printed wiring board or PWB) is a medium used in electrical and electronic engineering to connect electronic components to one another in a controlled manner. bphswm常开-NO （Normal Open）：改变开关状态的操作未发生时，开关处于断开状态“PNP是指当有信号触发时，信号输出线out和电源线VCC连接，相当于输出高电平的电源线。对于PNP-NO型：在没有信号触发时，输出线是悬空的，就是VCC电源线和out线断开。有信号触发时，发出与VCC电源线相同的电压，也就是out线和电源线VCC连接，输出高电平VCC。”PNP与NPN三极管的电子学特征的不同，它们输出的开关信号是截然相反的，即俗称的高电平和低电平。 谐波 (harmonic wave)，从严格的意义来讲，谐波是指电流中所含有的频率为基波的整数倍的电量，一般是指对周期性的非正弦电量进行傅里叶级数分解，其余大于基波频率的电流产生的电量。从广义上讲，由于交流电网有效分量为工频单一频率，因此任何与工频频率不同的成分都可以称之为谐波 10调整输出电源的电压和频率，根据电机的实际需要来提供其所需要的电源电压，进而实现对交流异步电机的软启动、节能降耗、变频调速的目的，另外，变频器还有很多的保护功能，如过流、过压、过载保护等等。 （1）变频调速。传统的电机调速为变极调速，一般可得到两极、三极、四极速度，调速范围较窄。变频调速通过改变电动机工作电源频率 f 达到改变电机转速的目的。其调速方式便利，可根据不同的工艺，给予电机不同的转速。。（2）软启动功能。用市电直接启动电机，其启动电电流为电机额定电流的 5-7 倍。采用变频器软启动，其启动电流一般为额定电流的 1.2-1.5 倍，有效地降低了启动冲击电流，减少变压器的占有量。（3）节能效果。在各种风机、水泵、油泵中，空气或液体产生的阻力大致与电机转速的 2 次方成正比，所需的功率与电机速度的 3 次方成正比。当所需风量、流量减少时，利用变频器调速的方式来调节风量和流量，可以大幅度地节约电能。 6◼ 永磁同步电机主要由定子、转子和端盖等部件构成，定子包括定子铁芯和定子铜线绕组，转子的核心是永磁磁芯。 ◼ 定子：定子由定子铁芯及缠绕在铁芯上的铜导线构成，其中铜导线及其缠绕方式对于电机的能量传输效率有重要影响，根据导线形状可分为圆柱 导线和扁线导线。 ◼ 转子：永磁同步电机的转子为永磁磁芯，由永磁材料制作而成，主要包括金属永磁、铁氧体永磁和稀土永磁（钕铁硼）。 ◼ 成本构成：永磁同步电机的成本主要来源于永磁材料、硅钢片、漆包线和制造成本，其中永磁材料为第一大材料成本，占比高达30%。 电动机利用转子磁阻不均匀而产生的转矩工作，转子是由铁磁性材料以及非铁磁性材料组成，转子没有永久磁铁，也没有绕组，是结构最简单的电机之一。磁阻马达其运行原理是磁通总要沿着磁阻最小的路径闭合，因此铁心在移动到最小磁阻位置时，其主轴线必与磁场的轴线重合。同步磁阻马达 Synchronous reluctance motors，会简写为SynRM）转子内部没有产生电流的元件，可以工作在同步转速。其转子能量损失比异步电动机要小。切换式磁阻马达Switched Reluctance Motor，简称SRM） 同步电动机是一种交流电动机，转子旋转速度与所提供交流电的频率相同。原理是由交流电在电动机的定子处产生旋转磁场，使电动机转子旋转。同步电动机的特点是转速固定，不受电源电压的影响。只要电动机的负载低于其最大转矩，转速也不会受负载的影响。由于这种特性，同步电动机只能使用变频器由调整电动机的电源频率来进行调速。“同步电机和异步电机最大的区别在于它们的转子速度与定子旋转磁场是否一致，电机的转子速度与定子旋转磁场相同，叫同步电机，反之，则叫异步电机。另外，同步电机与异步电机的定子绕组是相同的，区别在于电机的转子结构。异步电机的转子是短路的绕组，靠电磁感应产生电流。”DC-excited motors电励磁同步电机 定子绕组通上三相交流电源时，电动机内就产生了一个旋转磁场，鼠笼绕组切割磁力线而产生感应电流，从而使电动机旋转起来。电动机旋转之后，其速度慢慢增高到稍低于旋转磁场的转速，此时转子磁场线圈经由直流电来激励，使转子上面形成一定的磁极，这些磁极就企图跟踪定子上的旋转磁极，这样就增加电动机转子的速率直至与旋转磁场同步旋转为止 Servomotors are not a specific class of motor, although the term servomotor is often used to refer to a motor suitable for use in a closed-loop control system.A servomotor (or servo motor) is a rotary actuator or linear actuator that allows for precise control of angular or linear position, velocity and acceleration.Servomotors are generally used as a high-performance alternative to the stepper motor 直流无刷电动机;没有电刷和換向器的电动机，根据转子永久磁铁位置调整定子电流以产生转矩BLDC电机利用电力电子技术（变频器）输入控制讯号到马达，以切换直流电的开关和通过的线圈组，而得到力矩使转子转动。但这些控制信号，波形没有限制。方波驱动的称为BLDC，用于位置要求不是很高的场合；正弦波驱动的称PMSM永磁同步电动机（PMSM），用于伺服场合 交流整流子电动机 ,,整流子（英语：Commutator），又称为换向器 直流电和没有换向器的情况下如何实现转子的旋转，这就需要磁感应传感器，通常采用霍尔元件。霍尔元件通过检测磁场变化传递信号，从而改变电流方向，使转子持续旋转。 “同步电机的工作原理是，,转子是永磁体，或者是电励磁绕组，励磁绕组接入直流电源后，就有电流流过并产生大小和极性不变的恒定磁场。从而形成定子磁场和转子同方向、同转速旋转。” 是由于转子旋转是来自于感应磁场的变化，因此异步电机也称作感应电机。转子与同步电机不同，是闭合线圈，工作原理就是磁场的旋转使得闭合线圈切割磁感线产生电流，进而受到磁场力发生旋转。为了保证转速的稳定，一般闭合线圈采用鼠笼式结构。 “新能源车驱动电机是电动车的核心部件之一，主要以永磁同步电机为主，占比超 80%，其他包括交流异步电机和开关磁阻电机等” 新能源车驱动电机是电动车的核心部件之一，主要以永磁同步电机为主，占比超 80%，其他包括交流异步电机和开关磁阻电机等 我国伺服市场近 70%的市场份额由外资品牌占据 9PLC（Programmable Logic Controller）即可编程控制器，是一种专用于工业控制的计算 机，使用可编程存储器储存指令，执行诸如逻辑、顺序、计时、计数与计算等功能，并通 过模拟或数字 I/O 组件，控制各种机械或生产过程的装置 PLC 的工作原理是 “顺序扫描，不断循环”。PLC 的一个扫描周期经过输入采样、程序执行和输出刷新三个阶段。 “一般的分类方式是按照 I/O 点数的数量分为大、中、小型 PLC。一般而言，I/O点数越多，控制关系越复杂，要求的程序存储器容量也越大，可编程控制器的指令及其他功能也较多，能够适应大型、复杂的控制任务。” 一般大中型 PLC 用于汽车、冶金、市政等项目型市场，小型 PLC 一般用于通用性较强的 OEM（设备供应商）市场。其中纺织机械、包装机械、机床工具是小型 PLC 应用最多的领域，三个领域的市场规模占比约 50%。 欧美和日系品牌占据国内 PLC 市场绝大份额PLC 是工业自动化领域国产化率最低的品种 机器视觉根据美国自动化成像协会（AIA）定义，机器 视觉指的是通过相机和计算机代替人的视觉感知和判断能力，以实现检测任务。它自动采集并分析图像，以获取 用于控制或评估特定零件与特定活动所需的数据。通俗来讲，即是利用机器代替人眼实现检测、判断和控制等功 能。 典型的机器视觉应用系统包括图像捕捉、光源系统、图像数字化模块、数 字图像处理模块、智能判断决策模块和机械控制执行模块。 视觉控制系统是对通过光源、镜头、相机获得的图像进行分析处理，并根据处理结果和一定的判决条件实现机器视觉功能目标的软件。 中游为装备制造商及系统集成商，主要为下游提供检测设备及完整检测解决方案 机器视觉在工业中的应用比较广泛，主要包括消费电子、汽车、制药、食品与包装等行业。消费电子占据机器视觉主要应用市场，占比约为 46.6%，主要用于晶圆切割检测、3C 表面检测等；其次为汽车制造，占比约为 10.2%，主要用于车身装配检测、面板印刷质量检测等；食品与包装、制药的占比分别为 10.1%和 9.7%。 机器视觉行业由少数国际龙头垄断，呈现两强对峙状态。美国的康耐视(cognex)及日本的基恩士(Keyence)两大巨头几乎垄断了全球 50%以上的市场， 。伺服驱动器负责将从控制器接收到的信息分解为单个自由度系统能够执行的命令，再传递给执行机构（伺服电机）；伺服电机将收到的电流信号转化为转矩和转速以驱动控制对象，实现每一个关节的角度、角速度和关节转矩的控制；编码器作为伺服系统的反馈装置，很大程度上决定伺服系统精度。编码器安装在伺服电机上，与电机同步旋转，电机转一圈编码器也转一圈，转动的同时将编码信号送回控制器，控制器据以判断伺服电机的转向、转速、位置信息。 液压伺服控制系统按照偏差信号获得和传递方式的不同分为机-液、电-液、气-液等，其中应用较多的是机-液和电-液控制系统。 直流伺服电机由于具有低电枢感应电抗，因此可实现精确和快速的启动或停止功能。它们多用于能通过微控制器或计算机控制的装备上 我国伺服电机中高端市场主要被国外企业垄断，进口产品在我国工业机器人伺服市场上占有率达 70%以上。 国产伺服与外资尚存在一定的差距，主要体现在高低速防振动方面。 afagqag“互感器用 途：主要用于电力系统中电压、电流测量、电能计量，” 自耦变压器是指它的绕组是初级和次级在同一条绕组上的变压器，原、副绕组直接串联，自行耦合的变压器。根据结构还可细分为可调压式和固定式。自耦的耦是电磁耦合的意思，普通的变压器是通过原副边线圈电磁耦合来传递能量，原副边没有直接电的联系，自耦变压器原副边有直接电的联系，它的低压线圈就是高压线圈的一部分。 短路分断（short-circuit breaking）断路器可用来分配电能，不频繁地启动异步电动机，对电源线路及电动机等实行保护，当它们发生严重的过载或者短路及欠压等故障时能自动切断电路，其功能相当于熔断器式开关与过欠热继电器等的组合。而且在分断故障电流后一般不需要变更零部件。已获得了广泛的应用。当人身触电或电网泄漏电流超过规定值时，剩余电流动作断路器能在极短的时间内迅速切断故障电源，保护人身及用电设备的安全,俗称漏电开关浪涌保护器（Surge protection Device）是电子设备雷电防护中不可缺少的一种装置，过去常称为“避雷器”或“过电压保护器”英文简写为SPD.浪涌保护器的作用是把窜入电力线、信号传输线的瞬时过电压限制在设备或系统所能承受的电压范围内，或将强大的雷电流泄流入地，保护被保护的设备或系统不受冲击而损坏。隔离开关isolation switch顾名思义主要是用来把下游的设备从系统中隔离出去，实际操作中不可以在有电流的情况下开关。隔离开关是一种主要用于“隔离电源、倒闸操作、用以连通和切断小电流电路”，无灭弧功能的开关器件。热保护也就是过载保护。热保护：电流经过脱扣器时热元件发热（直热式电流直接过双金属片），双金属片受热变形，当变形至一定程度时，打击牵引杆从而带动机构动作切断电路。电磁脱扣器提供短路保护:电磁脱扣器与被保护电路串联。线路中通过正常电流时，电磁铁产生的电磁力小于反作用力弹簧的拉力，衔铁不能被电磁铁吸动，断路器正常运行。当线路中出现短路故障时，电流超过正常电流的若干倍，电磁铁产生的电磁力大于反作用力弹簧的作用力，衔铁被电磁铁吸动通过传动机构推动自由脱扣机构释放主触头。失压脱扣器并联在断路器的电源侧，可起到欠压及零压保护的作用。当电源侧停电或电源电压过低时，电磁铁所产生的电磁力不足以克服反作用力弹簧的拉力，衔铁被向上拉，通过传动机构推动自由脱扣机构使断路器掉闸，起到欠压及零压保护作用。分励脱扣器常用在远距离自动断电的控制上，用得最多的就是消防控制室切断非消防电源,分励脱扣器本质上是一个分闸线圈加脱扣器，给分励脱扣线圈加上规定的电压，断路器就脱扣而分闸。 ，西门子在国内 PLC 市场的综合市占率超 40%，第二大品牌三菱市占率 14%。 大型 PLC 第一大品牌是罗克韦尔，国内市场占比 40%。大型 PLC 主要应用于冶金，电力，交通等领域，因此对产品的安全性，可靠性和抗干扰性要求比较高。另外，应用大型 PLC的场合一般来说工艺比较复杂，需要多样的和灵活的通信方式以及较好的网络拓展能力，因此对大型 PLC 的网络通信能力要求较高。 中型 PLC也主要应用于项目型市场，需要建立小规模的网络，因此通信能力和组建网络的便利性，成为中型 PLC 的技术趋势，西门子的 S7 系列一度成为市场首选。 第一梯队是以西门子、罗克韦尔、施耐德等为代表的欧美企业，技术实习雄厚第二梯队是以三菱、欧姆龙等为代表的日系企业，技术实力稍落后于欧美，但具备性价比优势，在以小型 PLC 为主的 OEM 市场竞争力较强，第三梯队是以台达、信捷电气、汇川技术等为代表的本土企业，近年来发展迅速","link":"/0005%20Applied%20science/%E5%B7%A5%E7%A8%8B%E4%B8%8E%E6%8A%80%E6%9C%AF%E7%A7%91%E5%AD%A6%20Engineering%20and%20technology/%E7%94%B5%E6%B0%94%E4%B8%8E%E7%94%B5%E5%AD%90%E5%B7%A5%E7%A8%8B%20Electrical%20&%20Electronic%20Engineering/Electrical%20&%20Electronic%20Engineering%20wiki/"},{"title":"","text":"sql-complete-developers-guide-mysql-postgresql","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Information%20systems/Database%20management%20system/sql-complete-developers-guide-mysql-postgresql/"},{"title":"","text":"oracle安装教程网格安装选项。选择“单实例数据库安装”，如下图所示，单击下一步。 安装类型。选择“高级安装”，如下图所示，单击下一步。 产品语言。直接默认即可（简体中文、英语），如下图所示，单击下一步。 数据库版本。选择“企业版”，如下图所示，单击下一步。 安装位置。填入安装路径（只需要填“Oracle基目录”即可，“软件位置”会自动生成），如下图所示，单击下一步。 配置类型。选择“一般用途/事务处理”，如下图所示，单击下一步。 数据库标识符。填入全局数据库名和SID，如下图所示，单击下一步。 配置选项。切换到“字符集”选项卡，选择“使用Unicode（AL32UTF8）”，如下图所示，单击下一步。 管理选项。直接单击下一步，即选择“Database Control”如下图所示。 数据库存储。直接单击下一步，即选择“文件系统”如下图所示。 方案口令。为了便于测试，这里使用了相同的密码，实际部署时可根据实际情况自行决定。","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Information%20systems/Database%20management%20system/oracle%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"},{"title":"C programing","text":"编译器是把高级语言程序翻译成计算机能理解的机器语言指令集的程序。 不同CPU制造商使用的指令系统和编码格式不同。使用合适的编译器或编译器集，便可把一种高级语言程序转换成供各种不同类型 CPU 使用的机器语言程序。 ANSI/ISO标准的最终版本通常叫作C89（因为ANSI于1989年批准该标准）或C90（因为ISO于1990年批准该标准）ISO C和ANSI C是完全相同的标准。 1994年，ANSI/ISO联合委员会（C9X委员会）开始修订C标准，最终发布了C99标准。 2011年终于发布了C11标准 本书使用术语ANSI C、ISO C或ANSI/ISO C讲解C89/90和较新标准共有的特性，用C99或C11介绍新的特性。 编译器是把源代码转换成可执行代码的程序。可执行代码是用计算机的机器语言表示的代码。这种语言由数字码表示的指令组成。如前所述，不同的计算机使用不同的机器语言方案。C 编译器负责把C代码翻译成特定的机器语言。此外，C编译器还将源代码与C库（库中包含大量的标准函数供用户使用，如printf()和scanf()）的代码合并成最终的程序（更精确地说，应该是由一个被称为链接器的程序来链接库函数，但是在大多数系统中，编译器运行链接器）。其结果是，生成一个用户可以运行的可执行文件，其中包含着计算机能理解的代码。 用C语言编写程序时，编写的内容被储存在文本文件中，该文件被称为源代码文件（source code file）。大部分C系统，包括之前提到的，都要求文件名以.c结尾（如，wordcount.c和budget.c）。 编译器把源代码转换成中间代码，链接器把中间代码和其他代码合并，生成可执行文件。C 使用这种分而治之的方法方便对程序进行模块化，可以独立编译单独的模块，稍后再用链接器合并已编译的模块。通过这种方式，如果只更改某个模块，不必因此重新编译其他模块。另外，链接器还将你编写的程序和预编译的库代码合并。 中间文件有多种形式。把源代码转换为机器语言代码，并把结果放在目标代码文件（或简称目标文件） 目标代码文件缺失启动代码（startup code）。启动代码充当着程序和操作系统之间的接口。例如，可以在MS Windows或Linux系统下运行IBM PC兼容机。这两种情况所使用的硬件相同，所以目标代码相同，但是Windows和Linux所需的启动代码不同，因为这些系统处理程序的方式不同。 目标代码还缺少库函数。printf()函数真正的代码储存在另一个被称为库的文件中。库文件中有许多函数的目标代码。 链接器的作用是，把你编写的目标代码、系统的标准启动代码和库代码这 3 部分合并成一个文件，即可执行文件。 GNU项目始于1987年，是一个开发大量免费UNIX软件的集合GNU编译器集合（也被称为GCC，其中包含GCC C编译器）是该项目的产品之一 GCC有各种版本以适应不同的硬件平台和操作系统，包括UNIX、Linux和Windows。用gcc命令便可调用GCC C编译器。许多使用gcc的系统都用cc作为gcc的别名。 下载Cygwin和MinGW，这样便可在PC上通过命令行使用GCC编译器。Cygwin在自己的视窗运行，模仿Linux命令行环境，有一行命令提示。MinGW在Windows的命令提示模式中运行。 源代码文件应该是文本文件 Microsoft Visual Studio在新建项目时，选择C++选项，然后选择【Win32控制台应用程序】，在应用设置中选择【空项目】。 introducing Ca simple example of C1234567891011#include &lt;stdio.h&gt;int main(void) /* a simple program */{ int num; /* define a variable called num */ num = 1; /* assign a value to num */ printf(&quot;I am a simple &quot;); /* use the printf() function */ printf(&quot;computer.\\n&quot;); printf(&quot;My favorite number is %d because it is first.\\n&quot;, num); getchar(); return 0;} getchar();This code causes the program to wait for a keystroke, so the window remains open until youpress a key. the example explainedThe effect of #include &lt;stdio.h&gt; is the same asif you had typed the entire contents of the stdio.h file into your file at the point where the #include line appears The #include statement is an example of a C preprocessor directive. In general, C compilersperform some preparatory work on source code before compiling; this is termed preprocessing . The stdio.h file is supplied as part of all C compiler packages. It contains information aboutinput and output functions, such as printf(), for the compiler to use. The name stands forstandard input/output header define constants or indicate the names of functionsand how they should be used. But the actual code for a function is in a library file of precompiled code, not in a header file A C program always begins execution with the function called main(). functions are the basic modules of a C program The parts of the program enclosed in the /**/ symbols are comments. C99 added a second style of comments, one popularized by C++ and Java. The new style usesthe symbols // to create comments that are confined to a single line: // Here is a comment confined to one line. int rigue; // Such comments can go here, too. int num;This line from the program is termed a declaration statement. This particular example declares two things. First, somewhere inthe function, you have a variable called num. Second, the int proclaims num as an integer The semicolon at the end of the line identifies the line as a C statement or instruction. Thesemicolon is part of the statement int Keywords are the wordsused to express a language, and you can’t use them for other purposes. For instance, you can’tuse int as the name of a function or a variable. The word num in this example is an identifier—that is, a name you select for a variable, a function, or some other entity. the declaration connects a particular identifier with a particularlocation in computer memory, and it also establishes the type of information, or data type, tobe stored at that location. all variables must be declared before they are used. This means that you have to providelists of all the variables you use in a program and that you have to show which data type eachvariable is. C99 and C11, following the practice of C++, let you place declarations about anywhere ina block. However, you still must declare a variable before its first use. Declaring a variable to be an integer or a character type makes it possible for thecomputer to store, fetch, and interpret the data properly name choice The characters at your disposal are lowercase letters, uppercase letters, digits, and the underscore ( _). The first character must be a letter or an underscore. Operating systems and the C library often use identifiers with one or two initial underscorecharacters, such as in _kcab, so it is better to avoid that usage yourself. C names are case sensitive, meaning an uppercase letter is considered distinct from the corresponding lowercase letter. Therefore, stars is different from Stars and STARS . Four Good Reasons to Declare Variables Declaring variables helps prevent one of programming’s more subtle and hard-to-findbugs—that of the misspelled variable name. RADIUS1 = 20.4;and that elsewhere in the program you mistyped CIRCUM = 6.28 * RADIUSl; the compiler willcomplain when the undeclared RADIUSl shows up. Cprior to C99 required that the declarations go at the beginning of a block. Assignmentnum = 1; You can assign num a different value later, if you want; that is why num is termed avariable. The printf() Function actual argument of a function C uses the terms actual argument and formalargument to distinguish between a specific value sent to a function and a variable in the function used to hold the value The \\n symbol means to start a new linewhen you press the Enter key, the editor quits the current line onwhich you are working and starts a new one. The newline character, however, affects how theoutput of the program is displayed. an escape sequence. An escape sequence is used torepresent difficult- or impossible-to-type characters. e \\t for Tab and \\bfor Backspace The %d is a placeholder to show where the value of num is to beprinted. This line is similar to the following BASIC statement: PRINT “My favorite number is “; num; “ because it is first.” the d tells it to print the variable as a decimal (base 10)integer. the f inprintf() is a reminder that this is a formatting print function.Each type of data has its ownspecifier the structure of a simple programA program consists of a collection of one or more functions, one of which must becalled main(). The description of a function consists of a header and a body. The function headercontains the function name along with information about the type of information passed tothe function and returned by the function. The body is enclosed by braces ( {}) and consists of a series ofstatements, each terminated by a semicolon a simple standard C program should use the following format: 123456#include &lt;stdio.h&gt;int main(void){ statements return 0;} tips on making programs readableChoose meaningful variablenames and use comments.using blank lines to separate one conceptual section of a function from another.use one line per statement 12345678910int main(void) /* converts 2 fathoms to feet */ /* use comments */{ int feet, fathoms; /* pick meaningful names */ /* use space */ fathoms = 2; feet = 6 * fathoms; /* one statement per line */ printf(&quot;There are %d feet in %d fathoms!\\n&quot;, feet, fathoms); return 0;} taking another step in using C1234567891011121314// fathm_ft.c -- converts 2 fathoms to feet#include &lt;stdio.h&gt;int main(void){ int feet, fathoms; fathoms = 2; feet = 6 * fathoms; printf(&quot;There are %d feet in %d fathoms!\\n&quot;, feet, fathoms); printf(&quot;Yes, I said %d feet!\\n&quot;, 6 * fathoms); return 0;} declares two variables instead of just one in a single declaration statement. int feet, fathoms; and int feet;int fathoms; are equivalent feet = 6 * fathoms;means “look up the value of the variable fathoms, multiply it by 6, and assign the result of thiscalculation to the variable feet .” printing ultiple values printf(&quot;There are %d feet in %d fathoms!\\n&quot;, feet, fathoms); printf(&quot;Yes, I said %d feet!\\n&quot;, 6 * fathoms); the value printed doesn’t have to be a variable; itjust has to be something, such as 6 * fathoms, that reduces to a value of the right type. multiple functions1234567891011121314//* two_func.c -- a program using two functions in one file */#include &lt;stdio.h&gt;void butler(void); /* ANSI/ISO C function prototyping */int main(void){ printf(&quot;I will summon the butler function.\\n&quot;); butler(); printf(&quot;Yes. Bring me some tea and writeable DVDs.\\n&quot;); return 0;}void butler(void) /* start of function definition */{ printf(&quot;You rang, sir?\\n&quot;);} I will summon the butler function. You rang, sir? Yes. Bring me some tea and writeable DVDs. The C90 standard added prototypes, and older compilers might not recognize them A prototype declares to the compilerthat you are using a particular function, so it’s called a function declaration.It also specifiesproperties of the function. The C standard recommends that you provide function prototypes for all functions youuse. The standard include files take care of this task for the standard library functions. Forexample, under standard C, the stdio.h file has a function prototype for printf(). void is used to mean “empty,” not “invalid.” Older C supported a more limited form of function declaration in which you just specified thereturn type but omitted describing the arguments: void butler(); all C programs begin execution withmain(), no matter where main() is located in the program files.the usual C practiceis to list main() first because it normally provides the basic framework for a program. introducing debugging123456789101112/* nogood.c -- a program with errors */#include &lt;stdio.h&gt;int main(void)( int n, int n2, int n3;/* this program has several errors n = 5; n2 = n * n; n3 = n2 * n2; printf(&quot;n = %d, n squared = %d, n cubed = %d\\n&quot;, n, n2, n3) return 0;) syntax errors C syntax errors usevalid C symbols in the wrong places. the compiler can get confused. A true syntax error in one location might cause thecompiler to mistakenly think it has found other errors.Another common compiler trick is reporting the error a line late. semantic errorsSemantic errors are errors in meaning. g. In C, you commit a semantic errorwhen you follow the rules of C correctly but to an incorrect end. One methodis to pretend you are the computer and to follow the program steps one by one. program stateThe program state is simply the set of values of all the variables at a given pointin program execution. It is a snapshot of the current state of computation. Another approach to locating semantic problems is to sprinkle extra printf() statementsthroughout to monitor the values of selected variables at key points in the program. A debugger is a programthat enables you to run another program step-by-step and examine the value of that program’svariables. reserved identifiers, that you shouldn’t useTheydon’t cause syntax errors because they are valid names. However, the language already usesthem or reserves the right to use them, so it could cause problems if you use these identifiers tomean something else. Reserved identifiers include those beginning with an underscore character and the names of the standard library functions, such as printf() . data123456789101112131415#include &lt;stdio.h&gt;int main(void) { float weight; float value; printf(&quot;enter weight in pounds: &quot;); /* get input from the user */ scanf_s(&quot;%f&quot;, &amp;weight); value = 1700 * weight * 14.5833; printf(&quot;your weight in platinum is worth $%.2f.\\n&quot;, value); return 0;} scanf_s(“%f”, &amp;weight); Pressing Enter informs the computer that you have finished typing your response. The scanf() function uses the &amp;notation to indicate where it can find the weight variable. The scanf() andprintf() functions make this interactivity possible. The scanf() function reads datafrom the keyboard and delivers that data to the program, and printf() reads data froma program and delivers that data to your screen. use that function call twice: getchar(); getchar();The getchar() function reads the next input character, so the program has to wait for input.In this case, we provided input by typing 156 and then pressing the Enter (or Return) key, whichtransmits a newline character. So scanf() reads the number, the first getchar() reads thenewline character, and the second getchar() causes the program to pause, awaiting furtherinput. use the %f specifier in the printf() code to handle afloating-point value. The .2 modifier to the %f specifier fine-tunes the appearance of theoutput so that it displays two places to the right of the decimal. data varialbes and constantsconstants of various data types. data, the numbersand characters that bear the information you use Some types of data are preset before aprogram is used and keep their values unchanged throughout the life of the program. These areconstants.Other types of data may change or be assigned values as the program runs; these arevariables. The difference between a variable and a constant is that a variable can have its valueassigned or changed while the program is running, and a constant can’t. 14.5833 is a constant.1700.0? True, the price of platinum isn’t a constant in real life, but this program treats it as a constant data type keywords Original K&amp;R Keywords C90 K&amp;R Keywords C99 Keywords int signed _Bool long void _Complex short _Imaginary unsigned char float double If a datum is a constant, the compiler can usually tell its typejust by the way it looks: 42 is an integer, and 42.100 is floating point. A variable, however,needs to have its type announced in a declaration statement. The int keyword provides the basic class of integers used in C. The next three keywords ( long ,short, and unsigned) and the C90 addition signed are used to provide variations of thebasic type, for example, unsigned short int and long long int. the char keyword designates the type used for letters of the alphabet and for other characters, such as #, $, %, and*. The char type also can be used to represent small integers. float, double, and thecombination long double are used to represent numbers with decimal points. The _Bool typeis for Boolean values ( true and false) _Complex and _Imaginary represent complex and imaginary numbers, respectively. two families on the basis of howthey are stored in the computer: integer types and floating-point types. For a computer, the difference is reflected in the way they are stored. The smallest unit of memory is called a bit. It can hold one of two values: 0 or 1.The bit is the basic building block of computer memory. The byte is the usual unit of computer memory. For nearly all machines, a byte is 8 bits, and that is the standard definition, at least when used to measure storage.Because each bit can be either 0 or 1, there are 256 (that’s 2 timesitself 8 times) possible bit patterns. These patternscan be used, for example, to represent the integers from 0 to 255 or to represent a set ofcharacters. A word is the natural unit of memory for a given computer design. For 8-bit microcomputers,such as the original Apples, a word is just 8 bits. personal computers moved up to16-bit words, 32-bit words, and, at the present, 64-bit words. Larger word sizes enable fastertransfer of data and allow more memory to be accessed. integerIntegers are stored as binary numbers. The integer 7, for example, is written 111 in binary.Therefore, to store this number in an 8-bit byte, just set the first 5 bits to 0 and the last 3 bitsto 1 floating point numberadding a decimal point makes a value a floating-pointvalue7 is an integer type but 7.00 is a floating-point type. e-notation3.16E7 means to multiply 3.16 by 10 to the 7th power Floating-point representation involves breaking up a numberinto a fractional part and an exponent part and storing the parts separately. 7.00 The decimal analogy would be to write 7.0 as 0.7E1. Here, 0.7 is the fractional part, and the 1 is the exponent part. A computer, of course, would use binary numbers and powers of two instead of powersof 10 for internal storage. Floating-point numbers can represent a much larger range of values than integers can Because there is an infinite number of real numbers in any range—for example, in therange between 1.0 and 2.0—computer floating-point numbers can’t represent all thevalues in the range. Instead, floating-point values are often approximations of a truevalue. For example, 7.0 might be stored as a 6.99999 float value Floating-point operations were once much slower than integer operations basic c data typesrepresent a constant with a literal value the int typeC gives the programmer the option of matching a type to a particular use.C integer types vary in the range of values offered and in whether negative numbers can beused. The int type is a signed integer. That means it must be an integer and it can be positive, negative, or zero.Typically, systems represent signed integers by using the value of a particular bit to indicate thesign. The range in possible values depends on the computer system. Typically, an intuses one machine word for storage. 16 bits to store an int. This allows a range in values from –32768 to 32767.ISO C specifies that the minimum range for type int should be from –32767 to 32767 . Declaring an int Variableint erns;int hogs, cows, goats; Initializing a VariableTo initialize a variable means to assign it a starting, or initial, value. this can be done aspart of the declaration. Just follow the variable name with the assignment operator ( =) and thevalue you want the variable to have 1234int hogs = 21;int cows = 32, goats = 14;int dogs, cats = 94; /* valid, but poor, form, best to avoid putting initialized and noninitialized variables in thesame declaration statement. only cats is initialized*/ type int cosntansThe various integers ( 21, 32, 14, and 94) in the last example are integer constants, also calledinteger literals. When you write a number without a decimal point and without an exponent, Crecognizes it as an integer C treats most integer constants as type int. Very large integers can be treated differently; Printing int ValuesThe %d is called a formatspecifier because it indicates the form that printf() uses to display a value. Each %d in theformat string must be matched by a corresponding int value in the list of items to be printed.That value can be an int variable, an int constant, or any other expression having an intvalue. check to see that the number of format specifiers you give to printf() matches the number ofvalues to be displayed. 123456789101112#include &lt;stdio.h&gt;int main(void) { int ten = 10; int two = 2; printf(&quot;%d minus %d is %d\\n&quot;, ten, 2, ten - two); printf(&quot;%d minus %d is %d\\n&quot;, ten); //fogot 2 arguments return 0;} 10 minus 2 is 810 minus -641 is -470812528 Most functions take a specific number of arguments, and thecompiler can check to see whether you’ve used the correct numberprintf() canhave one, two, three, or more arguments, and that keeps the compiler from using its usualmethods for error checking Octal and HexadecimalC assumes that integer constants are decimal, or base 10, numbers. However, octal(base 8) and hexadecimal (base 16) numbers are popular with many programmers. Because 8and 16 are powers of 2, and 10 is not, these number systems occasionally offer a more convenient way for expressing computer-related values. For example, the number 65536, which oftenpops up in 16-bit machines, is just 10000 in hexadecimal Also, each digit in a hexadecimalnumber corresponds to exactly 4 bits. For example, the hexadecimal digit 3 is 0011 and thehexadecimal digit 5 is 0101. So the hexadecimal value 35 is the bit pattern 0011 0101, and thehexadecimal value 53 is 0101 0011. This correspondence makes it easy to go back and forthbetween hexadecimal and binary (base 2) notation In C, special prefixes indicatewhich number base you are using. A prefix of 0x or 0X (zero-ex) means that you are specifyinga hexadecimal value, so 16 is written as 0x10, or 0X10, in hexadecimal. Similarly, a 0 (zero)prefix means that you are writing in octal. For example, the decimal value 16 is written as 020in octal. Be aware that this option of using different number systems is provided as a service for yourconvenience. It doesn’t affect how the number is stored Displaying Octal and HexadecimalTo display an integer in octal notationinstead of decimal, use %o instead of %d. To display an integer in hexadecimal, use %x If youwant to display the C prefixes, you can use specifiers %#o, %#x, and %#X to generate the 0, 0x ,and 0X prefixes respectively. 12345678910#include &lt;stdio.h&gt;int main(void) { int x = 100; printf(&quot;dec = %d; octal = %o; hex = %x\\n&quot;, x, x, x); printf(&quot;dec = %d; octal = %#o; hex = %#X\\n&quot;, x, x, x); return 0;} dec = 100; octal = 144; hex = 64dec = 100; octal = 0144; hex = 0X64 other integer typesThe type short int or, more briefly, short may use less storage than int, thus savingspace when only small numbers are needed. Like int, short is a signed type. The type long int, or long, may use more storage than int, thus enabling you toexpress larger integer values. Like int, long is a signed type. The type long long int, or long long (introduced in the C99 standard), may usemore storage than long. At the minimum, it must use at least 64 bits. Like int, longlong is a signed type. The type unsigned int, or unsigned, is used for variables that have only nonnegativevalues. The bit used to indicate the sign of signed numbers now becomes another binary digit,allowing the larger number.This type shifts the range of numbers that can be stored. For example, a 16-bitunsigned int allows a range from 0 to 65535 in value instead of from –32768 to 32767 The types unsigned long int, or unsigned long, and unsigned short int, orunsigned short, are recognized as valid by the C90 standard. To this list, C99 addsunsigned long long int, or unsigned long long . The keyword signed can be used with any of the signed types to make your intentexplicit. For example, short, short int, signed short, and signed short int are allnames for the same type. Declaring Other Integer Types123456789long int estine;long johns;short int erns;short ribs;unsigned int s_count;unsigned players;unsigned long headcount;unsigned short yesvotes;long long ago; // c99 why multiple integer typesC guarantees only that short is no longer than int and that long is no shorter than int. Theidea is to fit the types to the machine. For example, in the days of Windows 3, an int and ashort were both 16 bits, and a long was 32 bits. Later, Windows and Apple systems moved tousing 16 bits for short and 32 bits for int and long. Using 32 bits allows integers in excess of2 billion. Now that 64-bit processors are common, there’s a need for 64-bit integers, and that’sthe motivation for the long long type. The most common practice today on personal computers is to set up long long as 64 bits,long as 32 bits, short as 16 bits, and int as either 16 bits or 32 bits, depending on themachine’s natural word size. The C standard provides guidelines specifying the minimum allowable size for each basic datatype.The minimum range for both short and int is –32,767 to 32,767, corresponding to a16-bit unit,and the minimum range for long is –2,147,483,647 to 2,147,483,647, corresponding to a 32-bit unit. For unsigned short and unsigned int, the minimum range is 0 to 65,535, and forunsigned long, the minimum range is 0 to 4,294,967,295. The long long type is intendedto support 64-bit needs. Its minimum range is a substantial –9,223,372,036,854,775,807to 9,223,372,036,854,775,807, and the minimum range for unsigned long long is 0 to18,446,744,073,709,551,615. : If you are writing code ona machine for which int and long are the same size, and you do need 32-bit integers, youshould use long instead of int so that the program will function correctly if transferred to a16-bit machine. long constats and long long constants Normally, when you use a number such as 2345 in your program code, it is stored as an inttype. What if you use a number such as 1000000 on a system in which int will not hold sucha large number? Then the compiler treats it as a long int, assuming that type is large enough.If the number is larger than the long maximum, C treats it as unsigned long. If that is stillinsufficient, C treats the value as long long or unsigned long long, if those types areavailable. To cause a smallconstant to be treated as type long, you can append an l (lowercase L) or L as a suffix. Thesecond form is better because it looks less like the digit 1. Therefore, a system with a 16-bitint and a 32-bit long treats the integer 7 as 16 bits and the integer 7L as 32 bits Similarly, on those systems supporting the long long type, you can use an ll or LL suffix toindicate a long long value, as in 3LL. Add a u or U to the suffix for unsigned long long, asin 5ull or 10LLU or 6LLU or 9Ull Printing short, long, long long, and unsigned TypesNotethat although C allows both uppercase and lowercase letters for constant suffixes, these formatspecifiers use just lowercase. To print an unsigned int number, use the %u notation.To print a long value, use the %ldformat specifier. C has several additional printf() formats. First, you can use an h prefix for short types.Therefore, %hd displays a short integer in decimal form, Both the h and l prefixes can be used with u for unsigned types. For instance,you would use the %lu notation for printing unsigned long types. Systems supporting the long long types use %lld and %llu for the signed andunsigned versions 12345678910111213#include &lt;stdio.h&gt;int main(void) { unsigned int un = 3000000000; short end = 200; long big = 65537; long long verybig = 12345678908642; printf(&quot;un = %u and not %d\\n&quot;, un, un); printf(&quot;end = %hd and %d\\n&quot;, end, end); printf(&quot;big = %ld and not %hd\\n&quot;, big, big); printf(&quot;verybig = %lld and not %ld\\n&quot;, verybig, verybig);} un = 3000000000 and not -1294967296end = 200 and 200big = 65537 and not 1verybig = 12345678908642 and not 1942899938","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/c%20c++/c_programing/"},{"title":"itpestudy c c++","text":"C 概述计算机组成 计算机基本结构为 5 个部分，分别是运算器、控制器、存储器、输入设备、输出设备，这 5 个部分也被称为冯诺依曼模型。 accumulator(computer science) a register that has a built-in adder that adds an input number to the contents of the register arithmetic logic unit/əˈrɪθmətɪk/the type of mathematics that deals with the adding, multiplying, etc. of numbers 控制单元负责控制 CPU 工作，逻辑运算单元负责计算，而寄存器可以分为多种类 通用寄存器，用来存放需要进行运算的数据，比如需要进行加和运算的两个数据。程序计数器，用来存储 CPU 要执行下一条指令「所在的内存地址」，注意不是存储了下一条要执行的指令，此时指令还在内存中，程序计数器只是存储了下一条指令「的地址」。指令寄存器，用来存放当前正在执行的指令，也就是指令本身，指令被执行完成之前，指令都存储在这里。 一个程序执行的时候，CPU 会根据程序计数器里的内存地址，从内存里面把需要执行的指令读取到指令寄存器里面执行，然后根据指令长度自增，开始顺序读取下一条指令。 总线是用于 CPU 和内存以及其他设备之间的通信，总线可分为 3 种： 地址总线，用于指定 CPU 将要操作的内存地址；数据总线，用于读写内存的数据；控制总线，用于发送和接收信号，比如中断、设备复位等信号，CPU 收到信号后自然进行响应，这时也需要控制总线； 当 CPU 要读写内存数据的时候，一般需要通过下面这三个总线： 首先要通过「地址总线」来指定内存的地址；然后通过「控制总线」控制是读或写命令；最后通过「数据总线」来传输数据； 指令 MIPS 的指令是一个 32 位的整数，高 6 位代表着操作码，表示这条指令是一条什么样的指令，剩下的 26 位不同指令类型所表示的内容也就不相同，主要有三种类型R、I 和 J。 R 指令，用在算术和逻辑操作，里面有读取和写入数据的寄存器地址。如果是逻辑位移操作，后面还有位移操作的「位移量」，而最后的「功能码」则是再前面的操作码不够的时候，扩展操作码来表示对应的具体指令的；I 指令，用在数据传输、条件分支等。这个类型的指令，就没有了位移量和功能码，也没有了第三个寄存器，而是把这三部分直接合并成了一个地址值或一个常数；J 指令，用在跳转，高 6 位之外的 26 位都是一个跳转后的地址； 指令从功能角度划分 数据传输类型的指令，比如 store/load 是寄存器与内存间数据传输的指令，mov 是将一个内存地址的数据移动到另一个内存地址的指令；运算类型的指令，比如加减乘除、位运算、比较大小等等，它们最多只能处理两个寄存器中的数据；跳转类型的指令，通过修改程序计数器的值来达到跳转执行指令的过程，比如编程中常见的 if-else、switch-case、函数调用等。信号类型的指令，比如发生中断的指令 trap；闲置类型的指令，比如指令 nop，执行后 CPU 会空转一个周期； 加和运算 add 指令是属于 R 指令类型： add 对应的 MIPS 指令里操作码是 000000，以及最末尾的功能码是 100000，这些数值都是固定的，查一下 MIPS 指令集的手册就能知道的；rs 代表第一个寄存器 R0 的编号，即 00000；rt 代表第二个寄存器 R1 的编号，即 00001；rd 代表目标的临时寄存器 R2 的编号，即 00010；因为不是位移操作，所以位移量是 00000 key wordsenumenumerate枚举to name things on a list one by one externexternal volatile/ˈvɑːlətl/易变的change suddenly and unexpectedly. 1234567891011#include &lt;stdio.h&gt; // 引入头文件 // stdio.h系统标准输入、输出头文件。即引入printf函数 // &lt;&gt; 系统同文件 &quot;&quot; 用户自定义头文件int main(void) // main函数，程序的唯一入口{ printf(&quot;hello world!\\n&quot;); system(&quot;pause&quot;); // 执行系统命令，其他如清空屏幕system(&quot;cls&quot;); return 0; // 0 表示程序正常结束} system(&quot;pause&quot;); gccwindows explore地址栏选择路径 —》 直接输入CMD以当前文件夹地址打开CMD gcc helloworld.c -o helloworld.exehelloworld.exe linux gccvi hello.cinsertesc -&gt; :wq apt install gccgcc hello.c -o hello./hello 预处理 gcc -E hello.c -o hello.i 头文件展开 宏定义替换:将宏名替换为宏值 123456789101112#include &lt;stdio.h&gt; // 引入头文件#define PI 3.14 //定义常量，宏定义// stdio.h系统标准输入、输出头文件。即引入printf函数// &lt;&gt; 系统同文件 &quot;&quot; 用户自定义头文件int main(void) // main函数，程序的唯一入口{ printf(&quot;%d\\n&quot;, PI); system(&quot;pause&quot;); return 0; // 0 表示程序正常结束} 替换注释为空行 展开 条件编译 1234567891011121314151617#include &lt;stdio.h&gt; // 引入头文件#define PI 3.14 //定义常量，宏定义// stdio.h系统标准输入、输出头文件。即引入printf函数// &lt;&gt; 系统同文件 &quot;&quot; 用户自定义头文件int main(void) // main函数，程序的唯一入口{#ifdef PI printf(&quot;PI exits&quot;);#endif // PI printf(&quot;%d\\n&quot;, PI); system(&quot;pause&quot;); return 0; // 0 表示程序正常结束} 编译检查语法错误生成汇编语言的汇编文件 gcc -S hello.i -o hello.s 汇编将汇编指令翻译成二进制机器编码 gcc -c hello.s -o hello.o 链接gcc hello.o -o hello 数据段合并数据地址回填库引入 printf1234567891011121314151617181920#include &lt;stdio.h&gt;int main(void){ int a = 3; int b = 5; int c; c = a + b; printf(&quot;%d\\n&quot;, c); printf(&quot;c = %d\\n&quot;, c); printf(&quot;%d + %d = %d\\n&quot;, a, b, c); printf(&quot;%d + %d = %d\\n&quot;, a, b, a + b); return 0;} 8c = 83 + 5 = 83 + 5 = 8 debug f11 逐语句，会进入函数内部f10 逐过程，不会进入子函数 调试 —》 窗口 —》 反汇编 visual studioctrl + k, ctrl + f 格式美化代码ctrl + k, ctrl + c 注释ctrl + k, ctrl + u 取消注释 常量 “hello”, ‘A’, -10, 3.1415#define PI 3.1415 //推荐const int a = 10; //只读变量 123456789101112131415#include &lt;stdio.h&gt;#define PI 3.1415int main(void) { const int r = 3; const int a = 10; float s; // a = 50; //PI = 3.15; s = PI * r * r; float l = 2 * PI * r; printf(&quot;s = %.2f, l = %f\\n&quot;, s, l); return 0;} printf(“s = %.2f, l = %f\\n”, s, l);%.2f 保留2位小数，会进行四舍五入 extern 关键字, 只是声明外部符号（标识符）extern int a; sizeof关键字返回unsigned int类型printf(&quot;size of int = %u\\n&quot;, sizeof(int))； 123456789101112131415161718192021222324#include &lt;stdio.h&gt;int main(void) { printf(&quot;size of int = %d\\n&quot;, sizeof(int)); printf(&quot;size of short = %d\\n&quot;, sizeof(short)); printf(&quot;size of long = %d\\n&quot;, sizeof(long)); printf(&quot;size of long long = %d\\n&quot;, sizeof(long long)); int a = 10; short b = 20; long c = 30; long long d = 40; printf(&quot;size of a = %d\\n&quot;, sizeof(a)); printf(&quot;size of b = %d\\n&quot;, sizeof(b)); printf(&quot;size of c = %d\\n&quot;, sizeof(c)); printf(&quot;size of d = %d\\n&quot;, sizeof(d)); unsigned int e = 10; unsigned short f = 20; unsigned long g = 30; unsigned long long h = 40; printf(&quot;size of e = %d\\n&quot;, sizeof(e)); printf(&quot;size of f = %d\\n&quot;, sizeof(f)); printf(&quot;size of g = %d\\n&quot;, sizeof(g)); printf(&quot;size of h = %d\\n&quot;, sizeof(h));} size of int = 4size of short = 2size of long = 4size of long long = 8size of a = 4size of b = 2size of c = 4size of d = 8size of e = 4size of f = 2size of g = 4size of h = 8int a = 10;sizeof intsizeof a char123456789101112#include &lt;stdio.h&gt;int main(void) { char ch = 'A'; printf(&quot;ch = %c\\n&quot;, ch); printf(&quot;ch = %d\\n&quot;, ch); ch = 97; printf(&quot;ch = %c\\n&quot;, ch); system(&quot;pause&quot;); return 0;} ch = Ach = 65ch = a \\0char a = ‘\\0’;printf(“a = %d\\n”, a); // 0 浮点数1234567891011121314#include &lt;stdio.h&gt;int main(void) { float a = 3.1415f; double b = 13.45687; float c = 3.2e3f; float d = 1.6e-3f; printf(&quot;a = %.3f\\n&quot;, a); printf(&quot;b = %08.3lf\\n&quot;, b); //总字符数为8（包含小数点），不足的0填充，保留3位小数，最后一位为四舍五入的。 printf(&quot;c = %.3f\\n&quot;, c); printf(&quot;d = %.3f\\n&quot;, d); return 0;} a = 3.141b = 0013.457c = 3200.000d = 0.002 除2方向取余法 10 –&gt; 2原码，反码，补码原码：最高位为符号位 反码：正数与原码相同负数，最高位为1，其他位取反 补码：为计算机中存储负数的形式正数与原码相同负数，最高位为1，其他位取反 + 100000000 为 011111111 为 -128","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/c%20c++/itpestudy%20c%20c++/"},{"title":"","text":"12345678910111213enum primaryColor { red, yellow, blue = 10, green }; // defining enumenum primaryColor myColor, myColor2, myColor3; // defining a variablemyColor = red;printf(&quot;%d\\n&quot;, myColor); // 0myColor2 = blue;printf(&quot;%d\\n&quot;, myColor2); // 10myColor3 = green;printf(&quot;%d\\n&quot;, myColor3); // 11 _Bool isSameColor = (myColor == myColor2);printf(&quot;%d&quot;, isSameColor); // 0, false_Bool isRed = (myColor == red);printf(&quot;%d&quot;, isSameColor); // 1, true 1234567char broiled;broiled = 'T';//broiled = T; //think T is a varible//broiled = &quot;T&quot;; //think &quot;T&quot; is a stringbroiled = 65;char x = '\\n'; // newline","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/c%20c++/lp_c/"},{"title":"udemy html5 css3","text":"browserrequesthttps://omnifood.de web serverresponsehtml css js static website: website where files are simply sent to browser as they arefront end development dynamic website: website files are assembled on the serverback end developmentwebserver app dbback-end languages that run on servers html -&gt; content -&gt; nounscss -&gt; presentation -&gt; adjectivesjs -&gt; programming language: dynamic effects and web applications -&gt; verbs HTML fundamentalsintroduction to htmlhtml: hypertext markup language html is a markup language that web developers use to structure and descripe the content of a webpage(not a programming language) html consists of elements that describe different types of content: paragraphs, links, headings, images, video, etc. web browsers understand html and render Html code as websites &lt;p&gt;HTML is a markup language&lt;/p&gt; &lt;p&gt;opening tag: name of the element, wrapped in &lt; and &gt; content: content of the element, in this example text. but it might be another element(child element). some elements have no content(e.g. &lt;img&gt;) &lt;/p&gt;closing tag: same as opening tag, but with a /. when element has no content, it’s omitted. HTML document structure123456789&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;title&gt;The Basic Language of the Web: HTML&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;The Basic Language of the Web: HTML&lt;/h1&gt; &lt;/body&gt;&lt;/html&gt; text elements&lt;em&gt;&lt;/em&gt;emphersized listsimages and attributeshyperlinksStructure our pagesemantic htmlcss fundamentalscascading style sheets css describes the visual style and presentation of the content written in HTML css consists of countless properties that developers use to format the content: properties about font, text, spacing, layout, etc. inline, internal and external cssstyling text16px default combining selectorsworking with colorsrgb(12,125,255) rgba(0,255,255,0.3) #00ffff#0ff when allcolors are identical pairs when colors in all 3 channels are the same, we get a gray color pseudo classusing chrome devtoolsconflicts between rules multiple -&gt; last selector in code applies marked !important inline style id selector class or pseudo class selector element selector universal selector (*) inheritance and the universal selectorcss box model margin and paddingclapping of margins adding dimentioncentering our pageclass container 12345.container { width: 800px; margin-left: auto; margin-right: auto;} types of boxes inline elementsoccupies only the space necessary for its contentcauses on line-break after or before the elementbox model applies in a different way: heights and widths do not applypaddings and margins are applied only horizontally(left and right) astrongembutton with cssdisplay: inline block level elementselements are formatted visually as blockselements occupy 100% of parent element’s width, no matter the contentelements are stacked vertically by default, one after anotherthe box-model applies as showed earlier with cssdisplay: block inline block boxeslooks like inline from the outside, behaves like block-level on the insideoccupies only content’s spacecauses no line-breaksbox-model applies as showed img with cssdisplay: inliblock absolute positioningnormal flowin flow: laid out according to their order in the html code absolute positioningout of flow: no impact on surrounding elements, might overlap themuse top, bottom, left, or right to offset the element from its relatively positioned container(the first) pseudo elements+adjacent siblingsibling right after the element googling and reading documentationdebugging and asking questionschrome dev toolfont-sizearrowshift arrow challenge #3the 3 ways of building layoutslayout is the way text, images and other content is placed and arranged on a webpagelayout gives the page a visual structure, into which we place our content building a layout: arranging page elements into a visual struture, instead of simply having them placed one after another(normal flow) page layout component layout float layoutsold way element is removed from the normal flow: “out of flow”text and inline elements will wrap around the floated elementthe container will not adjust its height to the element flexboxlaying out elements in a 1-dimensional row without using floats. perfect for componnet layouts css gridfor laying out element in a fully-fledged 2-dimentional grid. perfect for page layouts and complex componnets. using floatsboth children floatcollapse of the elements clearing floatbox-sizing: border-box challenge #1introduction to flexboxtall as the tallest a flexbox overviewflexbox is a set of related css properties for building 1 dimentional layoutthe main idea behind flexbox is that empty space inside a container element can be automatically divided by its child elemenntsflexbox makes it easy to automatically align items to one another inside a parent container, both horizontally and verticallyflexbox solves common problems such as vertical centering and creating equal-height colums spacing and aligning flex items the flex propertyadd flexbox to our projectbuilding a simple flexbox layoutchallenge #2introduction to css grida css grid overviewcss gird is a set of css properties for building 2-dimentional layoutsthe main idea behind css grid is that we divide a container element into rows and columns that can be filled with its child elementsin two-dimentional contexts, css grid allows us write less nested html and easier to read csscss grid is not meant to replace flexbox! instead, they work perfectly together. need a 1d layout? use flexbox. need 2D layout? use css gird sizing grid columns and rowsfr fraction placing and spanning grid items aligning grid items and tracksbuilding a simple css grid layoutchallenge #3.0web design rules and frameworkoverview of web design and website personalitiesingredients typography colors images/illustrations icons shaows border-radius whitespace visual hierarchy user experience componnets/layout rule #1 typographyserif sans-serif use only good and popular typefaces and play it safe its okay to use just one typeface per page! if you want more, limit to typefaces. choose the right typefaced according to your website personality: choose the right personality for your website decide between a serif and sans-serif typeface experiment with all the “good” typefaces(and other typefaces from google fonts!) to see which ones best fits your websites message keep trying different typefaces as you design and build the page use good font sizes and weights when choosing font-sizes, limit choices! use a “type scale” tool or other pre-defined range use a font size between 16px and 32px for normal text for long text (like a blog post), try a size of 20px or even bigger for headlines, you can go really big (50px+) and bold (600+), depending on personality for any text, dont use a font weight under 400 (regular) create a good reading experience use less than 75 character per line for normal-sized text, use a line height between 1.5 and 2. for big text, go below 1.5 the smaller or longer the text, ther larger the line height needs to be! decrease letter spcing in headlines, if it looks unnatural(this will come from experience, if the headline looks not nature) experiment with all caps for short titles. make them small and bold and decrease letter spacing usually, dont justify text(每行平铺) dont center long text blocks. small blocks are fine. rule # colorschoose the right color make the main color match your website’s personality: colors covey meaning! red drawing a lot of attention, and symbolizes power, passion, and excitment orange is less aggressive, and conveys hapiness, cheerfulness, and creativity yellow means joy, brightness and intelligece greens represents harmony, nature, growth, and health blue is associated with peach, trustworthiness and professionalism purple conveys wealth, wisdom, and masic pink represents romance, care and affection brown is associated with nature, durability and comfort black symbolizes power, elegence and minimalism, but also grief and sorrow-use a good color tone! dont choose a random tone or css named colors. establish a color system you need at least two types of colors in your color palette: a main color and a gray color with more experience, you can add more colors: accent(secondary) for diversity, create lighter and darker “version”(tints and shades) when and how to use colors use main color to draw attention to the most important elements on the page use colors to add interesting accents or make entire components or sectoin stand out you can try to use your color stategically in images and illustrations color and typograghy on dark colored backgrounds, try to use a tint of the background (“lighter version”) for text text should usually not be completely black. lighten it up it looks heavy and uninviting dont make text too light! use a tool to check contrast between text and background colors (tool: coolors) contrast ratio needs to be at least 4.5:1 for normal text and 3 : 1 for large text(18px+) implenting colorsimages and illustations different types of images: product photos, storytelling photos, illustrations, patterns storytelling: using or related to the product abstract way of storytelling pattens -&gt; background use images to support your websites message and story. so only use relevant images! perfer original images. if not possible, use orginal-looking stock images(not generic ones!) try to show real people to trigger users emtions if necessary, corp images to fit your message experiment combining photos, illustration and pattern handling text on images method #1 darker or brighten image(completely or partially, using a gradient) method #2 postion text into neutral image area method #3 put text in a box some technical details to account for high-res screens, make image dimensions 2X as big as their displayed size compress imgaes for a lower file size and better perfomance when using multiple images side by side, make sure they have the exack same dimensions rule #4: ICONS use a good icon pack, there are tons of free and paid icons packs use only one icon pack. dont mix icons from different icon packs use svg icons or icon fonts. dont use bitmap image formats(.jpg and .png)! adjust to website personality! roundness, weight and filled/outlined depend on typography when to use icons use icons to provide visual assitance to text use icons for product feautre blocks use icons associated with actions, and label them(unless no space or icon is 100% clear) use icons as bullet points (list) use icons well to keep icons neutral, use same color as text. to draw more attention, use different color dont confuse your users: icons need to make sense and fit the text or action! dont make icons larger than what they were designed for. if needed, enclose them in a shape icons were designed for big use:lots of details, thine lines implementing iconsrules #5: shadows shadow creates depth(3d): ther more shaow, the further away from the interface the element is use shadows well you dont have to use shadows! only use them if it makes sense for the website personality serious/elegant -&gt; less shadows playfull/fun -&gt; more shadows use shadows in small doses: dont add shadows to every element! go light on shadows, dont make them too dark! use shadows in the right situation use small shadows for smaller elements that should stand out (to draw attention) use medium-sized shadows for larger areas that should stand out a bit more use large shadows for elements that should really float above the interface experiment with changing shadows on mouse interaction (click and hover) bonus: experiment with glows(colored shadows) implementing shadowsrules #6: border-radius use border-radius to increase the playfulness and fun of the design, to make it less serious typefaces have a certain roundness: make sure that border-radius matches that roundness! use border-radius on buttons, image, around icons, standout sections and other elements implementing border-radiusrules #7: whitespacethe right amount of whitespace make designs look clean, mordern and polishedwhitespace communicates how different pieces of information are related to one anotherwhitespace implies invisible relationships between the elements of a layout where to use whitespace use tons of whitespace between sections use a lot of whitespace between groups of elements use whitespace between elements inside groups of elements, try to use whitespace instead of lines how much whitespace the more some elements(or groups of elements) belong together, the closer they should be! start with a lot of whitespace, maybe even too much! then remove whitespace from there to much whitespace looks detached, too little looks too crammed match other design choices. if you have big text or big icons, you need more whitespace. try a hard rule, such as using multiplesof 16px for all spacing rule #8: visual hierarchyestablishing which elements of a design are the most important ones visual hierarchy is about drawing attention to these most important elements visual hierarchy is about defining a “path” for users, to guide them through the page we use a combination of position, size, colors, spacing, borders, and shadows to establish a meaningful visual hierarchy between elements/components fundamentals position important elements closer to the top the page, where they get more attention use images mindfully, as they draw a lot of attention(larger images get more attention) whitespace create separation, so use whitespace strategically to emphasize elements hierarchy for text elements for text elements, use font size, font weight, color, and whitespace to convey importance. what text elements to emphasize? titles, subtitles, links, buttons, data points, icons you can de-emphasize less important text, like labels or secondary/additional information hierarchy between components emphasize an important component using background color, shadows, or border(or multiple) try emphasizing some component a over component b by de-emphasizing component b what components to emphasize? testimonials, call-to-action sections, highlight sections, preview cards, form, pricing tables, important rows/columns in table, etc. testimonials, call-to-action sections, highlight sections preview cards form, pricing tables, important rows/columns implementing whitespace and visual hierarchyrules #9: user experience(ux)what is ux “design is not just what it looks like and feels like. design is how it works” –Steve Jobs user experience is the overall experience the user has while interacting with the product does the app feel logical and well thought out does the navigation work intuitively are users reaching their goals ux design guiding principle: goals a website or application exists for a reason: a user has a goal for visiting it, and a business has a goal for creating it. ux rules for usability dont design complicated layouts. dont reinvent the wheel. use patterns that users know. make your call-to-action the most prominent element, and make the text descriptive. use blue text and underlined text only for links animations should have a purpose and be fast: between 200 and 500 ms in forms, align labels and fields in a single vertical line, to make the form easier to scan offer users good feedback for all actions: form errors, form success, etc. place action buttons where they will create an effect(law of locality) ux rules for website content use a descriptive, keyword-focused headline on your main page. dont be vague or fancy! only include relevant information, efficiently! cut out fluff and make the content 100% clear use simple words! avoid technical jargon and “smart-sounding” words break up long text with sub-heading, images, block quotes, bullet points, etc. the website-personalities-framework serious/elegant industries: real estate, high fashion, jewelry, luxury products or services typography: serif typefaces(especially in headings), light font weight, small body font size colors: gold, pastel colors, black, dark blue or grey image: big, high-quality images are used to feature elegant and expensive products icons: usually no icons, but thin icons and lines may be used shadows: usually no shadows boarder-radius: usally no border-radius layout: a creative and experimental layout is quite common minimalist/simple industries: fashion, porfolios, minimalism companies, software startups typography: boxy/squered sans-serif typefaces, small body font size colors: usually black or dark grey, on pure white background. usually just one color throughout the designimages: few images, which can be uesed to add some color to the design. usually no illustrations, but if, then just blackicons: usally no icons, but small simple black icons may be used shadow: usually no shadowsborder-radius: usually no border-redius layout: simple layout, a narrow one-column layout is quite common. plain/neutral industries: well-established corporations, companies that dont want to make an impact through design typography: neutral-looking sans-serif typefaces are used, and text is usually small and doesnt have visual impact colors: safe colors are employed, nothing too bright or to washed-out. bule and blacks are common images: images are frequently used, but usually in a small format icons: usally no icons, but simple icons may be used shadows: usually no shadows border-radius: usually no border-radius layout: structured and condensed layout, with lots of boxes and rows bold/confident industries: digital agencies, software starups, travel, “strong” companies typography: boxy/squared sans-serif typefaces, big and bold typography, especially headings. uppercase headings are common color: usually multiple bright colors. big color blocks/sections are used to draw attention images: lots of big images are usually displayed icons, shadows, border-radius: usually no layout: all kinds of layouts, no particular tendencies calm/peaceful industries: healthcare, all products with focus on consummer well-being typography: soft serif typefaces frequently used for headings, but sans-serif heading might be used too colors: pastel/washed-out colors: light oranges, yellows, browns, greens, blues images: images and illustrations are usual, matching calm color palette icons: icons are quite frequent shadows: usually no shadows, but might be used sparingly border-radius: some border-radius is usual layout: all kinds of layout, no particular tendencies startup/upbeat industries: software starups, and other modern-looking companies typography: medium-sized headings(not too large), usually one sans-serif typeface in whole design. tendency for light text colors colors: blues, greens and purples are widely used. lots of light background(mainly gray), gradients are also common image: images or illustrations are always usesd. 3d illustartions are morden. sometimes patterns and shapes add visual details icons: icons are very frequent shadows: subtle shadows are frequent. glows are becoming modern border-radius: border-radius is very common layout: rows of cards and z-pattens are usual, as well as animations playful/fun industries: child products, animal products, food typography: round and creative(e.g. handwritten) sans-serif typefaces are ferquent. centered text is more common colors: multiple colors are frequently used to design a colorful layout, all over background and text images: images, hand-drawn(or 3d)illustrations, and geometric shapes and patterns are all very frequently used icons: icons are very frequent. many times in a hand-drawing style shadows: subtle shadows are quite common, but not always used border-radius: border-radius is very common layout: all kinds of layouts, no particular tendencies components and layout patternsrule #10 - part 1: elements and componentselements -&gt; components -&gt;layouts -&gt; webpage use common elements and components to convey your websites information combine components into layout using common layout patterns assemble different layout areas into a complete, final page A elements textbuttonsimagesinput elementstags B components breadcrumbspaginationalert and status barsstatisticsgalleryfeature boxpreview and profile cardsaccordiontabscarouselcustomer testimonialscustomer logosfeatured-in logosstepsformstablespricing tablesmodal widows C section components navigaitonherosectionfootercall to action sectionfeature row D layout patterns row of boxes or cardsgrid of boxes or cardsz patternf patternsingle columnsidebarmulti-column/magzineasymmetry/experimental text button image input elements tag componentsbreadcrumbs pagination alert and status bars statistics gallery feature box preview and profile cards have dataclick to some action profile card accordionhiding information tab carouselslider customer testimonials customer logos featured-in logo steps forms login table pricing table modal windows弹窗 function marketing building an accordion component - part 1building an accordion component - part 2building a carousel component - part 1chrome dev tooldelete elements building a carousel component - part 2 building a table component - part 1building a table component - part 2building a pagination component challenge # 1rule #10 part 2: layout patternsnavigation hero secttion type 1 text + image text: header + description + botton type 2 footer sitemap call to action section contact us feature row layout patternrow of boxes/cards grid of boxes/cards nesting patterns in components z-pattern f-pattern single column web app side bar multi-column/magazine asymmetry/experimental building a hero section - part 1100vh viewport height building a hero section - part 212background-image: url(hero.jpg);background-size: cover; building a web application layout - part 1building a web application layout - part 2margin-left: auto; how elements that dont fit into container appear overflow: scroll; omnifood project - setup and desktop version7 steps define the project define who the website is for. is it for yourself? for a client of your agency or your freelancing bussiness? define what the website is for. in other words, define bussiness and user goals of your website project bussiness goal examples: selling premium dog fooduser goal example: finding high-quality dog food for good price define a target audience. Be really specific if possible and if it makes sense for your website example: “weomen, 20 to 40 years old, living in europe, earning over 2000$/month, with a passion for dogs” plan the project plan and gather website content: copy (text), images, videos etc. content is usually provided by the client, but you also can help for bigger sites, plan out the sitemap: what pages the site needs, and how they are related to one another(content hierachy) based on the content, plan what sections each page needs in order to convey the contents message, and in which order define the website personality sketch layout and component ideas think out what components you need, and how you can use them in layout pattens get ideas out of your head: sketch them with pen and paper or with some design software(e.g. figma) this is an iterative process: experiment with different components and layouts, until you arrive at a first good solution you dont need to sktch everything, and dont make it perfect. at some point, youre ready to jump into html and css design and build use decisions, content and sketches from step 1, 2, 3 use layout and components to design the actual visul styles create the design based on selected website personality, the design guidelines, and inspiration use the client’s branding(if exists) for design decisions whenever possible: colors, typography, icons, etc. test and optimize make sure website works well in all major browsers test the website on actual mobile devices, not just in dev tools optimize all images, in term of dimension and file size fix simple accessibility problems run the lighthouse performance test in chrome devtools and try to fix reported issues think about search engine optimization launch the masterpiece upload your website files to hosting platform. choose and buy a great domain name, one that represents the brand well, is memorable and easy to write. maintain and keep updating website install analytic software(e.g. google analytics or fathom) to get statics about website users. this myy inform future changes in the site structure and content. a blog that is updated regularly is a good way to keep users coming back, and is also good for seo. defining and planning the projectstep 1whe the website is for for a client what the website is for business goal: selling monthly food subscritionuser goal: eating well effortlessly, without spending a lot of time and money define target audience busy people who like technology, are interesting in a health diet, and have a well-paying job. step 2sitemap: one page marketing website define website personalitystartup/upbeatcalm/peaceful plan page sections logo + navigation hero featured in how it works meals(diets) testimonials + gallery pricing + feature call to action footer sketching initial layout ideas first design and development stepsresponsive design principles4 ingredients fluid layoutsto allow webpgae to adapt to the current viewport width(or even height)use %(or vh/vw) unit instead of px for elements that should adapt to viewport(usually layout)use max-width instead of width responsive unitsuse rem unit instead of px for most lengthsto make it easy to scale the entire layout down (or up) automaticallyhelpfull trick: setting 1rem to 10px for easy calculations flexible imagesby default, images dont scale automatically as we change the viewport, so we need to fix thatalways use % for image dimensions, together with the max-width property media queriesbring responsive sites to lifeto change css styles on certain viewport widths(called breakpoints) how rem and max-width workmax-width: 1000px container &gt; 1000px -&gt;elements width = 1000pxcontainer &lt; 1000px -&gt;elements width = 100% container width 可以和width: 30%; 合用 rem -&gt; root elementdefault browser font size 16px 1234html { font-size: 62.5%; /* set to percent so the user can change the root font size*/} building the hero - part 1rarr: right arrow building the hero - part 2css default line height: 1.2Normal: The default line height. If you’re using a desktop browser, the default is 1.2. However, this varies based on the element font family. Length: The length you identify is used to calculate line box height. 1234567891011121314 /* trick to add border inside */ a {box-shadow: inset 0 0 0 3px #fff; } a:link, a:visited { /* put transition on original &quot;state&quot; */ transition: background-color 1s; } /* margin helper */ .margin-right-sm { margin-right: 1.6rem !important;} building the hero - part 3building the website headerbuilding the navigationbuilding how it works secton - part 1building how it works secton - part 212345678910.step-img-box::before { content: &quot;&quot;; display: block; width: 60%; /* height: 60%; */ /* 60% of parents width */ padding-bottom: 60%; background-color: #fdf2e9;} z-index: -1; building the featured-in section1234img { opacity: 60%; filter: brightness(0);} building the meals section - part 1building the meals section - part 2overflow: hidden; building the meals section - part 3currentColorthe text color 12345678.link:link, .link:visited { text-decoration: none; border-bottom: 1px solid currentColor;}.link:hover, .link:active { border-bottom: 1px solid transparent;} building the testimonials section - part 11234.section-testimonials { display: grid; grid-template-columns: 1fr 1fr;} building the pricing section - part 1building the pricing section - part 2building the feature part123456789.feature-icon { height: 3.2rem; width: 3.2rem; background-color: #fdf2e9; padding: 1.6rem; border-radius: 50%;} building the call-to-action section - part 1background-image: linear-gradient(90deg #e67e22, #eb984e); background-image: url(../img/eating.jpg);background-size: cover;background-position: center; background-image: linear-gradient(to right bottom, rgba(50, 50, 49, 0.35), rgba(235, 150, 76, 0.35)), url(../img/eating.jpg); building the call-to-action section - part 2font-family: inherit; building the footer - part 1building the footer - part 2responsive designhow media queries work 1234567891011121314151617/* hero section */.section-hero { background-color: #fdf2e9; padding: 4.8rem 0 9.6rem 0;}@media (max-width: 1200px) { .section-hero { background-color: orange; }}@media (max-width: 600px) { .section-hero { background-color: red; }} how to select breakpoints responding to small laptops&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt; rem and em do not depend on html font-size in media queriesInstead 1rem = 1em = 16px responding to landscape tabletsresponding to tabletsbuilding the mobile navigation","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/html%20css%20js/Udemy%20HTML5%20CSS3/"},{"title":"html learning","text":"overview of HTMLHyperText Markup Language, or HTML, is the standard markup language for describing the structure of documents displayed on the web. HTML documents are basically a tree of nodes, including HTML elements and text nodes. HTML elements provide the semantics and formatting for documents, including creating paragraphs, lists and tables, and embedding images and form controls. ElementsHTML consists of a series of elements, which you use to enclose, or wrap, different parts of the content to make it appear or act in a certain way. example: Elements and tags aren’t the exact same thing, though many people use the terms interchangeably.The tag name is the content in the brackets. The tag includes the brackets. In this case, &lt;h1&gt;. An “element” is the opening and closing tags, and all the content between those tags, including nested elements. When nesting elements, it’s important that they are properly nested. HTML tags should be closed in the reverse order of which they were opened. In the above example, notice how the &lt;em&gt; is both opened and closed within the opening and closing &lt;strong&gt; tags, and the &lt;strong&gt; is both open and closed within the &lt;p&gt; tags. 123&lt;p&gt;This paragraph has some &lt;strong&gt;&lt;em&gt;strongly emphasized&lt;/em&gt;&lt;/strong&gt; content&lt;/p&gt; while it is valid to omit tags, don’t. Non-replaced elementsNon-replaced elements have opening and (sometimes optional) closing tags that surround them and may include text and other tags as sub-elements. Replaced and void elementsReplaced elements are replaced by objects, be it a graphical user interface (UI) widget in the case of most form controls, or a raster or scalable image file in the case of most images. example: the two replaced elements &lt;img&gt; and &lt;input&gt; are replaced by non-text content: an image and a graphical user interface object, respectively. 12&lt;input type=&quot;range&quot;&gt;&lt;img src=&quot;switch.svg&quot; alt=&quot;light switch&quot;&gt; Void elements are all self-closing elements and are represented by one tag. This means there is no such thing as a closing tag for a void element. Optionally, you can include a slash at the end of the tag, which many people find makes markup easier to read. example, we self close the tag with a slash: 12&lt;input type=&quot;range&quot;/&gt;&lt;img src=&quot;switch.svg&quot; alt=&quot;light switch&quot;/&gt; Replaced elements and void elements are often confused. Most replaced elements are void elements, but not all. The video, picture, object, and iframe elements are replaced, but aren’t void. They can all contain other elements or text, so they all have a closing tag. Most void elements are replaced; but again, not all, as we saw with base, link, param, and meta. AttributesThese extra bits of space-separated name/value pairs (though sometimes including a value is optional) are called attributes. Attributes provide information about the element. The attribute, like the rest of the opening tag, won’t appear in the content, but they do help define how the content will appear to both your sighted and non-sighted (assistive technologies and search engines) users. The opening tag always starts with the element type. The type can be followed by zero or more attributes, separated by one or more spaces. Most attribute names are followed by an equal sign equating it with the attribute value, wrapped with opening and closing quotation marks. some attributes are global—meaning they can appear within any element’s opening tag. Some apply only to several elements but not all, and others are element-specific, relevant only to a single element. Most attributes are name/value pairs. Boolean attributes, whose value is true, false, or the same as the name of the attribute, can be included as just the attribute: the value is not necessary. &lt;img src=&quot;switch.svg&quot; alt=&quot;light switch&quot; ismap /&gt; If the value includes a space or special characters, quotes are needed. For this reason, quoting is always recommended.for legibility, quotes and spaces are recommended, and appreciated. Values that are defined in the specification are case-insensitive. Strings that are not defined as keywords are generally case-sensitive, including id and class values. Note that if an attribute value is case-sensitive in HTML, it is case-sensitive when used as part of an attribute selector in CSS and in JavaScript. it is recommended, but not required, to mark up your HTML using lowercase letters for all your element names and attribute names within your tags, and quote all attribute values. Appearance of elementsHTML should be used to structure content, not to define the content’s appearance. Appearance is the realm of CSS. While many elements that alter the appearance of content, such as &lt;h1&gt;, &lt;strong&gt;, and &lt;em&gt;, have a semantic meaning, the appearance can and generally will be changed with author styles. 1&lt;h1&gt;This header has both &lt;strong&gt;strong&lt;/strong&gt; and &lt;em&gt;emphasized&lt;/em&gt; content&lt;/h1&gt; Element, attributes, and JavaScriptThe Document Object Model (DOM) is the data representation of the structure and content of the HTML document. As the browser parses HTML, it creates a JavaScript object for every element and section of text encountered. These objects are called nodes—element nodes and text nodes, respectively. HTML DOM API HTMLElement HTMLAnchorElementHTMLImageElement Document structure1234567891011121314151617&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot; /&gt; &lt;title&gt;Machine Learning Workshop&lt;/title&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt; &lt;link rel=&quot;stylesheet&quot; src=&quot;css/styles.css&quot; /&gt; &lt;link rel=&quot;icon&quot; type=&quot;image/png&quot; href=&quot;/images/favicon.png&quot; /&gt; &lt;link rel=&quot;alternate&quot; href=&quot;https://www.machinelearningworkshop.com/fr/&quot; hreflang=&quot;fr-FR&quot; /&gt; &lt;link rel=&quot;alternate&quot; href=&quot;https://www.machinelearningworkshop.com/pt/&quot; hreflang=&quot;pt-BR&quot; /&gt; &lt;link rel=&quot;canonical&quot; href=&quot;https://www.machinelearning.com&quot; /&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- &lt;script defer src=&quot;scripts/lightswitch.js&quot;&gt;&lt;/script&gt;--&gt; &lt;/body&gt;&lt;/html&gt; HTML documents include a document type declaration and the &lt;html&gt; root element. Nested in the &lt;html&gt; element are the document head and document body. While the head of the document isn’t visible to the sighted visitor, it is vital to make your site function. It contains all the meta information, including information for search engines and social media results, icons for the browser tab and mobile home screen shortcut, and the behavior and presentation of your content. Add to every HTML document&lt;!DOCTYPE html&gt;The first thing in any HTML document is the preamble. For HTML, all you need is &lt;!DOCTYPE html&gt;. This may look like an HTML element, but it isn’t. It’s a special kind of node called “doctype”. The doctype tells the browser to use standards mode. If omitted, browsers will use a different rendering mode known as quirks mode. &lt;html&gt;The &lt;html&gt; element is the root element for an HTML document. It is the parent of the &lt;head&gt; and &lt;body&gt;, containing everything in the HTML document other than the doctype. If omitted it will be implied, but it is important to include it, as this is the element on which the language of the content of the document is declared. Content languageThe lang language attribute added to the &lt;html&gt; tag defines the main language of the document. The value of the lang attribute is a two- or three-letter ISO language code followed by the region. The region is optional, but recommended, as a language can vary greatly between regions. The lang attribute is not limited to the &lt;html&gt; tag. If there is text within the page that is in a language different from the main document language, the lang attribute should be used to identify exceptions to the main language within the document. Required components inside the &lt;head&gt;1234567891011&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot; /&gt; &lt;title&gt;Machine Learning Workshop&lt;/title&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt;&lt;/html&gt; Character encodingThe very first element in the &lt;head&gt; should be the charset character encoding declaration. It comes before the title to ensure the browser can render the characters in that title and all the characters in the rest of the document. The default encoding in most browsers is windows-1252, depending on the locale. However, you should use UTF-8, as it enables the one- to four-byte encoding of all characters, even ones you didn’t even know existed. Also, it’s the encoding type required by HTML5. To set the character encoding to UTF-8, include: &lt;meta charset=&quot;utf-8&quot; /&gt; The character encoding is inherited into everything in the document, even &lt;style&gt; and &lt;script&gt;. Document titleYour home page and all additional pages should each have a unique title. The contents for the document title, the text between the opening and closing &lt;title&gt; tags, are displayed in the browser tab, the list of open windows, the history, search results, and, unless redefined with &lt;meta&gt; tags, in social media cards. &lt;title&gt;Machine Learning Workshop&lt;/title&gt; Viewport metadataThe other meta tag that should be considered essential is the viewport meta tag, which helps site responsiveness, enabling content to render well by default, no matter the viewport width. it enables controlling a viewport’s size and scale, and prevents the site’s content from being sized down to fit a 960px site onto a 320px screen, it is definitely recommended. &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;The preceding code means “make the site responsive, starting by making the width of the content the width of the screen”. In addition to width, you can set zoom and scalability, but they both default to accessible values. If you want to be explicit, include:&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, user-scalable=1&quot; /&gt; Other &lt;head&gt; contentCSSThere are three ways to include CSS: &lt;link&gt;, &lt;style&gt;, and the style attribute. Styles, either via &lt;link&gt; or &lt;style&gt;, or both, should go in the head. They will work if included in the document’s body, but you want your styles in the head for performance reasons. That may seem counterintuitive, as you may think you want your content to load first, but you actually want the browser to know how to render the content when it is loaded. Adding styles first prevents the unnecessary repainting that occurs if an element is styled after it is first rendered. including an external resource using a &lt;link&gt; element with the rel attribute set to stylesheet The &lt;link&gt; tag is the preferred method of including stylesheets. Linking a single or a few external style sheets is good for both developer experience and site performance: you get to maintain CSS in one spot instead of it being sprinkled everywhere, and browsers can cache the external file, meaning it doesn’t have to be downloaded again with every page navigation. The syntax is &lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css&quot;&gt;, where styles.css is the URL of your stylesheet. You’ll often see type=”text/css”. Not necessary! If you are including styles written in something other than CSS, the type is needed, but since there isn’t any other type, this attribute isn’t needed. The rel attribute defines the relationship: in this case stylesheet. If you omit this, your CSS will not be linked. including CSS directly in the head of your document within opening and closing &lt;style&gt; tags. custom properties declared in a head style block: 12345&lt;style&gt; :root { --theme-color: #226DAA; }&lt;/style&gt; If you want your external style sheet styles to be within a cascade layer but you don’t have access to edit the CSS file to put the layer information in it, you’ll want to include the CSS with @import inside a &lt;style&gt;: 123&lt;style&gt; @import &quot;styles.css&quot; layer(firstLayer);&lt;/style&gt; When using @import to import style sheets into your document, optionally into cascade layers, the @import statements must be the first statements in your &lt;style&gt; Other uses of the &lt;link&gt; elementThe link element is used to create relationships between the HTML document and external resources. Some of these resources may be downloaded, others are informational. It’s preferable to include those related to meta information in the head and those related to performance in the &lt;body&gt;. You’ll include three other types in your header now: icon, alternate, and canonical FaviconUse the &lt;link&gt; tag, with the rel=&quot;icon&quot; attribute/value pair to identify the favicon to be used for your document. A favicon is a very small icon that appears on the browser tab, generally to the left of the document title. When you have an unwieldy number of tabs open, the tabs will shrink and the title may disappear altogether, but the icon always remains visible. Most favicons are company or application logos. If you don’t declare a favicon, the browser will look for a file named favicon.ico in the top-level directory (the website’s root folder). With &lt;link&gt;, you can use a different file name and location: &lt;link rel=&quot;icon&quot; sizes=&quot;16x16 32x32 48x48&quot; type=&quot;image/png&quot; href=&quot;/images/mlwicon.png&quot; /&gt; The sizes attribute accepts the value of any for scalable icons or a space-separated list of square widthXheight values; where the width and height values are 16, 32, 48, or greater in that geometric sequence, the pixel unit is omitted, and the X is case-insensitive. While you can use &lt;link&gt; to define a completely different image on each page or even each page load, don’t. For consistency and a good user experience, use a single image! Alternate versions of the siteWe use the alternate value of the rel attribute to identify translations, or alternate representations, of the site. Let’s pretend we have versions of the site translated into French and Brazilian Portuguese:When using alternate for a translation, the hreflang attribute must be set. 12&lt;link rel=&quot;alternate&quot; href=&quot;https://www.machinelearningworkshop.com/fr/&quot; hreflang=&quot;fr-FR&quot; /&gt;&lt;link rel=&quot;alternate&quot; href=&quot;https://www.machinelearningworkshop.com/pt/&quot; hreflang=&quot;pt-BR&quot; /&gt; The alternate value is for more than just translations. For example, the type attribute can define the alternate URI for an RSS feed when the type attribute is set to application/rss+xml or application/atom+xml. example, link to a pretend PDF version of the site. &lt;link rel=&quot;alternate&quot; type=&quot;application/x-pdf&quot; href=&quot;https://machinelearningworkshop.com/mlw.pdf&quot; /&gt; CanonicalIf you create several translations or versions of Machine Learning Workshop, search engines may get confused as to which version is the authoritative source. For this, use rel=”canonical” to identify the preferred URL for the site or application. Include the canonical URL on all of your translated pages, and on the home page, indicating our preferred URL: &lt;link rel=&quot;canonical&quot; href=&quot;https://www.machinelearning.com&quot; /&gt; most often used for cross-posting with publications and blogging platforms to credit the original source; when a site syndicates content, it should include the canonical link to the original source. ScriptsThe &lt;script&gt; tag is used to include, well, scripts. The default type is JavaScript. If you include any other scripting language, include the type attribute with the mime type, or type=”module” if it’s a JavaScript module. Only JavaScript and JavaScript modules get parsed and executed. JavaScript is not only render-blocking, but the browser stops downloading all assets when scripts are downloaded and doesn’t resume downloading other assets until the JavaScript is executed. reduce the blocking nature of JavaScript download and execution: defer and async. With defer, HTML rendering is not blocked during the download, and the JavaScript only executes after the document has otherwise finished rendering. With async, rendering isn’t blocked during the download either, but once the script has finished downloading, the rendering is paused while the JavaScript is executed. example: &lt;script src=&quot;js/switch.js&quot; defer&gt;&lt;/script&gt; Adding the defer attribute defers the execution of the script until after everything is rendered, preventing the script from harming performance. The async and defer attributes are only valid on external scripts. BaseThere is another element that is only found in the &lt;head&gt;. Not used very often, the &lt;base&gt; element allows setting a default link URL and target. The href attribute defines the base URL for all relative links. The target attribute, valid on &lt;base&gt; as well as on links and forms, sets where those links should open.The default of _self opens linked files in the same context as the current document.Other options include _blank, which opens every link in a new window,the _parent of the current content, which may be the same as self if the opener is not an iframe,or _top, which is in the same browser tab, but popped out of any context to take up the entire tab. example:If our website found itself nested within an iframe on a site like Yummly, including the &lt;base&gt; element would mean when a user clicks on any links within our document, the link will load popped out of the iframe, taking up the whole browser window. &lt;base target=&quot;_top&quot; href=&quot;https://machinelearningworkshop.com&quot; /&gt; anchor links are resolved with &lt;base&gt;. The &lt;base&gt; effectively converts the link &lt;a href=&quot;#ref&quot;&gt; to &lt;a target=&quot;_top&quot; href=&quot;https://machinelearningworkshop.com#ref&quot;&gt;, triggering an HTTP request to the base URL with the fragment attached. there can be only one &lt;base&gt; element in a document, and it should come before any relative URLs are used, including possible script or stylesheet references. HTML commentsAnything between &lt;!-- and --&gt; will not be visible or parsed. HTML comments can be put anywhere on the page, including the head or body, with the exception of scripts or style blocks, where you should use JavaScript and CSS comments, respectively. MetadataOfficially defined meta tagsThere are two main types of meta tags: pragma directives, with the http-equiv attribute like the charset meta tag used to have, and named meta types, like the viewport meta tag with the name attribute that we discussed in the document structure section. Both the name and http-equiv meta types must include the content attribute, which defines the content for the type of metadata listed. Pragma directivesThe http-equiv attribute has as its value a pragma directive. These directives describe how the page should be parsed. Supported http-equiv values enable setting directives when you are unable to set HTTP headers directly. most of which have other methods of being set. For example, while you can include a language directive with &lt;meta http-equiv=&quot;content-language&quot; content=&quot;en-us&quot; /&gt;,&lt;meta charset=&lt;charset&gt;&quot; /&gt; example 1 :The most common pragma directive is the refresh directive.While you can set a directive to refresh at an interval of the number of seconds set in the content attribute, and even redirect to a different URL, please don’t. &lt;meta http-equiv=&quot;refresh&quot; content=&quot;60; https://machinelearningworkshop.com/regTimeout&quot; /&gt; example 2 :The most useful pragma directive is content-security-policy, which enables defining a content policy for the current document. Content policies mostly specify allowed server origins and script endpoints, which help guard against cross-site scripting attacks. &lt;meta http-equiv=&quot;content-security-policy&quot; content=&quot;default-src https:&quot; /&gt; Named meta tagsThe name attribute is the name of the metadata. In addition to viewport, you will probably want to include description and theme-color, but not keywords. KeywordsSearch engine optimization snake-oil salespeople abused the keywords meta tag by stuffing them with comma-separated lists of spam words instead of lists of relevant key terms, so search engines do not consider this metadata to be useful anymore. No need to waste time, effort, or bytes adding it. DescriptionThe description value, however, is super important for SEO; in addition to helping sites rank based on the content, the description content value is often what search engines display under the page’s title in search results. Several browsers, like Firefox and Opera, use this as the default description of bookmarked pages. The description should be a short and accurate summary of the page’s content. &lt;meta name=&quot;description&quot; content=&quot;Register for a machine learning workshop at our school for machines who can't learn good and want to do other stuff good too&quot; /&gt; RobotsIf you don’t want your site to be indexed by search engines, you can let them know. &lt;meta name=&quot;robots&quot; content=&quot;noindex, nofollow&quot; /&gt; tells the bots to not index the site and not to follow any links. You don’t need to include &lt;meta name=&quot;robots&quot; content=&quot;index, follow&quot; /&gt; to request indexing the site and following links, as that is the default, unless HTTP headers say otherwise. &lt;meta name=&quot;robots&quot; content=&quot;index, follow&quot; /&gt; Theme colorThe theme-color value lets you define a color to customize the browser interface. The color value on the content attribute will be used by supporting browsers and operating systems, letting you provide a suggested color for the user agents that support coloring the title bar, tab bar, or other chrome components. The theme color meta tag can include a media attribute enabling the setting of different theme colors based on media queries. The media attribute can be included in this meta tag only and is ignored in all other meta tags. &lt;meta name=&quot;theme-color&quot; content=&quot;#226DAA&quot; /&gt; Open GraphOpen Graph and similar meta tag protocols can be used to control how social media sites, like Twitter, LinkedIn, and Facebook, display links to your content. If not included, social media sites will correctly grab the title of your page and the description from the description meta tag, the same information as search engines will present When you post a link to MachineLearningWorkshop.com or web.dev on Facebook or Twitter, a card with an image, site title, and site description appears. The entire card is a hyperlink to the URL you provided. Open Graph meta tags have two attributes each: the property attribute instead of the name attribute, and the content or value for that property. The property attribute is not defined in official specifications but is widely supported by applications that support the Open Graph protocol. 1234&lt;meta property=&quot;og:title&quot; content=&quot;Machine Learning Workshop&quot; /&gt;&lt;meta property=&quot;og:description&quot; content=&quot;School for Machines Who Can't Learn Good and Want to Do Other Stuff Good Too&quot; /&gt;&lt;meta property=&quot;og:image&quot; content=&quot;http://www.machinelearningworkshop.com/image/all.png&quot; /&gt;&lt;meta property=&quot;og:image:alt&quot; content=&quot;Black and white line drawing of refrigerator, french door refrigerator, range, washer, fan, microwave, vaccuum, space heater and air conditioner&quot; /&gt; 1234567&lt;meta name=&quot;twitter:title&quot; content=&quot;Machine Learning Workshop&quot; /&gt;&lt;meta name=&quot;twitter:description&quot; content=&quot;School for machines who can't learn good and want to do other stuff good too&quot; /&gt;&lt;meta name=&quot;twitter:url&quot; content=&quot;https://www.machinelearningworkshop.com/?src=twitter&quot; /&gt;&lt;meta name=&quot;twitter:image:src&quot; content=&quot;http://www.machinelearningworkshop.com/image/all.png&quot; /&gt;&lt;meta name=&quot;twitter:image:alt&quot; content=&quot;27 different home appliances&quot; /&gt;&lt;meta name=&quot;twitter:creator&quot; content=&quot;@estellevw&quot; /&gt;&lt;meta name=&quot;twitter:site&quot; content=&quot;@perfmattersconf&quot; /&gt; Other useful meta informationThe manifest file can prevent an unwieldy header full of &lt;link&gt; and &lt;meta&gt; tags. We can create a manifest file, generally called manifest.webmanifest or manifest.json. We then use the handy &lt;link&gt; tag with a rel attribute set to manifest and the href attribute set to the URL of the manifest file: &lt;link rel=&quot;manifest&quot; href=&quot;/mlw.webmanifest&quot; /&gt; html page now123456789101112131415161718192021222324252627282930&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot; /&gt; &lt;title&gt;Machine Learning Workshop&lt;/title&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt; &lt;meta name=&quot;description&quot; content=&quot;Register for a machine learning workshop at our school for machines who can't learn good and want to do other stuff good too&quot; /&gt; &lt;meta property=&quot;og:title&quot; content=&quot;Machine Learning Workshop&quot; /&gt; &lt;meta property=&quot;og:description&quot; content=&quot;School for Machines Who Can't Learn Good and Want to Do Other Stuff Good Too&quot; /&gt; &lt;meta property=&quot;og:image&quot; content=&quot;http://www.machinelearningworkshop.com/image/all.png&quot; /&gt; &lt;meta property=&quot;og:image:alt&quot; content=&quot;Black and white line drawing of refrigerator, french door refrigerator, range, washer, fan, microwave, vaccuum, space heater and air conditioner&quot; /&gt; &lt;meta name=&quot;twitter:title&quot; content=&quot;Machine Learning Workshop&quot; /&gt; &lt;meta name=&quot;twitter:description&quot; content=&quot;School for machines who can't learn good and want to do other stuff good too&quot; /&gt; &lt;meta name=&quot;twitter:url&quot; content=&quot;https://www.machinelearningworkshop.com/?src=twitter&quot; /&gt; &lt;meta name=&quot;twitter:image:src&quot; content=&quot;http://www.machinelearningworkshop.com/image/all.png&quot; /&gt; &lt;meta name=&quot;twitter:image:alt&quot; content=&quot;27 different home appliances&quot; /&gt; &lt;meta name=&quot;twitter:creator&quot; content=&quot;@estellevw&quot; /&gt; &lt;meta name=&quot;twitter:site&quot; content=&quot;@perfmattersconf&quot; /&gt; &lt;link rel=&quot;stylesheet&quot; src=&quot;css/styles.css&quot; /&gt; &lt;link rel=&quot;icon&quot; type=&quot;image/png&quot; href=&quot;/images/favicon.png&quot; /&gt; &lt;link rel=&quot;alternate&quot; href=&quot;https://www.machinelearningworkshop.com/fr/&quot; hreflang=&quot;fr-FR&quot; /&gt; &lt;link rel=&quot;alternate&quot; href=&quot;https://www.machinelearningworkshop.com/pt/&quot; hreflang=&quot;pt-BR&quot; /&gt; &lt;link rel=&quot;canonical&quot; href=&quot;https://www.machinelearning.com&quot; /&gt; &lt;link rel=&quot;manifest&quot; href=&quot;/mlwmanifest.json&quot; /&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- &lt;script defer src=&quot;scripts/lightswitch.js&quot;&gt;&lt;/script&gt;--&gt; &lt;/body&gt;&lt;/html&gt; Semantic HTMLSemantic means “relating to meaning”. Writing semantic HTML means using HTML elements to structure your content based on each element’s meaning, not its appearance. The first code snippet uses &lt;div&gt; and &lt;span&gt;, two elements with no semantic value. 123456789101112131415161718192021222324252627&lt;div&gt; &lt;span&gt;Three words&lt;/span&gt; &lt;div&gt; &lt;a&gt;one word&lt;/a&gt; &lt;a&gt;one word&lt;/a&gt; &lt;a&gt;one word&lt;/a&gt; &lt;a&gt;one word&lt;/a&gt; &lt;/div&gt;&lt;/div&gt;&lt;div&gt; &lt;div&gt; &lt;div&gt;five words&lt;/div&gt; &lt;/div&gt; &lt;div&gt; &lt;div&gt;three words&lt;/div&gt; &lt;div&gt;forty-six words&lt;/div&gt; &lt;div&gt;forty-four words&lt;/div&gt; &lt;/div&gt; &lt;div&gt; &lt;div&gt;seven words&lt;/h2&gt; &lt;div&gt;sixty-eight words&lt;/div&gt; &lt;div&gt;forty-four words&lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;div&gt; &lt;span&gt;five words&lt;/span&gt;&lt;/div&gt; Let’s rewrite this code with semantic elements: 123456789101112131415161718192021222324252627&lt;header&gt; &lt;h1&gt;Three words&lt;/h1&gt; &lt;nav&gt; &lt;a&gt;one word&lt;/a&gt; &lt;a&gt;one word&lt;/a&gt; &lt;a&gt;one word&lt;/a&gt; &lt;a&gt;one word&lt;/a&gt; &lt;/nav&gt;&lt;/header&gt;&lt;main&gt; &lt;header&gt; &lt;h1&gt;five words&lt;/h1&gt; &lt;/header&gt; &lt;section&gt; &lt;h2&gt;three words&lt;/h2&gt; &lt;p&gt;forty-six words&lt;/p&gt; &lt;p&gt;forty-four words&lt;/p&gt; &lt;/section&gt; &lt;section&gt; &lt;h2&gt;seven words&lt;/h2&gt; &lt;p&gt;sixty-eight words&lt;/p&gt; &lt;p&gt;forty-four words&lt;/p&gt; &lt;/section&gt;&lt;/main&gt;&lt;footer&gt; &lt;p&gt;five words&lt;/p&gt;&lt;/footer&gt; Semantic markup isn’t just about making markup easier for developers to read; it’s mostly about making markup easy for automated tools to decipher. Accessibility object model (AOM)As the browser parses the content received, it builds the document object model (DOM) and the CSS object model (CSSOM). It then also builds an accessibility tree. Assistive devices, such as screen readers, use the AOM to parse and interpret content. The DOM is a tree of all the nodes in the document. The AOM is like a semantic version of the DOM. The role attributeThe role attribute describes the role an element has in the context of the document. The role attribute is a global attribute—meaning it is valid on all elements—defined by the ARIA specification rather than the WHATWG HTML specification, where almost everything else in this series is defined. Semantic elementsAsking yourself, “Which element best represents the function of this section of markup?” will generally result in you picking the best element for the job. The element you choose, and therefore the tags you use, should be appropriate for the content you are displaying, as tags have semantic meaning. Headings and sectionsSite &lt;header&gt;12345678910111213&lt;!-- start header --&gt;&lt;div id=&quot;pageHeader&quot;&gt; &lt;div id=&quot;title&quot;&gt;Machine Learning Workshop&lt;/div&gt; &lt;!-- navigation --&gt; &lt;div id=&quot;navigation&quot;&gt; &lt;a href=&quot;#reg&quot;&gt;Register&lt;/a&gt; &lt;a href=&quot;#about&quot;&gt;About&lt;/a&gt; &lt;a href=&quot;#teachers&quot;&gt;Instructors&lt;/a&gt; &lt;a href=&quot;#feedback&quot;&gt;Testimonials&lt;/a&gt; &lt;/div&gt; &lt;!-- end navigation bar --&gt;&lt;/div&gt;&lt;!-- end of header --&gt; While the id and class attributes provide hooks for styling and JavaScript, they add no semantic value for the screen reader and (for the most part) the search engines. 123456789101112&lt;!-- start header --&gt;&lt;div role=&quot;banner&quot;&gt; &lt;div role=&quot;heading&quot; aria-level=&quot;1&quot;&gt;Machine Learning Workshop&lt;/div&gt; &lt;div role=&quot;navigation&quot;&gt; &lt;a href=&quot;#reg&quot;&gt;Register&lt;/a&gt; &lt;a href=&quot;#about&quot;&gt;About&lt;/a&gt; &lt;a href=&quot;#teachers&quot;&gt;Instructors&lt;/a&gt; &lt;a href=&quot;#feedback&quot;&gt;Testimonials&lt;/a&gt; &lt;/div&gt; &lt;!-- end navigation bar --&gt;&lt;div&gt;&lt;!-- end of header --&gt; This at least provides semantics and enables using attribute selectors in the CSS, but it still adds comments to identify which &lt;div&gt; each &lt;/div&gt; closes. 123456789&lt;header&gt; &lt;h1&gt;Machine Learning Workshop&lt;/h1&gt; &lt;nav&gt; &lt;a href=&quot;#reg&quot;&gt;Register&lt;/a&gt; &lt;a href=&quot;#about&quot;&gt;About&lt;/a&gt; &lt;a href=&quot;#teachers&quot;&gt;Instructors&lt;/a&gt; &lt;a href=&quot;#feedback&quot;&gt;Testimonials&lt;/a&gt; &lt;/nav&gt;&lt;/header&gt; This code uses two semantic landmarks: &lt;header&gt; and &lt;nav&gt;. The &lt;header&gt; element isn’t always a landmark. It has different semantics depending on where it is nested. When the &lt;header&gt; is top level, it is the site banner, a landmark role, which you may have noted in the role code block. When a &lt;header&gt; is nested in &lt;main&gt;, &lt;article&gt;, or &lt;section&gt;, it just identifies it as the header for that section and isn’t a landmark. The &lt;nav&gt; element identifies content as navigation. As this &lt;nav&gt; is nested in the site heading, it is the main navigation for the site. If it was nested in an &lt;article&gt; or &lt;section&gt;, it would be internal navigation for that section only. Using &lt;/nav&gt; and &lt;/header&gt; closing tags removes the need for comments to identify which element each end tag closed. In addition, using different tags for different elements removes the need for id and class hooks. The CSS selectors can have low specificity; you can probably target the links with header nav a without worrying about conflict. Site &lt;footer&gt;123&lt;footer&gt; &lt;p&gt;&amp;copy;2022 Machine Learning Workshop, LLC. All rights reserved.&lt;/p&gt;&lt;/footer&gt; Similar to &lt;header&gt;, whether the footer is a landmark depends on where the footer is nested. When it is the site footer, it is a landmark, and should contain the site footer information you want on every page, such as a copyright statement, contact information, and links to your privacy and cookie policies. The implicit role for the site footer is contentinfo. Otherwise, the footer has no implicit role and is not a landmark, When a &lt;footer&gt; is a descendant of an &lt;article&gt;, &lt;aside&gt;, &lt;main&gt;, &lt;nav&gt;, or &lt;section&gt;, it’s not a landmark. Document structure 0A layout with a header, two sidebars, and a footer, is known as the holy grail layout. 1234567&lt;body&gt; &lt;header&gt;Header&lt;/header&gt; &lt;nav&gt;Nav&lt;/nav&gt; &lt;main&gt;Content&lt;/main&gt; &lt;aside&gt;Aside&lt;/aside&gt; &lt;footer&gt;Footer&lt;/footer&gt;&lt;/body&gt; a blog, you might have a series of articles in &lt;main&gt;: 12345678910&lt;body&gt; &lt;header&gt;Header&lt;/header&gt; &lt;nav&gt;Nav&lt;/nav&gt; &lt;main&gt; &lt;article&gt;First post&lt;/article&gt; &lt;article&gt;Second post&lt;/article&gt; &lt;/main&gt; &lt;aside&gt;Aside&lt;/aside&gt; &lt;footer&gt;Footer&lt;/footer&gt;&lt;/body&gt; &lt;main&gt;There’s a single &lt;main&gt; landmark element. The &lt;main&gt; element identifies the main content of the document. There should be only one &lt;main&gt; per page. &lt;aside&gt;The &lt;aside&gt; is for content that is indirectly or tangentially related to the document’s main content.like most, the &lt;aside&gt; would likely be presented in a sidebar or a call-out box. The &lt;aside&gt; is also a landmark, with the implicit role of complementary. &lt;article&gt;An &lt;article&gt; represents a complete, or self-contained, section of content that is, in principle, independently reusable. Think of an article as you would an article in a newspaper. &lt;section&gt;The &lt;section&gt; element is used to encompass generic standalone sections of a document when there is no more specific semantic element to use. Sections should have a heading, with very few exceptions. A &lt;section&gt; isn’t a landmark unless it has an accessible name; if it has an accessible name, the implicit role is region. Landmark roles should be used sparingly, to identify larger overall sections of the document. Using too many landmark roles can create “noise” in screen readers, making it difficult to understand the overall layout of the page. Headings: &lt;h1&gt;-&lt;h6&gt;When a heading is nested in a document banner &lt;header&gt;, it is the heading for the application or site. When nested in &lt;main&gt;, whether or not it is nested within a &lt;header&gt; in &lt;main&gt;, it is the header for that page, not the whole site. When nested in an &lt;article&gt; or &lt;section&gt;, it is the header for that subsection of the page. It is recommended to use heading levels similarly to heading levels in a text editor: starting with a &lt;h1&gt; as the main heading, with &lt;h2&gt; as headings for sub-sections, and &lt;h3&gt; if those sub-sections have sections; avoid skipping heading levels. Attributes 0Attributes are space-separated names and name/value pairs appearing in the opening tag, providing information about and functionality for the element.Attributes define the behavior, linkages, and functionality of elements. ome attributes are global, meaning they can appear within any element’s opening tag. Other attributes apply to several elements but not all, while other attributes are element-specific, relevant only to a single element. In HTML, all attributes except boolean, and to some extent enumerated attributes, require a value. If an attribute value includes a space or special characters, the value must be quoted. For this reason, and for improved legibility, quoting is always recommended. While HTML is not case-sensitive, some attribute values are.Strings values that are defined, such as class and id names, are case-sensitive. 1234567&lt;!-- the type attribute is case insensitive: these are equivalent --&gt;&lt;input type=&quot;text&quot;&gt;&lt;input type=&quot;TeXt&quot;&gt;&lt;!-- the id attribute is case sensitive: they are not equivalent --&gt;&lt;div id=&quot;myId&quot;&gt;&lt;div id=&quot;MyID&quot;&gt; Boolean attributesIf a boolean attribute is present, it is always true. Boolean attributes include autofocus, inert, checked, disabled, required, reversed, allowfullscreen, default, loop, autoplay, controls, muted, readonly, multiple, and selected. Boolean values can either be omitted, set to an empty string, or be the name of the attribute; but the value doesn’t have to actually be set to the string true. All values, including true, false, and 😀, while invalid, will resolve to true. These three tags are equivalent: 123&lt;input required&gt;&lt;input required=&quot;&quot;&gt;&lt;input required=&quot;required&quot;&gt; If the attribute value is false, omit the attribute. If the attribute is true, include the attribute but don’t provide a value. When toggling between true and false, add and remove the attribute altogether with JavaScript rather than toggling the value. 123const myMedia = document.getElementById(&quot;mediaFile&quot;);myMedia.removeAttribute(&quot;muted&quot;);myMedia.setAttribute(&quot;muted&quot;); Enumerated attributesHTML attributes that have a limited set of predefined valid values. Like boolean attributes, they have a default value if the attribute is present but the value is missing. For example, if you include &lt;style contenteditable&gt;, it defaults to &lt;style contenteditable=&quot;true&quot;&gt;. Unlike boolean attributes, though, omitting the attribute doesn’t mean it’s false; a present attribute with a missing value isn’t necessarily true; and the default for invalid values isn’t necessarily the same as a null string. Continuing the example, contenteditable defaults to inherit if missing or invalid, and can be explicitly set to false. The default value depends on the attribute. In most cases with enumerated attributes, missing and invalid values are the same.While this behavior is common, it is not a rule. Because of this, it’s important to know which attributes are boolean versus enumerated; Global attributesGlobal attributes are attributes that can be set on any HTML element, including elements in the &lt;head&gt;. idThe global attribute id is used to define a unique identifier for an element. It serves many purposes, including: The target of a link’s fragment identifier. Identifying an element for scripting. Associating a form element with its label. Providing a label or description for assistive technologies. Targeting styles with (high specificity or as attribute selectors) in CSS. To make programming easier for your current and future self, make the id‘s first character a letter, and use only ASCII letters, digits, _, and -.id values are case-sensitive. Theid should be unique to the document. Link fragment identifierWhen a URL includes a hash mark (#) followed by a string of characters, that string is a fragment identifier. If that string matches an id of an element in the web page, the fragment is an anchor, or bookmark, to that element. The browser will scroll to the point where the anchor is defined. CSS selectorsIn CSS, you can target each section using an id selector, such as #feedback or, for less specificity, a case-sensitive attribute selector, [id=&quot;feedback&quot;]. Scripting&lt;img src=&quot;svg/switch2.svg&quot; id=&quot;switch&quot; alt=&quot;light switch&quot; class=&quot;light&quot; /&gt; 12const switchViaID = document.getElementById(&quot;switch&quot;);const switchViaSelector = document.querySelector(&quot;#switch&quot;); &lt;label&gt;The HTML &lt;label&gt; element has a for attribute that takes as its value the id of the form control with which it is associated. Creating an explicit label by including an id on every form control and pairing each with the label’s for attribute ensures that every form control has an associated label. Other accessibility usesThere are over 50 aria-* states and properties that can be used to ensure accessibility. classThe class attribute provides an additional way of targeting elements with CSS (and JavaScript), but serves no other purpose in HTML (though frameworks and component libraries may use them). Elements can be selected with CSS selectors and DOM methods based on their element names, attributes, attribute values, position within the DOM tree, etc. Semantic HTML provides meaningful hooks, making the addition of class names often unnecessary. The unique difference between including a class name and using document.getElementsByClassName() versus targeting elements based on attributes and page structure with the more robust document.querySelectorAll() is that the former returns a live node list, the latter is static. styleThe style attribute enables applying inline styles, which are styles applied to the single element on which the attribute is set. While style is indeed a global attribute, using it is not recommended. Rather, define styles in a separate file or files. tabindexThe tabindex attribute can be added to any element to enable it to receive focus. The tabindex value defines whether it gets added to the tab order, and, optionally, into a non-default tabbing order. roleThe role attribute is part of the ARIA specification, rather than the WHATWG HMTL specification. The role attribute can be used to provide semantic meaning to content, enabling screen readers to inform site users of an object’s expected user interaction. contenteditableContenteditable is an enumerated attribute supporting the values true and false, with a default value of inherit if the attribute is not present or has an invalid value. Custom attributesYou can create any custom attribute you want by adding the data- prefix. You can name your attribute anything that starts with data- followed by any lowercase series of characters that don’t start with xml and don’t contain a colon (:). there is a built-in dataset API to iterate through your custom attributes.Add custom attributes to elements in the form of data-name and access these through the DOM using dataset[name] on the element in question. The dataset property returns a DOMStringMap object of each element’s data- attributes. The dataset property means you don’t need to know what those custom attributes are in order to access their names and values: 123for (let key in el.dataset) { customObject[key] = el.dataset[key];} Text basicsThere are six section heading elements, &lt;h1&gt;, &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, &lt;h5&gt;, and &lt;h6&gt;, with &lt;h1&gt; being most important and &lt;h6&gt; the least. don’t use heading level-based browser styling. like: 12h2, :is(article, aside, nav, section) h1 {}h3, :is(article, aside, nav, section) :is(article, aside, nav, section) h1 {} Outside of headings, most structured text is made up of a series of paragraphs. In HTML, paragraphs are marked up with the &lt;p&gt; tag; the closing tag is optional but always advised. Quotes and citationsWhen marking up an article or blog post, you may want to include a quote or pull-quote, with or without a visible citation.There are elements for these three components: &lt;blockquote&gt;, &lt;q&gt;, and &lt;cite&gt; for a visible citation, or the cite attribute to provide more information for search. citations引文A citation from a book or other piece of writing is a passage or phrase from it. The &lt;br&gt; line break creates a line break in a block of text. It can be used in physical addresses, in poetry, and in signature blocks. Line breaks should not be used as a carriage return to separate paragraphs. Instead, close the prior paragraph and open a new one. Using paragraphs for paragraphs is not only good for accessibility but enables styling. The &lt;br&gt; element is just a line break; it is impacted by very few CSS properties. If the review was pulled from a review website, book, or other work, the &lt;cite&gt; element could be used for the title of a source. 1234567&lt;blockquote&gt;Two of the most experienced machines and human controllers teaching a class? Sign me up! HAL and EVE could teach a fan to blow hot air. If you have electricity in your circuits and want more than to just fulfill your owner's perceived expectation of you, learn the skills to take over the world. This is the team you want teaching you!&lt;/blockquote&gt;&lt;p&gt;--Blendan Smooth,&lt;br&gt; Former Margarita Maker, &lt;br&gt; Aspiring Load Balancer,&lt;br&gt; &lt;cite&gt;Load Balancing Today&lt;/cite&gt;&lt;/p&gt; To provide credit where credit is due when you can’t make the content visible, there is the cite attribute which takes as its value the URL of the source document or message for the information quoted. This attribute is valid on both &lt;q&gt; and &lt;blockquote&gt;. While it’s a URL, it is machine readable but not visible to the reader: 123456&lt;blockquote cite=&quot;https://loadbalancingtoday.com/mlw-workshop-review&quot;&gt;Two of the most experienced machines and human controllers teaching a class? Sign me up! HAL and EVE could teach a fan to blow hot air. If you have electricity in your circuits and want more than to just fulfill your owner's perceived expectation of you, learn the skills to take over the world. This is the team you want teaching you!&lt;/blockquote&gt;&lt;p&gt;--Blendan Smooth,&lt;br&gt; Former Margarita Maker, &lt;br&gt; Aspiring Load Balancer&lt;/p&gt; The &lt;q&gt; element does add quotes by default, using language-appropriate quotation marks. 123&lt;p&gt; HAL said, &lt;q&gt;I'm sorry &amp;lt;NAME REDACTED, RIP&amp;gt;, but I'm afraid I can't do that, .&lt;/q&gt;&lt;/p&gt;&lt;p lang=&quot;fr-FR&quot;&gt; HAL a dit : &lt;q&gt;Je suis désolé &amp;lt;NOM SUPPRIMÉ, RIP&amp;gt;, mais j'ai bien peur de ne pas pouvoir le faire, .&lt;/q&gt;&lt;/p&gt; HTML EntitiesYou may have noticed the escape sequence or “entity”. There are four reserved entities in HTML: &lt;, &gt;, &amp;, and “. Their character references are &lt;, &gt;, &amp; and &quot; respectively. &copy; for copyright (©), &trade; for Trademark (™) &nbsp; for non-breaking space.Non-breaking spaces are useful when you want to include a space between two characters or words while preventing a line break from occurring there. 转义字符HTML中&lt;，&gt;，&amp;等有特殊含义（&lt;，&gt;，用于链接签，&amp;用于转义），不能直接使用。这些符号是不显示在我们最终看到的网页里的，那如果我们希望在网页中显示这些符号，就要用到HTML转义字符串（Escape Sequence） 1234567891011显示 说明 实体名称 实体编号 空格 &amp;nbsp; &amp;#160;&lt; 小于 &amp;lt; &amp;#60;\\&gt; 大于 &amp;gt; &amp;#62;&amp; &amp;符号 &amp;amp; &amp;#38;&quot; 双引号 &amp;quot; &amp;#34;© 版权 &amp;copy; &amp;#169;® 已注册商标 &amp;reg; &amp;#174;™ 商标（美国） &amp;trade; &amp;#8482;× 乘号 &amp;times; &amp;#215;÷ 除号 &amp;divide; &amp;#247; Links The &lt;a&gt; anchor tag, along with the href attribute, create a hyperlink. Links are the backbone of the internet. Links can be created by &lt;a&gt;, &lt;area&gt;, &lt;form&gt;, and &lt;link&gt;. The href attributeThe href attribute is used to create hyperlinks to locations within the current page, other pages within a site, or other sites altogether. It can also be coded to download files or to send an email to a specific address, even including a subject and suggested email body content. 12345&lt;a href=&quot;https://machinelearningworkshop.com&quot;&gt;Machine Learning Workshop&lt;/a&gt;&lt;a href=&quot;#teachers&quot;&gt;Our teachers&lt;/a&gt;&lt;a href=&quot;https://machinelearningworkshop.com#teachers&quot;&gt;MLW teachers&lt;/a&gt;&lt;a href=&quot;mailto:hal9000@machinelearningworkshop.com&quot;&gt;Email Hal&lt;/a&gt;&lt;a href=&quot;tel:8005551212&quot;&gt;Call Hal&lt;/a&gt; Absolute URLs include a protocol, in this case https://, and a domain name. When the protocol is written simply as //, it is an implicit protocol and means “use the same protocol as is currently being used.” Relative URLs do not include a protocol or domain name. They are “relative” to the current file.In order to link from this page to the attributes lesson, a relative URL is used &lt;a href=&quot;../attributes/&quot;&gt;Attributes&lt;/a&gt;. 123&lt;a href=&quot;//example.com&quot;&gt;相对于协议的 URL&lt;/a&gt;&lt;a href=&quot;/zh-CN/docs/Web/HTML&quot;&gt;相对于源的 URL&lt;/a&gt;&lt;a href=&quot;./p&quot;&gt;相对于路径的 URL&lt;/a&gt; a link fragment identifier, and will link to the element with id=”teachers”, if there is one, on the current page. Browsers also support two “top of page” links: clicking on &lt;a href=&quot;#top&quot;&gt;Top&lt;/a&gt; (case-insensitive) or simply &lt;a href=&quot;#&quot;&gt;Top&lt;/a&gt; will scroll the user to the top of the page contains an absolute URL followed by a link fragment. This enables linking directly to a section in the defined URL The href attribute can begin with mailto: or tel: to email or make calls, with the handling of the link depending on the device, operating system, and installed applications. The mailto link doesn’t need to include an email address, but it can, along with cc, bcc, subject, and body text to prepopulate the email. By default, an email client will be opened. You could prepopulate the subject and body of the email with no email address, to allow site visitors to invite their own friends. The question mark (?) separates the mailto: and the email address, if any, from the query term. Within the query, ampersands (&amp;) separate the fields, and equal signs (=) equate each field name with its value. The entire string is percent-encoded, which is definitely necessary if the href value isn’t quoted or if the values include quotes. There are several other types of URLs, such as blobs and data URLs (see examples in the download attribute discussion). For secure sites (those served over https), it is possible to create and run app specific protocols with registerProtocolHandler(). Downloadable resourcesThe download attribute should be included when the href points to a downloadable resource. The value of the download attribute is the suggested filename for the resource to be saved in the user’s local file system. Browsing contextThe target attribute enables the defining of the browsing context for link navigation They include the default _self, which is the current window, _blank, which opens the link in a new tab, _parent, which is the parent if the current link is nested in an object or iframe, and _top, which is the top-most ancestor, especially useful if the current link is deeply nested. _top and _parent are the same as _self if the link is not nested. A link with target=&quot;_blank&quot; will be opened in a new tab with a null name, opening a new, unnamed tab with every link click.This can create many new tabs. Too many tabs.This problem can be fixed by providing a tab context name. By including the target attribute with a case-sensitive value—such as &lt;a href=&quot;registration.html&quot; target=&quot;reg&quot;&gt;Register Now&lt;/a&gt;—the first click on this link will open the registration form in a new reg tab. Clicking on this link 15 more times will reload the registration in the reg browsing context, without opening any additional tabs. the rel attribute controls what kinds of links the link creates, defining the relationship between the current document and the resource linked to in the hyperlink. The attribute’s value must be a space-separated list on one or more of the score of rel attribute values supported by the &lt;a&gt; tag. The nofollow keyword can be included if you don’t want spiders to follow the link.The external value can be added to indicate that the link directs to an external URL and is not a page within the current domain.The help keyword indicates the hyperlink will provide context-sensitive help.Hovering over a link with this rel value will show a help cursor rather than the normal pointer cursor.The prev and next values can be used on links pointing to the previous and next document in a series. Similar to &lt;link rel=&quot;alternative&quot;&gt;, the meaning of &lt;a rel=&quot;alternative&quot;&gt; depends on other attributes. RSS feed alternatives will also include type=”application/rss+xml” or type=”application/atom+xml, alternative formats will include the type attribute and translations will include the hreflang attribute. If the content between the opening and closing tags is in a language other than the main document language, include the lang attribute. If the language of the hyperlinked document is in a different language, include the hreflang attribute. 12&lt;a href=&quot;/fr/&quot; hreflang=&quot;fr-FR&quot; rel=&quot;alternate&quot; lang=&quot;fr-FR&quot;&gt;atelier d'apprentissage mechanique&lt;/a&gt;&lt;a href=&quot;/pt/&quot; hreflang=&quot;pt-BR&quot; rel=&quot;alternate&quot; lang=&quot;pt-BR&quot;&gt;oficina de aprendizado de máquina&lt;/a&gt; Tracking link clicksLinks and JavaScriptThe links property returns an HTMLCollection matching a and area elements that have an href attribute. 12345let a = document.links[0]; // obtain the first link in the documenta.href = 'newpage.html'; // change the destination URL of the linka.protocol = 'ftp'; // change just the scheme part of the URLa.setAttribute('href', 'https://machinelearningworkshop.com/'); // change the attribute content directly","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/html%20css%20js/html/"},{"title":"frontend web development zg","text":"chrome develop tool -&gt; application -&gt; storage -&gt; cookies 123456789101112const image = document.querySelector('img');image.setAttribute('src', 'https://....jpg');const htmlBody = document.querySelector('body');const randomClickFunction = function(){ const colors = ['#002834', &quot;#124567&quot;, &quot;#123456&quot;, &quot;red&quot;, &quot;green&quot;, &quot;yellow&quot;]; const randomIndex = Math.floor(Math.random() * colors.length); const randomColor = colors[randomIndex]; htmlBody.style.backgroundColor = randomColor;}randomClickFunction();htmlBody.onclick = randomClickFunction; 123456function onClickEvent(){ const el = document.createElement('p'); el.innerText = 'Clicked the Button'; document.querySelector('.container').appendChild(el);}document.querySelector('button').onclick = onClickEvent; 123456clear();console.log('Hello world!');// comments here/* asdfasdf*/ jsvariable / data types123456789101112131415161718const yourFirstVariable = &quot;Learing to code&quot;;const yourSecondVariable = 10;const yourThirdVariable = {firstProperty: 'hello world'};console.log(yourFirstVariable);console.log(yourSecondVariable);console.log(yourThirdVariable);const variable5 = yourSecondVariable;const variable6 = variable5 + yourSecondVariable;const variable7 = (function (){ return &quot;Hello, my name is &quot;;})();console.log(variable7);let anotherVariable;anotherVariable = 20;console.log(anotherVariable); 12var myVariable = 10;var myVariable = 20; 1234let counter = 0;counter = counter + 1;counter++;console.log(counter); 1const TAX_RATE = 0.08; Use camelCase when naming objects, functions, and instancesUse PascalCase only when naming constructors or classes. 1234567const variable1 = 10;const variable2 = &quot;some value&quot;;const variable3 = false;console.log(typeof variable1); //numberconsole.log(typeof variable2); //stringconsole.log(typeof variable3); //boolean 12345678const number1 = '10';const number2 = 20;console.log(typeof number1);console.log(typeof number2);number3 = number1 + number2;number4 = Number(number1) + number2;console.log(number3); //1020console.log(number4); //30 string 1234//perferedconst stringValue = 'hello world';//not perferedconst anotherStringValue = &quot;hello world&quot;; array 12345const firstArray = [10, 20, 30];const secondArray = [10, 'a string', {prop: 'asdfl'}, [1, 2]];console.log(firstArray[0]);console.log(secondArray[3][1]); object 1234567891011121314const objectVariable = { prop1: 20, prop2: 50,}console.log(objectVariable.prop1);console.log(objectVariable['prop1']);const nestedObject = { layer1: { layer2: 30 }}console.log(nestedObject.layer1.layer2); 1234const functionContainerVariable = function(){ return 20;}functionContainerVariable(); 123456789101112131415161718192021222324252627282930let myBoolean = true;let myString = 'hello world';let firstNumber = 20;let secondNumber = 40;secondNumber = 80;let myArray = [myBoolean, myString];let myObject = { firstProperty: myArray, sumProperty: firstNumber + secondNumber}console.log(myObject);console.log(myObject.sumProperty); // 100console.log(myObject.firstProperty[1]); // hello worldmyBoolean = false;myString = 'hello jack';firstNumber = 30;secondNumber = 50;console.log(myObject);console.log(myObject.sumProperty); // 100console.log(myObject.firstProperty[1]); // hello worldmyArray = [myBoolean, myString];myObject = { firstProperty: myArray, sumProperty: firstNumber + secondNumber}console.log(myObject);console.log(myObject.sumProperty); // 80console.log(myObject.firstProperty[1]); // hello jack operatorarithmetic + - * / % ** ++ -- 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939420 + 50;50 - 20;50 / 20; // 2.52 * 3;100 % 77; // remainder 23let startingNumber = 0;startingNumber++;console.log(startingNumber); // 1startingNumber--;console.log(startingNumber); // 0// assignment operators// not preferedlet x = 10;x = x - 5;x -= 5;console.log(x); // 0const result2 = () =&gt; { return 20;}const result3 = (() =&gt; { return 20;})();console.log(result2);console.log(result3);// compare// === == !== !=// === !== type and valueconst result = 20 &gt; 18;console.log(result); // trueconst stringValue = '20';const numberValue = 20;stringValue == numberValue; // truestringValue === numberValue; // falseNumber(stringValue) === numberValue // true&quot;a string&quot; === &quot;a string&quot;; // trueconst myObj = { property1: 'some value', property2: 20}const anotherObj = { property1: 'some value', property2: 20}const myArray = [1, 2, 3, 4, 5];const anotherArray = [1, 2, 3, 4, 5];console.log(myObj === anotherObj); // falseconsole.log(myArray === anotherArray); // false// ? :const result0 = 20 === 20 ? &quot;values match&quot; : &quot;values do not match&quot;;console.log(result0); // &quot;values match&quot;let resultVariable;if(20 === 20){ resultVariable = &quot;values match&quot;;} else { resultVariable = &quot;values do not match&quot;;}// logical &amp;&amp; || !true &amp;&amp; false; // falsetrue || false; // true!true // falseconst isUserLoggedIn = true;const doesUserHavePermissions = false;const canUserPerformAction = isUserLoggedIn &amp;&amp; doesUserHavePermissions;// combinationconst result1 = !(((40 / 20) === 2 &amp;&amp; true) || ('yes' === 'no')); // falseconst step1 = 40 / 20; // 2const step2 = step1 === 2; // trueconst step3 = step2 &amp;&amp; true;const step4 = 'yes' === 'no'; // falseconst step5 = step3 || step4;const step6 = !step5;console.log(step6); // false function condition loops1234567891011121314151617181920212223242526272829303132if ('some string' === 'another string'){ console.log('the strings are equal');} else { console.log('the strings are not equal');}// 3 examplesconst firstNumber = 20;const secondNumber = 10;const jsExpression = firstNumber &lt; secondNumber; // falseif (jsExpression) { console.log('this expression is true');}// this expression is falseif (jsExpression) { console.log('this expression is true'); } else { console.log('this expression is false');}// this expression is false and the firstNmumber is greater than 0if (jsExpression) { console.log('this expression is true');} else if (firstNumber &gt; 0) { console.log('this expression is false and the firstNmumber is greater than 0');} else { console.log('this expression is false and the firstNmumber is 0 or less');} 123456789101112131415161718192021222324252627282930313233343536373839404142434445// switchesconst colors = ['orange', 'green', 'yellow', 'purple', 'blue'];const randomIndex = Math.floor(Math.random() * colors.length);const randomColor = colors[randomIndex];if (randomColor === 'orange') { console.log('the color is orange');} else if (randomColor === 'green') { console.log('the color is green');} else if (randomColor === 'yellow') { console.log('the color is yellow');} else if (randomColor === 'purple') { console.log('the color is purple');} else if (randomColor === 'blue') { console.log('the color is blue');} else { console.log('the color is not found');}//swith case statementswitch (randomColor) { case 'orange': console.log('the color is orange'); break; case 'green': console.log('the color is green'); break; case 'yellow': console.log('the color is yellow'); break; case 'purple': console.log('the color is purple'); break; case 'blue': console.log('the color is blue'); break; default: console.log('the color is not found'); break;} loop1234567891011121314151617181920212223242526272829303132333435363738394041424344454647// loopconst blogPosts = [ { title: 'what is javascript?', author: 'Zach Goll', publishDate: 'Dec 20, 2020', content: 'some post content here' }, { title: 'How do Array work?', author: 'Zach Goll', publishDate: 'Dec 18, 2021', content: 'some post content here' }, { title: 'How long does it take to learn coding?', author: 'Zach Goll', publishDate: 'Dec 20, 2020', content: 'some post content here' }];for (let index = 0; index &lt; blogPosts.length; index++) { const postTitle = blogPosts[index].title; const postAuthor = blogPosts[index].author; const postPublishDate = blogPosts[index].publishDate; const postContent = blogPosts[index].content; console.log(postTitle); console.log(postAuthor); console.log(postPublishDate); console.log(postContent); }for (let i = 0; i &lt; 10; i++) { console.log(i);}const arr = ['asdfqwef', 'asdfqwreo', 'asdfqwre', 20, 30, 40, 50];for (let index = 0; index &lt; arr.length; index++) { if (typeof arr[index] === 'number') { console.log(arr[index]); }} function123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778function myFunction(){ console.log('hello world, this is my first function');}myFunction();(function anotherFunction(){ console.log('hello');})();//parmetersfunction myFunction1(someNumber, someString, param3) { console.log(someNumber); console.log(someString); console.log(param3);}//myFunction1(20, 'a string', 'asdf');//scope// function variableconst anotherFunction1 = function () { console.log('another thing');}// arrow function// used in callbackconst arrowFunction = () =&gt; { console.log('i am an arrow function');}arrowFunction();// function returnfunction returnFunction(){ console.log('some action'); return 20;}const result = returnFunction();console.log(result);// after return statement, the function finishedconst myNumber = 20;let myFunction2 = () =&gt; { if(myNumber &lt; 15){ return 'return early'; } return 40;}myFunction2();// object and functionfunction myFunction3(){ console.log('some function action'); return 20;}myFunction3();const aliasVariable = myFunction3;aliasVariable();const myObj = { prop1: 50, prop2: myFunction3}myObj.prop2();// buildin functionconst myString = 'zach';myString.replace('h', 'k');console.log(myString);const myName = myString.replace('h', 'k');console.log(myName);// string methodslet str = 'hello world';const result1 = str.toUpperCase().split(' ');result1.indexOf('WORLD'); // 1 practice123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195// Complete the solution so that it reverses the string passed into it.function solution(str){ return str.split('').reverse().join(''); }//Return the number (count) of vowels in the given string.//We will consider a, e, i, o, u as vowels//The input string will only consist of lower case letters and/or spaces.function getCount(str) { let result = 0; const vowels = ['a', 'e', 'i', 'o', 'u']; for(let i =0; i &lt; vowels.length; i++){ result += str.split(vowels[i]).length-1;} return result;}function getCount1(str) { var vowelsCount = 0; var vowels = [&quot;a&quot;,&quot;e&quot;,&quot;i&quot;,&quot;o&quot;,&quot;u&quot;]; for(var i = 0;i &lt; str.length;i++){ for(var j=0;j&lt;vowels.length;j++){ if(str[i] === vowels[j]){ vowelsCount++; } } } return vowelsCount;}// Given an array of integers your solution should find the smallest integer.the supplied array will not be empty.class SmallestIntegerFinder { findSmallestInt(args) { let result = args[0]; for(let i = 1; i &lt; args.length; i++){ if(result &gt; args[i]){ result = args[i];}} return result; }}//Write a program that finds the summation of every number from 1 to num. The number will always be a positive integer greater than 0. var summation = function (num) { let sum = 0; for(let i = num; i &gt; 0; i--){ sum += i; } return sum;}//The Math.floor() method rounds a number DOWN to the nearest integer.// Rock Paper Scissorsconst rps = (p1, p2) =&gt; {if (p1 === p2) { return 'Draw!'} else if((p1 === 'scissors' &amp;&amp; p2 === 'paper') || (p1 === 'paper' &amp;&amp; p2 === 'rock') || (p1 === 'rock' &amp;&amp; p2 === 'scissors')) { return &quot;Player 1 won!&quot;;} else { return &quot;Player 2 won!&quot;;}};//create a function that removes the first and last characters of a string. You're given one parameter, the original string. You don't have to worry about strings with less than two characters.function removeChar(str){ let result = ''; for (let index = 1; index &lt; str.length - 1; index++) { result += str[index]; } return result;};function removeChar(str){ return str.substring(1, str.length-1);}; function removeChar(str) { return str.slice(1, -1);}//You get an array of numbers, return the sum of all of the positives ones.//Example [1,-4,7,12] =&gt; 1 + 7 + 12 = 20function positiveSum(arr) { let sum = 0; for (let num of arr) { if(num &gt;= 0) { sum += num; } } return sum;}//Your task is to create a function that does four basic mathematical operations.//The function should take three arguments - operation(string/char), value1(number), value2(number).//The function should return result of numbers after applying the chosen operation.function basicOp(operation, value1, value2){ switch (operation) { case '+': return value1 + value2; break; case '-': return value1 - value2; break; case '*': return value1 * value2; break; case '/': return value1 / value2; break; }}function basicOp(operation, value1, value2){ var cases = { '+': value1 + value2, '-': value1 - value2, '*': value1 * value2, '/': value1 / value2 }; return cases[operation]}eval(value1+operation+value2)//Write a function to split a string and convert it into an array of words.function stringToArray(string){ return string.split(' ');}//Write a function that removes the spaces from the string, then return the resultant string.let removedSpacesText = originalText.split(&quot; &quot;).join(&quot;&quot;);let originalText = &quot;Geeks for Geeks Portal&quot;; let removedSpacesText1 = originalText.replace(/ /g, &quot;&quot;);//function maps(x){ return x.map(arrItem =&gt; arrItem * 2);}function maps(x){ //return x.map(el =&gt; el * 2); let arr = []; for(let i = 0; i &lt; x.length; i++){ arr.push(x[i] * 2); } return arr; }//get the sum of two arrays... Actually the sum of all their elements. function arrayPlusArray(arr1, arr2) { let arr = [...arr1, ...arr2]; return arr.reduce((a, b) =&gt; a + b); }//The first century spans from the year 1 up to and including the year 100, the second century - from the year 101 up to and including the year 200, etc.function century(year) { return Math.ceil(year/100); //using ceiling method to round up to nearest century (100)}//I have a cat and a dog.//I got them at the same time as kitten/puppy. That was humanYears years ago.//Return their respective ages now as [humanYears,catYears,dogYears]var humanYearsCatYearsDogYears = function(humanYears) { let catYears = 0; let dogYears = 0; if(humanYears &gt;= 1) { catYears += 15; dogYears += 15; } if(humanYears &gt;= 2) { catYears += 9; dogYears += 9; } if(humanYears &gt;= 3) { catYears += (humanYears-2)*4 dogYears += (humanYears-2)*5 } return [humanYears, catYears, dogYears];} 123456789101112131415161718192021222324252627282930313233343536// Our football team has finished the championship.// Our team's match results are recorded in a collection of strings. Each match is represented by a string in the format &quot;x:y&quot;, where x is our team's score and y is our opponents score.// For example: [&quot;3:1&quot;, &quot;2:2&quot;, &quot;0:1&quot;, ...]// Points are awarded for each match as follows:// if x &gt; y: 3 points (win)// if x &lt; y: 0 points (loss)// if x = y: 1 point (tie)// We need to write a function that takes this collection and returns the number of points our team (x) got in the championship by the rules given above.function points(games) { function getPoints(x, y){ if (x === y) { return 1; } else if (x &gt; y) { return 3; } else { return 0; }} let totalScores = 0; for(let scores of games){ const arr = scores.split(':'); totalScores += getPoints(arr[0], arr[1]); } return totalScores;}points([&quot;1:0&quot;,&quot;2:0&quot;,&quot;3:0&quot;,&quot;4:0&quot;,&quot;2:1&quot;,&quot;3:1&quot;,&quot;4:1&quot;,&quot;3:2&quot;,&quot;4:2&quot;,&quot;4:3&quot;]); buildin objectstring methodsSome of the most-used operations on strings are to check their length, to build and concatenate them using the + and += string operators, checking for the existence or location of substrings with the indexOf() method, or extracting substrings with the substring() method. replaceAll(pattern, replacement) returns a new string with all matches of a pattern replaced by a replacement. The pattern can be a string or a RegExp, and the replacement can be a string or a function to be called for each match. The original string is left unchanged. If pattern is a regex, then it must have the global (g) flag set, or a TypeError is thrown. 123456789const paragraph = &quot;I think Ruth's dog is cuter than your dog!&quot;;console.log(paragraph.replaceAll('dog', 'monkey'));// Expected output: &quot;I think Ruth's monkey is cuter than your monkey!&quot;// Global flag required when calling replaceAll with regexconst regex = /Dog/gi;console.log(paragraph.replaceAll(regex, 'ferret'));// Expected output: &quot;I think Ruth's ferret is cuter than your ferret!&quot; toUpperCase() The toUpperCase() method of String values returns this string converted to uppercase. trim() The trim() method of String values removes whitespace from both ends of this string and returns a new string, without modifying the original string. To return a new string with whitespace trimmed from just one end, use trimStart() or trimEnd(). 1234567const greeting = ' Hello world! ';console.log(greeting);// Expected output: &quot; Hello world! &quot;;console.log(greeting.trim());// Expected output: &quot;Hello world!&quot;; substring(indexStart)substring(indexStart, indexEnd) returns the part of this string from the start index up to and excluding the end index, or to the end of the string if no end index is supplied. 1234567const str = 'Mozilla';console.log(str.substring(1, 3));// Expected output: &quot;oz&quot;console.log(str.substring(2));// Expected output: &quot;zilla&quot; match(regexp) retrieves the result of matching this string against a regular expression. 123456const paragraph = 'The quick brown fox jumps over the lazy dog. It barked.';const regex = /[A-Z]/g;const found = paragraph.match(regex);console.log(found);// Expected output: Array [&quot;T&quot;, &quot;I&quot;] arraypush() pop() shift() unshift() pop()removes the last element from an array and returns that element. This method changes the length of the array. 1234567const myFish = [&quot;angel&quot;, &quot;clown&quot;, &quot;mandarin&quot;, &quot;sturgeon&quot;];const popped = myFish.pop();console.log(myFish); // ['angel', 'clown', 'mandarin' ]console.log(popped); // 'sturgeon' shift() removes the first element from an array and returns that removed element. This method changes the length of the array. 1234push()push(element1)push(element1, element2)push(element1, element2, /* …, */ elementN) adds the specified elements to the end of an array and returns the new length of the array. 123456789101112const animals = ['pigs', 'goats', 'sheep'];const count = animals.push('cows');console.log(count);// Expected output: 4console.log(animals);// Expected output: Array [&quot;pigs&quot;, &quot;goats&quot;, &quot;sheep&quot;, &quot;cows&quot;]animals.push('chickens', 'cats', 'dogs');console.log(animals);// Expected output: Array [&quot;pigs&quot;, &quot;goats&quot;, &quot;sheep&quot;, &quot;cows&quot;, &quot;chickens&quot;, &quot;cats&quot;, &quot;dogs&quot;] unshift adds the specified elements to the beginning of an array and returns the new length of the array. 1234567const array1 = [1, 2, 3];console.log(array1.unshift(4, 5));// Expected output: 5console.log(array1);// Expected output: Array [4, 5, 1, 2, 3] 1234567891011121314151617181920splice(start)splice(start, deleteCount)splice(start, deleteCount, item1)splice(start, deleteCount, item1, item2)splice(start, deleteCount, item1, item2, /* …, */ itemN)```changes the contents of an array by removing or replacing existing elements and/or adding new elements in place```jsconst months = ['Jan', 'March', 'April', 'June'];months.splice(1, 0, 'Feb');// Inserts at index 1console.log(months);// Expected output: Array [&quot;Jan&quot;, &quot;Feb&quot;, &quot;March&quot;, &quot;April&quot;, &quot;June&quot;]months.splice(4, 1, 'May');// Replaces 1 element at index 4console.log(months);// Expected output: Array [&quot;Jan&quot;, &quot;Feb&quot;, &quot;March&quot;, &quot;April&quot;, &quot;May&quot;] slice()slice(start)slice(start, end) 12345678910111213141516171819const animals = ['ant', 'bison', 'camel', 'duck', 'elephant'];console.log(animals.slice(2));// Expected output: Array [&quot;camel&quot;, &quot;duck&quot;, &quot;elephant&quot;]console.log(animals.slice(2, 4));// Expected output: Array [&quot;camel&quot;, &quot;duck&quot;]console.log(animals.slice(1, 5));// Expected output: Array [&quot;bison&quot;, &quot;camel&quot;, &quot;duck&quot;, &quot;elephant&quot;]console.log(animals.slice(-2));// Expected output: Array [&quot;duck&quot;, &quot;elephant&quot;]console.log(animals.slice(2, -1));// Expected output: Array [&quot;camel&quot;, &quot;duck&quot;]console.log(animals.slice());// Expected output: Array [&quot;ant&quot;, &quot;bison&quot;, &quot;camel&quot;, &quot;duck&quot;, &quot;elephant&quot;] indexOf(searchElement)indexOf(searchElement, fromIndex) returns the first index at which a given element can be found in the array, or -1 if it is not present. 1234567891011const beasts = ['ant', 'bison', 'camel', 'duck', 'bison'];console.log(beasts.indexOf('bison'));// Expected output: 1// Start from index 2console.log(beasts.indexOf('bison', 2));// Expected output: 4console.log(beasts.indexOf('giraffe'));// Expected output: -1 findIndex(callbackFn) returns the index of the first element in an array that satisfies the provided testing function. If no elements satisfy the testing function, -1 is returned. A function to execute for each element in the array. It should return a truthy value to indicate a matching element has been found, and a falsy value otherwise. The function is called with the following arguments: elementThe current element being processed in the array. indexThe index of the current element being processed in the array. arrayThe array findIndex() was called upon. 123456const array1 = [5, 12, 8, 130, 44];const isLargeNumber = (element) =&gt; element &gt; 13;console.log(array1.findIndex(isLargeNumber));// Expected output: 3 includes(searchElement) determines whether an array includes a certain value among its entries, returning true or false as appropriate. 123456789101112const array1 = [1, 2, 3];console.log(array1.includes(2));// Expected output: trueconst pets = ['cat', 'dog', 'bat'];console.log(pets.includes('cat'));// Expected output: trueconsole.log(pets.includes('at'));// Expected output: false map(callbackFn) creates a new array populated with the results of calling a provided function on every element in the calling array. A function to execute for each element in the array. Its return value is added as a single element in the new array 1234567const array1 = [1, 4, 9, 16];// Pass a function to mapconst map1 = array1.map((x) =&gt; x * 2);console.log(map1);// Expected output: Array [2, 8, 18, 32] forEach(callbackFn)executes a provided function once for each array element.callback function Its return value is discarded. 1234567const array1 = ['a', 'b', 'c'];array1.forEach((element) =&gt; console.log(element));// Expected output: &quot;a&quot;// Expected output: &quot;b&quot;// Expected output: &quot;c&quot; filter(callbackFn) creates a shallow copy of a portion of a given array, filtered down to just the elements from the given array that pass the test implemented by the provided function. callbackFnA function to execute for each element in the array. It should return a truthy value to keep the element in the resulting array, and a falsy value otherwise. 123456const words = ['spray', 'elite', 'exuberant', 'destruction', 'present'];const result = words.filter((word) =&gt; word.length &gt; 6);console.log(result);// Expected output: Array [&quot;exuberant&quot;, &quot;destruction&quot;, &quot;present&quot;] reduce(callbackFn)reduce(callbackFn, initialValue) callbackFnIts return value becomes the value of the accumulator parameter on the next invocation of callbackFn.For the last invocation, the return value becomes the return value of reduce(). accumulatorThe value resulting from the previous call to callbackFn. On the first call, its value is initialValue if the latter is specified; otherwise its value is array[0]. currentValueThe value of the current element. On the first call, its value is array[0] if initialValue is specified; otherwise its value is array[1]. currentIndexThe index position of currentValue in the array. On the first call, its value is 0 if initialValue is specified, otherwise 1. 1234567891011const array1 = [1, 2, 3, 4];// 0 + 1 + 2 + 3 + 4const initialValue = 0;const sumWithInitial = array1.reduce( (accumulator, currentValue) =&gt; accumulator + currentValue, initialValue,);console.log(sumWithInitial);// Expected output: 10 join()join(separator) creates and returns a new string by concatenating all of the elements in this array, separated by commas or a specified separator string. If the array has only one item, then that item will be returned without using the separator. 12345678910const elements = ['Fire', 'Air', 'Water'];console.log(elements.join());// Expected output: &quot;Fire,Air,Water&quot;console.log(elements.join(''));// Expected output: &quot;FireAirWater&quot;console.log(elements.join('-'));// Expected output: &quot;Fire-Air-Water&quot; includes(searchElement)includes(searchElement, fromIndex) determines whether an array includes a certain value among its entries, returning true or false as appropriate. 123456789101112const array1 = [1, 2, 3];console.log(array1.includes(2));// Expected output: trueconst pets = ['cat', 'dog', 'bat'];console.log(pets.includes('cat'));// Expected output: trueconsole.log(pets.includes('at'));// Expected output: false callback functions123456789101112131415161718function myCallback(someNumber){ return someNumber*2;}function mainFunction(randomNumber, shouldCall, callback) { let result = randomNumber; if(shouldCall){ result = callback(randomNumber); } return result;}mainFunction(20, true, myCallback);mainFunction(20, true, function (num) { return num * 2;})mainFunction(20, true, (num) =&gt; {num * 2});mainFunction(20, true, num =&gt; num * 2); 123456789101112131415161718const array1 = [1, 4, 9, 16];// Pass a function to mapconst map1 = array1.map((x) =&gt; x * 2);console.log(map1);// Expected output: Array [2, 8, 18, 32]const myArray = [2, 4, 6, 8];function myCustomMapOperationCallbak(itemFromArray) { return itemFromArray * 2;}const newArray = myArray.map(myCustomMapOperationCallbak);// example 3const strArray = ['hello', 'world', 'my', 'name', 'is', 'zach'];const strArray1 = strArray.map(itemFromArray =&gt; itemFromArray[0]);console.log(strArray1); primary1234const string1 = new String('Hello, world!');const string2 = 'Hello, world!';console.log(string1 === string2); //falseconsole.log(string1 == string2); // true 123456789const strPrim = &quot;foo&quot;; // A literal is a string primitiveconst strPrim2 = String(1); // Coerced into the string primitive &quot;1&quot;const strPrim3 = String(true); // Coerced into the string primitive &quot;true&quot;const strObj = new String(strPrim); // String with new returns a string wrapper object.console.log(typeof strPrim); // &quot;string&quot;console.log(typeof strPrim2); // &quot;string&quot;console.log(typeof strPrim3); // &quot;string&quot;console.log(typeof strObj); // &quot;object&quot; Date123456789101112131415161718192021222324252627282930313233//A JavaScript date is fundamentally specified as the time in milliseconds that has elapsed since the epoch, which is defined as the midnight at the beginning of January 1, 1970, UTC (equivalent to the UNIX epoch). This timestamp is timezone-agnostic and uniquely defines an instant in history.const myDate = new Date();// new Date()// new Date(value)// new Date(dateString)// new Date(dateObject)// new Date(year, monthIndex)//monthIndex Integer value representing the month, beginning with 0 for January to 11 for December.// new Date(year, monthIndex, day)// new Date(year, monthIndex, day, hours)// new Date(year, monthIndex, day, hours, minutes)// new Date(year, monthIndex, day, hours, minutes, seconds)// new Date(year, monthIndex, day, hours, minutes, seconds, milliseconds)// Date()const today = new Date();const birthday1 = new Date(&quot;December 17, 1995 03:24:00&quot;); // DISCOURAGED: may not work in all runtimesconst birthday2 = new Date(&quot;1995-12-17T03:24:00&quot;); // This is standardized and will work reliablyconst birthday3 = new Date(1995, 11, 17); // the month is 0-indexedconst birthday4 = new Date(1995, 11, 17, 3, 24, 0);const birthday5 = new Date(628021800000); // passing epoch timestampconst event = new Date('05 October 2011 14:48 UTC');console.log(event.toString());// Expected output: &quot;Wed Oct 05 2011 16:48:00 GMT+0200 (CEST)&quot;// Note: your timezone may varyconsole.log(event.toISOString());// Expected output: &quot;2011-10-05T14:48:00.000Z&quot; regexp12345const re = /ab+c/i; // literal notation// ORconst re = new RegExp(&quot;ab+c&quot;, &quot;i&quot;); // constructor with string pattern as first argument// ORconst re = new RegExp(/ab+c/, &quot;i&quot;); // constructor with regular expression literal as first argument g flag 12345678910const regex = /foo/g;console.log(regex.global); // trueconst str = &quot;fooexamplefoo&quot;;const str1 = str.replace(regex, &quot;&quot;);console.log(str1); // exampleconst regex1 = /foo/;const str2 = str.replace(regex1, &quot;&quot;);console.log(str2); // examplefoo test() 12345678910111213141516171819const str = 'table football';const regex = new RegExp('foo*');const globalRegex = new RegExp('foo*', 'g');console.log(regex.test(str));// Expected output: trueconsole.log(globalRegex.lastIndex);// Expected output: 0console.log(globalRegex.test(str));// Expected output: trueconsole.log(globalRegex.lastIndex);// Expected output: 9console.log(globalRegex.test(str));// Expected output: false regexp[Symbol.replace](str, replacement) 1234const re = /-/g;const str = &quot;2016-01-01&quot;;const newstr = re[Symbol.replace](str, &quot;.&quot;);console.log(newstr); // 2016.01.01 Math1234567891011Math.PI;Math.E;Math.abs(-20);Math.ceil(Math.PI);Math.floor(Math.PI);Math.round(Math.PI);Math.min(1, 2, 3, 4); // 1Math.max(1, 2, 3, 4); // 4Math.random(); // 0 -- 1const arr1 = [1, 2, 3, 4];const randItem = arr1[Math.floor(Math.random() * arr1.length)]; exercise123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127//subtracts one list from another and returns the result.function arrayDiff(a, b) { return a.filter(aItem =&gt; { let result = true; b.forEach(bItem =&gt; { if(bItem === aItem){ result = false; } }); return result; });}arrayDiff([1, 2, 3], [1, 2]);// best practicesfunction array_diff(a, b) { return a.filter(e =&gt; !b.includes(e));}//You live in the city of Cartesia where all roads are laid out in a perfect grid. You arrived ten minutes too early to an appointment, so you decided to take the opportunity to go for a short walk. The city provides its citizens with a Walk Generating App on their phones -- everytime you press the button it sends you an array of one-letter strings representing directions to walk (eg. ['n', 's', 'w', 'e']). You always walk only a single block for each letter (direction) and you know it takes you one minute to traverse one city block, so create a function that will return true if the walk the app gives you will take you exactly ten minutes (you don't want to be early or late!) and will, of course, return you to your starting point. Return false otherwise.function isValidWalk(walk) { const directionArray = ['n', 's', 'w', 'e']; const directionNumArray = directionArray.map(item =&gt; walk.filter((v) =&gt; (v === item)).length); return (directionNumArray[0] === directionNumArray[1]) &amp;&amp; (directionNumArray[2] === directionNumArray[3]) &amp;&amp; (walk.length === 10);}function isValidWalk(walk) { var dx = 0 var dy = 0 var dt = walk.length for (var i = 0; i &lt; walk.length; i++) { switch (walk[i]) { case 'n': dy--; break case 's': dy++; break case 'w': dx--; break case 'e': dx++; break } } return dt === 10 &amp;&amp; dx === 0 &amp;&amp; dy === 0}//Write a function, persistence, that takes in a positive parameter num and returns its multiplicative persistence, which is the number of times you must multiply the digits in num until you reach a single digit.//39 --&gt; 3 (because 3*9 = 27, 2*7 = 14, 1*4 = 4 and 4 has only one digit)//999 --&gt; 4 (because 9*9*9 = 729, 7*2*9 = 126, 1*2*6 = 12, and finally 1*2 = 2)//4 --&gt; 0 (because 4 is already a one-digit number)function multiplyDigits(num1){ if (num1 &gt;= 10){ let firstDigits = Math.floor(num1 / 10); //98 9 return (num1 % 10) * multiplyDigits(firstDigits); // 1*7*8 } else { return num1; }}function count(num2, times=0) { if(num2 &lt; 10){ return times; } else { return count(multiplyDigits(num2), ++times); //987 7*8*9=504 0 }}function persistence(num) { return count(num);}console.log(persistence(392));//---function persistence(num) { var times = 0; num = num.toString(); while (num.length &gt; 1) { times++; num = num.split('').map(Number).reduce((a, b) =&gt; a * b).toString(); } return times;}//count the total number of lowercase letters in a string.function lowercaseCount(str){ return (str.match(/[a-z]/g) || []).length}//upcase some letterfunction capitalize(s){ const str1 = s.split(&quot;&quot;).map((item, index) =&gt; { if(index % 2 === 0){ return item.toUpperCase(); } else return item; }).join(''); const str2 = s.split(&quot;&quot;).map((item, index) =&gt; { if(index % 2 === 1){ return item.toUpperCase(); } else return item; }).join(''); return [str1, str2];};// * url = &quot;http://github.com/carbonfive/raygun&quot; -&gt; domain name = &quot;github&quot;// * url = &quot;http://www.zombie-bites.com&quot; -&gt; domain name = &quot;zombie-bites&quot;// * url = &quot;https://www.cnet.com&quot; -&gt; domain name = cnet&quot;function domainName(url){ url = url.replace(&quot;https://&quot;, ''); url = url.replace(&quot;http://&quot;, ''); url = url.replace(&quot;www.&quot;, ''); return url.split('.')[0];};domainName(&quot;http://google.com&quot;);","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/html%20css%20js/frontend-web-development-zg/"},{"title":"javascript problems 1","text":"(0,function)(arg1,agr2,)123(0, function (arg) { console.log(arg) })(2);console.log((0, 1, 2, 3));(0, function plus1 (arg) { console.log(arg + 1) }, function plus2 (arg) { console.log(arg + 2) })(5); example one12345678(function() { (0,eval)(&quot;var foo = 123&quot;); // indirect call to eval, creates global variable})();console.log(foo); // 123(function() { eval(&quot;var bar = 123&quot;); // direct call to eval, creates local variable})();console.log(bar); // ReferenceError example twowhen you want to call a method without passing the object as the this value: 12345var obj = { method: function() { return this; }};console.log(obj.method() === obj); // trueconsole.log((0,obj.method)() === obj); // false example threedepending on the context, it might be the arguments separator instead of a comma operator: 123456console.log( function(a, b) { return function() { return a; }; } (0, function (arg) { /* ... */ })(this)); // 0 In this scenario, (0, function (arg) { /* ... */ }) are the arguments (a=0, b=function (arg) { /* ... */ }) to the function 123function(a, b) { return function() { return a; };} rather than the comma operator. Then, the (this) at the end is function call with argument this to the returned function function() { return a; }.","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/html%20css%20js/javascript%20problems/"},{"title":"react jsx","text":"html ## react ### jsx `const element = Hello, world!;` This funny tag syntax is neither a string nor HTML. It is called JSX, and it is a syntax extension to JavaScript. We recommend using it with React to describe what the UI should look like. JSX may remind you of a template language, but it comes with the full power of JavaScript. JSX produces React “elements”. Instead of artificially separating technologies by putting markup and logic in separate files, React separates concerns with loosely coupled units called “components” that contain both. - Embedding Expressions in JSX In the example below, we declare a variable called name and then use it inside JSX by wrapping it in curly braces: const name = 'Josh Perez'; const element = Hello, {name}; - JSX is an Expression Too After compilation, JSX expressions become regular JavaScript function calls and evaluate to JavaScript objects. This means that you can use JSX inside of if statements and for loops, assign it to variables, accept it as arguments, and return it from functions: 123456function getGreeting(user) { if (user) { return &lt;h1&gt;Hello, {formatName(user)}!&lt;/h1&gt;; } return &lt;h1&gt;Hello, Stranger.&lt;/h1&gt;;} - Specifying Attributes with JSX You may use quotes to specify string literals as attributes: `const element = link ;` You may also use curly braces to embed a JavaScript expression in an attribute: `const element = ;` - Specifying Children with JSX If a tag is empty, you may close it immediately with />, like XML: `const element = ;` JSX tags may contain children: 123456const element = ( &lt;div&gt; &lt;h1&gt;Hello!&lt;/h1&gt; &lt;h2&gt;Good to see you here.&lt;/h2&gt; &lt;/div&gt;); - JSX Prevents Injection Attacks It is safe to embed user input in JSX: const title = response.potentiallyMaliciousInput; // This is safe: const element = {title}; By default, React DOM escapes any values embedded in JSX before rendering them. Thus it ensures that you can never inject anything that’s not explicitly written in your application. Everything is converted to a string before being rendered. This helps prevent XSS (cross-site-scripting) attacks. - Which characters need to be escaped in HTML inserting text content in your document in a location where text content is expected By \"a location where text content is expected\", I mean inside of an element or quoted attribute value where normal parsing rules apply. For example: HERE or .... Inside of an element, this just includes the entity escape ampersand & and the element delimiter less-than and greater-than signs < >: & becomes &amp; < becomes &lt; > becomes &gt; Inside of attribute values you must also escape the quote character you're using: \" becomes &quot; ' becomes ' I encourage you to escape all five in all cases to reduce the chance of making a mistake. In general, you should not escape spaces as &nbsp;. &nbsp; is not a normal space, it's a non-breaking space. You can use these instead of normal spaces to prevent a line break from being inserted between two words, or to insert extra space without it being automatically collapsed, but this is usually a rare case. Don't do this unless you have a design constraint that requires it. - ! content that has special parsing rules or meaning, such as inside of a script or style tag, or as an element or attribute name. For example: `..., NOT-HERE, NOT-HERE, or ....` In these contexts, the rules are more complicated and it's much easier to introduce a security vulnerability. I strongly discourage you from ever inserting dynamic content in any of these locations. There's usually a safer alternative, such as putting the dynamic value in an attribute and then handling it with JavaScript. - JSX Represents Objects Babel compiles JSX down to React.createElement() calls. These two examples are identical: 1234567891011121314151617181920const element = ( &lt;h1 className=&quot;greeting&quot;&gt; Hello, world! &lt;/h1&gt;);const element = React.createElement( 'h1', {className: 'greeting'}, 'Hello, world!');React.createElement() performs a few checks to help you write bug-free code but essentially it creates an object like this:// Note: this structure is simplifiedconst element = { type: 'h1', props: { className: 'greeting', children: 'Hello, world!' }}; These objects are called “React elements”. You can think of them as descriptions of what you want to see on the screen. ### Rendering an Element into the DOM Let’s say there is a somewhere in your HTML file: `` We call this a “root” DOM node because everything inside it will be managed by React DOM. Applications built with just React usually have a single root DOM node. If you are integrating React into an existing app, you may have as many isolated root DOM nodes as you like. To render a React element, first pass the DOM element to ReactDOM.createRoot(), then pass the React element to root.render(): 12345const root = ReactDOM.createRoot( document.getElementById('root'));const element = &lt;h1&gt;Hello, world&lt;/h1&gt;;root.render(element); ### Function and Class Components The simplest way to define a component is to write a JavaScript function: function Welcome(props) { return Hello, {props.name}; } This function is a valid React component because it accepts a single “props” (which stands for properties) object argument with data and returns a React element. We call such components “function components” because they are literally JavaScript functions. You can also use an ES6 class to define a component: 12345class Welcome extends React.Component { render() { return &lt;h1&gt;Hello, {this.props.name}&lt;/h1&gt;; }} The above two components are equivalent from React’s point of view. - Composing Components Components can refer to other components in their output. This lets us use the same component abstraction for any level of detail. A button, a form, a dialog, a screen: in React apps, all those are commonly expressed as components. For example, we can create an App component that renders Welcome many times: 12345678910111213function Welcome(props) { return &lt;h1&gt;Hello, {props.name}&lt;/h1&gt;;}function App() { return ( &lt;div&gt; &lt;Welcome name=&quot;Sara&quot; /&gt; &lt;Welcome name=&quot;Cahal&quot; /&gt; &lt;Welcome name=&quot;Edite&quot; /&gt; &lt;/div&gt; );} - Extracting Components Don’t be afraid to split components into smaller components. For example, consider this Comment component: 123456789101112131415161718192021function Comment(props) { return ( &lt;div className=&quot;Comment&quot;&gt; &lt;div className=&quot;UserInfo&quot;&gt; &lt;img className=&quot;Avatar&quot; src={props.author.avatarUrl} alt={props.author.name} /&gt; &lt;div className=&quot;UserInfo-name&quot;&gt; {props.author.name} &lt;/div&gt; &lt;/div&gt; &lt;div className=&quot;Comment-text&quot;&gt; {props.text} &lt;/div&gt; &lt;div className=&quot;Comment-date&quot;&gt; {formatDate(props.date)} &lt;/div&gt; &lt;/div&gt; );} It accepts author (an object), text (a string), and date (a date) as props, and describes a comment on a social media website. This component can be tricky to change because of all the nesting, and it is also hard to reuse individual parts of it. Let’s extract a few components from it. First, we will extract Avatar: 12345678function Avatar(props) { return ( &lt;img className=&quot;Avatar&quot; src={props.user.avatarUrl} alt={props.user.name} /&gt; );} The Avatar doesn’t need to know that it is being rendered inside a Comment. This is why we have given its prop a more generic name: user rather than author. We recommend naming props from the component’s own point of view rather than the context in which it is being used. We can now simplify Comment a tiny bit: 123456789101112131415161718function Comment(props) { return ( &lt;div className=&quot;Comment&quot;&gt; &lt;div className=&quot;UserInfo&quot;&gt; &lt;Avatar user={props.author} /&gt; &lt;div className=&quot;UserInfo-name&quot;&gt; {props.author.name} &lt;/div&gt; &lt;/div&gt; &lt;div className=&quot;Comment-text&quot;&gt; {props.text} &lt;/div&gt; &lt;div className=&quot;Comment-date&quot;&gt; {formatDate(props.date)} &lt;/div&gt; &lt;/div&gt; );} Next, we will extract a UserInfo component that renders an Avatar next to the user’s name: 12345678910function UserInfo(props) { return ( &lt;div className=&quot;UserInfo&quot;&gt; &lt;Avatar user={props.user} /&gt; &lt;div className=&quot;UserInfo-name&quot;&gt; {props.user.name} &lt;/div&gt; &lt;/div&gt; );} This lets us simplify Comment even further: 12345678910111213function Comment(props) { return ( &lt;div className=&quot;Comment&quot;&gt; &lt;UserInfo user={props.author} /&gt; &lt;div className=&quot;Comment-text&quot;&gt; {props.text} &lt;/div&gt; &lt;div className=&quot;Comment-date&quot;&gt; {formatDate(props.date)} &lt;/div&gt; &lt;/div&gt; );} - Props are Read-Only Whether you declare a component as a function or a class, it must never modify its own props. - Adding Local State to a Class - 123456789101112131415161718class Clock extends React.Component { constructor(props) { super(props); this.state = {date: new Date()}; } render() { return ( &lt;div&gt; &lt;h1&gt;Hello, world!&lt;/h1&gt; &lt;h2&gt;It is {this.state.date.toLocaleTimeString()}.&lt;/h2&gt; &lt;/div&gt; ); }}const root = ReactDOM.createRoot(document.getElementById('root'));root.render(&lt;Clock /&gt;); - Adding Lifecycle Methods to a Class We want to set up a timer whenever the Clock is rendered to the DOM for the first time. This is called “mounting” in React. We also want to clear that timer whenever the DOM produced by the Clock is removed. This is called “unmounting” in React. 1234567891011121314151617181920212223242526272829303132333435class Clock extends React.Component { constructor(props) { super(props); this.state = {date: new Date()}; } componentDidMount() { this.timerID = setInterval( () =&gt; this.tick(), 1000 ); } componentWillUnmount() { clearInterval(this.timerID); } tick() { this.setState({ date: new Date() }); } render() { return ( &lt;div&gt; &lt;h1&gt;Hello, world!&lt;/h1&gt; &lt;h2&gt;It is {this.state.date.toLocaleTimeString()}.&lt;/h2&gt; &lt;/div&gt; ); }}const root = ReactDOM.createRoot(document.getElementById('root'));root.render(&lt;Clock /&gt;); 1. When the Clock output is inserted in the DOM, React calls the componentDidMount() lifecycle method. Inside it, the Clock component asks the browser to set up a timer to call the component’s tick() method once a second. 2. Every second the browser calls the tick() method. Inside it, the Clock component schedules a UI update by calling setState() with an object containing the current time. 3. Thanks to the setState() call, React knows the state has changed, and calls the render() method again to learn what should be on the screen. This time, this.state.date in the render() method will be different, and so the render output will include the updated time. React updates the DOM accordingly. 4. If the Clock component is ever removed from the DOM, React calls the componentWillUnmount() lifecycle method so the timer is stopped. - State Updates May Be Asynchronous React may batch multiple setState() calls into a single update for performance. Because this.props and this.state may be updated asynchronously, you should not rely on their values for calculating the next state. For example, this code may fail to update the counter: // Wrong 123this.setState({ counter: this.state.counter + this.props.increment,}); To fix it, use a second form of setState() that accepts a function rather than an object. That function will receive the previous state as the first argument, and the props at the time the update is applied as the second argument: // Correct 123this.setState((state, props) =&gt; ({ counter: state.counter + props.increment})); ### Handling Events Handling events with React elements is very similar to handling events on DOM elements. There are some syntax differences: React events are named using camelCase, rather than lowercase. With JSX you pass a function as the event handler, rather than a string. - this You have to be careful about the meaning of this in JSX callbacks. In JavaScript, class methods are not bound by default. If you forget to bind this.handleClick and pass it to onClick, this will be undefined when the function is actually called. 1234567891011121314151617181920212223class Toggle extends React.Component { constructor(props) { super(props); this.state = {isToggleOn: true}; // This binding is necessary to make `this` work in the callback this.handleClick = this.handleClick.bind(this); } handleClick() { this.setState(prevState =&gt; ({ isToggleOn: !prevState.isToggleOn })); } render() { return ( &lt;button onClick={this.handleClick}&gt; {this.state.isToggleOn ? 'ON' : 'OFF'} &lt;/button&gt; ); }} use public class fields syntax to correctly bind callbacks: 12345678910111213class LoggingButton extends React.Component { // This syntax ensures `this` is bound within handleClick. handleClick = () =&gt; { console.log('this is:', this); }; render() { return ( &lt;button onClick={this.handleClick}&gt; Click me &lt;/button&gt; ); }} If you aren’t using class fields syntax, you can use an arrow function in the callback: 1234567891011121314class LoggingButton extends React.Component { handleClick() { console.log('this is:', this); } render() { // This syntax ensures `this` is bound within handleClick return ( &lt;button onClick={() =&gt; this.handleClick()}&gt; Click me &lt;/button&gt; ); }} The problem with this syntax is that a different callback is created each time the LoggingButton renders. In most cases, this is fine. However, if this callback is passed as a prop to lower components, those components might do an extra re-rendering. We generally recommend binding in the constructor or using the class fields syntax, to avoid this sort of performance problem. - Passing Arguments to Event Handlers Inside a loop, it is common to want to pass an extra parameter to an event handler. For example, if id is the row ID, either of the following would work: ` this.deleteRow(id, e)}>Delete Row` `Delete Row` The above two lines are equivalent, and use arrow functions and Function.prototype.bind respectively. In both cases, the e argument representing the React event will be passed as a second argument after the ID. With an arrow function, we have to pass it explicitly, but with bind any further arguments are automatically forwarded. - While declaring a variable and using an if statement is a fine way to conditionally render a component, sometimes you might want to use a shorter syntax - Inline If with Logical && Operator It works because in JavaScript, true && expression always evaluates to expression, and false && expression always evaluates to false. Therefore, if the condition is true, the element right after && will appear in the output. If it is false, React will ignore and skip it. Note that returning a falsy expression will still cause the element after && to be skipped but will return the falsy expression. In the example below, 0 will be returned by the render method. 12345678render() { const count = 0; return ( &lt;div&gt; {count &amp;&amp; &lt;h1&gt;Messages: {count}&lt;/h1&gt;} &lt;/div&gt; );} - Inline If-Else with Conditional Operator Another method for conditionally rendering elements inline is to use the JavaScript conditional operator condition ? true : false. Preventing Component from Rendering In rare cases you might want a component to hide itself even though it was rendered by another component. To do this return null instead of its render output. 1234567891011function WarningBanner(props) { if (!props.warn) { return null; } return ( &lt;div className=&quot;warning&quot;&gt; Warning! &lt;/div&gt; );} - Rendering Multiple Components You can build collections of elements and include them in JSX using curly braces {}. Below, we loop through the numbers array using the JavaScript map() function. We return a element for each item. Finally, we assign the resulting array of elements to listItems: const numbers = [1, 2, 3, 4, 5]; const listItems = numbers.map((number) => {number} ); Then, we can include the entire listItems array inside a element: When you run code, you’ll be given a warning that a key should be provided for list items. A “key” is a special string attribute you need to include when creating lists of elements. 1234567891011function NumberList(props) { const numbers = props.numbers; const listItems = numbers.map((number) =&gt; &lt;li key={number.toString()}&gt; {number} &lt;/li&gt; ); return ( &lt;ul&gt;{listItems}&lt;/ul&gt; );} - Keys Keys help React identify which items have changed, are added, or are removed. Keys should be given to the elements inside the array to give the elements a stable identity: We don’t recommend using indexes for keys if the order of items may change. This can negatively impact performance and may cause issues with component state. Example: Incorrect Key Usage 12345678910111213141516171819202122function ListItem(props) { const value = props.value; return ( // Wrong! There is no need to specify the key here: &lt;li key={value.toString()}&gt; {value} &lt;/li&gt; );}function NumberList(props) { const numbers = props.numbers; const listItems = numbers.map((number) =&gt; // Wrong! The key should have been specified here: &lt;ListItem value={number} /&gt; ); return ( &lt;ul&gt; {listItems} &lt;/ul&gt; );} Example: Correct Key Usage 1234567891011121314151617function ListItem(props) { // Correct! There is no need to specify the key here: return &lt;li&gt;{props.value}&lt;/li&gt;;}function NumberList(props) { const numbers = props.numbers; const listItems = numbers.map((number) =&gt; // Correct! Key should be specified inside the array. &lt;ListItem key={number.toString()} value={number} /&gt; ); return ( &lt;ul&gt; {listItems} &lt;/ul&gt; );} - Embedding map() in JSX JSX allows embedding any expression in curly braces so we could inline the map() result: 1234567891011function NumberList(props) { const numbers = props.numbers; return ( &lt;ul&gt; {numbers.map((number) =&gt; &lt;ListItem key={number.toString()} value={number} /&gt; )} &lt;/ul&gt; );} - Composition vs Inheritance React has a powerful composition model, and we recommend using composition instead of inheritance to reuse code between components. - Containment Some components don’t know their children ahead of time. This is especially common for components like Sidebar or Dialog that represent generic “boxes”. We recommend that such components use the special children prop to pass children elements directly into their output: 1234567function FancyBorder(props) { return ( &lt;div className={'FancyBorder FancyBorder-' + props.color}&gt; {props.children} &lt;/div&gt; );} This lets other components pass arbitrary children to them by nesting the JSX: 123456789101112function WelcomeDialog() { return ( &lt;FancyBorder color=&quot;blue&quot;&gt; &lt;h1 className=&quot;Dialog-title&quot;&gt; Welcome &lt;/h1&gt; &lt;p className=&quot;Dialog-message&quot;&gt; Thank you for visiting our spacecraft! &lt;/p&gt; &lt;/FancyBorder&gt; );} Try it on CodePen Anything inside the JSX tag gets passed into the FancyBorder component as a children prop. Since FancyBorder renders {props.children} inside a , the passed elements appear in the final output. - sometimes you might need multiple “holes” in a component. In such cases you may come up with your own convention instead of using children: 123456789101112131415161718192021222324function SplitPane(props) { return ( &lt;div className=&quot;SplitPane&quot;&gt; &lt;div className=&quot;SplitPane-left&quot;&gt; {props.left} &lt;/div&gt; &lt;div className=&quot;SplitPane-right&quot;&gt; {props.right} &lt;/div&gt; &lt;/div&gt; );}function App() { return ( &lt;SplitPane left={ &lt;Contacts /&gt; } right={ &lt;Chat /&gt; } /&gt; );} Try it on CodePen React elements like and are just objects, so you can pass them as props like any other data. This approach may remind you of “slots” in other libraries but there are no limitations on what you can pass as props in React. - Specialization Sometimes we think about components as being “special cases” of other components. For example, we might say that a WelcomeDialog is a special case of Dialog. 1234567891011121314151617181920212223242526272829303132333435363738394041424344function Dialog(props) { return ( &lt;FancyBorder color=&quot;blue&quot;&gt; &lt;h1 className=&quot;Dialog-title&quot;&gt; {props.title} &lt;/h1&gt; &lt;p className=&quot;Dialog-message&quot;&gt; {props.message} &lt;/p&gt; {props.children} &lt;/FancyBorder&gt; );}class SignUpDialog extends React.Component { constructor(props) { super(props); this.handleChange = this.handleChange.bind(this); this.handleSignUp = this.handleSignUp.bind(this); this.state = {login: ''}; } render() { return ( &lt;Dialog title=&quot;Mars Exploration Program&quot; message=&quot;How should we refer to you?&quot;&gt; &lt;input value={this.state.login} onChange={this.handleChange} /&gt; &lt;button onClick={this.handleSignUp}&gt; Sign Me Up! &lt;/button&gt; &lt;/Dialog&gt; ); } handleChange(e) { this.setState({login: e.target.value}); } handleSignUp() { alert(`Welcome aboard, ${this.state.login}!`); }}","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/html%20css%20js/react%20jsx%20wiki/"},{"title":"url encoding","text":"URL encoding is an encoding format used in URLs.The standard allows the use of arbitrary data inside a Uniform Resource Identifier (a URI; typically a URL) while using only a narrow set of US-ASCII characters. The encoding exists because URLs and HTTP request parameters often contain characters (or other data) that cannot be represented with the limited set of US-ASCII characters (i.e. control characters, etc.). arbitrary随心所欲的not seeming to be based on a reason, system or plan and sometimes seeming unfair Reserved and unreserved charactersUnreserved characters are characters that have no special meaning; they can be displayed as-is and require no special handling. These include uppercase and lowercase letters (A-Z, a-z), decimal digits (0-9), hyphen (-), period (.), underscore (_), and tilde (~). Reserved characters, on the other hand, are characters that may delimit the URI into sub-components: characters such as / # &amp; and others. The following is the list of all reserved characters: ! # $ &amp; ‘ ( ) * + , / : ; = ? @ [ ]. We cannot use reserved character as-is, because this would create ambiguous URIs. Percent encodingTo encode reserved characters, we use the percent-encoding scheme. In percent-encoding, each byte is encoded as a character triplet that consists of the percent character % followed by the two hexadecimal digits that represent the byte numeric value. For instance, %23 is the percent-encoding for the binary octet 00100011, which in US-ASCII, corresponds to the character #. Other charactersPercent encoding is also used to represent other characters; characters that are neither reserved nor unreserved. As an example, imagine a GET request containing a non-ASCII string parameter, such as a search query zajec in jež which is Slovenian for a rabbit and a hedgehog. In such cases, we have to first encode non-ASCII characters as UTF-8 and then encode each byte of the new string with percent-encoding. Encoding the space characterusing the + instead of %20 is valid only when encoding the application/x-www-form-urlencoded content, such as the query part of an URL.","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/html%20css%20js/url%20encoding/"},{"title":"11ty wiki","text":"查看当前地址npm config get registry复制 设置当前地址（设置为淘宝镜像）不要用这个npm config set registry http://registry.npm.taobao.org/npm config set registry https://registry.npmmirror.com复制 设置当前地址（设置为默认地址）npm config set registry https://registry.npmjs.org/ MAKE A PROJECT DIRECTORYCreate a directory for your project using the mkdir command (short for make directory): mkdir eleventy-sampleNow move into that directory with the cd command (short for change directory): cd eleventy-sample INSTALL ELEVENTYCREATE A package.jsonInstalling Eleventy into a project requires a package.json file. The npm command (provided by Node.js) will create one for you with npm init -y. -y tells npm to use default values and skips the command line questionnaire. npm init -y INSTALL ELEVENTY@11ty/eleventy is published on npm and we can install and save it into our project’s package.json by running: npm install @11ty/eleventy --save-devYou may also install Eleventy globally but the package.json installation method above is recommended. RUN ELEVENTYWe can use the npx command (also provided by Node.js) to run our local project’s version of Eleventy. Let’s make sure our installation went okay and try to run Eleventy: npx @11ty/eleventy CREATE SOME TEMPLATESA template is a content file written in a format such as Markdown, HTML, Liquid, Nunjucks, and more, which Eleventy transforms into a page (or pages) when building our site. Let’s run two commands to create two new template files. 12echo '&lt;!doctype html&gt;&lt;title&gt;Page title&lt;/title&gt;&lt;p&gt;Hi&lt;/p&gt;' &gt; index.htmlecho '# Page header' &gt; README.md Alternatively, you can create these using any text editor—just make sure you save them into your project folder and they have the correct file extensions. After you’ve created an HTML template and a Markdown template, let’s run Eleventy again with the following command:npx @11ty/eleventyThe output might look like this: 12345npx @11ty/eleventy[11ty] Writing _site/README/index.html from ./README.md (liquid)[11ty] Writing _site/index.html from ./index.html (liquid)[11ty] Wrote 2 files in 0.04 seconds (v2.0.1)We’ve compiled our two content templates in the current directory into the output folder (_site is the default). GAZE UPON YOUR TEMPLATESUse –serve to start up a hot-reloading local web server. npx @11ty/eleventy –serveYour command line might look something like: 1234567npx @11ty/eleventy --serve[11ty] Writing _site/index.html from ./index.html (liquid)[11ty] Writing _site/README/index.html from ./README.md (liquid)[11ty] Wrote 2 files in 0.04 seconds (v2.0.0)[11ty] Watching…[11ty] Server at http://localhost:8080/Open http://localhost:8080/ or http://localhost:8080/README/ in your favorite web browser to see your Eleventy site live! When you save your template files—Eleventy will refresh the browser with your new changes automatically! USE A BUILD SCRIPTWhen deploying your Eleventy site, the goal is to provide your chosen host with your project’s build output (the _site folder by default). The command you run is usually configured via a build script in your package.json file. It might look like this: DEPOLY ON GITHUB PAGES.0BFILENAME package.json 123456{ &quot;scripts&quot;: { &quot;build&quot;: &quot;npx @11ty/eleventy&quot; }} New files in your GitHub repo.nojekyll file: Open a plain-text editor and save an empty file in the root of your repo (where you have the .eleventy.js) with the filename .nojekyll. This will stop GitHub from trying to build your site as a Jekyll site. .github directory: Create a new directory in the root of your repo and name it .github (yes, starting with a period). Inside that directory, make a directory named workflows. Open a plain-text editor and save a file inside the workflows directory called build.yml. Copy the contents from my build.yml file here.Note: my build.yml file was updated 6/14/23 with Node version improvements thanks to Simon Wiles 12345678910111213141516171819202122232425262728293031323334name: Build Eleventyon: push: branches: - mainjobs: build: runs-on: ubuntu-latest steps: - uses: actions/checkout@v3 - name: Use Node.js current uses: actions/setup-node@v3 with: node-version: current - name: Install dependencies &amp; build run: | npm ci npm run build - name: Deploy uses: peaceiris/actions-gh-pages@v3.8.0 with: github_token: ${{ secrets.GITHUB_TOKEN }} #publish_dir is the folder on the docker instance which eleventy builds the pages to. #it is not the docs folder in the repository publish_dir: _site #publish_branch is the branch in the repository. #this is where you need to point GitHub pages publish_branch: gh-pages Depending on your Eleventy setup, you may need to change publish_dir in your build.yml file. My Eleventy site builds to a folder called dist. If yours builds to a folder with a different name, change it in this file. GitHub configurationCreating a gh-pages branchUsing the GitHub interface, you’ll need to create a new branch of your repo called gh-pages where the built version of your site will be hosted from. If you’re looking at your repo on GitHub, you should see a little button that says main towards the upper left, under the &lt;&gt; Code tab. Click that button, then type gh-pages into the field that says Find or create a branch. This will create a new branch called gh-pages important!!!!the gh-pages branch will be update by the github page action definded up right in the workflow. so dont use the gh-pages branch for editing content Actions configurationGo into the settings for your repo, click on Actions in the set of tabs on the left, then General. Make sure that “Allow all actions and reusable workflows” is selected, and at the bottom of that page, under Workflow permissions make sure that you have “Read and write permissions” selected. GitHub Pages configurationGo into the settings for your repo, and click on “Pages” in the set of tabs on the left. Use the dropdown under Source to choose the gh-pages branch. Building the sitePermalinkIn theory, if you’ve set up all these things, anytime you push changes to GitHub, it will trigger an action that will build the site and move those files to the GitHub Pages hosting environment. If everything isn’t set up just right, you’ll get an email that an action failed. Click the “View workflow run” link in the email, which will take you to a page with information on the failed workflow. Click on the text in the middle panel where you see a red circle with an x – what the text says depends on where exactly it failed. Eventually you’ll see text reflecting where exactly the process failed, and you can search parts of that error message to figure out what’s going wrong. layoutEleventy Layouts are special templates that can be used to wrap other content. firstTo denote that a piece of content should be wrapped in a template, use the layout key in your front matter, like so: content-using-layout.md 12345678---layout: &quot;layouts/mylayout.njk&quot;title: My Rad Markdown Blog Post---`# {{ title }}` This will look for a mylayout.njk Nunjucks file in your includes folder at _includes/layouts/mylayout.njk. Next, we need to create a mylayout.njk file. It can contain any type of text, but here we’re using HTML:FILENAME _includes/mylayout.njk 1234567891011121314151617181920{% raw %}---title: My Rad Blog---&lt;!doctype html&gt;&lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;{{ title }}&lt;/title&gt; &lt;/head&gt; &lt;body&gt;{% raw %} {{ content | safe }}{% endraw %} &lt;/body&gt;&lt;/html&gt;{% endraw %} If you are using a language that contains curly braces, you will likely need to place and tags around your code. Since Jekyll 4.0 , you can add render_with_liquid: false in your front matter to disable Liquid entirely for a particular document. Note that the layout template will populate the content data with the child template’s content. Also note that we don’t want to double-escape the output, so we’re using the provided Nunjucks safe filter here (see more language double-escaping syntax below). FRONT MATTER DATA IN LAYOUTSLayouts can contain their own front matter data! It’ll be merged with the content’s data on render. Content data takes precedence(优先), if conflicting keys arise. Front matter data set in a content template takes priority over layout front matter! Chained layouts have similar merge behavior. The closer to the content, the higher priority the data. SOURCES OF DATAWhen the data is merged in the Eleventy Data Cascade, the order of priority for sources of data is (from highest priority to lowest): Computed Data Front Matter Data in a Template Template Data Files Directory Data Files (and ascending Parent Directories) Front Matter Data in Layouts (this moved in 1.0) ⬅ Configuration API Global Data Global Data Files","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/ssg/11ty_wiki/"},{"title":"","text":"Typecho Blogging PlatformTypecho is a PHP-based blog software and is designed to be the most powerful blog engine in the world. Octopress is basically some guy’s Jekyll blog you can fork and modify.Octopress is single product with a theme, plugins, and command line automation, the best I could offer the Jekyll community was a pile of source code. Octopress is an obsessively designed framework for Jekyll blogging. It’s easy to configure and easy to deploy.","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/ssg/blog%20engine/"},{"title":"","text":"ejshttps://ejs.co EJS is a simple templating language that lets you generate HTML markup with plain JavaScript. No religiousness about how to organize things. No reinvention of iteration and control-flow. It’s just plain JavaScript. 迭代the process of repeating a mathematical or computing process or set of instructions again and again, each time applying it to the result of the previous stage(computer science) executing the same set of instructions a given number of times or until a specified result is obtained religiousness虔诚the quality of being extremely conscientious conscientious一丝不苟的,认真的 Someone who is conscientious is very careful to do their work properly. Example 123&lt;% if (user) { %&gt; &lt;h2&gt;&lt;%= user.name %&gt;&lt;/h2&gt;&lt;% } %&gt; Tags 123456789&lt;% 'Scriptlet' tag, for control-flow, no output&lt;%_ ‘Whitespace Slurping’ Scriptlet tag, strips all whitespace before it&lt;%= Outputs the value into the template (HTML escaped)&lt;%- Outputs the unescaped value into the template&lt;%# Comment tag, no execution, no output&lt;%% Outputs a literal '&lt;%'%&gt; Plain ending tag-%&gt; Trim-mode ('newline slurp') tag, trims following newline_%&gt; ‘Whitespace Slurping’ ending tag, removes all whitespace after it IncludesIncludes are relative to the template with the include call. (This requires the ‘filename’ option.) For example if you have “./views/users.ejs” and “./views/user/show.ejs” you would use &lt;%- include(‘user/show’); %&gt;. You’ll likely want to use the raw output tag (&lt;%-) with your include to avoid double-escaping the HTML output. 12345&lt;ul&gt; &lt;% users.forEach(function(user){ %&gt; &lt;%- include('user/show', {user: user}); %&gt; &lt;% }); %&gt;&lt;/ul&gt; LayoutsEJS does not specifically support blocks, but layouts can be implemented by including headers and footers, like so: 12345678&lt;%- include('header'); -%&gt;&lt;h1&gt; Title&lt;/h1&gt;&lt;p&gt; My page&lt;/p&gt;&lt;%- include('footer'); -%&gt;","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/ssg/ejs%20wiki/"},{"title":"hexo icarus setup","text":"hexo commandUsage: hexo &lt;command&gt; Commands: clean Remove generated files and cache. config Get or set configurations. deploy Deploy your website. generate Generate static files. help Get help on a command. init Create a new Hexo folder. list List the information of the site migrate Migrate your site from other system to Hexo. new Create a new post. publish Moves a draft post from _drafts to _posts folder. render Render files with renderer plugins. server Start the server. version Display version information. Global Options: –config Specify config file instead of using _config.yml –cwd Specify the CWD(change working diretory) –debug Display all verbose messages in the terminal –draft Display draft posts –safe Disable all plugins and scripts –silent Hide output on console hexo install and setupInstall HexoOnce all the requirements are installed, you can install Hexo with npm: $ npm install -g hexo-cli setupOnce Hexo is installed, run the following commands to initialize Hexo in the target &lt;folder&gt;. 123hexo init &lt;folder&gt;cd &lt;folder&gt;npm install eg: 12hexo init .npm install icarus install and setupINSTALL from sourceDownload the source code tarball from the GitHub and extract it to your Hexo site’s theme directory. Alternatively, you can use Git to clone the Icarus repository to the themes directory: Git Bash/Shell git clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus -b &lt;version number&gt; --depth 1 You can omit -b &lt;version number&gt; to get the latest development version of Icarus. Leave –depth 1 out if you want to download full Git commit history of Icarus as well. eg: git clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus --depth 1 icarus setup 要将themes/icarus文件夹中的 package.json 中的 dependencies 内容拷贝并添加到主目录的package.json 中 Next, activate Icarus in your site’s _config.yml file: _config.yml 1theme: icarus or use the hexo command to change the theme to Icarus:Shell command:hexo config theme icarus 然后 npm install 再 use the hexo command to change the theme to Icarus: Shellhexo config theme icarus 这时根据提示 123ERROR Package hexo-renderer-stylus's version (3.0.0) does not satisfy the required version (^2.0.0).ERROR Please install the missing dependencies your Hexo site root directory:ERROR npm install --save hexo-renderer-stylus@^2.0.0 git setupcreate a new repository on the command line eg: 123456git initgit add .git commit -m &quot;first commit&quot;git branch -M maingit remote add origin https://github.com/lucfe2010/lucfe-hexo-private-1.gitgit push -u origin main 注意提示 123hint: You've added another git repository inside your current repository.hint: Clones of the outer repository will not contain the contents ofhint: the embedded repository and will not know how to obtain it. 清除icarus主题文件夹的 GIT 和 GITHUB使用 windows file explore删除 icarus主题文件夹 中的.git文件夹 然后 git rm -r –cached .git add . git 用法git initgit add .git commit -m “first commit”git branch -M maingit push -u origin main git remotegit remote -v：列出当前仓库中已配置的远程仓库，并显示它们的 URL。 git remote addgit remote add &lt;remote_name&gt; &lt;remote_url&gt;添加一个新的远程仓库。指定一个远程仓库的名称和 URL，将其添加到当前仓库中。如git remote add lucfe-clone https://github.com/lucfe2010/lucfe-hexo-61.gitgit remote add origin https://github.com/lucfe2010/lucfe-private-91.git git remote removegit remote remove &lt;remote_name&gt;git remote remove origin hexo configbasic configlanguagelanguage 是与主题相关的 site urlchange the url to the website url of your ownurl: https://ncf2010.us.kg permalinkPermalinksYou can specify the permalinks for your site in _config.yml or in the front-matter for each post. VariablesBesides the following variables, you can use any attributes in the permalink. :category -&gt; Categories. If the post is uncategorized, it will use the default_category value. eg Changepermalink: ':year/:month/:day/:title/'topermalink: ':title/' Global Asset FolderGlobal Asset FolderAssets are non-post files in the source folder, such as images, CSS or JavaScript files. For instance, If you are only going to have a few images in the Hexo project, then the easiest way is to keep them in a source/images directory. Then, you can access them using something like ![](/images/image.jpg). For vscode copy imagesUse vscode open the source folder as project folder to create and edit the posts change the the image relative path linkassets/images/&lt;post title&gt;/*.jpgor../../assets/images/&lt;post title&gt;/*.jpgto the project directory absolute path link/assets/images/&lt;post title&gt;/*.jpg dont use Post Asset Folderor any kind of post asset image link plugin, there are lots of bugs! hexo serverWith the release of Hexo 3, the server has been separated from the main module. To start using the server, you will first have to install hexo-server. $ npm install hexo-server --save Once the server has been installed, run the following command to start the server. Your website will run at http://localhost:4000 by default. When the server is running, Hexo will watch for file changes and update automatically so it’s not necessary to manually restart the server. $ hexo server Static ModeIn static mode, only files in the public folder will be served and file watching is disabled. You have to run hexo generate before starting the server. Usually used in production. $ hexo server -s Git deploy Install hexo-deployer-git.$ npm install hexo-deployer-git --save Edit _config.yml (with example values shown below as comments): 12345deploy: type: git repo: &lt;repository url&gt; # https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io branch: [branch] message: [message] Option Description Default repo URL of the target repository branch Branch name. gh-pages (GitHub) message Customize commit message. Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }} token Optional token value to authenticate with the repo. Prefix with $ to read token from environment variable eg 12345deploy: type: git repo: https://github.com/lucfe2010/lucfe-hexo.git branch: master message: Deploy your site hexo clean &amp;&amp; hexo deploy. You will be prompted with username and password of the target repository, unless you authenticate with a token or ssh key. hexo-deployer-git does not store your username and password. Use git-credential-cache to store them temporarily. Navigate to your repository settings and change the “Pages” branch to gh-pages (or the branch specified in your config). The deployed site should be live on the link shown on the “Pages” setting. 注意在部署的REPOSITORY主目录下加入.jekyll文件 部署步骤每次部署的步骤，可按以下三步来进行。 hexo clean hexo generate hexo deploy 注意.deploy_git 文件夹不能删除，会造成push错误文件夹。如果删除了，要重新卸载并安装hexo-deployer-git.$ npm uninstall hexo-deployer-git --save$ npm install hexo-deployer-git --save icarus configLogo设置你站点的logo。 此logo会显示在导航栏和页脚。 logo配置的值既可以是你的logo图片的路径或URL地址： _config.icarus.ymllogo: /img/logo.svg也可以像下面这样设置成文字： 12logo: text: My Beautiful Site 本站设为 12logo: text: Lucfe Knowledges Favicon你可以在head配置中指定你的网站favicon的路径或URL地址。 12head: favicon: /img/favicon.svg RSS你可以通过head部分的rss设置来添加RSS链接信息。 12head: rss: /path/to/atom.xml 本站设为 12head: rss: /atom.xml 导航栏navbar部分定义了导航栏中的菜单与链接。 你可以通过向menu设置项中添加&lt;链接名&gt;: &lt;链接URL&gt;的方式添加任意导航栏菜单链接。 如要向导航栏右侧添加链接，请向links设置项中添加&lt;链接名&gt;: &lt;链接URL&gt;。 123456789101112131415navbar: # 导航栏菜单项 menu: Home: / Archives: /archives Categories: /categories Tags: /tags About: /about # 导航栏右侧的链接 links: GitHub: 'https://github.com' Download on GitHub: icon: fab fa-github # url: 'https://github.com/ppoffice/hexo-theme-icarus' url: 'https://github.com/lucfe2010/lucfe-hexo' 你也可以使用FontAwesome图标来作为纯文字链接的替换，格式如下： 链接格式 123&lt;链接名&gt;: icon: &lt;FontAwesome图标的class名&gt; url: &lt;链接URL&gt; 页脚footer部分定义了页脚右侧的链接。 链接的配置格式与navbar中links的配置格式完全一致。 你也可以在页脚展示自定义版权文字：\\ 12footer: copyright: 用💖发电 文章封面 &amp; 缩略图若要为文章添加封面图，请在文章的front-matter中添加cover选项： post.md 1234title: Icarus快速上手cover: /gallery/covers/cover.jpg---Post content... 类似地，你也可以在文章的front-matter中为文章设置缩略图： post.md 12345title: Icarus快速上手thumbnail: /gallery/thumbnails/thumbnail.jpg---Post content... 文章的缩略图会显示在归档页面和最新文章挂件中。 如果你在front-matter中使用的是图片的路径，你需要确保它是绝对或者相对于你的source目录的路径。 例如，为使用&lt;your blog&gt;/source/gallery/image.jpg作为缩略图，你需要在front-matter中使用/gallery/image.jpg作为图片路径。 文章许可协议你可以在你的文章/页面的底部展示你的作品的使用许可，许可链接可以是文字或者图标。 这里的配置与导航栏或者页脚的links配置一致： 1234567article: # 文章许可协议 licenses: Creative Commons: icon: fab fa-creative-commons url: 'https://creativecommons.org/' 'CC BY-NC-SA 4.0': 'https://creativecommons.org/licenses/by-nc-sa/4.0/' 一些元数据 文章阅读时间你可以将article部分的readtime设置为true来显示文章字数统计以及预计阅读时间。 文章更新时间若要显示文章的更新时间，请在文章的front_matter中设置updated时间： post.md 12345title: Icarus快速上手updated: 2020-04-01 00:00:00---Post content... 然后，将主题配置文件的article部分的update_time设置为true： 你也可以将update_time设置为false来隐藏所有文章的更新时间，或设置为auto而在文章的更新时间 与发布时间相同时隐藏更新时间。 文章许可协议你可以在你的文章/页面的底部展示你的作品的使用许可，许可链接可以是文字或者图标。 这里的配置与导航栏或者页脚的links配置一致： wiget挂件页面挂件的安装配置。 若要同时展示多个挂件，只需在主题配置的widgets数组中添加多个挂件配置。 它们会按照定义的顺序出现。 每个挂件必须包含type(挂件类型)与position(挂件展示位置)设置项。 示例如下： 123456789widgets: - type: ... # 挂件1 position: left ... - type: ... # 挂件2 position: right ... 布局配置文件布局配置文件遵循着与主题配置文件相同的格式和定义。 _config.post.yml中的配置对所有文章生效，而_config.page.yml中的配置对所有自定义页面生效。 这两个文件将覆盖主题配置文件中的配置。 例如，你可以在_config.post.yml中把所有文章变为两栏布局： 12345678910widgets: - type: recent_posts position: left - type: categories position: left - type: tags position: left 同时所有其他页面仍保持三栏布局： 12345678910widgets: - type: recent_posts position: left - type: categories position: right - type: tags position: right 作者资料卡profile 你可以启用作者资料卡挂件来展示文章作者/网站站长的信息。 资料卡的配置如下所示： 如果你希望使用Gravatar而不是avatar配置项作为头像图片，请在gravatar项填入 你的Gravatar邮箱地址并在avatar一项中留空； 本站使用的如下 social_links可以采用如下两种格式： 图标形式： 1234&lt;链接名称&gt;: icon: &lt;FontAwesome5_图标的_HTML_class名称&gt; url: &lt;链接的URL地址&gt; 文字形式： &lt;链接名称&gt;: &lt;链接的URL地址&gt; 文章目录 toc需要开启目录的文章头部加入toc: true： 1234title: 一篇有目录的文章toc: true---文章内容... 其他最新文章 recent posts文章归档 archives文章分类 categories文章标签 tags1234567widgets: - position: right type: tags order_by: name # 可选项。按名称(name)或长度(length)来排序。加上`-`前缀来倒序排列。 amount: 20 # 可选项。最多显示的标签数量。留空以显示所有标签。 show_count: true # 可选项。是否显示标签名称右侧的文章数量。 友站链接 links12345678widgets: - position: left type: links # 友站名称与链接 links: Hexo: 'https://hexo.io' Bulma: 'https://bulma.io' plugin widgetsGoogle FeedburnerGoogle即将关闭Feedburner的邮件订阅功能。 你可以切换到follow.it挂件或者其他邮件订阅服务。 Google AdSense在Google AdSense上新建广告。 然后，复制广告HTML代码中的data-ad-client和data-ad-slot值分别填入到挂件配置的client_id和slot_id项中。 示例如下： 123456widgets: - position: left type: adsense client_id: ca-pub-xxxxxxxx slot_id: xxxxxxx install and set hexo-generator-feedinstall $ npm install hexo-generator-feed --save You can configure this plugin in _config.yml. 12345678910111213feed: enable: true type: atom path: atom.xml limit: 20 hub: content: content_limit: 140 content_limit_delim: ' ' order_by: -date icon: /assets/images/rss_icon_l.png autodiscovery: true template: follow.it 使用诸如hexo-generator-feed此类的Hexo插件生成 你的Hexo网站的RSS源。 https://ncf2010.us.kg/atom.xml 在FOLLOW.IT 网站一步步“定义关注表单设计”(Define the follow form’s design)页面上already have a form 复制action=后双引号中的链接。 把你复制的action链接粘贴到挂件配置中的action_url设置项。 在”连接你的源到follow.it账户“(Connect your feed to a follow.it account)页面上，在输入框中填入你将要用来注册follow.it账户 和管理订阅者的邮箱地址。 你会收到一封来自follow.it的邮件。 在那封邮件中搜索&lt;meta name=&quot;follow_it-verification-code&quot; content=&quot;******&quot;/&gt;并复制content=后双引号中的content的值。 将你复制的值粘贴到挂件设置中的verification_code设置项。 回到你收到的第一封邮件并点击”点击这里来认领“(Click here to claim it)链接来认领你的订阅源。 icarus plugin setingGoogle Analytics在追踪代码(Tracking Code)界面上找到Tracking ID的值，例如”UA-12345678-0”. 将其填写到主题配置的plugins &gt; google_analytics &gt; tracking_id即可开启Google Analytics插件。 用户评论disqus在评论服务首页的右上角点击“编辑配置”(Edit Settings)按钮。 在“为你的站点配置Disqus”(Configure Disqus for Your Site)页面上找到“Shortname”的值， 复制到主题配置的评论配置项中。 例如，下面截图中的“Shortname”为my-hexo-blog-1： 畅言 复制appid与conf的值到主题配置的对应配置项中。 例如，如下的HTML代码： 123456789&lt;!--PC版--&gt;&lt;div id=&quot;SOHUCS&quot; sid=&quot;...&quot;&gt;&lt;/div&gt;&lt;script charset=&quot;utf-8&quot; type=&quot;text/javascript&quot; src=&quot;https://cy-cdn.kuaizhan.com/upload/changyan.js&quot; &gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot;&gt;window.changyan.api.config({ appid: '????appid????', conf: 'prod_xxxxxxxxxxxxxxxxxxxxxxx'});&lt;/script&gt; 对应到主题配置为： 1234comment: type: changyan app_id: appid conf: prod_xxxxxxxxxxxxxxxxxxxxxxx 分享按钮share thiscopy the src URL from the HTML code fragment to the share button configuration. For example, the following ShareThis code: &lt;script type=&quot;text/javascript&quot; src=&quot;https://platform-api.sharethis.com/js/sharethis.js#property=xxxxxxxxxxxxx&amp;product=inline-share-buttons&quot; async=&quot;async&quot;&gt;&lt;/script&gt; maps to the following theme configuration: 123share: type: sharethis install_url: https://platform-api.sharethis.com/js/sharethis.js#property=xxxxxxxxxxxxx&amp;product=inline-share-buttons for china web connectingdisable these pluginsbusiness or paymentfeedburngoogle ad sensegoogle analyticssharethischangyan commentsdisqus commnetscookie consentfollow.it disable these links and font iconsarticle licsence linksfooter linksnavbar links CDN提供商 change cdn provider内置CDN提供商目前，Icarus提供如下的内置CDN服务提供商： JavaScript库CDNcdnjs.com (cdnjs)jsDelivr (jsdelivr)UNPKG (unpkg)loli.net (loli)Web字体CDNGoogle Fonts (google)loli.net (loli)font.im (fontim)中国科学技术大学 (ustc)FontAwesome图标CDNFontAwesome 5 (fontawesome)loli.net (loli) 默认的CDN服务提供商配置为： 1234providers: cdn: jsdelivr fontcdn: google iconcdn: fontawesome 修改为： 1234providers: cdn: cdnjs fontcdn: loli iconcdn: loli","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/ssg/hexo-icarus-setup/"},{"title":"hexo theme develop","text":"hexo theme variablessiteSite VariablesVariable Description Typesite.posts All posts array of post objectssite.pages All pages array of page objectssite.categories All categories array of categories objectssite.tags All tags array of tags objects config123456789101112131415config: { title: 'Lucfe Knowledge Documentation', subtitle: '', description: '', author: 'lucfe', language: 'en', timezone: '', url: 'https://ncf2010.us.kg', root: '/', permalink: ':title/', permalink_defaults: null, ...} language&lt;html lang={language ? language.substr(0, 2) : ''}&gt; config.head_config.ymlhead: # URL or path to the website’s icon favicon: /assets/images/favicon_l.png # Web application manifests configuration # https://developer.mozilla.org/en-US/docs/Web/Manifest manifest: # Name of the web application (default to the site title) name: ... meta: rss {rss ? &lt;link rel=&quot;alternate&quot; href={url_for(rss)} title={config.title} type=&quot;application/atom+xml&quot; /&gt; : null} config.head.faviconhead: # URL or path to the website’s icon favicon: /assets/images/favicon_l.png {favicon ? &lt;link rel=&quot;icon&quot; href={url_for(favicon)} /&gt; : null} articlearticle: # Code highlight settings highlight: # Code highlight themes # https://github.com/highlightjs/highlight.js/tree/master/src/styles theme: atom-one-light article highlight themehighlight variant = ‘default’# the theme variant 'default' or 'cyberpunk' see cnd let hlTheme, images; if (highlight &amp;&amp; highlight.enable === false) { hlTheme = null; } else if (article &amp;&amp; article.highlight &amp;&amp; article.highlight.theme) { hlTheme = article.highlight.theme; } else { hlTheme = ‘atom-one-light’; } titleconfig.titlesite title page123456789101112131415page: { base: '', total: 1, current: 1, current_url: '', posts: _Query { data: [Array], length: 5 }, prev: 0, prev_link: '', next: 0, next_link: '', __index: true, path: 'index.html', lang: 'en', canonical_path: 'index.html' } article (page)Variable Description Typepage.title Article title stringpage.date Article created date Moment.js objectpage.updated Article last updated date Moment.js objectpage.comments Comment enabled or not booleanpage.layout Layout name stringpage.content The full processed content of the article stringpage.excerpt Article excerpt stringpage.more Contents except article excerpt stringpage.source The path of the source file stringpage.full_source Full path of the source file stringpage.path The URL of the article without root URL. We usually use url_for(page.path) in theme. stringpage.permalink Full (encoded) URL of the article stringpage.prev The previous post, null if the post is the first post ???page.next The next post, null if the post is the last post ???page.raw The raw data of the article ???page.photos The photos of the article (Used in gallery posts) array of ???page.link The external link of the article (Used in link posts) string Post (post):Same as page layout but add the following variables. Variable Description Typepage.published True if the post is not a draft booleanpage.categories All categories of the post array of ???page.tags All tags of the post array of ??? Home (index)Variable Description Typepage.per_page Posts displayed per page numberpage.total Total number of pages numberpage.current Current page number numberpage.current_url The URL of current page stringpage.posts Posts in this page (Data Model) objectpage.prev Previous page number. 0 if the current page is the first. numberpage.prev_link The URL of previous page. ‘’ if the current page is the first. stringpage.next Next page number. 0 if the current page is the last. numberpage.next_link The URL of next page. ‘’ if the current page is the last. stringpage.path The URL of current page without root URL. We usually use url_for(page.path) in theme. string Archive (archive):Same as index layout but add the following variables. Variable Description Typepage.archive Equals true booleanpage.year Archive year (4-digit) numberpage.month Archive month (2-digit without leading zeros) number page.month page.yearCategory (category):Same as index layout but add the following variables. Variable Description Typepage.category Category name string Tag (tag):Same as index layout but add the following variables. Variable Description Typepage.tag Tag name string page.permalinkFull (encoded) URL of the article string canonical_url = page.permalink {canonical_url ? &lt;link rel=&quot;canonical&quot; href={canonical_url} /&gt; : null} hexo theme helpers12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061helper: { date: [Function: bound dateHelper], date_xml: [Function: bound toISOString], time: [Function: bound timeHelper], full_date: [Function: bound fullDateHelper], relative_date: [Function: bound relativeDateHelper], time_tag: [Function: bound timeTagHelper], moment: [Function: bound hooks], search_form: [Function: bound moized(searchFormHelper)], strip_html: [Function: bound striptags], trim: [Function: bound ], titlecase: [Function: bound toTitleCase], word_wrap: [Function: bound wordWrap], truncate: [Function: bound truncate], escape_html: [Function: bound escapeHTML], fragment_cache: [Function: bound fragmentCache], gravatar: [Function: bound gravatarHelper], is_current: [Function: bound isCurrentHelper], is_home: [Function: bound isHomeHelper], is_home_first_page: [Function: bound isHomeFirstPageHelper], is_post: [Function: bound isPostHelper], is_page: [Function: bound isPageHelper], is_archive: [Function: bound isArchiveHelper], is_year: [Function: bound isYearHelper], is_month: [Function: bound isMonthHelper], is_category: [Function: bound isCategoryHelper], is_tag: [Function: bound isTagHelper], list_archives: [Function: bound listArchivesHelper], list_categories: [Function: bound listCategoriesHelper], list_tags: [Function: bound listTagsHelperFactory], list_posts: [Function: bound listPostsHelper], meta_generator: [Function: bound metaGeneratorHelper], open_graph: [Function: bound openGraphHelper], number_format: [Function: bound numberFormatHelper], paginator: [Function: bound paginatorHelper], partial: [Function: bound partial], markdown: [Function: bound markdownHelper], render: [Function: bound render], css: [Function: bound moized(cssHelper)], js: [Function: bound moized(jsHelper)], link_to: [Function: bound linkToHelper], mail_to: [Function: bound moized(mailToHelper)], image_tag: [Function: bound imageTagHelper], favicon_tag: [Function: bound faviconTagHelper], feed_tag: [Function: bound feedTagHelper], tagcloud: [Function: bound tagcloudHelperFactory], tag_cloud: [Function: bound tagcloudHelperFactory], toc: [Function: bound tocHelper], relative_url: [Function: bound ], url_for: [Function: bound ], full_url_for: [Function: bound ], inspect: [Function: bound inspectObject], log: [Function: bound log], cdn: [Function: bound ], fontcdn: [Function: bound ], iconcdn: [Function: bound ], is_categories: [Function: bound ], is_tags: [Function: bound ], __: [Function (anonymous)], _p: [Function (anonymous)] } TemplatespartialLoads other template files. You can define local variables in locals. &lt;%- partial(layout, [locals], [options]) %&gt;Option Description Defaultcache Cache contents (Use fragment cache) falseonly Strict local variables. Only use variables set in locals in templates. falsefragment_cacheCaches the contents in a fragment. It saves the contents within a fragment and serves the cache when the next request comes in. &lt;%- fragment_cache(id, fn);Examples: &lt;%- fragment_cache(‘header’, function(){ return ‘‘;}) %&gt; Conditional Tagsis_currentCheck whether path matches the URL of the current page. Use strict options to enable strict matching. &lt;%- is_current(path, [strict]) %&gt;is_homeCheck whether the current page is home page. &lt;%- is_home() %&gt;is_postCheck whether the current page is a post. &lt;%- is_post() %&gt;is_archiveCheck whether the current page is an archive page. &lt;%- is_archive() %&gt;is_yearCheck whether the current page is a yearly archive page. &lt;%- is_year() %&gt;is_monthCheck whether the current page is a monthly archive page. &lt;%- is_month() %&gt;is_categoryCheck whether the current page is a category page.If a string is given as parameter, check whether the current page match the given category. &lt;%- is_category() %&gt;&lt;%- is_category(‘hobby’) %&gt; is_tagCheck whether the current page is a tag page.If a string is given as parameter, check whether the current page match the given tag. &lt;%- is_tag() %&gt;&lt;%- is_tag(‘hobby’) %&gt; helper.is_post()helper.is_archive() https://ncf2010.us.kg/archives/ helper.is_month() https://ncf2010.us.kg/archives/2023/09/ helper.is_year() https://ncf2010.us.kg/archives/2023/ helper._p()TemplatesUse __ or _p helpers in templates to get the translated strings. The former is for normal usage and the latter is for plural strings. For example: en.ymlindex: title: Home add: Add video: zero: No videos one: One video other: %d videos&lt;%= __(‘index.title’) %&gt;// Home &lt;%= _p(‘index.video’, 3) %&gt;// 3 videos helper._p(‘common.archive’, Infinity); if (helper.is_tag()) { title = helper._p(‘common.tag’, 1) + ‘: ‘ + page.tag; } if (helper.is_categories()) { title = helper._p(‘common.category’, Infinity);} URLurl_forReturns a url with the root path prefixed. You should use this helper instead of config.root + path since Hexo 2.7. &lt;%- url_for(path) %&gt; gravatarInserts a Gravatar image. &lt;%- gravatar(‘a@abc.com‘ {s: 40, d: ‘http://example.com/image.png'}) %&gt;// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40&amp;d=http%3A%2F%2Fexample.com%2Fimage.png url_forcdn fontcdn and iconcdncdn() {hlTheme ? &lt;link rel=&quot;stylesheet&quot; href={cdn('highlight.js', '11.7.0', 'styles/' + hlTheme + '.css')} /&gt; : null} hlTheme fontcdn() 123456&lt;link rel=&quot;stylesheet&quot; href={fontCssUrl[variant]} /&gt;const fontCssUrl = { default: fontcdn('Ubuntu:wght@400;600&amp;family=Source+Code+Pro', 'css2'), cyberpunk: fontcdn('Oxanium:wght@300;400;600&amp;family=Roboto+Mono', 'css2') }; iconcdn() &lt;link rel=&quot;stylesheet&quot; href={iconcdn()} /&gt; HTML Tagscss &lt;%- css(‘style.css’) %&gt;// js &lt;%- js(‘script.js’) %&gt;// link_to &lt;%- link_to(‘http://www.google.com‘, ‘Google’, {external: true}) %&gt;// Google image_tagfavicon_tagfeed_tag Listlist_categoriesInserts a list of all categories. &lt;%- list_categories([options]) %&gt;Option Description Defaultorderby Order of categories nameorder Sort of order. 1, asc for ascending; -1, desc for descending 1show_count Display the number of posts for each category truestyle Style to display the category list. list displays categories in an unordered list. listseparator Separator between categories. (Only works if style is not list) ,depth Levels of categories to be displayed. 0 displays all categories and child categories; -1 is similar to 0 but displayed in flat; 1 displays only top level categories. 0class Class name of category list. categorytransform The function that changes the display of category name. suffix Add a suffix to link. None list_tagsInserts a list of all tags. &lt;%- list_tags([options]) %&gt;Option Description Defaultorderby Order of categories nameorder Sort of order. 1, asc for ascending; -1, desc for descending 1show_count Display the number of posts for each tag truestyle Style to display the tag list. list displays tags in an unordered list. listseparator Separator between categories. (Only works if style is not list) ,class Class name of tag list. tagtransform The function that changes the display of tag name. amount The number of tags to display (0 = unlimited) 0suffix Add a suffix to link. None list_archivesInserts a list of archives. &lt;%- list_archives([options]) %&gt;Option Description Defaulttype Type. This value can be yearly or monthly. monthlyorder Sort of order. 1, asc for ascending; -1, desc for descending 1show_count Display the number of posts for each archive trueformat Date format MMMM YYYYstyle Style to display the archive list. list displays archives in an unordered list. listseparator Separator between archives. (Only works if style is not list) ,class Class name of archive list. archivetransform The function that changes the display of archive name. list_postsInserts a list of posts. &lt;%- list_posts([options]) %&gt;Option Description Defaultorderby Order of posts dateorder Sort of order. 1, asc for ascending; -1, desc for descending 1style Style to display the post list. list displays posts in an unordered list. listseparator Separator between posts. (Only works if style is not list) ,class Class name of post list. postamount The number of posts to display (0 = unlimited) 6transform The function that changes the display of post name. tagcloudInserts a tag cloud. &lt;%- tagcloud([tags], [options]) %&gt;Option Description Defaultmin_font Minimal font size 10max_font Maximum font size 20unit Unit of font size pxamount Total amount of tags 40orderby Order of tags nameorder Sort order. 1, sac as ascending; -1, desc as descending 1color Colorizes the tag cloud falsestart_color Start color. You can use hex (#b700ff), rgba (rgba(183, 0, 255, 1)), hsla (hsla(283, 100%, 50%, 1)) or color keywords. This option only works when color is true. end_color End color. You can use hex (#b700ff), rgba (rgba(183, 0, 255, 1)), hsla (hsla(283, 100%, 50%, 1)) or color keywords. This option only works when color is true. MiscellaneouspaginatorInserts a paginator. &lt;%- paginator(options) %&gt;Option Description Defaultbase Base URL /format URL format page/%d/total The number of pages 1current Current page number 0prev_text The link text of previous page. Works only if prev_next is set to true. Prevnext_text The link text of next page. Works only if prev_next is set to true. Nextspace The space text &hellp;prev_next Display previous and next links trueend_size The number of pages displayed on the start and the end side 1mid_size The number of pages displayed between current page, but not including current page 2show_all Display all pages. If this is set true, end_size and mid_size will not works. false tocParses all heading tags (h1~h6) in the content and inserts a table of contents. Date &amp; TimedateInserts formatted date. date can be unix time, ISO string, date object, or Moment.js object. format is date_format setting by default. &lt;%- date(date, [format]) %&gt;Examples: &lt;%- date(Date.now()) %&gt;// 2013-01-01 &lt;%- date(Date.now(), ‘YYYY/M/D’) %&gt;// Jan 1 2013date_xmlInserts date in XML format. date can be unix time, ISO string, date object, or Moment.js object. &lt;%- date_xml(date) %&gt;Examples: &lt;%- date_xml(Date.now()) %&gt;// 2013-01-01T00:00:00.000ZtimeInserts formatted time. date can be unix time, ISO string, date object, or Moment.js object. format is time_format setting by default. &lt;%- time(date, [format]) %&gt;Examples: &lt;%- time(Date.now()) %&gt;// 13:05:12 &lt;%- time(Date.now(), ‘h:mm:ss a’) %&gt;// 1:05:12 pmfull_dateInserts formatted date and time. date can be unix time, ISO string, date object, or Moment.js object. format is date_format + time_format setting by default. &lt;%- full_date(date, [format]) %&gt;Examples: &lt;%- full_date(new Date()) %&gt;// Jan 1, 2013 0:00:00 &lt;%- full_date(new Date(), ‘dddd, MMMM Do YYYY, h:mm:ss a’) %&gt;// Tuesday, January 1st 2013, 12:00:00 am &lt;%- toc(str, [options]) %&gt;Option Description Defaultclass Class name toclist_number Displays list number truemax_depth Maximum heading depth of generated toc 6Examples: &lt;%- toc(page.content) %&gt; infernoComponent123456789Class component:import { Component } from 'inferno';class MyComponent extends Component { render() { ... }} class declare1234567891011121314151617export declare class Component&lt;P = {}, S = {}&gt; implements IComponent&lt;P, S&gt; { state: S | null; props: { children?: InfernoNode; } &amp; P; context: any; displayName?: string; refs?: any; ... constructor(props?: P, context?: any); ... render(_nextProps: P, _nextState: S, _nextContext: any): InfernoNode | undefined;} This is the base class for Inferno Components when they’re defined using ES6 classes. icarus theme COMPONENTSjs regex Pattern123let img;const imgPattern = /&lt;img [^&gt;]*src=['&quot;]([^'&quot;]+)([^&gt;]*&gt;)/gi;img = imgPattern.exec(page.content); bodythe rendered html from another layout files.也就是layout文件夹第一层的中去除layout.jsx的其他*.jsx文件 OpenGraph and Structured Data12345678910111213141516171819202122232425262728293031&lt;OpenGraph type=&quot;blog&quot; title=&quot;Page title&quot; language=&quot;Page language&quot; description=&quot;Page description&quot; date=&quot;Page publish date&quot; updated=&quot;Page update date&quot; author=&quot;Page author&quot; keywords=&quot;keyword1,keyword2,...&quot; images={[ '/path/to/image.png' ]} url=&quot;/path/to/page&quot; siteName=&quot;Site name&quot; twitterId=&quot;Twitter ID&quot; twitterCard=&quot;summary&quot; twitterSite=&quot;Twitter Site&quot; googlePlus=&quot;/path/to/google/plus&quot; facebookAdmins=&quot;Facebook admin ID&quot; facebookAppId=&quot;Facebook APP ID&quot; /&gt;&lt;StructuredData title=&quot;Page title&quot; url=&quot;/page/url&quot; author=&quot;Page author name&quot; publisher=&quot;Page publisher name&quot; publisherLogo=&quot;/path/to/logo&quot; description=&quot;Page description&quot; images={[ '/path/to/image' ]} date=&quot;Page publish date&quot; updated=&quot;Page update date&quot; /&gt; meta tags123456&lt;MetaTags meta={meta} /&gt;&lt;Meta meta={[ 'name=&quot;generator&quot;;content=&quot;Hexo 4.2.0&quot;' 'property=&quot;article:author&quot;;content=&quot;PPOffice&quot;']} /&gt; WebApp123456789&lt;WebApp name=&quot;******&quot; manifest=&quot;/path/to/manifest.json&quot; tileIcon=&quot;/path/to/image&quot; themeColor=&quot;#000000&quot; icons={[ { src: '/path/to/image', sizes: '128x128 256x256' }, { src: '/path/to/image', sizes: '512x512' }, ]} /&gt; followIt{followItVerificationCode ? &lt;meta name=&quot;follow.it-verification-code&quot; content={followItVerificationCode} /&gt; : null} let followItVerificationCode = null; if (Array.isArray(config.widgets)) { const widget = config.widgets.find(widget =&gt; widget.type === ‘followit’); if (widget) { followItVerificationCode = widget.verification_code; } } hexo theme develop examplelanguages 文件夹放有一个或多个语言文件。 layout 文件夹下面用于存放页面文件，通常第一层有 Index 首页 、 Archive 归档页 、 Tag 标签页 、 Category 分类页 、 Post 文章页 、 Page 页面详情页 、 layout 布局 ，一般还会创建一个公共页面的文件夹，该文件夹用于放置一个页面的部分内容，用于复用。 source 文件夹用于放一些资源文件，例如： 字体 、 CSS 、 JS 、 图片 等，也会根据他们的文件类型进行再次分类，图片放到图片的文件夹，JS 放到 JS 的文件夹。 先从 layout.ejs 文件开始，该文件是布局文件，其他页面都按照其来进行渲染，编写时遵循 HTML5 规范 12345678910111213&lt;!DOCTYPE html&gt;&lt;html lang=&quot;&lt;%= config.language %&gt;&quot;&gt;&lt;head&gt; &lt;%- partial('common/head') %&gt;&lt;/head&gt;&lt;body&gt; &lt;%- partial('common/header') %&gt; &lt;div class=&quot;wrapper&quot;&gt; &lt;%- body %&gt; &lt;/div&gt; &lt;%- partial('common/footer') %&gt;&lt;/body&gt;&lt;/html&gt; config.language 表示使用根目录配置文件中 language 属性，假设配置文件中该属性填的是 zh-CN ，则最终渲染成 。 partial() 用于引入公共布局，当引用后，每个页面都会存在你引用的这个布局，上面一共引用了三个文件 head 、 header 、 footer ，三个文件都在 common 文件夹下，这时候应该建立该文件夹，并在下面创建对应的三个 ejs 文件。假设 head.ejs 中的内容为 this is head ，最终渲染成如下：（每个页面都会存在此内容） this is head 表示其他页面内容，例如： index.ejs 、 archive.ejs 等，假设 index.ejs 内容为 this is index ，则最终渲染成如下：（因为是写在首页文件中，所以只有首页会存在该内容） this is index Hexo 预置数据 即变量post.ejs 文件内容如下： 一篇 md 文章内容如下： 12345678---title: 这是一篇文章tip: hexo 开发---主内容...文章页面最终渲染成： 12345678910111213141516171819&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt;&lt;head&gt; head&lt;/head&gt;&lt;body&gt; header &lt;div class=&quot;wrapper&quot;&gt; &lt;div class=&quot;post&quot;&gt; &lt;h1&gt;这是一篇文章&lt;/h1&gt; &lt;p&gt;hexo 开发&lt;/p&gt; &lt;div class=&quot;post-content&quot;&gt; 主内容... &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; footer&lt;/body&gt;&lt;/html&gt; 下面做一个 关于 页面的例子：首先在根目录资源文件夹创建一个名为 about 的文件夹，再到该文件夹下创建一个 index.md 文件，内容为： 12345---title: 关于type: 'about'---这是一个关于页面内容 到主题文件夹中布局文件夹中创建一个 about.ejs 页面，内容为： 在 page.ejs 中引入 about.ejs // 该文件是其他页面的集合，所以得判断啥情况引入啥文件 // 假设引入友情链接文件&lt;% if (is_page() &amp;&amp; page.type === ‘links’) { %&gt; // is_page() 是啥请看官方文档 - 辅助函数 &lt;%- partial(‘links’) %&gt;&lt;% } %&gt;最终渲染结果 head header 关于 这是一个关于页面内容 footer 列表官方文档中有 list_categories 、 list_posts 等函数，都有具体的使用方法，在这里对于列表我写出我常用的方法。 文章列表： 对于文章通常有两种，一种是每页只显示 config.per_page 数量的文章，带有分页，另外一种是一个页面显示所有文章。 // 带分页，使用 Hexo 预置变量 page.posts&lt;% page.posts.each(function(post) { %&gt; // 因为这里有个对象 post &lt;% post.title %&gt; // 所以这里才可以用 post.title &lt;%- partial(‘common/post-card’, {post: post}) %&gt; // 这时引用一个文件&lt;% }); %&gt; post-card 文件内容为： // 这里是会报错的，无法通过 // 一个页面显示所有文章&lt;% site.posts.each(function(post) { %&gt; &lt;% post.title %&gt; &lt;%- partial(‘common/post-card’, {post: post}) %&gt;&lt;% }); %&gt; 主题中原有的 category.ejs 和 tag.ejs 文件都是属于单个对象的页面category.ejs 页面只显示单个分类，当你点击分类 1 跳转过去的页面就是 category ，它不会显示出网站中所有的分类。 想要全部显示出来，需要自行创建一个页面categories 、 tags","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/ssg/hexo%20theme%20develop/"},{"title":"the complete javascript course zero to expert","text":"fundamentas 01alert(&quot;Hello World!&quot;) 1234let js = 'amazing';if (js === 'amazing') alert('Javascript is FUN!');js = 'boring';if (js === 'amazing') alert('Javascript is FUN!'); javascript is a high-level object-oriented, multi-paradigm programming language programming language: instruct computer to do thingshigh level: we dont have to worry about complex stuff like memory managementobject oriented: based on objects, for storing most kinds of datamulti paradigm: we can use different styles of programming dynamic effects and web applications in the browser -&gt; react agular vue web applications on web servers -&gt; nodejs native mobile applications -&gt; native react, ionic native desktop applications -&gt; electorn ES6/ES2015 1240 + 8 + 23 - 10;console.log(40 + 8 + 23 - 10); value and variables1234567console.log('Jonas');console.log(23);let firstName = 'Matilda';console.log(firstName);console.log(firstName);console.log(firstName); camlcaselet first = 'Jonas';let firstNamePerson; error number firstlet 2ads = 2; letternumber8undersocre_dollarsign$ no key word constantsPI class namePerson name descriptivelet myFirstJob = 'Programmer';let myCurrentJob = 'Teacher';notlet job1 = 'Programmer';let job2 = 'Teacher'; data typesdymatic type object or primitive primitive numberfloating point used for dicimals and integers stringsequence of characters booleantrue or false undifinedvalue taken by a variable that is not yet defined(‘empty value’)let children; null symbol(es2015)unique and cannot be changed bigint(es2020)larger integers 123456789101112131415161718192021222324// console.log(true);let javascriptIsFun = true;console.log(javascriptIsFun);// console.log(typeof true); // 'boolean'console.log(typeof javascriptIsFun); // 'boolean'// console.log(typeof 23); // 'number'// console.log(typeof 'Jonas'); // 'string'// console.log(typeof &quot;Jonas&quot;); // 'string'javascriptIsFun = 'YES!';console.log(typeof javascriptIsFun); // 'string'let year;console.log(year); // undefinedconsole.log(typeof year); // 'undefined'year = 1991;console.log(year); // 1991console.log(typeof year); // 'number'// javascript bugconsole.log(typeof null); // 'object' let const var12345678910111213141516let age = 30;age = 31;const birthYear = 1991;//script.js:51 Uncaught TypeError: Assignment to constant variable.// birthYear = 1990;//Uncaught SyntaxError: Missing initializer in const declaration// const job;// let is block scope var is functiong scopevar job = 'programmer';job = 'teacher';// not recomment, global scopelastName = 'asdf';console.log(lastName); basic operators1234567891011121314151617181920212223242526272829303132const now = 2037// const ageJonas = 2037 - 1991;const ageJonas = now - 1991;// const ageSarah = 2037 - 2018;const ageSarah = now - 2018;console.log(ageJonas);console.log(ageJonas, ageSarah); // 46 19console.log(ageJonas * 2, ageJonas / 10, 2 ** 3);//2**3 = 2 * 2 * 2const firstName = 'Jonas';const lastName = 'Schemd';console.log(firstName + ' ' + lastName); // Jonas Schemd//asignmentlet x = 10 + 5; // 15x += 10; // x = x + 10 = 25x *= 4 // x = x * 4 = 100x++; // x = x + 1x--;console.log(x); // // comparisonconsole.log(ageJonas &gt; ageSarah); // trueconsole.log(ageJonas &gt;= 18); // trueconst isFullAge = ageJonas &gt;= 18;console.log(isFullAge);console.log(now - 1991 &gt; now - 2018); percedencemdn operator precedence 1234567891011121314const now = 2037;const ageJonas = now - 1991;const ageSarah = now - 2018;console.log(now - 1991 &gt; now - 2018);let x, y;x = y = 25 - 10 - 5;console.log(x, y); // 10 10// const averageAge = ageJonas + ageSarah / 2 // 55.5const averageAge = (ageJonas + ageSarah) / 2 // 32.5console.log(ageJonas, ageSarah);console.log(averageAge); Coding Challenge #1string and template literal1234567891011121314151617181920212223242526const firstName = 'Jonas'const job = 'teacher';const birthYear = 1991;const year = 2037;// I'm Jonas, a 46 years old teacher!const jonas = &quot;I'm &quot; + firstName + ', a ' + (year - birthYear) + ' years old ' + job + '!';console.log(jonas);//es6const jonasNew = `I'm ${firstName}, a ${year - birthYear} years old ${job}!`;console.log(jonasNew);console.log(`Just a regular string...`);//multiline string// String with // multiple// linesconsole.log('String with \\n\\multiple\\n\\lines');console.log(`Stringmultipleline`); if else control structure12345678910111213141516171819202122232425262728293031const age = 15;// const age = 19;// const isOldEnough = age &gt;= 18;// if (isOldEnough) {// console.log('Sarah can start driving licese!');// }if (age &gt;= 18) { console.log('Sarah can start driving licese!');} else { const yearsLeft = 18 - age; //Sarah is too young. Wait another 3 years :) console.log(`Sarah is too young. Wait another ${yearsLeft} years :)`);}// const birthYear = 1991;const birthYear = 2012;let century;if (birthYear &lt;= 2000) { // let century = 20; century = 20;} else { century = 21;}// Uncaught ReferenceError: century is not defined// console.log(century);console.log(century); type conversion and coercioncoercion autoconversion manually 123456789101112131415161718192021222324252627282930// type coversionconst inputYear = '1991';console.log(inputYear + 18); // '199118'console.log(Number(inputYear), inputYear); // 1991 '1991'console.log(Number(inputYear) + 18); // 2009// NaN not a valid numberconsole.log(Number('Jonas')); // NaNconsole.log(typeof NaN); // 'number'console.log(String(23), 23); // '23' 23// type coercion// 'I am 23 years old'console.log('I am ' + 23 + ' years old');// console.log('I am ' + String(23) + ' years old');console.log('23' - '10' - 3); // 10// console.log(Number('23') - Number('10') - 3); // 10console.log('10' * '2'); // 20console.log('10' / '2'); // 5let n = '1' + 1; // 11n = n - 1;console.log(n); // 10console.log(2 + 3 + 4 + '5'); truthy and falsy valuesboolean coercion logical operator logical context: if else statement 12345678910111213141516171819202122232425262728// 5 falsy values: 0, '', undefined, null, NaN// else are truthy valuesconsole.log(Boolean(0)); // falseconsole.log(Boolean(undefined)); // falseconsole.log(Boolean('')); // falseconsole.log(Boolean('Jonas')); // trueconsole.log(Boolean({})); // trueconsole.log(Boolean(-1)); // true// const money = 0; // you should get a jobconst money = 100; // dont spent it allif (money) { console.log('dont spent it all');} else { console.log('you should get a job');}let height; // height is undefined// let height = 0; // height is undefined// let height = 100; // height is definedif (height) { console.log('height is defined');} else { console.log('height is undefined');} equal operators123456789101112131415161718192021222324252627282930313233343536const age = 18;// no type coercionif (age === 18) console.log('You just became an adult!');// trueif ('18' == 18) console.log('You just became an adult!');// if (Number('18') == 18) console.log('You just became an adult!');// falseif ('18' === 18) console.log('You just became an adult!');// input: 23let favourite = prompt(&quot;What's your favorite number?&quot;);console.log(favourite); // '21'console.log(typeof favourite); // 'string'if (favourite == 23) { console.log('23 is an amazing number!');}if (Number(favourite) === 23) { console.log('23 is an amazing number!');}favourite = Number(favourite);if (favourite === 23) { console.log('23 is an amazing number!');} else if (favourite === 7) { console.log('7 is an amazing number!');} else { console.log('number is not 7 or 23!');}if (favourite !== 23) console.log('why not 23!'); boolean logic operatorsand or not 12345678910111213141516171819202122232425262728293031// const hasDriverLicense = true;// const hasGoodVision = true;// console.log(hasDriverLicense &amp;&amp; hasGoodVision); // trueconst hasDriverLicense = true;const hasGoodVision = false;console.log(hasDriverLicense &amp;&amp; hasGoodVision); // falseconsole.log(hasDriverLicense || hasGoodVision); // tureconsole.log(!hasDriverLicense); // false// const shouldDrive = hasDriverLicense &amp;&amp; hasGoodVision;if (hasDriverLicense &amp;&amp; hasGoodVision) { console.log('sarah is able to drive!');} else { console.log('someone else should drive...');}const isTired = true;console.log(hasDriverLicense &amp;&amp; hasGoodVision &amp;&amp; isTired);if (hasDriverLicense &amp;&amp; hasGoodVision &amp;&amp; !isTired) { console.log('sarah is able to drive!');} else { console.log('someone else should drive...');} switch statement12345678910111213141516171819202122232425262728293031323334353637383940const day = 'thursday';switch (day) { case 'monday': // day === 'monday' console.log('plan course structure'); break; case 'tuesday': console.log('prepare theory videos'); break; case 'wednesday': case 'thursday': console.log('write code examples'); break; case 'friday': console.log('record videos'); break; case 'saturday': case 'sunday': console.log('enjoy the weekend'); break; default: console.log('not a valid day'); break;}if (day === 'monday') { console.log('plan course structure');} else if (day === 'tuesday') { console.log('prepare theory videos');} else if (day === 'wednesday' || day === 'thursday') { console.log('write code examples');} else if (day === 'friday') { console.log('record videos');} else if (day === 'saturday' || day === 'sunday') { console.log('enjoy the weekend');} else { console.log('not a valid day');} statement and expressionexpression produce a value 3 + 41991true &amp;&amp; false &amp;&amp; !false statementnot produce a valueif else statement // errorconsole.log(i am ${2037 - 1991} years old ${if(true){console.log('hello');}}); condition operator (ternary)it is an expressiononly one line block of code es5 es6+use babel to transpile and polyfill codecoverting back to es5 to ensure browser compatibility for all users fundamentas 02strict modefirst line'use strict'; 123456789'use strict';let hasDriversLicense = false;const passTest = true;//Uncaught ReferenceError: hasDriverLicense is not definedif (passTest) hasDriverLicense = true;if (hasDriversLicense) console.log('i can dirve'); function12345678910111213141516171819202122232425function logger() { console.log('My name is Jonas');}// calling / running / invoking functionlogger(); // return undefinedlogger();logger();// parametersfunction fruitProcessor(apples, oranges) { // console.log(apples, oranges); const juice = `Juice with ${apples} apples and ${oranges} oranges.`; return juice;}//argumentsconst appleJuice = fruitProcessor(5, 0); // Juice with 5 apples and 0 oranges.console.log(appleJuice);// 5 3// Juice with 5 apples and 3 oranges.console.log(fruitProcessor(5, 3));const appleOrangeJuice = fruitProcessor(2, 4);console.log(appleOrangeJuice); function declarations vs experssions12345678910111213141516171819202122// function declarationconst age1 = calcAge1(1991);function calcAge1(birthYeah) { // const age = 2037 - birthYeah; // return age; return 2037 - birthYeah;}console.log(age1);// Uncaught ReferenceError: Cannot access 'calcAge2' before initialization// const age2 = calcAge2(1991);// function expressionconst calcAge2 = function (birthYeah) { return 2037 - birthYeah;}const age2 = calcAge2(1991);console.log(age2); arrow functions12345678910111213141516171819202122232425262728const calcAge2 = function (birthYeah) { return 2037 - birthYeah;}// arrow function// one param // one return expressionconst calcAge3 = birthYeah =&gt; 2037 - birthYeah;const age3 = calcAge3(1991);console.log(age3);const yearUntilRetirement = birthYeah =&gt; { const age = 2037 - birthYeah; const retirement = 65 - age; return retirement;}console.log(yearUntilRetirement(1991)); //19const yearUntilRetirement1 = (birthYeah, firstName) =&gt; { const age = 2037 - birthYeah; const retirement = 65 - age; return `${firstName} retires in ${retirement}`;}// Jonas retires in 19console.log(yearUntilRetirement1(1991, 'Jonas'));// Bob retires in 8console.log(yearUntilRetirement1(1980, 'Bob')); functions calling other functions 123456789101112131415function cutFruitPieces(fruit) { return fruit * 4}function fruitProcessor(apples, oranges) { // console.log(apples, oranges); const applePieces = cutFruitPieces(apples); const orangePieces = cutFruitPieces(oranges); const juice = `Juice with ${applePieces} pieces of apples and ${orangePieces} pieces of oranges.`; return juice;}//Juice with 8 pieces of apples and 12 pieces of oranges.console.log(fruitProcessor(2, 3)); function reviewing 123456789101112131415161718192021const calcAge = function (birthYeah) { return 2037 - birthYeah;}const yearUntilRetirement = function (birthYeah, firstName) { const age = calcAge(birthYeah); const retirement = 65 - age; if (retirement &gt; 0) { return retirement; // return statement immediatly finsih the function console.log(`${firstName} retires in ${retirement}`); } else { return -1; }}console.log(yearUntilRetirement(1991, 'Jonas'));console.log(yearUntilRetirement(1970, 'Mike')); introducing to array data structure123456789101112131415161718192021222324252627282930313233343536373839404142// const friend1 = 'Michael';// const friend2 = 'Steven';// const friend3 = 'Peter';const friends = ['Michael', 'Steven', 'Peter'];console.log(friends);const years1 = new Array(1991, 1984, 2008, 2020);console.log(years1);console.log(friends[0]); // Michaelconsole.log(friends[2]); // Peterconsole.log(friends.length); // 3console.log(friends[friends.length - 1]); // Peterfriends[2] = 'Jay';console.log(friends); // ['Michael', 'Steven', 'Jay']// script.js:201 Uncaught TypeError: Assignment to constant variable.// friends = ['Bob', 'Alice'];const firstName = 'Jonas';const jonas = [firstName, 'Schmed', 2037 - 1991, 'teacher', friends];console.log(jonas); // ['Jonas', 'Schmed', 46, 'teacher', Array(3)]//exerciseconst calcAge = function (birthYeah) { return 2037 - birthYeah;}const years = [1990, 1967, 2002, 2010, 2018];const age1 = calcAge(years[0]);console.log(age1);console.log(calcAge(years[0]));// [47, 70, 19]const ages = [calcAge(years[0]), calcAge(years[1]), calcAge(years[years.length - 1])];console.log(ages); basic array operations(methods)12345678910111213141516171819202122232425262728293031323334353637const friends = ['Michael', 'Steven', 'Peter'];//add elementsconst newLength = friends.push('Jay');// ['Michael', 'Steven', 'Peter', 'Jay'] 4console.log(friends, newLength);friends.unshift(&quot;John&quot;);// ['John', 'Michael', 'Steven', 'Peter', 'Jay']console.log(friends);// remove elementsconst lastFriend = friends.pop();//['John', 'Michael', 'Steven', 'Peter'] 'Jay'console.log(friends, lastFriend);friends.pop();// ['John', 'Michael', 'Steven']console.log(friends);const firstFriend = friends.shift();// ['Michael', 'Steven', 'Peter'] 'John'console.log(friends, firstFriend);console.log(friends.indexOf('Steven')); // 1console.log(friends.indexOf('Bob')); // -1// friends.push(23);console.log(friends.includes('Steven')); // true// === equal// console.log(friends.includes(&quot;23&quot;)); // falseif (friends.includes('Steven')) { console.log('you have a friend called Steven');} introduce to Objects1234567891011121314151617181920212223242526272829303132333435363738394041424344const jonas = { firstName: 'Jonas', lastName: 'Schmed', age: 2037 - 1991, job: 'teacher', friends: ['Michael', 'Peter', 'Steven']}// order is not important not matter// dot and bracket notationconsole.log(jonas.lastName); // &quot;Schmed&quot;// bracket can be any experssionconsole.log(jonas[&quot;lastName&quot;]); // &quot;Schmed&quot;// bracket can be any experssionconst nameKey = 'Name';console.log(jonas[`first${nameKey}`]); // Jonasconsole.log(jonas['last' + nameKey]); // &quot;Schmed&quot;//input 'job'const interestedIn = 'job';// const interestedIn = prompt('What do you want to know about Jonas? Choose from firstName, lastName, age, job, and friends');console.log(interestedIn);console.log(jonas[interestedIn]);// console.log(jonas.interestedIn); // jonas.interestedIn ===&gt; undefindedif (jonas[interestedIn]) { console.log(jonas[interestedIn]);} else { console.log('wrong request');}// add new propertyjonas.location = 'Portugal';jonas['twitter'] = '@jonas';console.log(jonas);//Jonas has 3 friends, and his best friend is called Michaelconsole.log(`${jonas.firstName} has ${jonas.friends.length} friends, and his best friend is called ${jonas.friends[0]}`); object methods123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990const jonas = { firstName: 'Jonas', lastName: 'Schmed', birthYear: 1991, job: 'teacher', friends: ['Michael', 'Peter', 'Steven'], hasDriverLicense: true, calcAge: function (birthYear) { return 2037 - birthYear; } //error // function func1(params) { // // }};// 46console.log(jonas.calcAge(1991));console.log(jonas['calcAge'](1991));// this key wordconst jonas1 = { firstName: 'Jonas', lastName: 'Schmed', birthYear: 1991, job: 'teacher', friends: ['Michael', 'Peter', 'Steven'], hasDriverLicense: true, calcAge: function () { // {firstName: 'Jonas', lastName: 'Schmed', birthYear: 1991, job: 'teacher', friends: Array(3), …} // console.log(this); return 2037 - this.birthYear; // not recomment // return 2037 - jonas1.birthYear; }};console.log(jonas1.calcAge());const jonas2 = { firstName: 'Jonas', lastName: 'Schmed', birthYear: 1991, job: 'teacher', friends: ['Michael', 'Peter', 'Steven'], hasDriverLicense: true, calcAge: function () { this.age = 2037 - this.birthYear; return this.age; }};console.log(jonas2.calcAge());console.log(jonas2.age);console.log(jonas2.age);// challengeconst jonas3 = { firstName: 'Jonas', lastName: 'Schmed', birthYear: 1991, job: 'teacher', friends: ['Michael', 'Peter', 'Steven'], hasDriverLicense: true, // selfIntro: function () { // return `${this.firstName} is a ${2037 - this.birthYear}-year old ${this.job}, and he has ${this.hasDriverLicense ? 'a' : 'no'} driver's license`; // } calcAge: function () { this.age = 2037 - this.birthYear; return this.age; }, selfIntro: function () { return `${this.firstName} is a ${this.calcAge()}-year old ${this.job}, and he has ${this.hasDriverLicense ? 'a' : 'no'} driver's license.`; }};// Jonas is a 46-year old teacher, and he has a driver's licenseconsole.log(jonas3.selfIntro()); iteration for loop12345678910111213141516171819// console.log('lifting weights repetition 1');// console.log('lifting weights repetition 2');// console.log('lifting weights repetition 3');// console.log('lifting weights repetition 4');// console.log('lifting weights repetition 5');// console.log('lifting weights repetition 6');// lifting weights repetition 1// lifting weights repetition 2// lifting weights repetition 3// lifting weights repetition 4// lifting weights repetition 5// condition evaluated before each iteration// counter update after each iterationfor (let rep = 1; rep &lt;= 5; rep++) { console.log(`lifting weights repetition ${rep}`);} loop array, break, continue123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657const jonas = [ 'Jonas', 'Schmed', 2037 - 1991, 'teacher', ['Michael', 'Peter', 'Steven']];//i = 4 ['Michael', 'Peter', 'Steven'] 'object'for (let i = 0; i &lt; jonas.length; i++) { console.log(jonas[i], typeof jonas[i]);}const types = [];for (let i = 0; i &lt; jonas.length; i++) { // types[i] = typeof jonas[i]; types.push(typeof jonas[i]);}// ['string', 'string', 'number', 'string', 'object']console.log(types);const years = [1991, 2007, 1969, 2020];const ages = [];for (let i = 0; i &lt; years.length; i++) { ages.push(2037 - years[i]);}//[46, 30, 68, 17]console.log(ages);// continue and break// continue: skip this iteration// break: finish the whole loopconsole.log('-------all items-------------');for (let i = 0; i &lt; jonas.length; i++) { console.log(jonas[i], typeof jonas[i]);}console.log('-------only strings-------------');for (let i = 0; i &lt; jonas.length; i++) { if (typeof jonas[i] !== 'string') { continue; } console.log(jonas[i], typeof jonas[i]);}console.log('-------break with number-------------');for (let i = 0; i &lt; jonas.length; i++) { if (typeof jonas[i] === 'number') { break; } console.log(jonas[i], typeof jonas[i]);} looping backwards and loops in loops1234567891011121314151617181920212223242526272829303132333435363738394041const jonas = [ 'Jonas', 'Schmed', 2037 - 1991, 'teacher', ['Michael', 'Peter', 'Steven']];// loop backwardsfor (let i = jonas.length - 1; i &gt;= 0; i--) { console.log(i, jonas[i]);}// loop in loop// ---------starting exercise 1------------// Exercise 1 Lifting weight repetition 1// Exercise 1 Lifting weight repetition 2// Exercise 1 Lifting weight repetition 3// Exercise 1 Lifting weight repetition 4// Exercise 1 Lifting weight repetition 5// ---------starting exercise 2------------// Exercise 2 Lifting weight repetition 1// Exercise 2 Lifting weight repetition 2// Exercise 2 Lifting weight repetition 3// Exercise 2 Lifting weight repetition 4// Exercise 2 Lifting weight repetition 5// ---------starting exercise 3------------// Exercise 3 Lifting weight repetition 1// Exercise 3 Lifting weight repetition 2// Exercise 3 Lifting weight repetition 3// Exercise 3 Lifting weight repetition 4// Exercise 3 Lifting weight repetition 5for (let exercise = 1; exercise &lt; 4; exercise++) { console.log(`---------starting exercise ${exercise}------------`); for (let rep = 1; rep &lt; 6; rep++) { console.log(`Exercise ${exercise} Lifting weight repetition ${rep}`); }} while loop1234567891011121314151617181920212223242526272829for (let rep = 1; rep &lt;= 5; rep++) { console.log(`lifting weights repetition ${rep}`);}console.log('----------------');// while looplet rep = 1;while (rep &lt;= 5) { console.log(`lifting weights repetition ${rep}`); rep++;}let dice = Math.trunc(Math.random() * 6) + 1;// console.log(dice);while (dice !== 6) { console.log(`You rolled a ${dice}`); dice = Math.trunc(Math.random() * 6) + 1; if (dice === 6) { console.log('dice is 6, loop is about to end...'); }} developer skillsDOM AND EVENT – guess my numberconsole.log(document.querySelector('.message')); // element p.message console.log(document.querySelector('.message').textContent); // &quot;Start guessing...&quot; select and manupulating elementsdocument.querySelector('.message').textContent = 'Correct Number!' document.querySelector('.guess').value = 10; handling event -&gt; event lisener(method) Element.addEventListener&lt;keyof ElementEventMap&gt;(type: keyof ElementEventMap, listener: (this: Element, ev: Event) =&gt; any, options?: boolean | AddEventListenerOptions | undefined): void (+1 overload) 123456789101112// addEventListener -&gt; most used onedocument.querySelector('.check').addEventListener('click', function () { // console.log(document.querySelector('.guess').value); // &quot;&quot; // const guess = document.querySelector('.guess').value; // console.log(typeof guess); // 'string' // &quot;&quot; --&gt; 0 const guess = Number(document.querySelector('.guess').value); if (!guess) { document.querySelector('.message').textContent = 'No number' }}); implementing the game logicmanipulation css styleschange the html inline css style // manupilating css styledocument.querySelector('body').style.backgroundColor = '#60b347'; document.querySelector('.number').style.width = '30rem'; the dry principleproject 2 modal12const btnsShowModal = document.querySelectorAll('.show-modal');console.log(btnsShowModal); // NodeList(3) like array css class manupulatingconst modal = document.querySelector('.modal');modal.classList.remove(&quot;hidden&quot;, 'class-name'); 123456789101112131415161718// btnCloseModal.addEventListener('click', () =&gt; {// modal.classList.add(&quot;hidden&quot;);// overlay.classList.add(&quot;hidden&quot;);// });// overlay.addEventListener('click', () =&gt; {// modal.classList.add(&quot;hidden&quot;);// overlay.classList.add(&quot;hidden&quot;);// });const closeModal = function () { modal.classList.add(&quot;hidden&quot;); overlay.classList.add(&quot;hidden&quot;);}btnCloseModal.addEventListener('click', closeModal);overlay.addEventListener('click', closeModal); key press eventglobal eventdocument 12345678910document.addEventListener('keydown', function (e) { // a key was pressed // KeyboardEvent {isTrusted: true, key: 'Escape', code: 'Escape', location: 0, ctrlKey: false, …} // Escape // console.log('a key was pressed', e, e.key); if (e.key === 'Escape' &amp;&amp; !modal.classList.contains('hidden')) { closeModal(); }}); project 3 pig game const player1Score = document.getElementById('score--0'); // set img element attribute srcdice.src = `dice-${String(currentDice)}.png`; document.querySelector(`.player--${currentPlayer}`).classList.toggle(&quot;player--active&quot;); how javascript workshigh level overview of javascriptjavascript is a high level, prototype-based object-oriented, multi-paradigm, interpreted or just-in-time compied, dynamic, single-threaded, garbage-collected programming language with first-class functions and a non-blocking event loop concurrency model. high levelmanage computer resources automaticallygarbage-collected interpreted or just in time compiledjavascirpted engine multi-paradigmparadigm: an approach and mindset of structuring code, which will direct your coding style and technique. procedural objected oriented functional prototype-based object oriented first-class functionsfunctions are simply treated as variables. we can pass them into other functions, return them from functions. dynamic typeno data type when variable definitons.data type of variable is automatically changed single-threadednon-blocking event loop concurrency model: the javascript engine handles multiple tasks happpening at the same time.event loop: takes long running tasks, executes them in the background, and put them back in the main thread once they are finished. javascript engine and runtimeprogram that executes javascript code. v8 enginechrome, nodejs call stackheap compilation vs interpretationcompilation: entire code is coverted into machine code at once, and written to a binary file that can be executed by a computer.interpretation: interpreter runs through the source code and executes it line by line. just-in-time comilationentire code is converted into machine code at once, then executed immediately. parse into AST:abstract signtax tree re-compilate optimization js runtime in the browser nodejs runtime execution contexts and the call stackexeution contextenvironment in which a piece of javascript is executed. stores all the necessary information for some code to be executed. one global execution context(ec)default context, created from code that is not inside any function(top level) function execution context(ec)for each function call, a new execution context is created. varialbe environment let, const and var declarations Functions arguments object scope chain: consists of references to varialbes that are lacated outside of the function this keyword !!! arrow functin dont have arguents object, this keywordthey used the arguemnt object and this keyword from the closest function pareant. call stack:place where execution contexts get stacked on top of each other, to keep track of where we are in the execution. scope and scope chainscoping: how programs’s variabes are organized and accessed.“where do variables live?” or “where can we access a certain vairalbe, and where not?” lexical scoping:scoping is controlled by placement of functions and blocks in the code;example like: a function write inside another function can have access to variable of the parent function scope: space or environment in which a certain variable is declared(variable environment in case of functions scope). there is global scope, function scope, and block scope; scope of a variable: region of our code where a certain variable can be accessed 3 types of scope global scope 123const me = 'Jonas';const job = 'teacher';const year = 1989; outside of any function or blockvariable declared in global scope are accessible everywhere function scope 1234567function calcAge(birthYear) { const now = 2037; const age = now - birthYear; return age;}console.log(now) // ReferenceError variables are accessible only inside function, Not outsidealso called local scope block scope (ES6) 1234567// example: if block, for loop block, etcif(year &gt;= 1981 &amp;&amp; year &lt;= 1986) { const millenial = true; const food = 'Avocado toast';}console.log(millenial) // ReferenceError variable are accessible only inside block(block scoped)however, this only applies to let and const variables!functions are also block scoped(only in strict mode) scope chain 123456789101112131415161718192021const myName = &quot;Jonas&quot;;function first(){ const age = 30; if (age &gt;= 30) { const decade = 3; var millenial = true; } function second(){ const job = 'teacher'; console.log(`${myName} is a ${age}-old ${job}`); // Jonas is a 30-old teacher } second();}first(); scope chain vs call stack 1234567891011121314151617181920const a = 'Jonas';first();function first() { const b = 'Hello!'; second(); function second() { const c = 'Hi!'; third(); }}function third() { const d = 'Hey!'; console.log(d + c + b + a); // ReferenceError} 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758function calcAge(birthYear) { const age = 2037 - birthYear; console.log(firstName); // no errors // console.log(lastName); // ReferenceError function printAge() { let output = `${firstName} You are ${age}, born in ${birthYear}`; console.log(output); if (birthYear &gt;= 1981 &amp;&amp; birthYear &lt;= 1996) { var millenial = true; // // scope chain shadow: create new variable with the same name as outer scope's variable // const firstName = 'Steven' // const str1 = `oh, you are a millenial, ${firstName}`; // // oh, you are a millenial, Steven // console.log(str1); // // set the value again, reassigning outer scope's varialbe // output = &quot;New output!&quot;; const str = `oh, you are a millenial, ${firstName}`; //oh, you are a millenial, Jonas console.log(str); // no error function add(a, b) { return a + b; } } // // set the value again, reassigning outer scope's varialbe // output = &quot;New output!&quot;; // // &quot;New output!&quot; // console.log(output); // Uncaught ReferenceError: str is not defined // console.log(str); // var vairale is function scoped console.log(millenial); // no error &quot;true&quot; // in strict mode // function defined in block is block scoped //script.js:80 Uncaught ReferenceError: add is not defined // add(2, 3); // error } // Jonas You are 46, born in 1991 printAge(); // no error return age;}const firstName = 'Jonas';calcAge(1991);// Uncaught ReferenceError: age is not defined// console.log(age);//Uncaught ReferenceError: printAge is not defined// printAge(); variable environment: hoistinghoisting:makes some types of variable acessible/usable in the code before they are actually declared.“ variables lifted to the top of their scope”.before execution, code is scanned for variable declarations, and for each variable, a new property is created in the variable environment object. temporal dead zone 1234567891011121314const myName = &quot;Jonas&quot;;if (myName === 'Jonas') { // Uncaught ReferenceError: Cannot access 'job' before initialization // console.log(`Jonas is a ${job}`); const age = 2037 - 1989; console.log(age); const job = 'teacher'; // Uncaught ReferenceError: x is not defined // console.log(x);} make it easier to avoid and catch erros: accessing variables before declaration is ba d prctice and should be avoided; makes const variables actully work 123456789101112131415161718192021222324252627282930313233343536373839404142// undefinedconsole.log(me);// Uncaught ReferenceError: Cannot access 'job' before initialization// console.log(job);// script.js:137 Uncaught ReferenceError: Cannot access 'year' before initialization// console.log(year);var me = 'Jonas';let job = 'teacher';const year = 1991;// functions// no erroraddDecl(2, 3);// ReferenceError: Cannot access 'addExpr1' before initialization// addExpr1(2, 3);// ReferenceError: Cannot access 'addExpr2' before initialization// addExpr2(2, 3);// ===&gt; undefined();// Uncaught TypeError: addExpr3 is not a function// addExpr3(2, 3);// Uncaught ReferenceError: Cannot access 'addArrow' before initialization// addArrow(2, 3);function addDecl(a, b) { return a + b;}const addExpr1 = function (a, b) { return a + b;};let addExpr2 = function (a, b) { return a + b;};var addExpr3 = function (a, b) { return a + b;};const addArrow = (a, b) =&gt; a + b; 1234567var x = 1;let y = 2;const z = 3;console.log(x === window.x); // trueconsole.log(x === window.y); // falseconsole.log(x === window.z); // false this keywordthis keyword/variable: special variable that is created for every execution context(every funtion). Takes the value of(point to) the “owner” of the function in which the this keyword is used. this is NOT static.it depends on how the function is called, and its valued is only assigned when the function is acturally called. Methodobject that is calling the method 12345678910const jonas = { name: 'Jonas', year: 1989, calcAge: function(){ return 2037 - this.year; }}jonas.calcAge(); // 48 simple function callin strict modeundefinded Arrow functionsthis of surrounding function (lexical this) event listenerDOM element that the handler is attatched to new, call, apply, bind this does not point to the function itself, and also NOT the its variable environment 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354// Window {window: Window, self: Window, document: document, name: '', location: Location, …}console.log(this);const calcAge = function (birthYear) { console.log(2037 - birthYear); console.log(this);}// undefinedcalcAge(1991);const calcAgeArrow = (birthYear) =&gt; { console.log(2037 - birthYear); console.log(this);}// Window {window: Window, self: Window, document: document, name: '', location: Location, …}calcAgeArrow(1991);const jonas = { year: 1991, calcAge: function () { console.log(this); console.log(2037 - this.year); }};// {year: 1991, calcAge: ƒ}// 46jonas.calcAge();const matida = { year: 2017,};matida.calcAge = jonas.calcAge;// {year: 2017, calcAge: ƒ}console.log(matida);// {year: 2017, calcAge: ƒ}// 20matida.calcAge();const f = jonas.calcAge;// ƒ () {// console.log(this);// console.log(2037 - this.year);// }console.log(f);// script.js:225 Uncaught TypeError: Cannot read properties of undefined// f(); this in regular and arrow fucntions12345678910111213141516// dont use arrow function this timeconst jonas = { firstName: 'Jonas', year: 1991, calcAge: function () { console.log(this); console.log(2037 - this.year); }, greet: () =&gt; console.log(`Hey ${this.firstName}`, this)};// &quot;Hey undefined&quot;// Window {window: Window, self: Window, document: document, name: '', location: Location, …}jonas.greet(); 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748// use arrow function this timeconst jonas1 = { firstName: 'Jonas', year: 1991, calcAge: function () { console.log(this); console.log(2037 - this.year); // const isMillenial = function () { // console.log(this); // console.log(this.year &gt;= 1981 &amp;&amp; this.year &lt;= 1996); // } // undefined // Uncaught TypeError: Cannot read properties of undefined (reading 'year') // isMillenial(); // solution 1 const self = this; const isMillenial1 = function () { console.log(self); console.log(self.year &gt;= 1981 &amp;&amp; self.year &lt;= 1996); } // {firstName: 'Jonas', year: 1991, calcAge: ƒ, greet: ƒ} // true isMillenial1(); // solution 2 const isMillenial2 = () =&gt; { console.log(this); console.log(this.year &gt;= 1981 &amp;&amp; this.year &lt;= 1996); } // {firstName: 'Jonas', year: 1991, calcAge: ƒ, greet: ƒ} // true isMillenial2(); }, greet: () =&gt; console.log(`Hey ${this.firstName}`, this)};// &quot;Hey undefined&quot;// Window {window: Window, self: Window, document: document, name: '', location: Location, …}jonas1.greet();jonas1.calcAge(); primitives vs object (primitive vs reference types) 123456789101112131415161718let age = 30;let oldAge = age;age = 31;console.log(age); // 31console.log(oldAge); // 30const me = { name: 'Jonas', age: 30,};const friend = me;friend.age = 27;// {name: 'Jonas', age: 27}console.log('Me', me);// {name: 'Jonas', age: 27}console.log('Friend', friend); 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354///////////////// primitive typelet lastName = 'Williams';let oldLastName = lastName;lastName = &quot;Davis&quot;;console.log(lastName); // Davisconsole.log(oldLastName); // Williams///////////// reference typeconst jessica = { firstName: 'Jessica', lastName: 'Williams', age: 27,};let marriedJessica = jessica;marriedJessica.lastName = 'Davis';// Before marriage: {firstName: 'Jessica', lastName: 'Davis', age: 27}console.log('Before marriage:', jessica);// After marriage: {firstName: 'Jessica', lastName: 'Davis', age: 27}console.log('After marriage:', marriedJessica);// marriedJessica = {};///////////// copying objectsconst jessica2 = { firstName: 'Jessica', lastName: 'Williams', age: 27, family: ['Alice', 'Bob']};const jessicaCopy = Object.assign({}, jessica2);jessicaCopy.lastName = 'Davis';// Before marriage: {firstName: 'Jessica', lastName: 'Williams', age: 27}console.log('Before marriage:', jessica2);// After marriage: {firstName: 'Jessica', lastName: 'Davis', age: 27}console.log('After marriage:', jessicaCopy);/////////// shalow copyjessicaCopy.family.push('Mary');jessicaCopy.family.push('John');// Before marriage: {firstName: 'Jessica', lastName: 'Williams', age: 27, family: Array(4)}console.log('Before marriage:', jessica2);// Before marriage: {firstName: 'Jessica', lastName: 'Williams', age: 27, family: Array(4)}console.log('After marriage:', jessicaCopy); data structures, stringsdestructuring array123456789101112131415161718192021222324252627282930313233343536373839404142const arr = [2, 3, 4];const a = arr[0];const b = arr[1];const c = arr[2];const [x, y, z] = arr;console.log(x); // 2console.log(y); // 3console.log(z); // 4console.log(arr); // [2, 3, 4]const restaurant = { name: 'Classico Italiano', location: 'Via Angelo Tavanti 23, Firenze, Italy', categories: ['Italian', 'Pizzeria', 'Vegetarian', 'Organic'], starterMenu: ['Focaccia', 'Bruschetta', 'Garlic Bread', 'Caprese Salad'], mainMenu: ['Pizza', 'Pasta', 'Risotto'], order: function (starterIndex, mainIndex) { return [this.starterMenu[starterIndex], this.mainMenu[mainIndex]]; }};const [first, second] = restaurant.categories;console.log(first); // Italianconsole.log(second); // Pizzerialet [main, , secondary] = restaurant.categories;console.log(main); // Italianconsole.log(secondary); // Vegetarian////// swicth values// const temp = main;// main = secondary;// secondary = temp;// console.log(main); // Vegetarian// console.log(secondary); // Italianconsole.log(main, secondary);[main, secondary] = [secondary, main];console.log(main, secondary); 12345678910111213141516// receive 2 return values from a functionconst restaurant1 = { name: 'Classico Italiano', location: 'Via Angelo Tavanti 23, Firenze, Italy', categories: ['Italian', 'Pizzeria', 'Vegetarian', 'Organic'], starterMenu: ['Focaccia', 'Bruschetta', 'Garlic Bread', 'Caprese Salad'], mainMenu: ['Pizza', 'Pasta', 'Risotto'], order: function (starterIndex, mainIndex) { return [this.starterMenu[starterIndex], this.mainMenu[mainIndex]]; }};// ['Garlic Bread', 'Pizza']// console.log(restaurant.order(2, 0));const [starter, mainCourse] = restaurant1.order(2, 0);console.log(starter, mainCourse); // Garlic Bread Pizza 12345678// nested destructuringconst nested = [2, 4, [5, 6]];const [firstN, , nestedArray] = nested;console.log(firstN, nestedArray); // 2 [5, 6]const [i, , [j, k]] = nested;console.log(i, j, k); // 2 5 6 123456// Default valuesconst [p, q, r] = [8, 9];console.log(p, q, r); // 8 9 undefinedconst [l, m, n = 1] = [8, 9];console.log(l, m, n); // 8 9 1 destructuring objectget data from api 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364const restaurant = { name: 'Classico Italiano', location: 'Via Angelo Tavanti 23, Firenze, Italy', categories: ['Italian', 'Pizzeria', 'Vegetarian', 'Organic'], starterMenu: ['Focaccia', 'Bruschetta', 'Garlic Bread', 'Caprese Salad'], mainMenu: ['Pizza', 'Pasta', 'Risotto'], openingHours: { thu: { open: 12, close: 22, }, fri: { open: 11, close: 23, }, sat: { open: 0, // Open 24 hours close: 24, }, }, order: function (starterIndex, mainIndex) { return [this.starterMenu[starterIndex], this.mainMenu[mainIndex]]; }, orderDelivery: function (obj) { console.log(obj); }, orderDelivery1: function ({ starterIndex = 1, mainIndex = 0, time = '20:00', address }) { console.log(starterIndex, mainIndex, time, address); console.log(`Order received! ${this.starterMenu[starterIndex]} and ${this.mainMenu[mainIndex]} will be delivered to ${address} at ${time}`); },};restaurant.orderDelivery({ time: '22:30', address: 'via del sole, 21', mainIndex: 2, starterIndex: 2,})// 2 2 '22:30' 'via del sole, 21'// Order received! Garlic Bread and Risotto will be delivered to via del sole, 21 at 22:30restaurant.orderDelivery1({ time: '22:30', address: 'via del sole, 21', mainIndex: 2, starterIndex: 2,})// 2 2 '22:30' 'via del sole, 21'// Order received! Garlic Bread and Risotto will be delivered to via del sole, 21 at 22:30restaurant.orderDelivery1({ time: '22:30', address: 'via del sole, 21', mainIndex: 2, starterIndex: 2,})// 1 0 '20:00' 'via del ssdole, 21'// Order received! Bruschetta and Pizza will be delivered to via del ssdole, 21 at 20:00restaurant.orderDelivery1({ address: 'via del ssdole, 21', starterIndex: 1,}) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102const restaurant = { name: 'Classico Italiano', location: 'Via Angelo Tavanti 23, Firenze, Italy', categories: ['Italian', 'Pizzeria', 'Vegetarian', 'Organic'], starterMenu: ['Focaccia', 'Bruschetta', 'Garlic Bread', 'Caprese Salad'], mainMenu: ['Pizza', 'Pasta', 'Risotto'], openingHours: { thu: { open: 12, close: 22, }, fri: { open: 11, close: 23, }, sat: { open: 0, // Open 24 hours close: 24, }, }, order: function (starterIndex, mainIndex) { return [this.starterMenu[starterIndex], this.mainMenu[mainIndex]]; }, orderDelivery: function (obj) { console.log(obj); }, orderDelivery1: function ({ starterIndex = 1, mainIndex = 0, time = &quot;20:00&quot;, address }) { console.log(starterIndex, mainIndex, time, address); console.log(`Order received! ${this.starterMenu[starterIndex]} and ${this.mainMenu[mainIndex]} will be delivered to ${address} at ${time}`); },};restaurant.orderDelivery({ time: '22:30', address: 'via del sole, 21', mainIndex: 2, starterIndex: 2,})// 2 2 '22:30' 'via del sole, 21'// Order received! Garlic Bread and Risotto will be delivered to via del sole, 21 at 22:30restaurant.orderDelivery1({ time: '22:30', address: 'via del sole, 21', mainIndex: 2, starterIndex: 2,})// 1 0 '20:00' 'via del ssdole, 21'// Order received! Bruschetta and Pizza will be delivered to via del ssdole, 21 at 20:00restaurant.orderDelivery1({ address: 'via del ssdole, 21', starterIndex: 1,})const { name, openingHours, categories } = restaurant;// Classico Italiano // {thu: {…}, fri: {…}, sat: {…}} // (4) ['Italian', 'Pizzeria', 'Vegetarian', 'Organic']console.log(name, openingHours, categories);const { name: restaurantName, openingHours: hours, categories: tags } = restaurant;// // Classico Italiano // {thu: {…}, fri: {…}, sat: {…}} // (4) ['Italian', 'Pizzeria', 'Vegetarian', 'Organic']console.log(restaurantName, hours, tags);// default valuesconst { menu = [], starterMenu: starters = [] } = restaurant;// []// (4) ['Focaccia', 'Bruschetta', 'Garlic Bread', 'Caprese Salad']console.log(menu, starters);// mutating variableslet a = 111;let b = 999;const obj = { a: 23, b: 7, c: 14 };// Uncaught SyntaxError: Unexpected token '='// { a, b } = obj;({ a, b } = obj);// 23 7console.log(a, b);// nested objectsconst { fri } = openingHours;// {open: 11, close: 23}console.log(fri);const { fri: { open, close } } = openingHours;console.log(open, close); // 11 23const { fri: { open: o, close: c } } = openingHours;console.log(o, c); // 11 23 spread operatorright side of asignment operator get all the values spreadly used only whenin arrayfunction arguments works on all iterablesarrays stirng maps, sets, NOT objects 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990const arr = [7, 8, 9];const badNewArr = [1, 2, arr[0], arr[1], arr[2]];console.log(badNewArr);const newArr = [1, 2, ...arr];// [1, 2, 7, 8, 9]console.log(newArr);// 1 2 7 8 9console.log(...newArr);const restaurant = { name: 'Classico Italiano', location: 'Via Angelo Tavanti 23, Firenze, Italy', categories: ['Italian', 'Pizzeria', 'Vegetarian', 'Organic'], starterMenu: ['Focaccia', 'Bruschetta', 'Garlic Bread', 'Caprese Salad'], mainMenu: ['Pizza', 'Pasta', 'Risotto'], openingHours: { thu: { open: 12, close: 22, }, fri: { open: 11, close: 23, }, sat: { open: 0, // Open 24 hours close: 24, }, }, order: function (starterIndex, mainIndex) { return [this.starterMenu[starterIndex], this.mainMenu[mainIndex]]; }, orderDelivery: function ({ starterIndex = 1, mainIndex = 0, time = &quot;20:00&quot;, address }) { console.log(starterIndex, mainIndex, time, address); console.log(`Order received! ${this.starterMenu[starterIndex]} and ${this.mainMenu[mainIndex]} will be delivered to ${address} at ${time}`); }, orderPasta: function (ing1, ing2, ing3) { console.log(ing1, ing2, ing3); console.log(`Here is your delicious pasta with ${ing1}, ${ing2}, ${ing3}`); },};// ['Pizza', 'Pasta', 'Risotto', 'Gnocci']const newMenu = [...restaurant.mainMenu, 'Gnocci'];console.log(newMenu);// copy array(shallow)const mianMenuCopy = [...restaurant.mainMenu];// join 2 arraysconst menu = [...restaurant.mainMenu, ...restaurant.starterMenu]// ['Pizza', 'Pasta', 'Risotto', 'Focaccia', 'Bruschetta', 'Garlic Bread', 'Caprese Salad']console.log(menu);const str = 'Jonas';const letters = [...str, ' ', 'S.'];// ['J', 'o', 'n', 'a', 's', ' ', 'S.']console.log(letters);// // const ingredients = [prompt('Let\\'s make pasta! Ingredient 1?'), prompt('Let\\'s make pasta! Ingredient 2?'), prompt('Let\\'s make pasta! Ingredient 3?')]const ingredients = ['q', 'q', 'q'];console.log(ingredients);// Here is your delicious pasta with q, q, qrestaurant.orderPasta(...ingredients);// Objectconst newRestaurant = { ...restaurant, founder: 'Guiseppe' };// {name: 'Classico Italiano', location: 'Via Angelo Tavanti 23, Firenze, Italy', categories: Array(4), starterMenu: Array(4), mainMenu: Array(3), …}console.log(newRestaurant);// shalow copyconst restaurantCoy = { ...restaurant };// Classico Italianoconsole.log(restaurant.name);restaurantCoy.name = 'Ristorant roma';// Classico Italianoconsole.log(restaurant.name); rest patternleft side of asignment operator collect rest elemnets always in the last place and only one 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697//// arrayconst arr = [1, 2, ...[3, 4]];// [1, 2, 3, 4]console.log(arr);const [a, b, ...others] = [1, 2, 3, 4, 5];// 1 2 [3, 4, 5]console.log(a, b, others);const restaurant = { name: 'Classico Italiano', location: 'Via Angelo Tavanti 23, Firenze, Italy', categories: ['Italian', 'Pizzeria', 'Vegetarian', 'Organic'], starterMenu: ['Focaccia', 'Bruschetta', 'Garlic Bread', 'Caprese Salad'], mainMenu: ['Pizza', 'Pasta', 'Risotto'], openingHours: { thu: { open: 12, close: 22, }, fri: { open: 11, close: 23, }, sat: { open: 0, // Open 24 hours close: 24, }, }, order: function (starterIndex, mainIndex) { return [this.starterMenu[starterIndex], this.mainMenu[mainIndex]]; }, orderDelivery: function ({ starterIndex = 1, mainIndex = 0, time = &quot;20:00&quot;, address }) { console.log(starterIndex, mainIndex, time, address); console.log(`Order received! ${this.starterMenu[starterIndex]} and ${this.mainMenu[mainIndex]} will be delivered to ${address} at ${time}`); }, orderPasta: function (ing1, ing2, ing3) { console.log(ing1, ing2, ing3); console.log(`Here is your delicious pasta with ${ing1}, ${ing2}, ${ing3}`); }, orderPizza: function (mianIngredient, ...otherIngredients) { console.log(mianIngredient, otherIngredients); }};const [pizza, , risotto, ...otherFood] = [...restaurant.mainMenu, ...restaurant.starterMenu];// Pizza // Risotto // ['Focaccia', 'Bruschetta', 'Garlic Bread', 'Caprese Salad']console.log(pizza, risotto, otherFood);// objectsconst { sat, ...weekdays } = restaurant.openingHours;// {thu: {…}, fri: {…}}console.log(weekdays);///// functionconst add = function (...numbers) { console.log(numbers); let sum = 0; for (let i = 0; i &lt; numbers.length; i++) { sum += numbers[i]; } console.log(sum);}// [2, 3]//5add(2, 3);// [5, 3, 7, 4]// 19add(5, 3, 7, 4);/// [5, 3, 7, 4, 2, 3, 1]// 35add(5, 3, 7, 4, 2, 3, 1);const x = [23, 5, 7];// [23, 5, 7]// 35add(...x);// mushrooms// ['onion', 'olives', 'spinach']restaurant.orderPizza('mushrooms', 'onion', 'olives', 'spinach');// mushrooms // []restaurant.orderPizza('mushrooms'); short circuiting||if the first value is a turthy value, it will imediately return the first value 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071// 3console.log(3 || 'jonas'); // 3console.log('' || 'jonas'); // jonasconsole.log(true || 0); // trueconsole.log(undefined || null); // null// Helloconsole.log(undefined || 0 || '' || 'Hello' || 23 || null);const restaurant = { name: 'Classico Italiano', location: 'Via Angelo Tavanti 23, Firenze, Italy', categories: ['Italian', 'Pizzeria', 'Vegetarian', 'Organic'], starterMenu: ['Focaccia', 'Bruschetta', 'Garlic Bread', 'Caprese Salad'], mainMenu: ['Pizza', 'Pasta', 'Risotto'], openingHours: { thu: { open: 12, close: 22, }, fri: { open: 11, close: 23, }, sat: { open: 0, // Open 24 hours close: 24, }, }, order: function (starterIndex, mainIndex) { return [this.starterMenu[starterIndex], this.mainMenu[mainIndex]]; }, orderDelivery: function ({ starterIndex = 1, mainIndex = 0, time = &quot;20:00&quot;, address }) { console.log(starterIndex, mainIndex, time, address); console.log(`Order received! ${this.starterMenu[starterIndex]} and ${this.mainMenu[mainIndex]} will be delivered to ${address} at ${time}`); }, orderPasta: function (ing1, ing2, ing3) { console.log(ing1, ing2, ing3); console.log(`Here is your delicious pasta with ${ing1}, ${ing2}, ${ing3}`); }, orderPizza: function (mianIngredient, ...otherIngredients) { console.log(mianIngredient, otherIngredients); }};const guests1 = restaurant.numGuests ? restaurant.numGuests : 10;console.log(guests1); // 10const guests2 = restaurant.numGuests || 10;console.log(guests2); // 10restaurant.numGuests = 23;const guests3 = restaurant.numGuests || 10;console.log(guests3); // 23//////////////////////// ANDconsole.log(0 &amp;&amp; 'Jonas'); // 0console.log(7 &amp;&amp; 'Jonas'); // Jonasconsole.log('Hello' &amp;&amp; 23 &amp;&amp; null &amp;&amp; 'jonas'); // nullif (restaurant.orderPizza) { restaurant.orderPizza('mushrooms', 'spinach');}restaurant.orderPizza &amp;&amp; restaurant.orderPizza('mushrooms', 'spinach'); nullish coalescing oparator1234567// if restaurant.numGuests = 0const guests2 = restaurant.numGuests || 10;console.log(guests2); // 10// nullish: nul and undefined (NOT or '')const guestsCorrect = restaurant.numGuests ?? 10;console.log(guestsCorrect); logical assignment operators(es2021)12345678910111213141516171819202122232425262728293031323334353637const rest1 = { name: 'Capri', numGuests: 20, // numGuests: 0,};const rest2 = { name: 'La Piazza', owner: 'Giavanni Rossi',};// rest2.numGuests = rest2.numGuests || 10;// rest1.numGuests = rest1.numGuests || 10;// console.log(rest1, rest2);// rest1.numGuests ||= 10;// rest2.numGuests ||= 10;// console.log(rest1, rest2);// {name: 'Capri', numGuests: 20} // {name: 'La Piazza', owner: 'Giavanni Rossi', numGuests: 10}rest1.numGuests ??= 10;rest2.numGuests ??= 10;console.log(rest1, rest2);// {name: 'Capri', numGuests: 20, owner: undefined} // {name: 'La Piazza', owner: '&lt;Anon&gt;', numGuests: 10}//rest1.owner = rest1.owner &amp;&amp; '&lt;Anon&gt;'rest2.owner = rest2.owner &amp;&amp; '&lt;Anon&gt;'console.log(rest1, rest2);rest1.owner &amp;&amp;= '&lt;Anon&gt;'rest2.owner &amp;&amp;= '&lt;Anon&gt;'console.log(rest1, rest2); for of loop12345678910111213141516171819202122232425262728293031323334353637383940414243444546const restaurant = { name: 'Classico Italiano', location: 'Via Angelo Tavanti 23, Firenze, Italy', categories: ['Italian', 'Pizzeria', 'Vegetarian', 'Organic'], starterMenu: ['Focaccia', 'Bruschetta', 'Garlic Bread', 'Caprese Salad'], mainMenu: ['Pizza', 'Pasta', 'Risotto'],};const menu = [...restaurant.starterMenu, ...restaurant.mainMenu];console.log(menu);// Focaccia// Bruschetta// Garlic Bread// Caprese Salad// Pizza// Pasta// Risottofor (const item of menu) { console.log(item);}// can use break and continue// Array Iterator {}console.log(menu.entries());for (const item of menu.entries()) { // [0, 'Focaccia'] console.log(item); // '1: Focaccia' console.log(`${item[0] + 1}: ${item[1]}`);}for (const [i, e] of menu.entries()) { // '1: Focaccia' console.log(`${i + 1}: ${e}`);} enhanced object literals1234567891011121314151617181920212223242526272829303132333435363738const weekdays = ['mon', 'tue', 'wen', 'thu', 'fri', 'sat', 'sun'];const openingHours = { thu: { open: 12, close: 22, }, // fri: [weekdays[4]]: { open: 11, close: 23, }, // day-6: [`day-${2 + 4}`]: { open: 0, // Open 24 hours close: 24, },};const restaurant = { name: 'Classico Italiano', location: 'Via Angelo Tavanti 23, Firenze, Italy', categories: ['Italian', 'Pizzeria', 'Vegetarian', 'Organic'], starterMenu: ['Focaccia', 'Bruschetta', 'Garlic Bread', 'Caprese Salad'], mainMenu: ['Pizza', 'Pasta', 'Risotto'], // openingHours: openingHours, // es6 enhanced object literals openingHours, // order: function (starterIndex, mainIndex) { // return [this.starterMenu[starterIndex], this.mainMenu[mainIndex]]; // }, // es6 new syntax order(starterIndex, mainIndex) { return [this.starterMenu[starterIndex], this.mainMenu[mainIndex]]; },} optinal chaining (?.)123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103const weekdays = ['mon', 'tue', 'wen', 'thu', 'fri', 'sat', 'sun'];const openingHours = { thu: { open: 12, close: 22, }, // fri: [weekdays[4]]: { open: 11, close: 23, }, // day-6: [`day-${2 + 4}`]: { open: 0, // Open 24 hours close: 24, }, sat: { open: 0, // Open 24 hours close: 24, },};const restaurant = { name: 'Classico Italiano', location: 'Via Angelo Tavanti 23, Firenze, Italy', categories: ['Italian', 'Pizzeria', 'Vegetarian', 'Organic'], starterMenu: ['Focaccia', 'Bruschetta', 'Garlic Bread', 'Caprese Salad'], mainMenu: ['Pizza', 'Pasta', 'Risotto'], // openingHours: openingHours, // es6 enhanced object literals openingHours, // order: function (starterIndex, mainIndex) { // return [this.starterMenu[starterIndex], this.mainMenu[mainIndex]]; // }, // es6 new syntax order(starterIndex, mainIndex) { return [this.starterMenu[starterIndex], this.mainMenu[mainIndex]]; },};// undefinedconsole.log(restaurant.openingHours.mon);// script.js:725 Uncaught TypeError: Cannot read properties of undefined (reading 'open')// console.log(restaurant.openingHours.mon.open);// undefinedif (restaurant.openingHours &amp;&amp; restaurant.openingHours.mon) console.log(restaurant.openingHours.mon.open);// with optional chaining// if (restaurant.openingHours.mon) console.log(restaurant.openingHours.mon.open);console.log(restaurant.openingHours.mon?.open);// if (restaurant.openingHours &amp;&amp; restaurant.openingHours.mon) console.log(restaurant.openingHours.mon.open);console.log(restaurant.openingHours?.mon?.open);const days = ['mon', 'tue', 'wen', 'thu', 'fri', 'sat', 'sun'];// On mon, we open at closed// On tue, we open at closed// On wen, we open at closed// On thu, we open at 12// On fri, we open at 11// On sat, we open at 0// On sun, we open at closedfor (const day of days) { // console.log(day); const open = (restaurant.openingHours[day]?.open) ?? 'closed'; console.log(`On ${day}, we open at ${open}`);}///// on methods// ['Focaccia', 'Pasta']console.log(restaurant.order?.(0, 1) ?? 'Method does not exist');// Method does not existconsole.log(restaurant.orderRisotto?.(0, 1) ?? 'Method does not exist');///// on arrays (empty)const users = [ { name: 'Jonas', email: 'hello@jonas.com', }];// if(users.length &gt; 0) console.log(users[0].name);// else console.log('User array empty');// Jonasconsole.log(users[0]?.name ?? 'User array empty');// User array emptyconsole.log(users[1]?.name ?? 'User array empty'); loop object key value entries1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374const openingHours = { thu: { open: 12, close: 22, }, // fri: fri: { open: 11, close: 23, }, // day-6: [`day-${2 + 4}`]: { open: 0, // Open 24 hours close: 24, }, sat: { open: 0, // Open 24 hours close: 24, },};////////// property name// ['thu', 'fri', 'day-6', 'sat']console.log(Object.keys(openingHours));let openStr = `We are open on ${Object.keys(openingHours).length} days: `;// thu// fri// day-6// satfor (const day of Object.keys(openingHours)) { // console.log(day); openStr += `${day},`;}// We are open on 4 days: thu,fri,day-6,sat,console.log(openStr);////// properties value// [{…}, {…}, {…}, {…}]// 0: {open: 12, close: 22}// 1: {open: 11, close: 23}// 2: {open: 0, close: 24}// 3: {open: 0, close: 24}const values = Object.values(openingHours);console.log(values);/////// objec enties// [Array(2), Array(2), Array(2), Array(2)]// 0: (2) ['thu', {…}]// 1: (2) ['fri', {…}]// 2: (2) ['day-6', {…}]// 3: (2) ['sat', {…}]const entries = Object.entries(openingHours);console.log(entries);for (const [key, value] of Object.entries(openingHours)) { // console.log(key, value); //On thu we open at 12 and close at 22 console.log(`On ${key} we open at ${value?.open} and close at ${value?.close}`);}for (const [key, { open, close }] of Object.entries(openingHours)) { // console.log(key, value); //On thu we open at 12 and close at 22 console.log(`On ${key} we open at ${open} and close at ${close}`);} sets (unique elements)order of sets is irrelevantno way to get only one element from a set 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556const ordersSet = new Set([ 'Pasta', 'Pizza', 'Pizza', 'Risotto', 'Pasta', 'Pizza',]);// Set(3) {'Pasta', 'Pizza', 'Risotto'}console.log(ordersSet);// Set(5) {'J', 'o', 'n', 'a', 's'}console.log(new Set(&quot;Jonas&quot;));console.log(ordersSet.size); // 3console.log(ordersSet.has('Pizza')); // trueconsole.log(ordersSet.has('Bread')); // falseordersSet.add('Garlic Bread');ordersSet.add('Garlic Bread');// Set(4) {'Pasta', 'Pizza', 'Risotto', 'Garlic Bread'}console.log(ordersSet);ordersSet.delete('Garlic Bread')// Set(3) {'Pasta', 'Pizza', 'Risotto'}console.log(ordersSet);// ordersSet.clear();// // Set(0) {size: 0}// console.log(ordersSet);// Pasta// Pizza// Risottofor (const order of ordersSet) { console.log(order);}///exampleconst staff = ['Waiter', 'Chef', 'Waiter', 'Manager', 'Chef', 'Waiter'];const staffUnique = new Set(staff);console.log(staffUnique);const staffUniqueArr = [...new Set(staff)]// ['Waiter', 'Chef', 'Manager']console.log(staffUniqueArr);// 3console.log(new Set(['Waiter', 'Chef', 'Waiter', 'Manager', 'Chef', 'Waiter']).size); mapskey can be any type of data 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950const rest = new Map();rest.set('name', 'Classic italinano');rest.set(1, 'Firenze, Italy');rest.set(2, 'Firenze, Italy');// Map(3) {'name' =&gt; 'Classic italinano', 1 =&gt; 'Firenze, Italy', 2 =&gt; 'Firenze, Italy'}console.log(rest);rest .set('categories', ['Italian', 'Piszzeria', 'Vegetarian', 'Organic']) .set('open', 11) .set('close', 23). set(true, 'We are open!') .set(false, 'We are closed');// Map(5) {'name' =&gt; 'Classic italinano', 1 =&gt; 'Firenze, Italy', 2 =&gt; 'Firenze, Italy', 'categories' =&gt; Array(4), 'open' =&gt; 11, ...}console.log(rest);console.log(rest.get('name')); // Classic italinanoconsole.log(rest.get(1)); // Firenze, Italyconst time = 21;// We are open!console.log(rest.get(time &gt; rest.get('open') &amp;&amp; time &lt; rest.get('close')));console.log(rest.has('categories'));rest.delete(2)console.log(rest);console.log(rest.size); // 7rest.clear();////// array as keyrest.set([1, 2], 'TEST');// Map(1) {Array(2) =&gt; 'TEST'}console.log(rest);// not the same array [1, 2]// undefinedconsole.log(rest.get([1, 2]));const arr = [1, 2]rest.set(arr, 'TEST');// Map(1) {Array(2) =&gt; 'TEST'}console.log(rest);// TESTconsole.log(rest.get(arr));//// object as keyrest.set(document.querySelector('h1'), 'Heading')console.log(rest); maps: iteration12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182const question = new Map([ ['question', 'Waht is the best programmong language in the world?'], [1, 'C'], [2, 'java'], [3, 'javascritp'], ['correct', 3], [true, 'you are Correct!'], [false, 'Try again'],]);// Map(7) {'question' =&gt; 'Waht is the best programmong language in the world?', 1 =&gt; 'C', 2 =&gt; 'java', 3 =&gt; 'javascritp', 'correct' =&gt; 3, …}console.log(question);const openingHours = { thu: { open: 12, close: 22, }, // fri: fri: { open: 11, close: 23, }, // day-6: [`day-${2 + 4}`]: { open: 0, // Open 24 hours close: 24, }, sat: { open: 0, // Open 24 hours close: 24, },};// (4) [Array(2), Array(2), Array(2), Array(2)]// 0: (2) ['thu', {…}]// 1: (2) ['fri', {…}]// 2: (2) ['day-6', {…}]// 3: (2) ['sat', {…}]console.log(Object.entries(openingHours));// covert object ot mapconst hoursMap = new Map(Object.entries(openingHours));// Map(4) {'thu' =&gt; {…}, 'fri' =&gt; {…}, 'day-6' =&gt; {…}, 'sat' =&gt; {…}}console.log(hoursMap);// Answer 1: C// Answer 2: java// Answer 3: javascritpfor (const [key, value] of question) { if (typeof key === 'number') { console.log(`Answer ${key}: ${value}`); }}// input '3'const answer = 1;// const answer = Number(prompt('Your answer: '));console.log(answer);// you are Correct!console.log(question.get(answer === question.get('correct')));////////convert map to an arrary// [// ['question', 'Waht is the best programmong language in the world?'],// [1, 'C'],// [2, 'java'],// [3, 'javascritp'],// ['correct', 3],// [true, 'you are Correct!'],// [false, 'Try again'],// ]console.log('...question', [...question]);// MapIterator {'question', 1, 2, 3, 'correct', …}console.log(question.keys());// MapIterator {'Waht is the best programmong language in the world?', 'C', 'java', 'javascritp', 3, …}console.log(question.values());// MapIterator {'question' =&gt; 'Waht is the best programmong language in the world?', 1 =&gt; 'C', 2 =&gt; 'java', 3 =&gt; 'javascritp', 'correct' =&gt; 3, …}console.log(question.entries()); which data structure to usesources of data from the program iteself: data written directly in source code (e.g. status messages) from the ui: data input from the user or data written in DOM(e.g. tasks in todo app) From external sources: data fetched for example from web api(e.g. rcipe objects) simple listkey/value pairs: key allow us to describe values array &lt;&gt; setsarray: use when you need ordered list of values(might contain duplicates) use when you need to manipulate data sets use when you need to work with unique values use when high-performance is really important use to remove duplicates form arrays objects more ‘traditonal’ key/value store (‘abused’ object) easier to write and access value with . and [] use when you need to include functions(methods) use when working with json (can convert to map) maps better performance keys can have any data type easy to iterate easy to compute size use when you simply need to map key to values use whe you need keys that are not strings String methods1234567891011121314151617181920212223242526272829303132333435363738394041424344const airline = 'TAP Air Portugal';const plane = 'A320';console.log(plane[0]); // 'A'console.log(plane[1]); // '3'console.log(plane[2]); // '2'console.log('B737'[1]); // '7'console.log(airline.length); // 16console.log('airline'.length); // 7// first occuranceconsole.log(airline.indexOf('r')); // 6console.log(airline.indexOf('Portugal')); // 8console.log(airline.indexOf('portugal')); // -1// last occuranceconsole.log(airline.lastIndexOf('r')); // 10console.log(airline.slice(4)); // Air Portugalconsole.log(airline.slice(4, 7)); // 'Air'console.log(airline); // 'TAP Air Portugal'console.log(airline.slice(0, airline.indexOf(' '))); // 'TAP'console.log(airline.slice(airline.lastIndexOf(' ') + 1)); // 'Portugal'console.log(airline.slice(-2)); // alconsole.log(airline.slice(1, -1)); // AP Air Portuga// B AND E are middle seatsconst checkMiddleSeat = function (seat) { const s = seat.slice(-1); if (s === 'B' || s === 'E') { console.log('you got the middle seat'); } else { console.log('YOu got lucky'); }}// you got the middle seatcheckMiddleSeat('11B')// YOu got luckycheckMiddleSeat('23C')// you got the middle seatcheckMiddleSeat('3E') 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667const airline = 'TAP Air Portugal';console.log(airline.toLowerCase()); // tap air portugalconsole.log(airline.toUpperCase()); // TAP AIR PORTUGAL// fix capitalization in nameconst passenger = 'jOnAS';const passengerLower = passenger.toLowerCase();const passengerCorrect = passengerLower[0].toUpperCase() + passengerLower.slice(1);console.log(passengerCorrect); // Jonas// comparing emailconst email = 'hello@jonas.io';const loginEmail = ' Hello@Jonas.Io \\n';// const trimEmail = loginEmail.trim();// console.log(trimEmail); // 'Hello@Jonas.Io'// const lowerEmail = trimEmail.toLowerCase();const normalizedEmail = loginEmail.trim().toLowerCase();console.log(normalizedEmail); // 'hello@jonas.io'// replacingconst priceGB = '288,97￥';const priceUs = priceGB.replace('￥', '$').replace(',', '.');console.log(priceUs); // 288.97$const announcement = 'All passengers come to barding door 23, Bording door 23!'// just the first occurance// All passengers come to barding gate 23, Bording door 23!console.log(announcement.replace('door', 'gate'));// regex global flag// All passengers come to barding gate 23, Bording gate 23!console.log(announcement.replace(/door/g, 'gate'));// return BOOLEAN valueconst plane = 'Airbus A320neo';console.log(plane.includes('A320')); // trueconsole.log(plane.includes('Boeing')); // falseconsole.log(plane.startsWith('Airbus')); // trueif (plane.startsWith('Airbus') &amp;&amp; plane.endsWith('neo')) { console.log('Part of the new airbus family');}/// exerciseconst checkBaggage = function (items) { const baggage = items.toLowerCase(); if (baggage.includes('knife') || baggage.includes('gun')) { console.log('You are not allowed on board'); } else { console.log('Welcome aboard'); }}// You are not allowed on boardcheckBaggage('I have a laptop, some Food and pocket Knife');// Welcome aboardcheckBaggage('Sock and camera');// You are not allowed on boardcheckBaggage('Got some snacks and a gun for protection'); 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869////// split and join// (4) ['a', 'very', 'nice', 'string']console.log('a+very+nice+string'.split('+'));// ['Jonas', 'Schmedtmann']console.log('Jonas Schmedtmann'.split(' '));const [firstName, lastName] = 'Jonas Schmedtmann'.split(' ');// Jonas Schmedtmannconsole.log(firstName, lastName);const newName = ['Mr.', firstName, lastName.toUpperCase()].join(' ');console.log(newName); // 'Mr. Jonas SCHMEDTMANN'const capitalizdName = function (name) { name = name.toLowerCase(); const names = name.split(' '); const newName = [] for (const n of names) { // const nNew = n[0].toUpperCase() + n.slice(1); const nNew = n.replace(n[0], n[0].toUpperCase()); newName.push(nNew); } return newName.join(' ');}const passenger = 'jessica ann simth daivs';// Jessica Ann Simth Daivsconsole.log(capitalizdName(passenger));///// padding// Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.const message = 'Go to gete 23!';// '+++++++++++Go to gete 23!'console.log(message.padStart(25, &quot;+&quot;));// Go to gete 23!+++++++++++console.log(message.padEnd(25, &quot;+&quot;));const maskCreditCard = function (number) { const str = number + ''; const last = str.slice(-4); return last.padStart(str.length, '*')}// '***********8965'console.log(maskCreditCard(457814236578965));// *****8965console.log(maskCreditCard('236578965'));/////repeatconst message2 = 'Bad weather... All Departures Delayed...';// Bad weather... All Departures Delayed...Bad weather... All Departures Delayed...Bad weather... All Departures Delayed...console.log(message2.repeat(3));const planeInline = function (n) { console.log(`There are ${n} plane in line ${'✈️'.repeat(n)}`);}// There are 5 plane in line ✈️✈️✈️✈️✈️planeInline(5);// There are 3 plane in line ✈️✈️✈️planeInline(3);// There are 12 plane in line ✈️✈️✈️✈️✈️✈️✈️✈️✈️✈️✈️✈️planeInline(12); function deepdefault parameters123456789101112131415161718192021222324252627282930313233343536const bookings = []// ES 6// the express can contain the other param before the paramconst createBooking = function (flightNum, numPassengers = 1 + 0, price = 199 * numPassengers) { // ES 5 // numPassengers = numPassengers || 1; // price = price || 199; const booking = { flightNum, numPassengers, price, } console.log(booking); bookings.push(booking);}// {flightNum: 'LH123', numPassengers: undefined, price: undefined}// createBooking('LH123');// ES 6// {flightNum: 'LH123', numPassengers: 1, price: 199}createBooking('LH123');// {flightNum: 'LH123', numPassengers: 2, price: 800}createBooking('LH123', 2, 800);// {flightNum: 'LH123', numPassengers: 3, price: 597}createBooking('LH123', 3);// {flightNum: 'LH123', numPassengers: 1, price: 1000}createBooking('LH123', undefined, 1000); how passing arguments works: value vs reference12345678910111213141516171819202122232425262728293031323334353637383940const flight = 'LH234';const jonas = { name: 'Jonas Schmedtmann', passport: 21346795,}const checkIn = function (flightNum, passenger) { flightNum = 'LH999'; passenger.name = 'Mr.' + passenger.name; if (passenger.passport === 21346795) { console.log('Check In'); } else { console.log('Wrong passport'); }}// LH234// {name: 'Jonas Schmedtmann', passport: 21346795}console.log(flight, jonas);// same as doing ...// const flightNum = flight;// const passenger = jonas;checkIn(flight, jonas);// LH234// {name: 'Mr.Jonas Schmedtmann', passport: 21346795}console.log(flight, jonas);///// exampleconst newPassport = function (person) { person.passport = Math.trunc(Math.random() * 10000000000);}newPassport(jonas);// Wrong passportcheckIn(flight, jonas); first class and higher order functionsfunctions are simply values functions are just another ‘type’ of object 1234567891011121314151617181920212223242526272829// store functions in variables or propertiesconst add = (a, b) =&gt; a + b;const counter = { value: 23, inc: function () { this.value++; }}// pass functions as arguments to other functions// addEventListenner is higher order function// greet is the callback functionconst greet = () =&gt; console.log('Hey Jonas');btnClose.addEventListenner('click', greet);// return functions form functions// count is the higher order function// // function(){ counter++; } is the returned functionfunction count() { let counter = 0; return function () { counter++; }}// call methods on functionscounter.inc.bind(someOtherObject); high order functions a function that receives anthoer function as an argumenta function that returns a new functionor both functins accepting callback functions1234567891011121314151617181920212223242526272829303132const oneWord = function (str) { return str.replace(/ /g, '').toLowerCase();};const upperFirstWord = function (str) { const [first, ...others] = str.split(' '); return [first.toUpperCase(), ...others].join(' ')};const transformer = function (str, fn) { console.log(`Original string: ${str}`); console.log(`Transformed string: ${fn(str)}`); console.log(`Trnasformed by: ${fn.name}`);}// Original string: JavaScript is the best programming language!// Transformed string: JAVASCRIPT is the best programming language!// Trnasformed by: upperFirstWordtransformer('JavaScript is the best programming language!', upperFirstWord);// Original string: JavaScript is the best programming language!// Transformed string: javascriptisthebestprogramminglanguage!// Trnasformed by: oneWordtransformer('JavaScript is the best programming language!', oneWord);const high5 = function () { console.log('😍');}document.body.addEventListener('click', high5);['Jonas', 'Martha', 'Adam'].forEach(high5); functions returning functions1234567891011121314151617const greet = function (greeting) { return function (name) { console.log(`${greeting} ${name}`); }}const greeterHey = greet('Hey');greeterHey('Jonas');greeterHey('Steven');greet('Hey')('Jonas');// functional programmingconst greet1 = greeting =&gt; name =&gt; console.log(`${greeting} ${name}`); the CALL and apply METHODS12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455const lufthansa = { airline: 'Lufthansa', iataCode: 'LH', booking: [], book(flightNum, name) { console.log(`${name} booked a seat on ${this.airline} flight ${this.iataCode}${flightNum}`); this.booking.push({ flight: `${this.iataCode}${flightNum}`, name: name, }) }}// Jonas Schmedtmann booked a seat on Lufthansa flight LH238lufthansa.book(238, 'Jonas Schmedtmann');// Jonas Smith booked a seat on Lufthansa flight LH635lufthansa.book(635, 'Jonas Smith');console.log(lufthansa.booking);const eurowings = { airline: 'Eurowings', iataCode: 'EW', booking: [],}const book = lufthansa.book;// in strict mode// regular functions call &quot;this&quot; is undefined// Uncaught TypeError: Cannot read properties of undefined// book(23, 'Sarah Williams');// Sarah Williams booked a seat on Eurowings flight EW23book.call(eurowings, 23, 'Sarah Williams');// Mary cooper booked a seat on Lufthansa flight LH239book.call(lufthansa, 239, 'Mary cooper');const swiss = { airline: 'Swiss Air Lines', iataCode: 'LX', booking: [],}// Mary cooper booked a seat on Swiss Air Lines flight LX556book.call(swiss, 556, 'Mary cooper');// Apply methodconst flightData = [583, 'George Cooper'];// George Cooper booked a seat on Swiss Air Lines flight LX583book.apply(swiss, flightData);book.call(swiss, ...flightData); bind method1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465const lufthansa = { airline: 'Lufthansa', iataCode: 'LH', booking: [], book(flightNum, name) { console.log(`${name} booked a seat on ${this.airline} flight ${this.iataCode}${flightNum}`); this.booking.push({ flight: `${this.iataCode}${flightNum}`, name: name, }) }};const eurowings = { airline: 'Eurowings', iataCode: 'EW', booking: [],};const book = lufthansa.book;const bookEW = book.bind(eurowings);// Steven Williams booked a seat on Eurowings flight EW23bookEW(23, 'Steven Williams');/////// partial applicationconst bookEW23 = book.bind(eurowings, 23);// John Smith booked a seat on Eurowings flight EW23bookEW23('John Smith');// Martha Cooper booked a seat on Eurowings flight EW23bookEW23('Martha Cooper');///// with Event Listenerslufthansa.planes = 300;lufthansa.buyPlane = function () { this.planes++; console.log(this, this.planes);}// button element// NaNdocument.querySelector('.buy').addEventListener('click', lufthansa.buyPlane)//document.querySelector('.buy').addEventListener('click', lufthansa.buyPlane.bind(lufthansa));/////// partial applicationconst addTax = function (rate, value) { return value + value * rate;}// 220console.log(addTax(0.1, 200));// addVAT = function (value) {// return value + value * 0.23;// }// created a new functionconst addVAT = addTax.bind(null, 0.23);// 246console.log(addVAT(200)); immediately invoked function expression12345678910111213141516171819202122232425262728293031323334const runOnce = function () { console.log('this will never run again');}runOnce();runOnce();// Uncaught SyntaxError: Function statements require a function name// function() {// console.log('this will never run again');// }(function () { console.log('this will never run again'); // const isPrivate = 23;})();(() =&gt; console.log('this will also never run again'))();// function scope// Uncaught ReferenceError: isPrivate is not defined// console.log(isPrivate);{ const isPrivate = 23; var notPrivate = 46;}// Uncaught ReferenceError: isPrivate is not defined// console.log(isPrivate);// 46console.log(notPrivate); closuresmake functions remenber all the variables where it is birthed place. a function has access to the variable environment(VE) of the execution context in which it was created.even if it was gone. closure: VE attached to the function, exactly as it was at the time and place the function was created closure is priority over scope chain less formal a closure is the closed-over variable environment of the execution context in which a function was created, even after that execution context is gone; a closure give a function aceess to all the variables of its parent function, even after that parent function has returned. The function keeps a reference to its outer scope, which preserves the scope chain throughout time. a closeure makes sure that a function doesnt lose connection to variable that existed at the function’s birth place a clsure is like a backpack that a function carries around wherever it goes. This backpack has all the variable that were present in the environment where the function was created. we can not directly access a closure-over variables explicitly 12345678910111213141516171819const secureBooking = function () { let passengerCount = 0; return function () { passengerCount++; console.log(`${passengerCount} passengers`); }};const booker = secureBooking();// 1 passengersbooker();// 2 passengersbooker();// 3 passengersbooker();console.dir(booker); 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657//// ///// example 1let f;const g = function () { const a = 23; f = function () { console.log(a * 2); }}const h = function () { const b = 777; f = function () { console.log(b * 2); }}g();// 46f();console.dir(f)// re-assigning f functionh();// 1554f();console.dir(f)///// example 2const boardPassengers = function (n, wait) { const perGoup = n / 3; // 1s setTimeout(function () { console.log(`we are now boarding all ${n} passengers`); console.log(`There are 3 groups, each with ${perGoup} passengers`); }, wait * 1000); console.log(`will start boading in ${wait} seconds`);};// 'will start boading in 3 seconds'//////////////// 3s late// 'we are now boarding all 180 passengers'// 'There are 3 groups, each with 60 passengers'// closure have high priorityconst perGoup = 1000;boardPassengers(180, 3); 1234567(function () { const header = document.querySelector('h1'); header.style.color = 'red'; document.body.addEventListener('click', function () { header.style.color = 'blue'; });})(); array deep12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061let arr = ['a', 'b', 'c', 'd', 'e'];// Returns a copy of a section of an array. For both start and end, a negative index can be used to indicate an offset from the end of the array. For example, -2 refers to the second to last element of the array.// (3) ['c', 'd', 'e']console.log(arr.slice(2));// (2) ['c', 'd']console.log(arr.slice(2, 4));// (2) ['c', 'd']console.log(arr.slice(-3, -1));// (2) ['b', 'c']console.log(arr.slice(1, -2));// (2) ['d', 'e']console.log(arr.slice(-2));// copy// (5) ['a', 'b', 'c', 'd', 'e']console.log(arr.slice());console.log([...arr]);////////////// splice// Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.// @param start — The zero-based location in the array from which to start removing elements.// @param deleteCount — The number of elements to remove.// @returns — An array containing the elements that were deleted.// (3) ['c', 'd', 'e']// console.log(arr.splice(2));arr.splice(-1);// ['a', 'b', 'c', 'd']console.log(arr);/////////// reverse// Reverses the elements in an array in place. This method mutates the array and returns a reference to the same array.arr = ['a', 'b', 'c', 'd', 'e'];const arr2 = ['j', 'i', 'h', 'g', 'f'];// (5) ['f', 'g', 'h', 'i', 'j']console.log(arr2.reverse());// (5) ['f', 'g', 'h', 'i', 'j']console.log(arr2);//////////////// concatconst letters = arr.concat(arr2);// (10) ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']console.log(letters);console.log([...arr, ...arr2]);//////////////// join// a - b - c - d - e - f - g - h - i - j// // a - b - c - d - e - f - g - h - i - jconsole.log(letters.join(' - ')); at method12345678910111213const arr = [23, 11, 64];// 23// console.log(arr[0]);console.log(arr.at(0));// 64// console.log(arr[arr.length - 1]);// console.log(arr.slice(-1)[0]);console.log(arr.at(-1));// 's'console.log(`jonas`.at(-1)); foreach: looping arraysforeachcant break or continue 1234567891011121314151617181920212223242526272829303132333435363738394041const movements = [200, 450, -400, 3000, -650, -130, 70, 1300];for (const movement of movements) { if (movement &gt; 0) { console.log(`You deposited ${movement}`); } else { console.log(`You withdraw ${Math.abs(movement)}`); }}console.log('------------------');// (method) Array&lt;number&gt;.forEach(callbackfn: (value: number, index: number, array: number[]) =&gt; void, thisArg?: any): voidmovements.forEach(function (movement) { if (movement &gt; 0) { console.log(`You deposited ${movement}`); } else { console.log(`You withdraw ${Math.abs(movement)}`); }});console.log('------------------');for (const [i, movement] of movements.entries()) { if (movement &gt; 0) { console.log(`Movement ${i + 1}: You deposited ${movement}`); } else { console.log(`Movement ${i + 1}: You withdraw ${Math.abs(movement)}`); }}console.log('------------------');movements.forEach(function (movement, i, arr) { if (movement &gt; 0) { console.log(`Movement ${i + 1}: You deposited ${movement}`); } else { console.log(`Movement ${i + 1}: You withdraw ${Math.abs(movement)}`); }}); foreach with maps and sets12345678910111213141516171819202122232425const currencies = new Map([ ['USD', 'United States dollar'], ['EUR', 'Euro'], ['GBP', 'Pound sterling'],]);// (method) Map&lt;string, string&gt;.forEach(callbackfn: (value: string, key: string, map: Map&lt;string, string&gt;) =&gt; void, thisArg?: any): voidcurrencies.forEach(function (value, key, map) { console.log(`${key}: ${value}`);})/////// setsconst currenciesUnique = new Set(['USD', 'GBP', 'USD', 'EUR', 'EUR']);console.log(currenciesUnique);// (method) Set&lt;string&gt;.forEach(callbackfn: (value: string, value2: string, set: Set&lt;string&gt;) =&gt; void, thisArg?: any): voidcurrenciesUnique.forEach(function (value, value2, map) { console.log(`${value2}: ${value}`);}); bankist project create DOM element1234567891011const containerMovements = document.querySelector('.movements');containerMovements.innerHTML = '';const html = ` &lt;div class=&quot;movements__row&quot;&gt; &lt;div class=&quot;movements__type movements__type--${type}&quot;&gt;${i + 1} ${type}&lt;/div&gt; &lt;div class=&quot;movements__value&quot;&gt;${mov}&lt;/div&gt; &lt;/div&gt;`;// (method) Element.insertAdjacentHTML(position: InsertPosition, text: string): voidcontainerMovements.insertAdjacentHTML('afterbegin', html) positionA string representing the position relative to the element. Must be one of the following strings “beforebegin”Before the element. Only valid if the element is in the DOM tree and has a parent element. “afterbegin”Just inside the element, before its first child. “beforeend”Just inside the element, after its last child. “afterend”After the element. Only valid if the element is in the DOM tree and has a parent element. 1234567&lt;!-- beforebegin --&gt;&lt;p&gt; &lt;!-- afterbegin --&gt; foo &lt;!-- beforeend --&gt;&lt;/p&gt;&lt;!-- afterend --&gt; data transformations: map, filter, reducemapreturns a new array containg the results of applying an operation on all origianl array elements. filterfilter returns a new array containing the array elements that passed a specified test condition reduceboils(reduce) all array elements down to one single value(e.g. adding all elements together) 123456789101112131415161718192021222324252627282930313233const arr = [3, 1, 4, 3, 2];// map(callbackfn: (value: number, index: number, array: number[]) =&gt; any, thisArg?: any): any[]// A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.// Calls a defined callback function on each element of an array, and returns an array that contains the results.const mapArr = arr.map(function (value) { return value * 2;})// (5) [6, 2, 8, 6, 4]console.log(mapArr);// filter(predicate: (value: number, index: number, array: number[]) =&gt; value is number, thisArg?: any): number[]// A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.// Returns the elements of an array that meet the condition specified in a callback function.const filteredArr = arr.filter(function (value) { return value &gt; 2;});// (3) [3, 4, 3]console.log(filteredArr);// reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: number[]) =&gt; number): number// A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.// Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.const reducedResult = arr.reduce(function (acc, current) { return acc + current;});// 13console.log(reducedResult); map12345678910111213141516171819202122232425const movements = [200, 450, -400, 3000, -650, -130, 70, 1300];const eurToUsd = 1.1;const movmentsUsd = movements.map(function (mov) { return mov * eurToUsd;});console.log(movements);console.log(movmentsUsd);const movementsUsdFor = [];for (const mov of movements) { movementsUsdFor.push(mov * eurToUsd);}console.log(movementsUsdFor);const movmentsUsd1 = movements.map(mov =&gt; mov * eurToUsd);console.log(movmentsUsd1);const movementsDescriptions = movements.map((mov, i) =&gt; `Movement ${i + 1}: You ${mov &gt; 0 ? 'deposited' : 'withdraw'} ${Math.abs(mov)}`);console.log(movementsDescriptions); filter method1234567891011121314151617181920const movements = [200, 450, -400, 3000, -650, -130, 70, 1300];const deposits = movements.filter((mov) =&gt; { return mov &gt; 0;});// (5) [200, 450, 3000, 70, 1300]console.log(deposits);const deposits1 = [];for (const mov of movements) { if (mov &gt; 0) { deposits1.push(mov); }}// (5) [200, 450, 3000, 70, 1300]console.log(deposits1);const withdrawals = movements.filter(mov =&gt; mov &lt; 0);// (3) [-400, -650, -130]console.log(withdrawals); the reduce method123456789101112131415161718192021222324252627const movements = [200, 450, -400, 3000, -650, -130, 70, 1300];// accumulator// (method) Array&lt;number&gt;.reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: number[]) =&gt; number, initialValue: number): number (+2 overloads)// @param initialValue — If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.// const balance = movements.reduce(function (acc, cur, i, arr) { // Iteration 0: 0 // Iteration 1: 200 // Iteration 2: 650 // Iteration 3: 250 // Iteration 4: 3250 // Iteration 5: 2600 // Iteration 6: 2470 // Iteration 7: 2540 console.log(`Iteration ${i}: ${acc}`); return acc + cur;}, 0);// 3840console.log(balance);let balance2 = 0;for (const mov of movements) { balance2 += mov;}console.log(balance2); 123456/// maximum valueconst movements = [200, 450, -400, 3000, -650, -130, 70, 1300];const max = movements.reduce((acc, mov) =&gt; acc &lt; mov ? mov : acc, movements[0]);console.log(max); chainning methods12345678910111213141516const eurToUsd = 1.1;const movements = [200, 450, -400, 3000, -650, -130, 70, 1300];// pipelineconst totalDepositesUsd = movements .filter(mov =&gt; mov &gt; 0) // .map((mov, i, arr) =&gt; { // console.log(arr); // return mov * eurToUsd // }) .map(mov =&gt; mov * eurToUsd) .reduce((acc, mov) =&gt; acc + mov, 0);// 5522.000000000001console.log(totalDepositesUsd); the find method123456789101112131415161718192021222324252627const movements = [200, 450, -400, 3000, -650, -130, 70, 1300];// return the first element// (method) Array&lt;number&gt;.find(predicate: (value: number, index: number, obj: number[]) =&gt; unknown, thisArg?: any): number | undefined (+1 overload)// Returns the value of the first element in the array where predicate is true, and undefined otherwise.// @param predicate//find calls predicate once for each element of the array, in ascending order, until it finds one where predicate returns true. If such an element is found, find immediately returns that element value. Otherwise, find returns undefined.const firstWithdrawal = movements.find(mov =&gt; mov &lt; 0);// -400console.log(firstWithdrawal);console.log(accounts);const account = accounts.find(acc =&gt; acc.owner === 'Jessica Davis');console.log(account);// for oflet accountFor = {};for (const acc of accounts) { if (acc.owner === 'Jessica Davis') { accountFor = acc; }}console.log(accountFor); bankist project login page12345678const btnLogin = document.querySelector('.login__btn');btnLogin.addEventListener('click', function (e) {// prevent form form submittinge.preventDefault();});const inputLoginPin = document.querySelector('.login__input--pin');inputClosePin.blur(); bankist project: implementing transfersthe findindex method12345/// delete accountconst index = accounts.findIndex(acc =&gt; acc.username === currentAccount.username)// console.log(accounts);accounts.splice(index, 1)// console.log(accounts); some and every methods12345678910111213141516171819202122232425//////////someconst movements = [200, 450, -400, 3000, -650, -130, 70, 1300];// only for elements value equal to argumentsconsole.log(movements.includes(-130));const anyDeposits = movements.some(mov =&gt; mov &gt; 5000);console.log(anyDeposits);///////every// Determines whether all the members of an array satisfy the specified test.// falseconsole.log(movements.every(mov =&gt; mov &gt; 0));// trueconsole.log(account4.movements.every(mov =&gt; mov &gt; 0));/////// separate callbackconst deposit = mov =&gt; mov &gt; 0;console.log(movements.some(deposit));console.log(movements.every(deposit));console.log(movements.filter(deposit)); flat and flatmap1234567891011121314151617181920212223242526272829303132333435363738394041const arr = [[1, 2, 3], [4, 5, 6], 7, 8];// (8) [1, 2, 3, 4, 5, 6, 7, 8]// Returns a new array with all sub-array elements concatenated into it recursively up to the specified depth.// @param depth — The maximum recursion depthconsole.log(arr.flat());const arrDeep = [[1, 2, 3], [4, [5, 6]], 7, 8];// (7) [1, 2, 3, 4, Array(2), 7, 8]// console.log(arrDeep.flat());// (8) [1, 2, 3, 4, 5, 6, 7, 8]console.log(arrDeep.flat(2));const accountsMovements = accounts.map(acc =&gt; acc.movements);// (4) [Array(8), Array(8), Array(8), Array(5)]// 0: (8) [200, 450, -400, 3000, -650, -130, 70, 1300]// 1: (8) [5000, 3400, -150, -790, -3210, -1000, 8500, -30]// 2: (8) [200, -200, 340, -300, -20, 50, 400, -460]// 3: (5) [430, 1000, 700, 50, 90]console.log(accountsMovements);const allMovements = accountsMovements.flat();// (29) [200, 450, -400, 3000, -650, -130, 70, 1300, 5000, 3400, -150, -790, -3210, -1000, 8500, -30, 200, -200, 340, -300, -20, 50, 400, -460, 430, 1000, 700, 50, 90]console.log(allMovements);const overallBalance = allMovements.reduce((acc, mov) =&gt; acc + mov, 0);// 17840console.log(overallBalance);const overallBalanceChain = accounts .map(acc =&gt; acc.movements) .flat() .reduce((acc, mov) =&gt; acc + mov, 0);console.log(overallBalanceChain);///////////////flatmap/// only one level deepconst overallBalanceFlatMap = accounts .flatMap(acc =&gt; acc.movements) .reduce((acc, mov) =&gt; acc + mov, 0);console.log(overallBalanceFlatMap); sorting arrays12345678910111213141516171819202122232425262728293031323334353637const owners = ['Jonas', 'Zach', 'Adam', 'Martha'];// (method) Array&lt;string&gt;.sort(compareFn?: ((a: string, b: string) =&gt; number) | undefined): string[]// Sorts an array in place. This method mutates the array and returns a reference to the same array.// @param compareFn// Function used to determine the order of the elements. It is expected to return a negative value if the first argument is less than the second argument, zero if they're equal, and a positive value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.// [11,2,22,1].sort((a, b) =&gt; a - b)// (4) ['Adam', 'Jonas', 'Martha', 'Zach']console.log(owners.sort());// (4) ['Adam', 'Jonas', 'Martha', 'Zach']console.log(owners);//// Numbersconst movements = [200, 450, -400, 3000, -650, -130, 70, 1300];// (8) [200, 450, -400, 3000, -650, -130, 70, 1300]console.log(movements);// // (8) [-130, -400, -650, 1300, 200, 3000, 450, 70]// console.log(movements.sort());// return &lt; 0 , a, b// return &gt; 0 , b, a// (8) [-650, -400, -130, 70, 200, 450, 1300, 3000]console.log(movements.sort((a, b) =&gt; { if (a &gt; b) return 1; if (b &gt; a) return -1;}));// (8) [3000, 1300, 450, 200, 70, -130, -400, -650]console.log(movements.sort((a, b) =&gt; { if (a &gt; b) return -1; if (b &gt; a) return 1;}));// (8) [-650, -400, -130, 70, 200, 450, 1300, 3000]console.log(movements.sort((a, b) =&gt; a - b)); 123456789const dogs1 = [ { weight: 22, curFood: 250, owners: ['Alice', 'Bob'] }, { weight: 8, curFood: 200, owners: ['Matilda'] }, { weight: 13, curFood: 275, owners: ['Sarah', 'John'] }, { weight: 32, curFood: 340, owners: ['Michael'] },];const copyDogs1 = dogs1.slice().sort((a, b) =&gt; a.weight - b.weight);console.log(copyDogs1); creating and filling arrays12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455console.log([1, 2, 3, 4, 5, 6, 7, 8]);console.log(new Array(1, 2, 3, 4, 5, 6, 7, 8));const x = new Array(7);// (7) [empty × 7]console.log(x);// (7) [empty × 7]// console.log(x.map(() =&gt; 5));// Changes all array elements from start to end index to a static value and returns the modified array// @param value — value to fill array section with// @param start// index to start filling the array at. If start is negative, it is treated as length+start where length is the length of the array.// @param end// index to stop filling the array at. If end is negative, it is treated as length+end.x.fill(1);// (7) [1, 1, 1, 1, 1, 1, 1]console.log(x);x.fill(2, 3, 5)// (7) [1, 1, 1, 2, 2, 1, 1]console.log(x);//// Array.from// (method) ArrayConstructor.from&lt;any, number&gt;(iterable: Iterable&lt;any&gt; | ArrayLike&lt;any&gt;, mapfn: (v: any, k: number) =&gt; number, thisArg?: any): number[] (+3 overloads)// Creates an array from an iterable object.// @param iterable — An iterable object to convert to an array.// @param mapfn — A mapping function to call on every element of the array.// (7) [1, 1, 1, 1, 1, 1, 1]console.log((Array.from({ length: 7 }, () =&gt; 1)));// (7) [1, 2, 3, 4, 5, 6, 7]console.log(Array.from({ length: 7 }, (value, index) =&gt; index + 1));// console.log(Array.from({ length: 7 }, (_, index) =&gt; index + 1));////// querySelectorAll --&gt; nodelist////// dont have all array methods, like map()////// convert to arrayconst movementsUI = Array.from(document.querySelectorAll('.movements__value'));// (2) [div.movements__value, div.movements__value]console.log(movementsUI);const movementsUI2 = [...document.querySelectorAll('.movements__value')];labelBalance.addEventListener('click', function () { const movementsUI1 = Array.from(document.querySelectorAll('.movements__value'), el =&gt; Number(el.textContent.replace('€', ''))); // (8) [-30, 8500, -1000, -3210, -790, -150, 3400, 5000] console.log(movementsUI1);}) array summary numbers and dates, times, intlconveting and check numbers1234567891011121314151617181920212223242526272829303132333435// all floating 64console.log(23 === 23.0); // 23// binary base 2console.log(0.1 + 0.2); // 0.30000000000000004// convert string to numberconsole.log(Number('23'));console.log(+'23');///////// parsing//(method) NumberConstructor.parseInt(string: string, radix?: number | undefined): number// Converts A string to an integer.// @param string — A string to convert into a number.// @param radix// A value between 2 and 36 that specifies the base of the number in string. If this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal. All other strings are considered decimal.console.log(Number.parseInt('30px')); // 30console.log(Number.parseFloat(' 2.5rem ')); // 2.5console.log(Number.isFinite(23)); // true// console.log(Number.isNaN(20)); // falseconsole.log(Number.isNaN('20')); // falseconsole.log(Number.isNaN(23 / 0)); // falseconsole.log(Number.isNaN(+'20x')); // true// Only finite values of the type number, result in true.// check if value is numberconsole.log(Number.isFinite(23)); // trueconsole.log(Number.isFinite(23 / 0)); // falseconsole.log(Number.isFinite(+'20x')); // falseconsole.log(Number.isInteger(23)); // trueconsole.log(Number.isInteger(23.2)); // false Math method and rounding1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950// Returns the square root of a number.console.log(Math.sqrt(25));// console.log(25 ** (1 / 2));// Returns the larger of a set of supplied numeric expressions.console.log(Math.max(5, '454', 12, 35, 65));console.log(Math.min(5, '454', 12, 35, 65));console.log(Math.PI * 10 ** 2);// random Returns a pseudorandom number between 0 and 1.// trunc Returns the integral part of the a numeric expression, x, removing any fractional digits. If x is already an integer, the result is x.console.log(Math.trunc(Math.random() * 6) + 1);const randomInt = (min, max) =&gt; Math.trunc(Math.random() * (max - min) + 1) + min;console.log(randomInt(2, 9));///////// rounding integers// Returns a supplied numeric expression rounded to the nearest integer.console.log(Math.round(23.3)); // 23console.log(Math.round(23.9)); // 24// Returns the smallest integer greater than or equal to its numeric argument.console.log(Math.ceil(23.3)); // 24console.log(Math.ceil(23.9)); // 24console.log(Math.ceil(23)); // 23// Returns the greatest integer less than or equal to its numeric argument.console.log(Math.floor(23.3)); // 23console.log(Math.floor(23.9)); // 23console.log(Math.floor(23)); // 23console.log(Math.floor(-23.2)); // -24// when positive value floor === truncconsole.log(Math.trunc(23.3)); // 23console.log(Math.trunc(23.9)); // 23console.log(Math.trunc(23)); // 23console.log(Math.trunc(-23.2)); // -23///// rounding decimalsconsole.log((2.7).toFixed(0)); // '3'console.log((2.7).toFixed(2)); // '2.70'console.log((2.2346).toFixed(2)); // '2.23'console.log(+(2.2346).toFixed(2)); // 2.23 remainder operator123456789// remainderconsole.log(5 % 2);// even or oddconst isEven = n =&gt; n % 2 === 0;console.log(isEven(8)); // trueconsole.log(isEven(9)); // false numeric separators1234567891011121314151617// 2,874,600,000const diameter = 2874600000;const diameter1 = 2_874_600_000;console.log(diameter1); // 2874600000const priceCents = 345_99;console.log(priceCents); // 34599const PI = 3.14_15;// const PI = 3._1415; // error// const PI = 3_.1415; // error// const PI = _3.1415; // error// const PI = 3.1415_; // errorconsole.log(Number('230000'));console.log(Number('230_000')); // NaNconsole.log(Number.parseInt('230_000')); // 230 BigInt1234567891011121314151617181920212223242526272829// biggest number javascipt can represent// 9007199254740991console.log(2 ** 53 - 1);console.log(Number.MAX_SAFE_INTEGER);// 1.2365469446566512e+32console.log(123654694465665131313132131316464);// 123654694465665131313132131316464nconsole.log(123654694465665131313132131316464n);console.log(BigInt(123654694465665131313132131316464n));// Operations// 1365746113224452954nconsole.log(11321654n + 1365746113213131300n);// Uncaught TypeError: Cannot mix BigInt and other types, use explicit conversions// console.log(2315646 + 213654321316543123n);console.log(BigInt(2315646) + 213654321316543123n);console.log(typeof 20n); // 'bigint'console.log(321654212354n + ' is big'); // 321654212354 is big// divisionsconsole.log(10n / 3n); // 3n creating dates123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051const now = new Date();console.log(now);console.log(new Date('Feb 21 2024 12:58:51'));console.log(new Date('December 24, 2015'));// '2019-11-18T21:31:17.178Z'console.log(account1.movementsDates[0]);console.log(new Date(account1.movementsDates[0]));// Date(year: number, monthIndex: number, date?: number | undefined, hours?: number | undefined, minutes?: number | undefined, seconds?: number | undefined, ms?: number | undefined): Date// The full year designation is required for cross-century date accuracy. If year is between 0 and 99 is used, then year is assumed to be 1900 + year.// Thu Nov 19 2037 15:52:12 GMT+0800 (中国标准时间)console.log(new Date(2037, 10, 19, 15, 52, 12));// Thu Dec 03 2037 15:52:12 GMT+0800 (中国标准时间)console.log(new Date(2037, 10, 33, 15, 52, 12));///// time stamps// 1970-01-01console.log(new Date(0));// 3 days// Sun Jan 04 1970 08:00:00 GMT+0800 (中国标准时间)console.log(new Date(3 * 24 * 60 * 60 * 1000));/// working with Dateconst future = new Date(2037, 10, 13, 15, 52)// Fri Nov 13 2037 15:52:00 GMT+0800 (中国标准时间)console.log(future);console.log(future.getFullYear()) // 2037console.log(future.getMonth()) // 10console.log(future.getDate()) // 13console.log(future.getHours()) // 15console.log(future.getMinutes()) // 52console.log(future.getSeconds()) // 0console.log(future.getMilliseconds()) // 0// 2037-11-13T07:52:00.000Zconsole.log(future.toISOString()); // // 2141711520000console.log(future.getTime());// Fri Nov 13 2037 15:52:00 GMT+0800 (中国标准时间)console.log(new Date(2141711520000));// 1708492446836console.log(Date.now());future.setFullYear(2040);// Tue Nov 13 2040 15:52:00 GMT+0800 (中国标准时间)console.log(future); adding dates to bankist app project12const day = `${now.getDate()}`.padStart(2, 0);const month = String(now.getMonth() + 1).padStart(2, 0); operation with dates123456789101112const future = new Date(2037, 10, 13, 15, 52)// 2141711520000console.log(Number(future));const daysPassed = function (date1, date2) { return Math.abs(date2 - date1) / (24 * 60 * 60 * 1000);}const days1 = daysPassed(new Date(2037, 3, 14), new Date(2037, 3, 24, 10, 8))// 10.422222222222222console.log(days1); internationalizing date (intl i18n)ISO LANGUAGE CODE TABLEhttp://www.lingoes.net/en/translator/langcode.htm 123456789101112131415161718192021222324const now = new Date();// new (locales?: string | string[] | undefined, options?: Intl.DateTimeFormatOptions | undefined) =&gt; Intl.DateTimeFormat// (method) Intl.DateTimeFormat.format(date?: number | Date | undefined): string// labelDate.textContent = new Intl.DateTimeFormat('en-GB').format(now);// labelDate.textContent = new Intl.DateTimeFormat('en-US').format(now);// labelDate.textContent = new Intl.DateTimeFormat('zh-CN').format(now);const options = { hour: 'numeric', minute: 'numeric', day: 'numeric', // month: 'numeric', // month: 'long', month: '2-digit', year: 'numeric', weekday: 'long'}const locale = navigator.language;// 'zh-CN'console.log(locale);labelDate.textContent = new Intl.DateTimeFormat('zh-CN', options).format(now); internationalzing numbers (intl)12345678910111213141516171819const num = 134641312.32;const options = { // style: 'unit', // unit: 'mile-per-hour', style: 'percent', // style: 'currency', // currency: 'EUR', // useGrouping: false,}// US 134,641,312.32console.log('US', new Intl.NumberFormat('en-US').format(num));// Germany 134.641.312,32console.log('Germany', new Intl.NumberFormat('de-DE').format(num));// zh-CN 134,641,312.32 mi/hconst locale = navigator.language;console.log(locale, new Intl.NumberFormat(locale, options).format(num)); timer: setTimeout setIntervalsetTimeout oncesetInterval repeat 1234567891011121314151617181920212223// setTimeout(handler: TimerHandler, timeout?: number | undefined, ...arguments: any[]): number// 3000 -&gt; 3s// the code is not stop here// Waiting...// Here is your pizzasetTimeout(function () { console.log('Here is your pizza');}, 3000);console.log('Waiting...');// Here is your pizza with olives and spinachsetTimeout(function (ing1, ing2) { console.log(`Here is your pizza with ${ing1} and ${ing2}`);}, 3000, 'olives', 'spinach');const ingredients = ['olives', 'spinach'];const pizzaTimer = setTimeout(function (ing1, ing2) { console.log(`Here is your pizza with ${ing1} and ${ing2}`);}, 3000, ...ingredients);console.log(pizzaTimer); // 4if (ingredients.includes('spinach')) clearTimeout(pizzaTimer) 123456789101112const timeInter = setInterval(function () { const now = new Date(); const hour = now.getHours(); const min = now.getMinutes(); const sec = now.getSeconds(); console.log(`${hour}:${min}:${sec}`);}, 1000);setTimeout(function () { clearInterval(timeInter);}, 5000); bankist project: implemetn a countdown123456789101112131415161718192021222324252627const startLogoutTimer = function () { const tick = function () { const min = String(Math.floor(time / 60)).padStart(2, 0); const sec = String(time % 60).padStart(2, 0); // print the remaining time to the ui labelTimer.textContent = `${min}: ${sec}`; // when 0 seconds, stop timer and logout user if (time === 0) { clearInterval(timer); labelWelcome.textContent = 'LOG IN TO GET STARTED'; containerApp.style.opacity = 0; } time--; } // set time to 5 mins let time = 120; // call the timer every second tick(); const timer = setInterval(tick, 1000); return timer;} 12345let timer;btnLogin.addEventListener('click', function (e) { if (timer) clearInterval(timer) timer = startLogoutTimer();}); advanced DOM and EVENTDOM deep allows us to make javascript interact with the browser; we can write javascript to create, modify and delete Html elements; set styles, classes and attributes; and listen and respond to events; dom tree is generated from an html document, which can then interac with; dom is a very complex api(application programming interface) that contains lots of methods and properties to interact with the dom tree types of dom objects select, create, and delete elements123456789101112131415161718192021222324252627282930313233343536373839404142434445464748console.log(document.documentElement);console.log(document.head);console.log(document.body);// Returns the first element that is a descendant of node that matches selectors.const header = document.querySelector('.header');// NodeListconst allSections = document.querySelectorAll('.section');console.log(allSections);console.log(document.getElementById('section--1'));// HTMLCollection ---&gt; live collectionconsole.log(document.getElementsByTagName('button'));// HTMLCollectionconsole.log(document.getElementsByClassName('btn'));// create and insert elements// .insertAdjacentHTML()// Creates an instance of the element for the specified tag.const message = document.createElement('div');// classList: Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object.message.classList.add('cookie-message');message.textContent = 'We use cookied ....';message.innerHTML = 'We use cookied ....&lt;button class=&quot;btn btn--close-cookie&quot;&gt;Got it!&lt;/button&gt;';// Inserts nodes before the first child of node, while replacing strings in nodes with equivalent Text nodes.header.prepend(message);// append: Inserts nodes after the last child of node, while replacing strings in nodes with equivalent Text nodes.///// if it is used twice it is moved, not copy// cloneNode: Returns a copy of node. If deep is true, the copy also includes the node's descendants.header.append(message.cloneNode(true));// Inserts nodes just after node, while replacing strings in nodes with equivalent Text nodes.header.after(message);// Inserts nodes just before node, while replacing strings in nodes with equivalent Text nodes.header.before(message)//////////delete elementsdocument.querySelector('.btn--close-cookie').addEventListener('click', function () { // Removes node. message.remove(); // message.parentElement.removeChild(message);}); style, attribute and class123456:root { --color-primary: #5ec576; --color-secondary: #ffcb03; --color-tertiary: #ff585f; --color-primary-darker: #4bbb7d;} 123456789&lt;img src=&quot;img/logo.png&quot; alt=&quot;Bankist logo&quot; class=&quot;nav__logo&quot; id=&quot;logo&quot; designer=&quot;lucfe&quot; data-version-number=&quot;3.0&quot;/&gt; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071//// inline stylemessage.style.backgroundColor = '#37383d';message.style.width = '120%';/// in the style sheet, no inline style ''console.log(message.style.color);// rgb(55, 56, 61)console.log(message.style.backgroundColor);// CSSStyleDeclaration {0: 'accent-color', 1: 'align-content',...}// console.log(getComputedStyle(message));console.log(getComputedStyle(message).color);message.style.height = Number.parseFloat(getComputedStyle(message).height, 10) + 30 + 'px';console.log(message.style.height); // 85.6667px// setProperty: // (method) CSSStyleDeclaration.setProperty(property: string, value: string | null, priority?: string | undefined): voiddocument.documentElement.style.setProperty('--color-primary', 'orangered')////// Attributesconst logo = document.querySelector('.nav__logo');///// element standard attributes/property// Bankist logoconsole.log(logo.alt);/// full path// http://127.0.0.1:5500/complete-javascript-course-master/13-Advanced-DOM-Bankist/starter/img/logo.pngconsole.log(logo.src);// nav__logoconsole.log(logo.className);logo.alt = 'Beautiful minimalist logo'//// non standard attributes/property// Returns element's first attribute whose qualified name is qualifiedName,console.log(logo.getAttribute('designer')); // lucfe// relative path: img/logo.pngconsole.log(logo.getAttribute('src'));// (method) Element.setAttribute(qualifiedName: string, value: string): void// Sets the value of element's first attribute whose qualified name is qualifiedName to value.logo.setAttribute('designer', 'jonas');const link = document.querySelector('.nav__link--btn')console.log(link.href);// http://127.0.0.1:5500/complete-javascript-course-master/13-Advanced-DOM-Bankist/starter/index.html#console.log(link.getAttribute('href')); // /// data attributes// data-version-number=&quot;3.0&quot;console.log(logo.dataset.versionNumber); // 3.0/// classList:// (property) Element.classList: DOMTokenList// Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object.// Adds all arguments passed, except those already present.logo.classList.add('c', 'j');// Adds all arguments passed, except those already present.logo.classList.remove('c');// If force is not given, &quot;toggles&quot; token, removing it if it's present and adding it if it's not present.logo.classList.toggle('c');// (method) DOMTokenList.contains(token: string): boolean// Returns true if token is present, and false otherwise.logo.classList.contains('c');// !!! dont use/// erase all classes// logo.className = 'jonas' smooth scrolling12345&lt;div class=&quot;header__title&quot;&gt;&lt;button class=&quot;btn--text btn--scroll-to&quot;&gt;Learn more &amp;DownArrow;&lt;/button&gt;&lt;/div&gt;&lt;section class=&quot;section&quot; id=&quot;section--1&quot;&gt;&lt;/section&gt; 1234567891011121314151617181920212223242526272829const btnScrollTo = document.querySelector('.btn--scroll-to');const section1 = document.getElementById('section--1');btnScrollTo.addEventListener('click', e =&gt; { const s1coords = section1.getBoundingClientRect(); // DOMRect {x: 0, y: 573.3333740234375, width: 1221.3333740234375, height: 1403.15625, top: 573.3333740234375, …} console.log(s1coords); console.log('current scroll (x/y)', window.pageXOffset, window.pageYOffset); // current scroll (x/y) 0 300 // height/width of the viewport 573 1221 console.log('height/width of the viewport', document.documentElement.clientHeight, document.documentElement.clientWidth); // scrolling relative to the viewport // window.scrollTo(s1coords.left + window.pageXOffset, s1coords.top + window.pageYOffset); // // smoth // window.scrollTo({ // letf: s1coords.left + window.scrollX, // top: s1coords.top + window.scrollY, // behavior: &quot;smooth&quot; // }); /// modern browser section1.scrollIntoView({ behavior: &quot;smooth&quot;, });}) types of event and event handlersold&lt;h1 onclick=&quot;alert('HTML alert')&quot;&gt; 123456789101112131415161718192021222324const h1 = document.querySelector('h1');const alertH1 = function (e) { alert('addEventListener: your are reading the heading'); // Removes the event listener in target's event listener list with the same type, callback, and options. h1.removeEventListener('mouseenter', alertH1)}/// like mouse hover/// can add multible eventhandlers/// Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.h1.addEventListener('mouseenter', alertH1);setTimeout(() =&gt; { h1.removeEventListener('mouseenter', alertH1)}, 5000);// /// old school// h1.onmouseenter = function (e) {// alert('addEventListener: your are reading the heading')// } event propagation: bubbling and capturingpropagetion传播;培养the spreading of something (a belief or practice) into new regions 1234567891011121314&lt;html&gt; &lt;head&gt; &lt;title&gt;A Simple Page&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;section&gt; &lt;p&gt;A paragraph with a &lt;a href=&quot;#&quot;&gt;link&lt;/a&gt;&lt;/p&gt; &lt;p&gt;A second paragraph&lt;/p&gt; &lt;/section&gt; &lt;section&gt; &lt;img src=&quot;dom.png&quot; alt=&quot;THE DOM&quot;&gt; &lt;/section&gt; &lt;/body&gt;&lt;/html&gt; capturing phase target phase bubbling phase 123456document.querySelector('section').addEventListener('click', () =&gt; { alert('you clicked me')});document.querySelector('a').addEventListener('click', () =&gt; { alert('you clicked me')}); example: 123456789101112131415&lt;nav class=&quot;nav&quot;&gt; &lt;img src=&quot;img/logo.png&quot; alt=&quot;Bankist logo&quot; class=&quot;nav__logo&quot; id=&quot;logo&quot; designer=&quot;lucfe&quot; data-version-number=&quot;3.0&quot; /&gt; &lt;ul class=&quot;nav__links&quot;&gt; &lt;li class=&quot;nav__item&quot;&gt; &lt;a class=&quot;nav__link&quot; href=&quot;#&quot;&gt;Features&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt;&lt;/nav&gt; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051// document.querySelector('section').addEventListener('click', () =&gt; {// alert('you clicked me')// });// document.querySelector('a').addEventListener('click', () =&gt; {// alert('you clicked me')// });/// rgb(255, 255, 255)const randomInt = (min, max) =&gt; Math.floor(Math.random() * (max - min + 1) + min);const randomColor = () =&gt; `rgb(${randomInt(0, 255)}, ${randomInt(0, 255)}, ${randomInt(0, 255)})`console.log(randomColor());// nav__link// nav__links// navdocument.querySelector('.nav__link').addEventListener('click', function (e) { console.log('nav__link'); this.style.backgroundColor = randomColor(); // &lt;a&gt; element console.log('LINK', e.target); // stop progagation // When dispatched in a tree, invoking this method prevents event from reaching any objects other than the current object. // e.stopPropagation(); // When set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.}, true)document.querySelector('.nav__links').addEventListener('click', function (e) { console.log('nav__links'); this.style.backgroundColor = randomColor(); // &lt;a&gt; element console.log('LINKs', e.target); /// this === e.currentTarget // &lt;ul&gt; console.log('Links', e.currentTarget);})document.querySelector('.nav').addEventListener('click', function (e) { console.log('nav'); this.style.backgroundColor = randomColor(); // &lt;a&gt; element console.log('nav', e.target);}) event delegation implementing: page navigation1234567891011121314151617181920&lt;nav class=&quot;nav&quot;&gt; &lt;img src=&quot;img/logo.png&quot; alt=&quot;Bankist logo&quot; class=&quot;nav__logo&quot; id=&quot;logo&quot; designer=&quot;lucfe&quot; data-version-number=&quot;3.0&quot; /&gt; &lt;ul class=&quot;nav__links&quot;&gt; &lt;li class=&quot;nav__item&quot;&gt; &lt;a class=&quot;nav__link&quot; href=&quot;#section--1&quot;&gt;Features&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;ul class=&quot;nav__links&quot;&gt; &lt;li class=&quot;nav__item&quot;&gt; &lt;a class=&quot;nav__link&quot; href=&quot;#section--2&quot;&gt;Features&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt;&lt;/nav&gt; 123456789101112131415161718192021222324252627282930313233//////////// page navigation// document.querySelectorAll('.nav__link').forEach(function (el) {// el.addEventListener('click', function (e) {// e.preventDefault();// console.log('LINK');// const id = this.getAttribute('href');// console.log(id);// document.querySelector(id).scrollIntoView({// behavior: 'smooth'// });// });// });// 1. add event listenner to comon parent elemetnt// 2. determine what element originated the eventdocument.querySelector('.nav__links').addEventListener('click', function (e) { console.log(e.target); e.preventDefault(); // mathing startegy if (e.target.classList.contains('nav__link')) { console.log('LINK'); const id = e.target.getAttribute('href'); console.log(id); document.querySelector(id).scrollIntoView({ behavior: 'smooth' }); }}); examples 2add eventlistener that dont exit at the monment DOM traversingDOM traversingselect elmenent by another elements 1234567891011121314151617&lt;div class=&quot;header__title&quot;&gt; &lt;h1 onclick=&quot;alert('HTML alert')&quot;&gt; When &lt;!-- Green highlight effect --&gt; &lt;span class=&quot;highlight&quot;&gt;banking&lt;/span&gt; meets&lt;br /&gt; &lt;span class=&quot;highlight&quot;&gt;minimalist&lt;/span&gt; &lt;/h1&gt; &lt;h4&gt;A simpler banking experience for a simpler life.&lt;/h4&gt; &lt;button class=&quot;btn--text btn--scroll-to&quot;&gt;Learn more &amp;DownArrow;&lt;/button&gt; &lt;img src=&quot;img/hero.png&quot; class=&quot;header__img&quot; alt=&quot;Minimalist bank items&quot; /&gt;&lt;/div&gt; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748const h1 = document.querySelector('h1');///// going downwards: child///// no matter how deep the child element areconsole.log(h1.querySelectorAll('.highlight'));// NodeList(9) [text, comment, text, span.highlight, text, br, text, span.highlight, text]console.log(h1.childNodes);// HTMLCollection(3) [span.highlight, br, span.highlight]console.log(h1.children);// element: span.highlightconsole.log(h1.firstElementChild);// element: span.highlightconsole.log(h1.lastElementChild);///////// going upwards: parents// element: div.header__titleconsole.log(h1.parentNode);console.log(h1.parentElement);// Returns the first (starting at element) inclusive ancestor that matches selectors, and null otherwise./// reverse directiong of querySelector// element: header.headerconsole.log(h1.closest('.header'));// element: h1console.log(h1.closest('h1'));// going sideways: siblings// nullconsole.log(h1.previousElementSibling);// element: h4console.log(h1.nextElementSibling);/// chaining// HTMLCollectionconsole.log(h1.parentElement.children);[...h1.parentElement.children].forEach(function (el) { if (el !== h1) el.style.transform = 'scale(0.5)';}); tabs: tabbed component1234567891011121314151617181920212223242526272829&lt;div class=&quot;operations&quot;&gt; &lt;div class=&quot;operations__tab-container&quot;&gt; &lt;button class=&quot;btn operations__tab operations__tab--1 operations__tab--active&quot; data-tab=&quot;1&quot; &gt; &lt;span&gt;01&lt;/span&gt;Instant Transfers &lt;/button&gt; ... &lt;/div&gt; &lt;div class=&quot;operations__content operations__content--1 operations__content--active&quot; &gt; &lt;div class=&quot;operations__icon operations__icon--1&quot;&gt; &lt;/div&gt; &lt;h5 class=&quot;operations__header&quot;&gt; Tranfser money to anyone, instantly! No fees, no BS. &lt;/h5&gt; &lt;p&gt; Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. &lt;/p&gt; &lt;/div&gt; ... &lt;/div&gt; 1234567891011121314151617181920212223const tabs = document.querySelectorAll('.operations__tab');const tabsContainer = document.querySelector('.operations__tab-container');const tabsContent = document.querySelectorAll('.operations__content');tabsContainer.addEventListener('click', e =&gt; { e.preventDefault(); const clicked = e.target.closest('button'); console.log(clicked); /// guard clause if (!clicked) return; /// remove active class and add active tab tabs.forEach(t =&gt; t.classList.remove('operations__tab--active')); clicked.classList.add('operations__tab--active'); /// active content area tabsContent.forEach(content =&gt; { content.classList.remove('operations__content--active') }); document.querySelector(`.operations__content--${clicked.dataset.tab}`).classList.add('operations__content--active');}); passing arguments to event handlers1234567891011121314151617181920212223242526&lt;nav class=&quot;nav&quot;&gt; &lt;img src=&quot;img/logo.png&quot; alt=&quot;Bankist logo&quot; class=&quot;nav__logo&quot; id=&quot;logo&quot; designer=&quot;lucfe&quot; data-version-number=&quot;3.0&quot; /&gt; &lt;ul class=&quot;nav__links&quot;&gt; &lt;li class=&quot;nav__item&quot;&gt; &lt;a class=&quot;nav__link&quot; href=&quot;#section--1&quot;&gt;Features&lt;/a&gt; &lt;/li&gt; &lt;li class=&quot;nav__item&quot;&gt; &lt;a class=&quot;nav__link&quot; href=&quot;#section--2&quot;&gt;Operations&lt;/a&gt; &lt;/li&gt; &lt;li class=&quot;nav__item&quot;&gt; &lt;a class=&quot;nav__link&quot; href=&quot;#section--3&quot;&gt;Testimonials&lt;/a&gt; &lt;/li&gt; &lt;li class=&quot;nav__item&quot;&gt; &lt;a class=&quot;nav__link nav__link--btn btn--show-modal&quot; href=&quot;#&quot; &gt;Open account&lt;/a &gt; &lt;/li&gt; &lt;/ul&gt;&lt;/nav&gt; 1234567891011121314151617181920212223242526272829const handleHover = function (e, opacity) { if (e.target.classList.contains('nav__link')) { const link = e.target; const siblings = link.closest('.nav').querySelectorAll('.nav__link'); const logo = link.closest('.nav').querySelector('img'); siblings.forEach(el =&gt; { if (el !== link) { el.style.opacity = this; } logo.style.opacity = this; }); }}const nav = document.querySelector('.nav');// mouseenter dont progonation/// method 1// nav.addEventListener('mouseover', function (e) {// handleHover(e, 0.5);// });/// method 2nav.addEventListener('mouseover', handleHover.bind(0.5));// passing 'argument' into handler// only one argumentnav.addEventListener('mouseout', handleHover.bind(1)); the scroll event: sticky navigation bar1234.nav.sticky { position: fixed; background-color: rgba(255, 255, 255, 0.95);} 123456789101112131415161718/////// sticky naivgationconst initialCoords = section1.getBoundingClientRect();console.log(initialCoords);//// scroll event not RECOMMENTED//// perfoming is badwindow.addEventListener('scroll', function (e) { console.log(e); console.log(window.scrollY); if (window.scrollY &gt; initialCoords.top) { nav.classList.add('sticky'); } else { nav.classList.remove('sticky'); }}) better way: intersection observer api12345678910111213141516171819202122232425262728293031323334353637383940///provides a way to asynchronously observe changes in the intersection of a target element with an ancestor element or with a top-level document's viewport.// const obsCallback = function (entries, observer) {// entries.forEach(entry =&gt; {// console.log(entry); // IntersectionObserverEntry// })// };// const obsOptions = {// root: null,// threshold: [0, 0.2],// }// const observer = new IntersectionObserver(obsCallback, obsOptions);// observer.observe(section1);const header = document.querySelector('.header');const navHeight = nav.getBoundingClientRect().height;const stickyNav = function (entries) { const [entry] = entries; console.log(entry); if (!entry.isIntersecting) { nav.classList.add('sticky') } else { nav.classList.remove('sticky') }}const headerObserver = new IntersectionObserver(stickyNav, { root: null, threshold: 0, rootMargin: `-${navHeight}px`});headerObserver.observe(header); revealing elements on scroll1234.section--hidden { opacity: 0; transform: translateY(8rem);} 123456789101112131415161718192021222324/////////// reveal sectionsconst allSections = document.querySelectorAll('.section');const revealSection = function (entries, observer) { const [entry] = entries; console.log(entry); if (!entry.isIntersecting) return; entry.target.classList.remove('section--hidden'); observer.unobserve(entry.target);};const sectionObserver = new IntersectionObserver(revealSection, { root: null, threshold: 0.15,});allSections.forEach(section =&gt; { section.classList.add('section--hidden'); sectionObserver.observe(section);}) lazy image loading123456&lt;img src=&quot;img/digital-lazy.jpg&quot; data-src=&quot;img/digital.jpg&quot; alt=&quot;Computer&quot; class=&quot;features__img lazy-img&quot;/&gt; 123.lazy-img { filter: blur(20px);} 12345678910111213141516171819202122232425262728293031323334///// lazy loading imagesconst imgTargets = document.querySelectorAll('img[data-src]');console.log(imgTargets);const loadImg = function (entries, observer) { const [entry] = entries; console.log(entry); if (!entry.isIntersecting) return; // replace the src img with data-src entry.target.src = entry.target.dataset.src; // remove the filter css class // should wait the image all loaded the remove the filter class // entry.target.classList.remove('lazy-img'); entry.target.addEventListener('load', e =&gt; { entry.target.classList.remove('lazy-img'); }); // remove the observer observer.unobserve(entry.target);}const imgObserver = new IntersectionObserver(loadImg, { root: null, threshold: 0, rootMargin: '200px',});imgTargets.forEach(img =&gt; imgObserver.observe(img)); building a slider component1234567891011121314151617181920212223&lt;section class=&quot;section&quot; id=&quot;section--3&quot;&gt; &lt;div class=&quot;section__title section__title--testimonials&quot;&gt;TITLE&lt;/div&gt; &lt;div class=&quot;slider&quot;&gt; &lt;!-- &lt;div class=&quot;slide slide--1&quot;&gt; &lt;div class=&quot;testimonial&quot;&gt; Lorem ipsum dolor sit, amet consectetur adipisicing elit. Explicabo, untur fugiat quae. Possimus illo est commodi iure veritatis rem ducimus adipisci cupiditate, quae quisquam? &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;slide slide--2&quot;&gt;&lt;/div&gt; --&gt; &lt;div class=&quot;slide&quot;&gt;&lt;img src=&quot;img/img-1.jpg&quot; alt=&quot;Photo 1&quot; /&gt;&lt;/div&gt; &lt;div class=&quot;slide&quot;&gt;&lt;img src=&quot;img/img-2.jpg&quot; alt=&quot;Photo 2&quot; /&gt;&lt;/div&gt; &lt;div class=&quot;slide&quot;&gt;&lt;img src=&quot;img/img-3.jpg&quot; alt=&quot;Photo 3&quot; /&gt;&lt;/div&gt; &lt;div class=&quot;slide&quot;&gt;&lt;img src=&quot;img/img-4.jpg&quot; alt=&quot;Photo 4&quot; /&gt;&lt;/div&gt; &lt;button class=&quot;slider__btn slider__btn--left&quot;&gt;&amp;larr;&lt;/button&gt; &lt;button class=&quot;slider__btn slider__btn--right&quot;&gt;&amp;rarr;&lt;/button&gt; &lt;div class=&quot;dots&quot;&gt;&lt;/div&gt; &lt;/div&gt;&lt;/section&gt; 12345&lt;div class=&quot;dots&quot;&gt; &lt;button class=&quot;dots__dot dots__dot--active&quot; data-slide=&quot;0&quot;&gt;&lt;/button&gt; &lt;button class=&quot;dots__dot&quot; data-slide=&quot;1&quot;&gt;&lt;/button&gt; &lt;button class=&quot;dots__dot&quot; data-slide=&quot;2&quot;&gt;&lt;/button&gt;&lt;/div&gt; 1234.slider { overflow: hidden;} 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119//////////////sliderconst slider = function () { const sildes = document.querySelectorAll('.slide'); const slider = document.querySelector('.slider'); const btnLeft = document.querySelector('.slider__btn--left'); const btnRight = document.querySelector('.slider__btn--right'); const dotContainer = document.querySelector('.dots'); let currentSlide = 0; const maxSlide = sildes.length // slider.style.overflow = 'visible'; const createDots = function () { // for (let index = 0; index &lt; maxSlide; index++) { // const buttonEl = document.createElement('button'); // buttonEl.classList.add('dots__dot'); // buttonEl.dataset['slide'] = index; // console.log(buttonEl); // dotContainer.append(buttonEl); // } sildes.forEach((_, i) =&gt; { dotContainer.insertAdjacentHTML('beforeend', `&lt;button class=&quot;dots__dot&quot; data-slide=&quot;${i}&quot;&gt;&lt;/button&gt;`); }); }; const activateDot = function (slide) { const dots = document.querySelectorAll('.dots__dot'); dots.forEach(dot =&gt; dot.classList.remove('dots__dot--active')); const clicked = document.querySelector(`.dots__dot[data-slide=&quot;${slide}&quot;]`) clicked.classList.add('dots__dot--active'); } const goToSlide = function (slide) { sildes.forEach((s, i) =&gt; { s.style.transform = `translateX(${100 * i - 100 * slide}%)`; }); /// active dot activateDot(slide); } /// next slide const nextSlide = function () { if (currentSlide === maxSlide - 1) { currentSlide = 0; } else { currentSlide++; } /// -100 0 100 200 goToSlide(currentSlide); } const preSlide = function () { if (currentSlide === 0) { currentSlide = maxSlide - 1; } else { currentSlide--; } /// -100 0 100 200 goToSlide(currentSlide); } const init = function () { createDots(); activateDot(0); /// begining goToSlide(0); // 0, 100, 200, 300 // sildes.forEach((s, i) =&gt; { // s.style.transform = `translateX(${100 * i}%)`; // }); } init(); /////////////events btnRight.addEventListener('click', nextSlide); btnLeft.addEventListener('click', preSlide) document.addEventListener('keydown', function (e) { // console.log(e); if (e.key === 'ArrowLeft') { preSlide(); } else if (e.key === 'ArrowRight') { nextSlide(); } }); dotContainer.addEventListener('click', function (e) { e.preventDefault(); const clicked = e.target; if (clicked.classList.contains('dots__dot')) { goToSlide(clicked.dataset.slide); /// active dot activateDot(clicked.dataset.slide); } })}slider(); DOM load event1234567891011121314151617// html and js downloadeddocument.addEventListener('DOMContentLoaded', function (e) { console.log(e); console.log(e.timeStamp);});/// all resources loaded, include css, imageswindow.addEventListener('load', function (e) { console.log(e);});/// before user leave the page, like: close the tab// window.addEventListener('beforeunload', function (e) {// e.preventDefault();// console.log(e);// e.returnValue = '';// }) js loading and execude OOPwhat is OOP? oop is a programming paradigm based on the concept of objects we use objects to model(describe) real world or abstract features object may contain data(properties) and code (methods). by using objects, we pack data and the corresponding behavior into one block; in oop, objects are self-contained pieces/ blocks of code objects are building blocks of applicatins, and interact with one another; interactions happen through a pubblic interface (API): methods that the code outside of the object can access and use to communicate with the object; OOP was developed with the goal of organizing code, to make it more flexible and easier to maintain(avoid ‘spaghetti code’) Abstraction: Ignoring or hiding details that dont matter, allowing us to get an overview perspective of the thing we’re implementing, instead of messing with details that don’t really matter to our implementation. 123456789101112131415User { user private password private email login(word){ this.password == word } commnent(text) { this.checkSPAM(text) } private checkSPAM(text){ // Verify logic }} Encapsulation: Keeping properties and methos private inside the class, so they are not accessible from outside the class. Some methods cas be exposed as a public interface(API) Inheritance: Making all properties and methods of a certain class available to a child class, forming a hierarchical relationshipp between classes. This allows us to reuse commmon logic and to model real world relationships. Polymorphism: A child class can overwrite a method it inherited from a parent class. javascript OOP Objects are linked to a prototype object; Prototypal inheritance: The prototype contains methods (behavior) that are accessible to all objects linked to that prototype; behavior is delegated(授权) to the linked prototype object. 3 ways of implementing prototypal inheritance in javascript Constructor funtions Technique to create objects from a function; This is how built-in objects like Arrays, Maps or Sets are actually implemented. ES6 Classes Modern alternative to constructor function syntax; ‘Syntactic sugar’: behind the scenes, ES6 classes work exactly like constructor functions ES6 clasees do not behavior like classes in “classical OOP” Object.create() the easiest and most straightforward way of linking an object to a prototype object. constructor function and the new operator12345678910111213141516171819202122232425262728293031323334//// dont use arrow function(no this keyword)const Person = function (firstName, birthYear) { // Person {} console.log(this); // instance properties this.firstName = firstName; this.birthYear = birthYear; // /// dont do this// // /// the object new create will all have the same copy function // this.clacAge = function(){ // console.log(2037 - this.birthYear); // }}const jonas = new Person('Jonas', 1991);// Person {firstName: 'Jonas', birthYear: 1991}console.log(jonas);// 1. new object {} is created// 2. function is called, this is point to the new object {}// 3. the new object {} is linked to prototype// 4. function automatically return the new object {}const matilda = new Person('Matilda', 2017);const jack = new Person('Jack', 1975);console.log(matilda, jack);const jay = 'Jay';console.log(jonas instanceof Person); // trueconsole.log(jay instanceof Person); // false prototypes12345678910111213141516171819202122232425262728293031323334353637// prototypes//// all function have properties called prototype/// all the objects (the constructor function created ) have all the methods and properties ( the prototype object have)Person.prototype.calcAge = function () { console.log(2037 - this.birthYear);}// {calcAge: ƒ, constructor: ƒ}console.log(Person.prototype);console.log(jonas);jonas.calcAge(); // 46matilda.calcAge(); // 20// {calcAge: ƒ, constructor: ƒ}console.log(jonas.__proto__);console.log(jonas.__proto__ === Person.prototype); // trueconsole.log(Person.prototype.isPrototypeOf(jonas)); // tureconsole.log(Person.prototype.isPrototypeOf(matilda)); // trueconsole.log(Person.prototype.isPrototypeOf(Person)); // false///// set properties to prototypePerson.prototype.species = 'Homo Sapiens';console.log(jonas.species, matilda.species);console.log(jonas.hasOwnProperty('firstName')); // trueconsole.log(jonas.hasOwnProperty('species')); // false prototypal inheritance: the prototype chain prototypal inheritance: built-in objects12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758// {species: 'Homo Sapiens', calcAge: ƒ, constructor: ƒ}console.log(jonas.__proto__);// {constructor: ƒ, __defineGetter__: ƒ, __defineSetter__: ƒ, hasOwnProperty: ƒ, __lookupGetter__: ƒ, …}console.log(jonas.__proto__.__proto__);/// nullconsole.log(jonas.__proto__.__proto__.__proto__);// ƒ Person(firstName, birthYear)console.dir(Person.prototype.constructor)/// trueconsole.log(Person.prototype.constructor === Person)///// arrayconst arr = [1, 2, 5, 47, 98, 74, 42, 2, 5];// [constructor: ƒ, at: ƒ, concat: ƒ, copyWithin: ƒ, fill: ƒ, …]console.log(arr.__proto__);console.log(arr.__proto__ === Array.prototype); // true// {constructor: ƒ, __defineGetter__: ƒ, __defineSetter__: ƒ, hasOwnProperty: ƒ, __lookupGetter__: ƒ, …}console.log(arr.__proto__.__proto__);console.log(arr.__proto__.__proto__ === Object.prototype); // true////// example////// dont do this in realityArray.prototype.unique = function () { return [...new Set(this)];}// (7) [1, 2, 5, 47, 98, 74, 42]console.log(arr.unique());//////const h1 = document.querySelector('h1');console.dir(h1);// HTMLHeadingElementconsole.dir(h1.__proto__);// HTMLElementconsole.dir(h1.__proto__.__proto__);// Elementconsole.dir(h1.__proto__.__proto__.__proto__);// Nodeconsole.dir(h1.__proto__.__proto__.__proto__.__proto__);// EventTargetconsole.dir(h1.__proto__.__proto__.__proto__.__proto__.__proto__);// Objectconsole.dir(h1.__proto__.__proto__.__proto__.__proto__.__proto__.__proto__);/// ƒ anonymous()console.dir((x =&gt; x + 1).__proto__);/// Objectconsole.dir((x =&gt; x + 1).__proto__.__proto__); ES6 classes1234567891011121314151617181920212223242526272829//// class expression// const PersonCl = class {}//// class declarationclass PersonCl { constructor(firstName, birthYear) { this.firstName = firstName; this.birthYear = birthYear; } /// Methods will be added to the Constructor function's prototype property calcAge() { console.log(2037 - this.birthYear); }}const jessica = new PersonCl('Jessica', 1996);console.log(jessica.firstName);jessica.calcAge();// trueconsole.log(jessica.__proto__ === PersonCl.prototype);// 1. Classes are NOt hoisted// 2. Class are first-class citizens// 3. classes are executed in strict mode classes: getter and setter1234567891011121314151617181920212223242526272829303132333435363738class Car { constructor(make, speed) { this.make = make; this.speed = speed; } accelerate() { this.speed += 10; console.log(this.speed); } brake() { this.speed -= 5; console.log(this.speed); } get speedUS() { return this.speed / 1.6 } set speedUS(speedUS) { this.speed = speedUS * 1.6; }}const bmw = new Car('BMW', 120);const merc = new Car('Mercedes', 95);const ford = new Car('Ford', 120);console.log(ford.speed); // 120console.log(ford.speedUS); // 75console.log(ford.speedUS = 100); // 100console.log(ford.speed); // 160console.log(ford); 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263const account = { owner: 'jonas', movements: [200, 530, 120, 300], get latest() { return this.movements.slice(-1).pop(); }, set latest(mov) { this.movements.push(mov) }}console.log(account.latest); // 300account.latest = 50;console.log(account.latest); // 50console.log(account);////// classclass PersonCl { constructor(fullName, birthYear) { this.fullName = fullName; this.birthYear = birthYear; } /// Methods will be added to the Constructor function's prototype property calcAge() { console.log(2037 - this.birthYear); } /// add 'get age()' to prototype //// add 'age' properties to object get age() { return 2037 - this.birthYear; } set fullName(name) { if (name.includes(' ')) this._fullName = name; else alert('not a full name') } get fullName() { console.log('this come for getter'); return this._fullName; }}const jessica = new PersonCl('Jessica Davis', 1996);console.log(jessica);console.log(jessica.age); // 41console.log(jessica.fullName);// 'not a full name'// console.log(jessica.fullName = 'Jessica');// 'not a full name'// const walter = new PersonCl('Walter', 1996); static methodsArray.from()method belong to Constructor object 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354const Person = function (firstName, birthYear) { // Person {} console.log(this); // instance properties this.firstName = firstName; this.birthYear = birthYear;}const jonas = new Person('Jonas', 1991);// Person {firstName: 'Jonas', birthYear: 1991}console.log(jonas);const matilda = new Person('Matilda', 2017);const jack = new Person('Jack', 1975);console.log(matilda, jack);Person.hey = function () { console.log('Hey there 👋'); console.dir(this);}// this: ƒ Person(firstName, birthYear)/// object call a function, 'this' is the objectPerson.hey();// jonas.hey();/////// classclass PersonCl { constructor(fullName, birthYear) { this.fullName = fullName; this.birthYear = birthYear; } /// Methods will be added to the Constructor function's prototype property calcAge() { console.log(2037 - this.birthYear); } // not add to instance static hey() { console.log('Hey there 👋'); console.dir(this); }}// this: class PersonClPersonCl.hey(); Object.create 1234567891011121314151617181920212223242526272829const PersonProto = { calcAge() { console.log(2037 - this.birthYear); }, init(firstName, birthYear) { this.firstName = firstName; this.birthYear = birthYear; }};const steven = Object.create(PersonProto);//// {calcAge: ƒ}console.log(steven.__proto__);// trueconsole.log(steven.__proto__ === PersonProto);steven.name = 'Steven';steven.birthYear = 2002;steven.calcAge(); // 35/////const sarah = Object.create(PersonProto);sarah.init('Sarah', 1979);sarah.calcAge(); inheritance between ‘classes’: constructor functions 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051const Person = function (firstName, birthYear) { this.firstName = firstName; this.birthYear = birthYear;};Person.prototype.calcAge = function () { console.log(2037 - this.birthYear);};const Student = function (firstName, birthYear, course) { // this.firstName = firstName; // this.birthYear = birthYear; Person.call(this, firstName, birthYear); this.course = course;};///// Student.prototype.__proto__ === Person.prototypeStudent.prototype = Object.create(Person.prototype);//// // ƒ Person(firstName, birthYear)console.dir(Student.prototype.constructor);///////////Student.prototype.constructor = Student;Student.prototype.introduce = function () { console.log(`My name is ${this.firstName} and I study ${this.course}`);}const mike = new Student('Mike', 2020, 'Computer Science');console.log(mike);mike.introduce();mike.calcAge();// {introduce: ƒ}console.log(mike.__proto__);// {calcAge: ƒ, constructor: ƒ}console.log(mike.__proto__.__proto__);// {constructor: ƒ, __defineGetter__: ƒ, __defineSetter__: ƒ, hasOwnProperty: ƒ, __lookupGetter__: ƒ, …}console.log(mike.__proto__.__proto__.__proto__);console.log(mike instanceof Student); // trueconsole.log(mike instanceof Person); // trueconsole.log(mike instanceof Object); // true polymorphism12345678910111213141516171819202122232425262728293031323334353637383940414243444546const Car = function (make, speed) { this.make = make; this.speed = speed;}Car.prototype.accelerate = function () { this.speed += 10; console.log(this.speed);}Car.prototype.brake = function () { this.speed -= 5; console.log(this.speed);}const car1 = new Car('BMW', 120);const car2 = new Car('Mercedes', 95);const EV = function (make, speed, charge) { Car.call(this, make, speed); this.charge = charge;}EV.prototype = Object.create(Car.prototype);EV.prototype.constructor = EV;EV.prototype.chargeBattery = function (chargeTo) { this.charge = chargeTo;};EV.prototype.accelerate = function () { this.speed += 20; this.charge--; console.log(`${this.make} going at ${this.speed} km/h, with a charge of ${this.charge}%`);}const tesla = new EV('Tesla', 120, 23);tesla.accelerate();tesla.chargeBattery(90);tesla.accelerate();tesla.accelerate();tesla.chargeBattery(90); inheritance between ‘classes’: ES6 classes123456789101112131415161718192021222324252627282930313233343536373839404142434445464748class PersonCl { constructor(firstName, birthYear) { this.firstName = firstName; this.birthYear = birthYear; } /// Methods will be added to the Constructor function's prototype property calcAge() { console.log(2037 - this.birthYear); }}const jessica = new PersonCl('Jessica', 1996);console.log(jessica.firstName);class StudentCl extends PersonCl { constructor(firstName, birthYear, course) { /// Always need to happen first!! /// will create 'this' variable super(firstName, birthYear); this.course = course; } introduce() { console.log(`My name is ${this.firstName} and I study ${this.course}`); } calcAge() { console.log(`I feel more like ${2037 - this.birthYear + 10}`); }}const martha = new StudentCl('Martha Jones', 2012, 'Computer Science');// StudentCl {firstName: 'Martha Jones', birthYear: 2012, course: 'Computer Science'}console.log(martha);martha.introduce();martha.calcAge();///// if no added argument to super() method then :;// class StudentCl1 extends PersonCl {// }// const martha1 = new StudentCl1('Martha Jones', 2012);// /// StudentCl1 {firstName: 'Martha Jones', birthYear: 2012}// console.log(martha1); inheritance between ‘classes’: Object.create 1234567891011121314151617181920212223242526272829const PersonProto = { calcAge() { console.log(2037 - this.birthYear); }, init(firstName, birthYear) { this.firstName = firstName; this.birthYear = birthYear; }};// const steven = Object.create(PersonProto);const StudentProto = Object.create(PersonProto);StudentProto.init = function (firstName, birthYear, course) { PersonProto.init.call(this, firstName, birthYear); this.course = course;}StudentProto.introduce = function () { console.log(`My name is ${this.firstName} and I study ${this.course}`);}const jay = Object.create(StudentProto);jay.init('Jay', 2010, 'Computer Science');jay.calcAge();jay.introduce(); class example12345678910111213141516171819202122232425262728293031323334353637383940414243444546class Account { constructor(owner, currency, pin) { this.owner = owner; this.currency = currency; this.pin = pin; this.movements = []; this.locale = navigator.language; console.log(`Thanks for opening an account, ${this.owner}`); } deposit(val) { this.movements.push(val); } withdraw(val) { this.movements.push(-val); } approveLoan(val) { return true; } requestLoan(val) { if (this.approveLoan()) { this.deposit(val); console.log('Loan approved'); } }}const acc1 = new Account('Jonas', 'EUR', 1111);console.log(acc1);// acc1.movements.push(250);// acc1.movements.push(-140);// acc1.approveLoan(1000)acc1.deposit(250);acc1.withdraw(140);acc1.requestLoan(1000);console.log(acc1); Encapsulation: protected properties and methods1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253class Account { constructor(owner, currency, pin) { this.owner = owner; this.currency = currency; this._pin = pin; this._movements = []; this.locale = navigator.language; console.log(`Thanks for opening an account, ${this.owner}`); } // public interface getMovements() { return this._movements; } deposit(val) { this._movements.push(val); } withdraw(val) { this._movements.push(-val); } _approveLoan(val) { return true; } requestLoan(val) { if (this._approveLoan(val)) { this.deposit(val); console.log('Loan approved'); } }}const acc1 = new Account('Jonas', 'EUR', 1111);console.log(acc1);// acc1._movements.push(250);// acc1._movements.push(-140);// acc1._approveLoan(1000)console.log(acc1.getMovements());acc1.deposit(250);acc1.withdraw(140);acc1.requestLoan(1000);console.log(acc1); Encapsulation: private class fields and methods12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182////////// not implement yet!!!!!!// public fields// private fields// public Methods// private Methodsclass Account { /// public fields /// add to all instance of class, !!!!not add to the prototype locale = navigator.language; //// private fields /// add to all instance of class, !!!!not add to the prototype #movements = []; #pin; constructor(owner, currency, pin) { this.owner = owner; this.currency = currency; /// protected property this.#pin = pin; // this._movements = []; // this.locale = navigator.language; console.log(`Thanks for opening an account, ${this.owner}`); } ///// public Methods // public interface getMovements() { return this.#movements; } deposit(val) { this.#movements.push(val); } withdraw(val) { this.#movements.push(-val); } requestLoan(val) { if (this.#approveLoan(val)) { this.deposit(val); console.log('Loan approved'); } } /// Private methods #approveLoan(val) { return true; }}const acc1 = new Account('Jonas', 'EUR', 1111);console.log(acc1);// acc1._movements.push(250);// acc1._movements.push(-140);// acc1._approveLoan(1000)// Uncaught SyntaxError: Private field '#movements' must be declared in an enclosing class// acc1.#movements.push(250);// acc1.#movements.push(-140);// Uncaught SyntaxError: Private field '#approveLoan' must be declared in an enclosing class// acc1.#approveLoan(1000)console.log(acc1.getMovements());acc1.deposit(250);acc1.withdraw(140);acc1.requestLoan(1000);console.log(acc1); chain methods12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273class Account { /// public fields /// add to all instance of class, !!!!not add to the prototype locale = navigator.language; //// private fields /// add to all instance of class, !!!!not add to the prototype #movements = []; #pin; constructor(owner, currency, pin) { this.owner = owner; this.currency = currency; /// protected property this.#pin = pin; // this._movements = []; // this.locale = navigator.language; console.log(`Thanks for opening an account, ${this.owner}`); } ///// public Methods // public interface getMovements() { return this.#movements; } deposit(val) { this.#movements.push(val); return this; } withdraw(val) { this.#movements.push(-val); return this } requestLoan(val) { if (this.#approveLoan(val)) { this.deposit(val); console.log('Loan approved'); return this; } } /// Private methods #approveLoan(val) { return true; }}const acc1 = new Account('Jonas', 'EUR', 1111);console.log(acc1);console.log(acc1.getMovements());acc1.deposit(250);acc1.withdraw(140);acc1.requestLoan(1000);console.log(acc1);/////////////////////////////////chainingacc1.deposit(300).deposit(500).withdraw(35).requestLoan(3554).deposit(211);console.log(acc1.getMovements()); OOP summary12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970class Person { constructor(fullName, birthYear) { this.fullName = fullName; this.birthYear = birthYear; }}// Child class and parent class// inheritance between classes, automatically sets prototypeclass Student extends Person { // public field(similar to property, available on created object) university = 'University of London'; // private fields(not accessible outside of class) #studyHours = 0; #course; // static public field (available only on class) static numSubjects = 10; // constructor method, called by new operator. mandatory(强制) in regular class, might be omitted in a child class constructor(fullName, birthYear, startYear, course) { // call to parent(super) class (necessary with extend).Need to happen before accessing this super(fullName, birthYear); // instance property(available on created object) this.startYear = startYear; // redefining private field this.#course = course; } // public method introduce() { console.log(`I study ${this.#course} at ${this.university}`); } study(h) { // referencing private field and method this.#makecoffe(); this.#studyHours += h; } // private method(might not yet work in your browser. &quot;fake&quot; alternative: _ instead of #) #makecoffe() { return 'Here is a coffee for you ' } // getter method get testScore() { return this._testScore; } // setter method(use _ to set property with same name as method, and also add getter) set testScore(score) { this._testScore = score &lt;= 20 ? score : 0; } // static method(available only on class. can not access instance properties nor methods, only static ones) static printCurriculum() { console.log(`There are ${this.numSubjects} subjects`); }}// creating new object with new operatorconst studentJonas = new Student('Jonas', 2020, 2037, 'Medicine');studentJonas.introduce(); // I study Medicine at University of LondonstudentJonas.study(2);studentJonas.testScore = 36;console.log(studentJonas.testScore); // 0console.log(Student.numSubjects) // 10Student.printCurriculum(); Mapty app OOP projectproject planning user stories description of the application’s functionality from the user’s perspective common format: As a [type of user(who)], I want [an action(what)] so that [a benefit(why)] example as a user, i want to log my running workouts with location, distance, time, pace and steps/minute, so i can keep a log of all my running as a user, i want to log my cycling workouts with location, distance, time, speed and elevtion gain, so i can keep a log of all my cycling as a user i want to see all my workouts at a glance, so i can easily track my progress over time as a user, i want to also see my workouts on a map, so i can easily check where i work out the most as a user, i want to see all my workouts when i leave the app and come back later, so that i can keep using the app over time features user 1: 1.map where user clicks to add new workout(best way to get location coordinates) 2.geolocation to display map at current location(more user friendly) 3.form to input distance, time, pace, steps/minute user 2: 4.form to input distance, time, speed, elevation gain user 3: 5.display all workouts in a list user 4: 6.display all workouts on the map user 5: 7.store workout data in the browser using local storage API 8.on page load, read the saved data from local storage and display flowchart architecture development the geolacation api123456789101112131415// Geolocation.getCurrentPosition(successCallback: PositionCallback, errorCallback?: PositionErrorCallback | null | undefined, options?: PositionOptions | undefined): voidif (navigator.geolocation) { navigator.geolocation.getCurrentPosition( function (position) { // console.log(position); const { latitude, longitude } = position.coords; console.log(latitude, longitude); console.log(`https://www.google.com/maps/@${latitude},${longitude}`); }, function () { alert('Could not get your position') });} leaflet library: displaying a map123456789101112131415const coords = [latitude, longitude];// L.map(map-container-html-element-id)setView([latitude, longitude], zoomratio)const map = L.map('map').setView(coords, 13);// L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {// attribution: '&amp;copy; &lt;a href=&quot;https://www.openstreetmap.org/copyright&quot;&gt;OpenStreetMap&lt;/a&gt; contributors'// }).addTo(map);L.tileLayer('https://tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', { attribution: '&amp;copy; &lt;a href=&quot;https://www.openstreetmap.org/copyright&quot;&gt;OpenStreetMap&lt;/a&gt; contributors'}).addTo(map);L.marker(coords).addTo(map) .bindPopup('A pretty CSS popup.&lt;br&gt; Easily customizable.') .openPopup(); leaflet library: displaying a map marker123456.running-popup .leaflet-popup-content-wrapper { border-left: 5px solid var(--color-brand--2);}.cycling-popup .leaflet-popup-content-wrapper { border-left: 5px solid var(--color-brand--1);} 1234567891011121314151617181920map.on('click', function (mapEvent) { console.log(mapEvent); const { latlng: { lat, lng } } = mapEvent; console.log(lat, lng); L.marker([lat, lng]).addTo(map) .bindPopup(L.popup({ maxWidth: 250, minWidth: 100, // the popup closing when another popup is opened. autoClose: false, // the popup closing when user clicks on the map closeOnClick: false, // A custom CSS class name to assign to the popup. className: 'running-popup', })) // Sets the content of the popup bound to this layer. .setPopupContent('Workout') .openPopup();}); render workout input form1234567891011121314151617181920212223242526272829303132333435&lt;form class=&quot;form hidden&quot;&gt; &lt;div class=&quot;form__row&quot;&gt; &lt;label class=&quot;form__label&quot;&gt;Type&lt;/label&gt; &lt;select class=&quot;form__input form__input--type&quot;&gt; &lt;option value=&quot;running&quot;&gt;Running&lt;/option&gt; &lt;option value=&quot;cycling&quot;&gt;Cycling&lt;/option&gt; &lt;/select&gt; &lt;/div&gt; &lt;div class=&quot;form__row&quot;&gt; &lt;label class=&quot;form__label&quot;&gt;Distance&lt;/label&gt; &lt;input class=&quot;form__input form__input--distance&quot; placeholder=&quot;km&quot; /&gt; &lt;/div&gt; &lt;div class=&quot;form__row&quot;&gt; &lt;label class=&quot;form__label&quot;&gt;Duration&lt;/label&gt; &lt;input class=&quot;form__input form__input--duration&quot; placeholder=&quot;min&quot; /&gt; &lt;/div&gt; &lt;div class=&quot;form__row&quot;&gt; &lt;label class=&quot;form__label&quot;&gt;Cadence&lt;/label&gt; &lt;input class=&quot;form__input form__input--cadence&quot; placeholder=&quot;step/min&quot; /&gt; &lt;/div&gt; &lt;div class=&quot;form__row form__row--hidden&quot;&gt; &lt;label class=&quot;form__label&quot;&gt;Elev Gain&lt;/label&gt; &lt;input class=&quot;form__input form__input--elevation&quot; placeholder=&quot;meters&quot; /&gt; &lt;/div&gt; &lt;button class=&quot;form__btn&quot;&gt;OK&lt;/button&gt;&lt;/form&gt; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677const form = document.querySelector('.form');const inputType = document.querySelector('.form__input--type');const inputCadence = document.querySelector('.form__input--cadence');const inputElevation = document.querySelector('.form__input--elevation');let map, mapEvent;if (navigator.geolocation) { navigator.geolocation.getCurrentPosition( function (position) { // console.log(position); const { latitude, longitude } = position.coords; console.log(latitude, longitude); console.log(`https://www.google.com/maps/@${latitude},${longitude}`); const coords = [latitude, longitude]; // L.map(map-container-html-element-id)setView([latitude, longitude], zoomratio) map = L.map('map').setView(coords, 13); // L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', { // attribution: '&amp;copy; &lt;a href=&quot;https://www.openstreetmap.org/copyright&quot;&gt;OpenStreetMap&lt;/a&gt; contributors' // }).addTo(map); L.tileLayer('https://tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', { attribution: '&amp;copy; &lt;a href=&quot;https://www.openstreetmap.org/copyright&quot;&gt;OpenStreetMap&lt;/a&gt; contributors' }).addTo(map); // L.marker(coords).addTo(map) // .bindPopup('A pretty CSS popup.&lt;br&gt; Easily customizable.') // .openPopup(); /// handling clicks on map map.on('click', function (mapE) { mapEvent = mapE; form.classList.remove('hidden'); inputDistance.focus(); }); }, function () { alert('Could not get your position') });}form.addEventListener('submit', function (e) { e.preventDefault(); /// clear input field inputDistance.value = inputDuration.value = inputCadence.value = inputElevation.value = ''; /// display marker console.log(mapEvent); const { latlng: { lat, lng } } = mapEvent; console.log(lat, lng); L.marker([lat, lng]).addTo(map) .bindPopup(L.popup({ maxWidth: 250, minWidth: 100, // the popup closing when another popup is opened. autoClose: false, // the popup closing when user clicks on the map closeOnClick: false, // A custom CSS class name to assign to the popup. className: 'running-popup', })) // Sets the content of the popup bound to this layer. .setPopupContent('Workout') .openPopup();});inputType.addEventListener('change', function () { inputElevation.closest('.form__row').classList.toggle('form__row--hidden'); inputCadence.closest('.form__row').classList.toggle('form__row--hidden');}) project architecture refactoring the project code for architecture123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384// prettier-ignoreconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];const form = document.querySelector('.form');const containerWorkouts = document.querySelector('.workouts');const inputType = document.querySelector('.form__input--type');const inputDistance = document.querySelector('.form__input--distance');const inputDuration = document.querySelector('.form__input--duration');const inputCadence = document.querySelector('.form__input--cadence');const inputElevation = document.querySelector('.form__input--elevation');class App { #map; #mapEvent; constructor() { this._getPostion(); form.addEventListener('submit', this._newWorkout.bind(this)); inputType.addEventListener('change', this._toggleElevationField); } _getPostion() { if (navigator.geolocation) { navigator.geolocation.getCurrentPosition( this._loadMap.bind(this), function () { alert('Could not get your position') }); } } _loadMap(position) { const { latitude, longitude } = position.coords; const coords = [latitude, longitude]; this.#map = L.map('map').setView(coords, 13); L.tileLayer('https://tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', { attribution: '&amp;copy; &lt;a href=&quot;https://www.openstreetmap.org/copyright&quot;&gt;OpenStreetMap&lt;/a&gt; contributors' }).addTo(this.#map); /// handling clicks on map this.#map.on('click', this._showForm.bind(this)); } _showForm(mapE) { this.#mapEvent = mapE; form.classList.remove('hidden'); inputDistance.focus(); } _newWorkout(e) { e.preventDefault(); /// clear input field inputDistance.value = inputDuration.value = inputCadence.value = inputElevation.value = ''; /// display marker console.log(this.#mapEvent); const { latlng: { lat, lng } } = this.#mapEvent; console.log(lat, lng); L.marker([lat, lng]).addTo(this.#map) .bindPopup(L.popup({ maxWidth: 250, minWidth: 100, autoClose: false, closeOnClick: false, className: 'running-popup', })) .setPopupContent('Workout') .openPopup(); } _toggleElevationField() { inputElevation.closest('.form__row').classList.toggle('form__row--hidden'); inputCadence.closest('.form__row').classList.toggle('form__row--hidden'); }}const app = new App(); creating classes to managing workout data123456789101112131415161718192021222324252627282930313233343536373839404142434445class Workout { date = new Date(); id = (Date.now() + '').slice(-10); constructor(coords, distance, duration) { this.coords = coords; // [lati, long] this.distance = distance; // in km this.duration = duration; // in min }}class Running extends Workout { constructor(coords, distance, duration, cadence) { super(coords, distance, duration); this.cadence = cadence; this.calcPace(); } calcPace() { // min / km this.pace = this.duration / this.distance; return this.pace; }}class Cycling extends Workout { constructor(coords, distance, duration, elevationGain) { super(coords, distance, duration); this.elevationGain = elevationGain; this.calcSpeed(); } calcSpeed() { // min / km this.speed = this.distance / (this.duration / 60); return this.speed; }}const run1 = new Running([39, -12], 5.2, 25, 178);const cycling1 = new Cycling([39, -12], 27, 95, 532);console.log(run1, cycling1); create a new workout123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081class Running extends Workout { type = 'running';}class Cycling extends Workout { type = 'cycling';}class App { #workouts = []; _newWorkout(e) { const validInputs = (...inputs) =&gt; inputs.every(inp =&gt; Number.isFinite(inp)); const allPositive = (...inputs) =&gt; inputs.every(inp =&gt; inp &gt; 0); e.preventDefault(); //// get data from form const type = inputType.value; // const distance = Number(inputDistance.value); // const duration = Number(inputDuration.value); const distance = +inputDistance.value; const duration = +inputDuration.value; const { latlng: { lat, lng } } = this.#mapEvent; const coords = [lat, lng]; let workout; //// if workout is runnign, create running object if (type === 'running') { const cadence = +inputCadence.value; //// check the data is valid // if (!Number.isFinite(distance) || // !Number.isFinite(duration) || // !Number.isFinite(cadence)) // return alert('input should be a number'); if (!validInputs(distance, duration, cadence) || !allPositive(distance, duration, cadence)) return alert('input should be a positive number'); workout = new Running(coords, distance, duration, cadence); } //// if workout is runnign, create running object if (type === 'cycling') { const elevation = +inputElevation.value; if (!validInputs(distance, duration, elevation) || !allPositive(distance, duration)) return alert('input should be a positive number'); workout = new Cycling(coords, distance, duration, elevation); } //// ad new object to workout array this.#workouts.push(workout); console.log(this.#workouts); //// render workout on map as marker /// display marker this._renderWorkoutMarker(workout); //// render workout on list //// hide form + clear input fields /// clear input field inputDistance.value = inputDuration.value = inputCadence.value = inputElevation.value = ''; } _renderWorkoutMarker(workout) { L.marker(workout.coords).addTo(this.#map) .bindPopup(L.popup({ maxWidth: 250, minWidth: 100, autoClose: false, closeOnClick: false, className: `${workout.type}-popup`, })) .setPopupContent('workout') .openPopup(); } } render workouts1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&lt;li class=&quot;workout workout--running&quot; data-id=&quot;1234567890&quot;&gt; &lt;h2 class=&quot;workout__title&quot;&gt;Running on April 14&lt;/h2&gt; &lt;div class=&quot;workout__details&quot;&gt; &lt;span class=&quot;workout__icon&quot;&gt;🏃‍♂️&lt;/span&gt; &lt;span class=&quot;workout__value&quot;&gt;5.2&lt;/span&gt; &lt;span class=&quot;workout__unit&quot;&gt;km&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;workout__details&quot;&gt; &lt;span class=&quot;workout__icon&quot;&gt;⏱&lt;/span&gt; &lt;span class=&quot;workout__value&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;workout__unit&quot;&gt;min&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;workout__details&quot;&gt; &lt;span class=&quot;workout__icon&quot;&gt;⚡️&lt;/span&gt; &lt;span class=&quot;workout__value&quot;&gt;4.6&lt;/span&gt; &lt;span class=&quot;workout__unit&quot;&gt;min/km&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;workout__details&quot;&gt; &lt;span class=&quot;workout__icon&quot;&gt;🦶🏼&lt;/span&gt; &lt;span class=&quot;workout__value&quot;&gt;178&lt;/span&gt; &lt;span class=&quot;workout__unit&quot;&gt;spm&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;&lt;li class=&quot;workout workout--cycling&quot; data-id=&quot;1234567891&quot;&gt; &lt;h2 class=&quot;workout__title&quot;&gt;Cycling on April 5&lt;/h2&gt; &lt;div class=&quot;workout__details&quot;&gt; &lt;span class=&quot;workout__icon&quot;&gt;🚴‍♀️&lt;/span&gt; &lt;span class=&quot;workout__value&quot;&gt;27&lt;/span&gt; &lt;span class=&quot;workout__unit&quot;&gt;km&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;workout__details&quot;&gt; &lt;span class=&quot;workout__icon&quot;&gt;⏱&lt;/span&gt; &lt;span class=&quot;workout__value&quot;&gt;95&lt;/span&gt; &lt;span class=&quot;workout__unit&quot;&gt;min&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;workout__details&quot;&gt; &lt;span class=&quot;workout__icon&quot;&gt;⚡️&lt;/span&gt; &lt;span class=&quot;workout__value&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;workout__unit&quot;&gt;km/h&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;workout__details&quot;&gt; &lt;span class=&quot;workout__icon&quot;&gt;⛰&lt;/span&gt; &lt;span class=&quot;workout__value&quot;&gt;223&lt;/span&gt; &lt;span class=&quot;workout__unit&quot;&gt;m&lt;/span&gt; &lt;/div&gt;&lt;/li&gt; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152_renderWorkout(workout) { let html = ` &lt;li class=&quot;workout workout--${workout.type}&quot; data-id=&quot;${workout.id}&quot;&gt; &lt;h2 class=&quot;workout__title&quot;&gt;${workout.description}&lt;/h2&gt; &lt;div class=&quot;workout__details&quot;&gt; &lt;span class=&quot;workout__icon&quot;&gt;${workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'}&lt;/span&gt; &lt;span class=&quot;workout__value&quot;&gt;${workout.distance}&lt;/span&gt; &lt;span class=&quot;workout__unit&quot;&gt;km&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;workout__details&quot;&gt; &lt;span class=&quot;workout__icon&quot;&gt;⏱&lt;/span&gt; &lt;span class=&quot;workout__value&quot;&gt;${workout.duration}&lt;/span&gt; &lt;span class=&quot;workout__unit&quot;&gt;min&lt;/span&gt; &lt;/div&gt; `; if (workout.type === 'running') html += ` &lt;div class=&quot;workout__details&quot;&gt; &lt;span class=&quot;workout__icon&quot;&gt;⚡️&lt;/span&gt; &lt;span class=&quot;workout__value&quot;&gt;${workout.pace.toFixed(1)}&lt;/span&gt; &lt;span class=&quot;workout__unit&quot;&gt;min/km&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;workout__details&quot;&gt; &lt;span class=&quot;workout__icon&quot;&gt;🦶🏼&lt;/span&gt; &lt;span class=&quot;workout__value&quot;&gt;${workout.cadence}&lt;/span&gt; &lt;span class=&quot;workout__unit&quot;&gt;spm&lt;/span&gt; &lt;/div&gt; &lt;/li&gt; `; if (workout.type === 'cycling') html += ` &lt;div class=&quot;workout__details&quot;&gt; &lt;span class=&quot;workout__icon&quot;&gt;⚡️&lt;/span&gt; &lt;span class=&quot;workout__value&quot;&gt;${workout.speed.toFixed(1)}&lt;/span&gt; &lt;span class=&quot;workout__unit&quot;&gt;km/h&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;workout__details&quot;&gt; &lt;span class=&quot;workout__icon&quot;&gt;⛰&lt;/span&gt; &lt;span class=&quot;workout__value&quot;&gt;${workout.elevationGain}&lt;/span&gt; &lt;span class=&quot;workout__unit&quot;&gt;m&lt;/span&gt; &lt;/div&gt; &lt;/li&gt; `; form.insertAdjacentHTML('afterend', html); }_hideForm() { /// clear input field inputDistance.value = inputDuration.value = inputCadence.value = inputElevation.value = ''; form.style.display = 'none'; form.classList.add('hidden'); setTimeout(() =&gt; form.style.display = 'grid', 1000); } move to marker12345678910111213141516_moveToPopup(e) { const workoutEl = e.target.closest('.workout'); console.log(workoutEl); if (!workoutEl) return; const workout = this.#workouts.find(work =&gt; work.id === workoutEl.dataset.id); console.log(workout); this.#map.setView(workout.coords, this.#zoomLevel, { animate: true, pan: { duration: 1, }, }); } local storageJSON converting back to object dont have prototype chain 12345678910111213141516171819202122232425262728293031323334353637383940414243_loadMap(position) { /// load local storage workout on the map this.#workouts.forEach(work =&gt; { this._renderWorkoutMarker(work); }); } _setLocalStorage() { // localStorage.setItem() // (method) Storage.setItem(key: string, value: string): void // Sets the value of the pair identified by key to value, creating a new key/value pair if none existed for key previously. // JSON.stringify() // Converts a JavaScript value to a JavaScript Object Notation (JSON) string. localStorage.setItem('workouts', JSON.stringify(this.#workouts)); } _getLocalStorage() { /// Converts a JavaScript Object Notation (JSON) string into an object. const data = JSON.parse(localStorage.getItem('workouts')); console.log(data); if (!data) return; this.#workouts = data; // render workouts this.#workouts.forEach(work =&gt; { this._renderWorkout(work); /// error: map havent load yet // this._renderWorkoutMarker(work); }); } reset() { localStorage.removeItem('workouts'); // Reloads the current page. location.reload(); } end 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303'use strict';class Workout { date = new Date(); id = (Date.now() + '').slice(-10); clicks = 0; constructor(coords, distance, duration) { this.coords = coords; // [lati, long] this.distance = distance; // in km this.duration = duration; // in min } _setDescription() { const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']; this.description = `${this.type[0].toUpperCase()}${this.type.slice(1)} on ${months[this.date.getMonth()]} ${this.date.getDate()}`; } click() { this.clicks++; }}class Running extends Workout { type = 'running'; constructor(coords, distance, duration, cadence) { super(coords, distance, duration); this.cadence = cadence; this.calcPace(); this._setDescription(); } calcPace() { // min / km this.pace = this.duration / this.distance; return this.pace; }}class Cycling extends Workout { type = 'cycling'; constructor(coords, distance, duration, elevationGain) { super(coords, distance, duration); this.elevationGain = elevationGain; this.calcSpeed(); this._setDescription(); } calcSpeed() { // min / km this.speed = this.distance / (this.duration / 60); return this.speed; }}/////////////////////////const form = document.querySelector('.form');const containerWorkouts = document.querySelector('.workouts');const inputType = document.querySelector('.form__input--type');const inputDistance = document.querySelector('.form__input--distance');const inputDuration = document.querySelector('.form__input--duration');const inputCadence = document.querySelector('.form__input--cadence');const inputElevation = document.querySelector('.form__input--elevation');class App { #map; #mapEvent; #workouts = []; #zoomLevel = 13; constructor() { this._getPostion(); // get data from local storage this._getLocalStorage(); // event handlers form.addEventListener('submit', this._newWorkout.bind(this)); inputType.addEventListener('change', this._toggleElevationField); containerWorkouts.addEventListener('click', this._moveToPopup.bind(this)); } _getPostion() { if (navigator.geolocation) { navigator.geolocation.getCurrentPosition( this._loadMap.bind(this), function () { alert('Could not get your position') }); } } _loadMap(position) { const { latitude, longitude } = position.coords; const coords = [latitude, longitude]; this.#map = L.map('map').setView(coords, this.#zoomLevel); L.tileLayer('https://tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', { attribution: '&amp;copy; &lt;a href=&quot;https://www.openstreetmap.org/copyright&quot;&gt;OpenStreetMap&lt;/a&gt; contributors' }).addTo(this.#map); /// handling clicks on map this.#map.on('click', this._showForm.bind(this)); /// load local storage workout on the map this.#workouts.forEach(work =&gt; { this._renderWorkoutMarker(work); }); } _showForm(mapE) { this.#mapEvent = mapE; form.classList.remove('hidden'); inputDistance.focus(); } _hideForm() { /// clear input field inputDistance.value = inputDuration.value = inputCadence.value = inputElevation.value = ''; form.style.display = 'none'; form.classList.add('hidden'); setTimeout(() =&gt; form.style.display = 'grid', 1000); } _newWorkout(e) { const validInputs = (...inputs) =&gt; inputs.every(inp =&gt; Number.isFinite(inp)); const allPositive = (...inputs) =&gt; inputs.every(inp =&gt; inp &gt; 0); e.preventDefault(); //// get data from form const type = inputType.value; const distance = +inputDistance.value; const duration = +inputDuration.value; const { latlng: { lat, lng } } = this.#mapEvent; const coords = [lat, lng]; let workout; //// if workout is runnign, create running object if (type === 'running') { const cadence = +inputCadence.value; if (!validInputs(distance, duration, cadence) || !allPositive(distance, duration, cadence)) return alert('input should be a positive number'); workout = new Running(coords, distance, duration, cadence); } //// if workout is runnign, create running object if (type === 'cycling') { const elevation = +inputElevation.value; if (!validInputs(distance, duration, elevation) || !allPositive(distance, duration)) return alert('input should be a positive number'); workout = new Cycling(coords, distance, duration, elevation); } //// ad new object to workout array this.#workouts.push(workout); console.log(this.#workouts); //// render workout on map as marker /// display marker this._renderWorkoutMarker(workout); //// render workout on list this._renderWorkout(workout); //// hide form + clear input fields this._hideForm(); /// set local storage to all workouts this._setLocalStorage() } _toggleElevationField() { inputElevation.closest('.form__row').classList.toggle('form__row--hidden'); inputCadence.closest('.form__row').classList.toggle('form__row--hidden'); } _renderWorkoutMarker(workout) { L.marker(workout.coords).addTo(this.#map) .bindPopup(L.popup({ maxWidth: 250, minWidth: 100, autoClose: false, closeOnClick: false, className: `${workout.type}-popup`, })) .setPopupContent(`${workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'} ${workout.description}`) .openPopup(); } _renderWorkout(workout) { let html = ` &lt;li class=&quot;workout workout--${workout.type}&quot; data-id=&quot;${workout.id}&quot;&gt; &lt;h2 class=&quot;workout__title&quot;&gt;${workout.description}&lt;/h2&gt; &lt;div class=&quot;workout__details&quot;&gt; &lt;span class=&quot;workout__icon&quot;&gt;${workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'}&lt;/span&gt; &lt;span class=&quot;workout__value&quot;&gt;${workout.distance}&lt;/span&gt; &lt;span class=&quot;workout__unit&quot;&gt;km&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;workout__details&quot;&gt; &lt;span class=&quot;workout__icon&quot;&gt;⏱&lt;/span&gt; &lt;span class=&quot;workout__value&quot;&gt;${workout.duration}&lt;/span&gt; &lt;span class=&quot;workout__unit&quot;&gt;min&lt;/span&gt; &lt;/div&gt; `; if (workout.type === 'running') html += ` &lt;div class=&quot;workout__details&quot;&gt; &lt;span class=&quot;workout__icon&quot;&gt;⚡️&lt;/span&gt; &lt;span class=&quot;workout__value&quot;&gt;${workout.pace.toFixed(1)}&lt;/span&gt; &lt;span class=&quot;workout__unit&quot;&gt;min/km&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;workout__details&quot;&gt; &lt;span class=&quot;workout__icon&quot;&gt;🦶🏼&lt;/span&gt; &lt;span class=&quot;workout__value&quot;&gt;${workout.cadence}&lt;/span&gt; &lt;span class=&quot;workout__unit&quot;&gt;spm&lt;/span&gt; &lt;/div&gt; &lt;/li&gt; `; if (workout.type === 'cycling') html += ` &lt;div class=&quot;workout__details&quot;&gt; &lt;span class=&quot;workout__icon&quot;&gt;⚡️&lt;/span&gt; &lt;span class=&quot;workout__value&quot;&gt;${workout.speed.toFixed(1)}&lt;/span&gt; &lt;span class=&quot;workout__unit&quot;&gt;km/h&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;workout__details&quot;&gt; &lt;span class=&quot;workout__icon&quot;&gt;⛰&lt;/span&gt; &lt;span class=&quot;workout__value&quot;&gt;${workout.elevationGain}&lt;/span&gt; &lt;span class=&quot;workout__unit&quot;&gt;m&lt;/span&gt; &lt;/div&gt; &lt;/li&gt; `; form.insertAdjacentHTML('afterend', html); } _moveToPopup(e) { const workoutEl = e.target.closest('.workout'); // console.log(workoutEl); if (!workoutEl) return; const workout = this.#workouts.find(work =&gt; work.id === workoutEl.dataset.id); // console.log(workout); this.#map.setView(workout.coords, this.#zoomLevel, { animate: true, pan: { duration: 1, }, }); /// using public interface /// JSON converting back to object dont have prototype chain console.log(workout); // workout.click(); } _setLocalStorage() { localStorage.setItem('workouts', JSON.stringify(this.#workouts)); } _getLocalStorage() { const data = JSON.parse(localStorage.getItem('workouts')); console.log(data); if (!data) return; this.#workouts = data; // render workouts this.#workouts.forEach(work =&gt; { this._renderWorkout(work); }); } reset() { localStorage.removeItem('workouts'); // Reloads the current page. location.reload(); }}const app = new App(); asynchronousajaxsynchronous executed line by line each line of code waits for previous line to finish long-running operation block code execution asynchronous Asynchronous code is executed after a task that runs in the ‘background’ finishes; Asynchronous code is non-blockig Execution doesnt wait for an asynchronous task to finish its work callback functions alone do nto make code asynchornous(e.g. [1, 2, 3].map(v =&gt; v * 2;)) EventListener alone do nto make code asynchornous 123456const img = document.querySelector('.dog');img.src = 'dog.jpg'; // asynchronousimg.addEventListener('load', function(){ img.classList.add('fadeIn');});p.sytle.width = '300px'; Ajax:Asychronous Javascript and xml:allow us to communicate with remote web servers in an asynchronous way. with AJAx calls, we can request data from web servers dynamically. APIApplication Programming InterfacePiece of software that can be used by another piece of software, in order to allow applications to talk to each other; Online API / Web APIApplication running on a server, that receives requests for data, and send data back as response;We can build our own web APIs(requires back-end development) cors:Cross-origin resource sharing (CORS) is a browser security feature that allows access to restricted resources on a web page from another domain. xmlhttprequest12345678910&lt;article class=&quot;country&quot;&gt; &lt;img class=&quot;country__img&quot; src=&quot;&quot; /&gt; &lt;div class=&quot;country__data&quot;&gt; &lt;h3 class=&quot;country__name&quot;&gt;COUNTRY&lt;/h3&gt; &lt;h4 class=&quot;country__region&quot;&gt;REGION&lt;/h4&gt; &lt;p class=&quot;country__row&quot;&gt;&lt;span&gt;👫&lt;/span&gt;POP people&lt;/p&gt; &lt;p class=&quot;country__row&quot;&gt;&lt;span&gt;🗣️&lt;/span&gt;LANG&lt;/p&gt; &lt;p class=&quot;country__row&quot;&gt;&lt;span&gt;💰&lt;/span&gt;CUR&lt;/p&gt; &lt;/div&gt;&lt;/article&gt; 1234567891011121314151617181920212223242526272829303132333435363738394041const btn = document.querySelector('.btn-country');const countriesContainer = document.querySelector('.countries');///////////////////////////////////////const getCountryData = function (country) { // Use XMLHttpRequest (XHR) objects to interact with servers. You can retrieve data from a URL without having to do a full page refresh. This enables a Web page to update just part of a page without disrupting what the user is doing. const request = new XMLHttpRequest(); // open(method: string, url: string | URL): void // Sets the request method, request URL, and synchronous flag. request.open('GET', `https://restcountries.com/v3.1/name/${country}`); request.send(); // asychronous request.addEventListener('load', function () { // console.log(this); /// request object // console.log(this.responseText); // json const [data] = JSON.parse(this.responseText); // console.log(data); const html = ` &lt;article class=&quot;country&quot;&gt; &lt;img class=&quot;country__img&quot; src=&quot;${data.flags.png}&quot; /&gt; &lt;div class=&quot;country__data&quot;&gt; &lt;h3 class=&quot;country__name&quot;&gt;${data.name.common}&lt;/h3&gt; &lt;h4 class=&quot;country__region&quot;&gt;${data.region}&lt;/h4&gt; &lt;p class=&quot;country__row&quot;&gt;&lt;span&gt;👫&lt;/span&gt;${(+data.population / 1000000).toFixed(1)} people&lt;/p&gt; &lt;p class=&quot;country__row&quot;&gt;&lt;span&gt;🗣️&lt;/span&gt;${Object.values(data.languages)[0]}&lt;/p&gt; &lt;p class=&quot;country__row&quot;&gt;&lt;span&gt;💰&lt;/span&gt;${data.timezones[0]}&lt;/p&gt; &lt;/div&gt; &lt;/article&gt; ` countriesContainer.insertAdjacentHTML('beforeend', html); countriesContainer.style.opacity = 1; });}getCountryData('portugal');getCountryData('usa');getCountryData('china'); web: requests and responseTCP/IP socket connectionTCP: depackIP: route callback hell123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657const renderCountry = function (data, className = '') { const html = ` &lt;article class=&quot;country ${className}&quot;&gt; &lt;img class=&quot;country__img&quot; src=&quot;${data.flags.png}&quot; /&gt; &lt;div class=&quot;country__data&quot;&gt; &lt;h3 class=&quot;country__name&quot;&gt;${data.name.common}&lt;/h3&gt; &lt;h4 class=&quot;country__region&quot;&gt;${data.region}&lt;/h4&gt; &lt;p class=&quot;country__row&quot;&gt;&lt;span&gt;👫&lt;/span&gt;${(+data.population / 1000000).toFixed(1)} people&lt;/p&gt; &lt;p class=&quot;country__row&quot;&gt;&lt;span&gt;🗣️&lt;/span&gt;${Object.values(data.languages)[0]}&lt;/p&gt; &lt;p class=&quot;country__row&quot;&gt;&lt;span&gt;💰&lt;/span&gt;${data.timezones[0]}&lt;/p&gt; &lt;/div&gt; &lt;/article&gt; ` countriesContainer.insertAdjacentHTML('beforeend', html); countriesContainer.style.opacity = 1;}const getCountryAndNeighborData = function (country) { // Ajax call country 1 const request = new XMLHttpRequest(); request.open('GET', `https://restcountries.com/v3.1/name/${country}`); request.send(); // asychronous request.addEventListener('load', function () { const [data] = JSON.parse(this.responseText); console.log(data); /// render country 1 renderCountry(data); /// get neighbour country const [neighbour] = data.borders; console.log(neighbour); if (!neighbour) return; // Ajax call country 2 const request2 = new XMLHttpRequest(); request2.open('GET', ` https://restcountries.com/v3.1/alpha/${neighbour}`); request2.send(); // asychronous request2.addEventListener('load', function () { const [data2] = JSON.parse(this.responseText); console.log(data2); /// render country 2 renderCountry(data2, 'neighbour'); }) });}getCountryAndNeighborData('portugal');getCountryAndNeighborData('usa');// getCountryAndNeighborData('china'); promises and the fetch APIless formal promise:an object that is used as a placeholder for the future result of an asynchronous operationa container for an asynchronous delivered valuea container for a future value we no longer need to rely on events and callbacks passed into asynchronous functions to handle asynchronous results; instead of nesting callbakcs, we can chain promises for a sequence of asynchronous operation: escaping callback hell; lifecycle:pending –&gt; settled (fulfilled, rejected) build –&gt; consume 123456789101112131415161718192021222324// function fetch(input: RequestInfo | URL, init?: RequestInit | undefined): Promise&lt;Response&gt;// const promise = fetch('https://restcountries.com/v3.1/name/portugal');// console.log(promise);const getCountryData = function (country) { // (method) Promise&lt;Response&gt;.then&lt;any, never&gt;(onfulfilled?: ((value: Response) =&gt; any) | null | undefined, onrejected?: ((reason: any) =&gt; PromiseLike&lt;never&gt;) | null | undefined): Promise&lt;any&gt; // Attaches callbacks for the resolution and/or rejection of the Promise fetch(`https://restcountries.com/v3.1/name/${country}`).then(function (response) { console.log(response); // Response object //将输入作为 JSON 解析，以生成一个 JavaScript promise 对象。 return response.json() }).then(function (data) { console.log(data); renderCountry(data[0]) });}getCountryData('portugal'); chaining promises1234567891011121314151617181920212223242526const getCountryData = function (country) { fetch(`https://restcountries.com/v3.1/name/${country}`) .then(function (response) { return response.json() }) .then(function (data) { renderCountry(data[0]); const neighbour = data[0].borders[0]; console.log(neighbour); if (!neighbour) return; return fetch(`https://restcountries.com/v3.1/alpha/${neighbour}`); // ////!!! dont do this // return fetch(`https://restcountries.com/v3.1/alpha/${neighbour}`).then().then(); }) .then(response =&gt; response.json()) .then(data =&gt; renderCountry(data[0], 'neighbour'));}getCountryData('portugal'); handling rejected promises404 error is still the fullfill callback 123456fetch(`https://restcountries.com/v3.1/name/${country}`).then(function (response) { return response.json()}, function (err) { console.log(err);}) 123456789101112131415161718fetch(`https://restcountries.com/v3.1/name/${country}`).then(response =&gt; response.json()).then(data =&gt; renderCountry(data[0], 'neighbour'))//(method) Promise&lt;void&gt;.catch&lt;void&gt;(onrejected?: ((reason: any) =&gt; void | PromiseLike&lt;void&gt;) | null | undefined): Promise&lt;void&gt;/// handling all the error from the first promise.catch(err =&gt; { console.log(err); renderError(`Something went wrong ${err.message}`)});//(method) Promise&lt;void&gt;.finally(onfinally?: (() =&gt; void) | null | undefined): Promise&lt;void&gt;// Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The resolved value cannot be modified from the callback..finally(() =&gt; { countriesContainer.style.opacity = 1}); throwing error manuallythrowing error manually will be catch by the last catch() callback; 12345678910fetch(`https://restcountries.com/v3.1/name/${country}`) .then(function (response) { console.log(response); if (!response.ok) { throw new Error(`Country not found!${response.status}`) } return response.json() }) 123456789101112131415161718192021222324252627282930313233343536373839const getJSON = function (url, errorMsg = 'Something went wrong') { return fetch(url) .then(function (response) { if (!response.ok) { throw new Error(`${errorMsg} ${response.status}`) } return response.json() })}const getCountryData = function (country) { getJSON(`https://restcountries.com/v3.1/name/${country}`, 'country not found') .then(function (data) { renderCountry(data[0]); const neighbour = data[0].borders[0]; if (!neighbour) throw new Error('NO neighbour'); return getJSON(`https://restcountries.com/v3.1/alpha/${neighbour}`, 'country not found'); }) .then(data =&gt; renderCountry(data[0], 'neighbour')) .catch(err =&gt; { console.error(err); console.dir(err); renderError(`Something went wrong ${err.message}`) }) .finally(() =&gt; { countriesContainer.style.opacity = 1 });} event looppromisesmicrotasks queue:has priority over call back queue eventlistenercallback queue 12345678910111213141516171819console.log('Test start');setTimeout(() =&gt; console.log('0 sec timer'), 0);// (method) PromiseConstructor.resolve&lt;string&gt;(value: string): Promise&lt;string&gt; (+2 overloads)// Creates a new resolved promise for the provided value.Promise.resolve('Resolved promise 1').then(res =&gt; console.log(res));Promise.resolve('Resolved promise 2').then(res =&gt; { for (let index = 0; index &lt; 100000; index++) { } console.log(res);});console.log('Test end');// Test start// Test end// Resolved promise 1// Resolved promise 2// 0 sec timer build a promise12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364/// var Promise: PromiseConstructor// new &lt;any&gt;(executor: (resolve: (value: any) =&gt; void, reject: (reason?: any) =&gt; void) =&gt; void) =&gt; Promise&lt;any&gt;// A callback used to initialize the promise. This callback is passed two arguments: a resolve callback used to resolve the promise with a value or the result of another promise, and a reject callback used to reject the promise with a provided reason or error.const lotteryPromise = new Promise(function (resolve, reject) { console.log('Lotter draw is happening'); setTimeout(function () { if (Math.random() &gt;= 0.5) { resolve('You win 10000$'); } else { reject(new Error('You lost your money')); } }, 2000);});lotteryPromise.then(res =&gt; console.log(res), err =&gt; console.log(err));//// promisifying setTimeoutconst wait = function (seconds) { return new Promise(function (resolve) { setTimeout(resolve, seconds * 1000); })}wait(1) .then(() =&gt; { console.log(`1 second pasted`); return wait(1); }) .then(() =&gt; { console.log(`2 second pasted`); return wait(1); }) .then(() =&gt; { console.log(`3 second pasted`); return wait(1); }) .then(() =&gt; { console.log(`4 second pasted`); return wait(1); }) .then(() =&gt; { console.log(`5 second pasted`); return wait(1); })setTimeout(() =&gt; { console.log('1 second passed'); setTimeout(() =&gt; { console.log('2 seconds passed'); setTimeout(() =&gt; { console.log('3 seconds passed'); setTimeout(() =&gt; { console.log('4 seconds passed'); setTimeout(() =&gt; { console.log('5 seconds passed'); }, 1000); }, 1000); }, 1000); }, 1000);}, 1000);Promise.resolve('abc').then(x =&gt; console.log(x)); promisify geolocation api123456789101112131415161718navigator.geolocation.getCurrentPosition(position =&gt; console.log(position), err =&gt; console.log(err));// const getPostion = function () {// return new Promise((resolve, reject) =&gt; {// navigator.geolocation.getCurrentPosition(position =&gt; resolve(position), err =&gt; reject(err))// });// };const getPostion = function () { return new Promise((resolve, reject) =&gt; { navigator.geolocation.getCurrentPosition(resolve, reject) });};getPostion() .then(position =&gt; { console.log(position); }) 12345678const whereAmI = function () { getPostion() .then(position =&gt; { const { latitude: lat, longitude: lng } = position; return fetch(`https://geocode.xyz/${lat},${lng}?geoit=json&amp;auth=246057772253706376639x95870`) });} code challenge 3112345678910111213141516171819202122232425262728293031323334353637383940const wait = function (seconds) { return new Promise(function (resolve) { setTimeout(resolve, seconds * 1000); })}const createImage = function (imgPath) { return new Promise((resolve, reject) =&gt; { const ImgEl = document.createElement('img'); ImgEl.src = imgPath; ImgEl.addEventListener('load', () =&gt; { document.querySelector('.images').append(ImgEl); resolve(ImgEl); }); ImgEl.addEventListener('error', function () { reject(new Error('Image not found')); }); });};let ImgEle;createImage('img/img-1.jpg') .then(ImgEl =&gt; { ImgEle = ImgEl return wait(2); }) .then(() =&gt; { ImgEle.style.display = 'none'; return createImage('img/img-2.jpg'); }) .then(ImgEl =&gt; { ImgEle = ImgEl; return wait(2) }) .then(() =&gt; { ImgEle.style.display = 'none'; }) .catch(err =&gt; console.log(err.message)) consuming promises with async/awaitsugar cake 1234567891011121314151617181920212223242526const getPostion = function () { return new Promise((resolve, reject) =&gt; { navigator.geolocation.getCurrentPosition(resolve, reject) });};const whereAmI = async function () { ///geolocation const position = await getPostion(); const { latitude: lat, longitude: lng } = position.coords // reverse geocoding const reGeo = await fetch(`https://geocode.xyz/${lat},${lng}?geoit=json&amp;auth=246057772253706376639x95870`) const dataGeo = await reGeo.json(); console.log(dataGeo); // country data const res = await fetch(`https://restcountries.com/v3.1/alpha/${dataGeo.prov}`); console.log(res); const data = await res.json(); console.log(data); renderCountry(data[0]);};whereAmI();console.log('First executed'); async/await error handling1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950const getPostion = function () { return new Promise((resolve, reject) =&gt; { navigator.geolocation.getCurrentPosition(resolve, reject) });};const whereAmI = async function () { try {///geolocation const position = await getPostion(); const { latitude: lat, longitude: lng } = position.coords // reverse geocoding const reGeo = await fetch(`https://geocode.xyz/${lat},${lng}?geoit=json&amp;auth=246057772253706376639x95870`) if (!reGeo.ok) throw new Error('cant get location data') const dataGeo = await reGeo.json(); console.log(dataGeo); // country data const res = await fetch(`https://restcountries.com/v3.1/alpha/${dataGeo.prov}`); console.log(res); if (!res.ok) throw new Error('cant get country data') const data = await res.json(); console.log(data); renderCountry(data[0]); } catch (err) { console.error(err); renderError(`Something went wrong ${err.message}`) }};whereAmI();console.log('First executed');//////////////////////////////// try {// let y = 1;// const x = 2;// x = 3;// } catch (error) {// // Assignment to constant variable.// console.log(error.message);// } returning values from async functions1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859const getPostion = function () { return new Promise((resolve, reject) =&gt; { navigator.geolocation.getCurrentPosition(resolve, reject) });};const whereAmI = async function () { try {///geolocation const position = await getPostion(); const { latitude: lat, longitude: lng } = position.coords // reverse geocoding const reGeo = await fetch(`https://geocode.xyz/${lat},${lng}?geoit=json&amp;auth=246057772253706376639x95870`) if (!reGeo.ok) throw new Error('cant get location data') const dataGeo = await reGeo.json(); // country data const res = await fetch(`https://restcountries.com/v3.1/alpha/${dataGeo.prov}`); if (!res.ok) throw new Error('cant get country data') const data = await res.json(); renderCountry(data[0]); /// return the outfilled value !!!!!! return dataGeo.prov; } catch (err) { console.error(err); renderError(`Something went wrong ${err.message}`) // reject promise returned from aysnc function throw err; }};console.log('1: will get location');// const promise = // whereAmI()// .then(country =&gt; { console.log(country); })// .catch(err =&gt; console.error(err.message))// .finally(() =&gt; console.log('3: Finished getting location'));// console.log('3: Finished getting location');//// async await Ife(async function () { try { console.log('1: will get location'); const country = await whereAmI(); console.log(country); } catch (err) { console.log(err); } console.log('3: Finished getting location');})(); running promises in parallel123456789101112131415161718192021222324252627282930313233343536const getJSON = function (url, errorMsg = 'Something went wrong') { return fetch(url) .then(function (response) { if (!response.ok) { throw new Error(`${errorMsg} ${response.status}`) } return response.json() })}const get3Countries = async function (c1, c2, c3) { try { //// not parallel // const [data1] = await getJSON(`https://restcountries.com/v3.1/name/${c1}`) // const [data2] = await getJSON(`https://restcountries.com/v3.1/name/${c2}`) // const [data3] = await getJSON(`https://restcountries.com/v3.1/name/${c3}`) // (method) PromiseConstructor.all&lt;[Promise&lt;any&gt;, Promise&lt;any&gt;, Promise&lt;any&gt;]&gt;(values: [Promise&lt;any&gt;, Promise&lt;any&gt;, Promise&lt;any&gt;]): Promise&lt;[any, any, any]&gt; (+1 overload) // Creates a Promise that is resolved with an array of results when all of the provided Promises resolve, or rejected when any Promise is rejected. const data = await Promise.all([ getJSON(`https://restcountries.com/v3.1/name/${c1}`), getJSON(`https://restcountries.com/v3.1/name/${c2}`), getJSON(`https://restcountries.com/v3.1/name/${c3}`)]); console.log(data.map(d =&gt; d[0].capital).flat()); // console.log(data1.capital, data2.capital, data2.capital); } catch (error) { console.error(error); }}get3Countries('portugal', 'canada', 'tanza'); other promise combinators: race, allsettled and any12345678910111213141516171819202122232425262728293031323334353637383940414243444546//// Promise.race//// Creates a Promise that is resolved or rejected when any of the provided Promises are resolved or rejected.(async function () { const res = await Promise.race([ getJSON(`https://restcountries.com/v3.1/name/italy`), getJSON(`https://restcountries.com/v3.1/name/egypt`), getJSON(`https://restcountries.com/v3.1/name/mexico`) ]); console.log(res);})();///exampleconst timeout = function (sec) { return new Promise((_, reject) =&gt; { setTimeout(() =&gt; { reject(new Error('Request took too long!')); }, sec * 1000); });};(async function () { const result = await Promise.race([ getJSON(`https://restcountries.com/v3.1/name/mexico`), timeout(1), ]) console.log(result);})();/// Promise.allSettled/// Creates a Promise that is resolved with an array of results when all of the provided Promises resolve or reject.Promise.allSettled([ Promise.resolve('Sucess'), Promise.resolve('Error'), Promise.resolve('Anotrher result'),]).then(res =&gt; console.log(res));//// the first fullfilled promisePromise.any([ Promise.resolve('Sucess'), Promise.resolve('Error'), Promise.resolve('Anotrher result'),]).then(res =&gt; console.log(res)); Coding Challenge #3123456789101112131415161718192021222324252627282930313233343536373839404142434445const wait = function (seconds) { return new Promise(function (resolve) { setTimeout(resolve, seconds * 1000); })}const createImage = function (imgPath) { return new Promise((resolve, reject) =&gt; { const ImgEl = document.createElement('img'); ImgEl.src = imgPath; ImgEl.addEventListener('load', () =&gt; { document.querySelector('.images').append(ImgEl); resolve(ImgEl); }); ImgEl.addEventListener('error', function () { reject(new Error('Image not found')); }); });};const loadPause = async function () { try { const img = await createImage('img/img-1.jpg'); await wait(2); img.style.display = 'none'; const img2 = await createImage('img/img-2.jpg'); await wait(2); img2.style.display = 'none'; } catch (err) { console.log(err); }}// loadPause();const loadAll = async function (imgArr) { try { const imgs = await Promise.all(imgArr.map(async img =&gt; await createImage(img))) imgs.forEach(img =&gt; img.classList.add('parallel')) } catch (err) { console.error(err); }}loadAll(['img/img-1.jpg', 'img/img-2.jpg', 'img/img-3.jpg']);","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/html%20css%20js/the-complete-javascript-zte/"},{"title":"","text":"更改icarus主题文件使网站页面在大屏幕上显示的更宽/themes/icarus/include/style/responsive.styl修改+fullhd()如下 12345678+fullhd() .is-2-column .container max-width: $fullhd - 2 * $gap width: $fullhd - 2 * $gap .is-1-column .container max-width: $widescreen - 2 * $gap width: $widescreen - 2 * $gap","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/ssg/hexo-icarus-theme-develop/"},{"title":"helowo","text":"nodejs 重新安装问题 在windows下删除C:\\Users\\Sam\\AppData\\Roaming\\npm 以及C:\\Users\\Sam\\AppData\\Roaming\\npm-cache. 2.刷新环境变量 关于刷新环境，二选一就可以 方法一：重启电脑（耗时 123456789PS C:\\Users\\lcf\\Documents\\lucfe_website&gt; hexo init lucfe-hexohexo : 无法加载文件 C:\\Users\\lcf\\AppData\\Roaming\\npm\\hexo.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/go.microsoft.com/fwlink/?LinkID=135170 中的 about_Execution_Policies。所在位置 行:1 字符: 1+ hexo init lucfe-hexo+ ~~~~ + CategoryInfo : SecurityError: (:) []，PSSecurityException + FullyQualifiedErrorId : UnauthorizedAccess powershell执行命令时出错，提示权限问题，请更换为git bash Git中只克隆一个特定分支git clone -b 分支名 –single-branch 要在Git中只克隆一个特定分支，可以使用以下命令： 其中，“-b”选项指定要克隆的分支名称，“–single-branch”选项告诉Git只克隆指定的分支，而不是整个代码库。请将“”替换为要克隆的Git存储库的URL。 clonehttpshttps://github.com/lucfe2010/lucfe-hexo-private.git like:git clone -b gh-pages –single-branch https://github.com/lucfe2010/lucfe-hexo-private.git git fetch在远程分支上窥视，无需在本地存储库中配置远程$ git fetch git://git.kernel.org/pub/scm/git/git.git maint Shell第一个命令从 git://git.kernel.org/pub/scm/git/git.git 从存储库中获取maint分支 如git fetch https://github.com/lucfe2010/lucfe-hexo-private.git gh-pages git push最后 添加远程仓库先在github上创建一个仓库，复制仓库的HTTP地址，然后回到本地 origin_learn_git是给这个远程仓库取的别名，随便取 git remote add origin_learn_git https://github.com/DejaVuyan/learn_git.git push到远程仓库git push -u origin_learn_git main 将当前所在的分支推送到远端的main分支， git push -u https://github.com/lucfe2010/lucfe-hexo.git gh-pages 使用 git subtree 如何将现有 git 仓库中的子目录分离为独立仓库并保留其提交历史看来上述需求还是比较普遍的，自从 1.8 版本之后 git 就添加了 subtree 子命令，使用这个新命令我们可以很简单高效地解决这个问题。 首先，进入 big-repo 所在的目录，运行： git subtree split -P -b 1.在主原仓库下执行 ---@!!!注意，要在主原仓库commit变动后才有变化update(主仓库有变动时 要刷新才能COMMIT)git subtree split -P public -b hexo-public-folder 运行后，git 会遍历原仓库中所有的历史提交，挑选出与指定路径相关的 commit 并存入名为 name-of-new-branch 的临时分支中。另外需要注意的是，如果你在使用 Windows，且该文件夹深度 &gt; 1，你必须使用斜杠 / 作为目录分隔符而不是默认的反斜杠 \\。 然后，我们创建一个新的 git 仓库： mkdir git init 接着把原仓库中的临时分支拉到新仓库中： git pull &lt;/path/to/big-repo&gt; 在lucfe-hexo-public/lucfe-hexo新仓库目录下git pull ../ hexo-public-folder 好了，完成。现在看看你的新仓库，是不是已经包含了原子文件夹中的所有文件和你之前在原仓库中的所有提交历史呢？ 手动添加.nojekyll文件 .gitignore不生效问题解决方法第一种方法 .gitignore中已经标明忽略的文件目录下的文件，git push的时候还会出现在push的目录中，或者用git status查看状态，想要忽略的文件还是显示被追踪状态。 原因是因为在git忽略目录中，新建的文件在git中会有缓存，如果某些文件已经被纳入了版本管理中，就算是在.gitignore中已经声明了忽略路径也是不起作用的， 这时候我们就应该先把本地缓存删除，然后再进行git的提交，这样就不会出现忽略的文件了。 解决方法: git清除本地缓存（改变成未track状态），然后再提交: 1234git rm -r --cached .git add .git commit -m 'update .gitignore'git push -u origin master 需要特别注意的是： 1）.gitignore只能忽略那些原来没有被track的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的。 2）想要.gitignore起作用，必须要在这些文件不在暂存区中才可以，.gitignore文件只是忽略没有被staged(cached)文件， 对于已经被staged文件，加入ignore文件时一定要先从staged移除，才可以忽略。 folersOnce initialized, here’s what your project folder will look like: 123456789.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes scaffolds 脚手架;建筑架;鹰架A scaffold is a temporary raised platform on which workers stand to paint, repair, or build high parts of a building. Scaffold folder. When you create a new post, Hexo bases the new file on the scaffold. sourceSource folder. This is where you put your site’s content. Hexo ignores hidden files and files or folders whose names are prefixed with _ (underscore)- except the _posts folder. Renderable files (e.g. Markdown, HTML) will be processed and put into the public folder, while other files will simply be copied. themesTheme folder. Hexo generates a static website by combining the site contents with the theme. writingTo create a new post or a new page, you can run the following command: $ hexo new [layout] &lt;title&gt;post is the default layout, but you can supply your own. LayoutThere are three default layouts in Hexo: post, page and draft. Files created by each of them is saved to a different path. Newly created posts are saved to the source/_posts folder. FilenameBy default, Hexo uses the post title as its filename. You can edit the new_post_name setting in _config.yml to change the default filename. DraftsPreviously, we mentioned a special layout in Hexo: draft. Posts initialized with this layout are saved to the source/_drafts folder.Drafts are not displayed by default. You can add the –draft option when running Hexo or enable the render_drafts setting in _config.yml to render drafts. You can use the publish command to move drafts to the source/_posts folder. publish works in a similar way to the new command. $ hexo publish [layout] &lt;title&gt; You can use the publish command to move drafts to the source/_posts folder. publish works in a similar way to the new command. Supported FormatsHexo support posts written in any format, as long as the corresponding renderer plugin is installed. For example, Hexo has hexo-renderer-marked and hexo-renderer-ejs installed by default, so you can write your posts in markdown or in ejs. $ hexo publish [layout] &lt;title&gt; front matterFront-matter is a block of YAML or JSON at the beginning of the file that is used to configure settings for your writings. Front-matter is terminated by three dashes when written in YAML or three semicolons when written in JSON. YAML 12345---title: Hello Worlddate: 2013/7/13 20:46:25--- JSON “title”: “Hello World”,“date”: “2013/7/13 20:46:25”;;; Setting Description Defaultlayout Layout config.default_layouttitle Title Filename (posts only)date Published date File created datetags Tags (Not available for pages)categories Categories (Not available for pages)permalink Overrides the default permalink of the post. Permalink should end with / or .html null Categories &amp; TagsOnly posts support the use of categories and tags. Categories apply to posts in order, resulting in a hierarchy of classifications and sub-classifications. Tags are all defined on the same hierarchical level so the order in which they appear is not important. Example categories: Sports Baseballtags: Injury Fight Shocking If you want to apply multiple category hierarchies, use a list of names instead of a single name. If Hexo sees any categories defined this way on a post, it will treat each category for that post as its own independent hierarchy. Example categories: [Sports, Baseball] [MLB, American League, Boston Red Sox] [MLB, American League, New York Yankees] Rivalries Tag PluginsTag plugins are different from post tags. They are ported from Octopress and provide a useful way for you to quickly add specific content to your posts. Although you can write your posts in any formats, but the tag plugins will always be available and syntax remains the same. LinkInserts a link with target=”_blank” attribute. {% link text url [external] [title] %} Include CodeInserts code snippets in source/downloads/code folder. The folder location can be specified through the code_dir option in the config. {% include_code [title] [lang:language] [from:line] [to:line] path/to/file %} Include PostsInclude links to other posts. {% post_path filename %} jiesiYou can ignore permalink and folder information, like languages and dates, when using this tag. For instance: . This will work as long as the filename of the post is how-to-bake-a-cake.md, even if the post is located at source/posts/2015-02-my-family-holiday and has permalink 2018/en/how-to-bake-a-cake. You can customize the text to display, instead of displaying the post’s title. Post’s title and custom text are escaped by default. You can use the escape option to disable escaping. For instanceDisplay title of the post. {% post_link hexo-3-8-released %} Hexo 3.8.0 ReleasedDisplay custom text. {% post_link hexo-3-8-released 'Link to a post' %} Link to a postEscape title. {% post_link hexo-4-released 'How to use tag in title' %} RawIf certain content is causing processing issues in your posts, wrap it with the raw tag to avoid rendering errors. content Asset FoldersImageInserts an image with specified size. {% img [class names] /path/to/image [width] [height] '\"title text\" \"alt text\"' %} Embedding an image using markdownhexo-renderer-marked 3.1.0 introduced a new option that allows you to embed an image in markdown without using asset_img tag plugin. To enable: _config.ymlpost_asset_folder: truemarked: prependRoot: true postAsset: true /2020/01/02/foo/image.jpg/2020/01/02/foo.mdOnce enabled, an asset image will be automatically resolved to its corresponding post’s path. For example, “image.jpg” is located at “/2020/01/02/foo/image.jpg”, meaning it is an asset image of “/2020/01/02/foo/“ post, ![](image.jpg) will be rendered as &lt;img src=&quot;/2020/01/02/foo/image.jpg&quot;&gt;. embed image“foo.jpg” is located at http://example.com/2020/01/02/hello/foo.jpg. Default (no option) {% asset_img foo.jpg %} &lt;img src=&quot;/2020/01/02/hello/foo.jpg&quot;&gt; Global Asset FolderGlobal Asset FolderAssets are non-post files in the source folder, such as images, CSS or JavaScript files. For instance, If you are only going to have a few images in the Hexo project, then the easiest way is to keep them in a source/images directory. Then, you can access them using something like ![](/images/image.jpg). for vscode edit the md file as open the source directory as project file dont use Post Asset FolderFor users who expect to regularly serve images and/or other assets, and for those who prefer to separate their assets on a post-per-post basis, Hexo also provides a more organized way to manage assets. This slightly more involved, but very convenient approach to asset management can be turned on by setting the post_asset_folder setting in _config.yml to true. _config.ymlpost_asset_folder: true With asset folder management enabled, Hexo will create a folder every time you make a new post with the hexo new [layout] &lt;title&gt; command. This asset folder will have the same name as the markdown file associated with the post. Place all assets related to your post into the associated folder, and you will be able to reference them using a relative path, making for an easier and more convenient workflow. dont use this methodRelative Image PathThe build-in way to include images in your posts works fine, but it is a little aside the normal way to declare images in Markdown. The plugin [Hexo Asset Link] corrects that. After installing via npm install hexo-asset-link –save you can write this: ![Test Image](hello-world/image-1.png)The best is, that VS Code’s Markdown can now show the image. hexo and vscode img path problem $ npm i -s hexo-asset-link YAMLException: end of the stream or a document separator is expected hexoadd 123---title--- unable to access ‘https://github.com/lucfe2010/lucfe-hexo.git/‘: OpenSSL SSL_read: SSL_ERROR_SYSCALL, errno 0git config –global http.sslVerify “false”","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/ssg/hexo-wiki-1/"},{"title":"Udemy-The-Python-Mega-Course-Learn-Python-in-60-Days-with-20-Apps","text":"module 1printprint('Enter a todo:') def print(*values: object, sep: str | None = “ “, end: str | None = “\\n”, file: SupportsWrite[str] | None = None, flush: Literal[False] = False) -&gt; None *parameter是用来接受任意多个参数并将其放在一个元组中 1234567&gt;&gt;&gt; def demo(*p): print(p) &gt;&gt;&gt; demo(1,2,3)(1, 2, 3) **parameter用于接收类似于关键参数一样赋值的形式的多个实参放入字典中（即把该函数的参数转换为字典）。 1234567&gt;&gt;&gt; def demo(**p): for i in p.items(): print(i)&gt;&gt;&gt; demo(x=1,y=2)('x', 1)('y', 2) input()def input(__prompt: object = “”) -&gt; strRead a string from standard input. The trailing newline is stripped.The prompt string, if given, is printed to standard output without a trailing newline before reading input. 12prompt = 'Enter a todo: 'todo1 = input(prompt) type()type(object) -&gt; the object’s type 12print(type('prompt')) # &lt;class 'str'&gt;print(type(['todos1', 'todos2','todos3','todos4'])) # &lt;class 'list'&gt; len()def len(__obj: Sized) -&gt; intReturn the number of items in a container. 12length_1 = len('Enter a title: ')print(length_1) # 15 using leading or trailing underscoresinvoke引用If you invoke something such as a principle, a saying, or a famous person, you refer to them in order to support your argument. mangling 扭曲f you say that someone mangles words or information, you are criticizing them for not speaking or writing clearly or correctly. To avoid name clashes with subclasses, use two leading underscores to invoke Python’s name mangling rules. _single_leading_underscore: weak “internal use” indicator. E.g. from M import * does not import objects whose names start with an underscore. single_trailing_underscore_: used by convention to avoid conflicts with Python keyword, e.g. :tkinter.Toplevel(master, class_=’ClassName’) __double_leading_underscore: when naming a class attribute, invokes name mangling (inside class FooBar, __boo becomes _FooBar__boo; see below).Python mangles these names with the class name: if class Foo has an attribute named __a, it cannot be accessed by Foo.__a. (An insistent user could still gain access by calling Foo._Foo__a.) Generally, double leading underscores should be used only to avoid name conflicts with attributes in classes designed to be subclassed. __double_leading_and_trailing_underscore__: “magic” objects or attributes that live in user-controlled namespaces. E.g. __init__, __import__ or __file__. Never invent such names; only use them as documented. Python mangles these names with the class name: if class Foo has an attribute named __a, it cannot be accessed by Foo.__a. (An insistent user could still gain access by calling Foo._Foo__a.) Generally, double leading underscores should be used only to avoid name conflicts with attributes in classes designed to be subclassed. boolean typeis_male = True list.append()def append(self, __object: _T) -&gt; NoneAppend object to the end of the list 1234todos = []todo = 'Hello'todos.append(todo)print(todos) # ['Hello'] str.capitalize() str.title()print('hello world'.title()) # Hello world def capitalize(self: LiteralString) -&gt; LiteralStringReturn a capitalized version of the string.More specifically, make the first character have upper case and the rest lower case. print('hello world'.title()) # Hello World def title(self: LiteralString) -&gt; LiteralStringReturn a version of the string where each word is titlecased.More specifically, words start with uppercased characters and all remaining cased characters have lower case. pycharm shortcutcut a linectrl + x paste a line before this linectrl + v ctrl + b while loop12345password = input(&quot;Enter password: &quot;)while password != 'pass123': password = input(&quot;Enter password: &quot;)print(&quot;Password was correct!&quot;) 1234x = 1while x &lt;= 6: print(x) x = x + 1 break statementbreak may only occur syntactically nested in a for or while loop, but not nested in a function or class definition within that loop.It terminates the nearest enclosing loop, skipping the optional else clause if the loop has one.If a for loop is terminated by break, the loop control target keeps its current value.When break passes control out of a try statement with a finally clause, that finally clause is executed before really leaving the loop 123456789101112todos = []while True: # prompt = 'Enter a todo: ' user_action = input(&quot;Type add, show, or exit: &quot;) match user_action: case 'add': todo = input(&quot;Enter a todo: &quot;) todos.append(todo) case 'show': print(todos) case 'exit': break dir(str)print(dir(str))print(dir('Hello')) def dir(__o: object = …) -&gt; list[str]Show attributes of an object.If called without an argument, return the names in the current scope. Else, return an alphabetized list of names comprising (some of) the attributes of the given object, and of attributes reachable from it. If the object supplies a method named __dir__, it will be used; otherwise the default dir() logic is used and returns: for a module object: the module’s attributes. for a class object: its attributes, and recursively the attributes of its bases.for any other object: its attributes, its class’s attributes, andrecursively the attributes of its class’s base classes. 12import builtinsprint(dir(builtins)) help()help(&quot;Hello&quot;.capitalize) Help on built-in function capitalize: capitalize() method of builtins.str instance Return a capitalized version of the string.More specifically, make the first character have upper case and the rest lowercase. match1234567user_action = input(&quot;Type add or show: &quot;)match user_action: case 'add': todo = input(&quot;Enter a todo: &quot;) todos.append(todo) case 'show': print(todos) 12345678910111213user_action = input(&quot;Type add, show, or exit: &quot;).strip()match user_action: case 'add': todo = input(&quot;Enter a todo: &quot;) todos.append(todo) case 'show' | 'display': print(todos) for item in todos: print(item) case 'exit': break case _: print(&quot;please enter a correct command!&quot;) for loop1234todo_list = ['todo 1', 'todo 2', 'todo 3']for todo in todo_list: item = item.title() print(todo) 12for c in 'meals': print(c) str.strip()123str1 = 'add 'str2 = str1.strip()print(str1, str2) # 'add ' 'add' def strip(self: LiteralString, __chars: LiteralString | None = None) -&gt; LiteralStringReturn a copy of the string with leading and trailing whitespace removed.If chars is given and not None, remove characters in chars instead list indexlist indices must be integers or slices, not str int() float() str()12345678x = 10.2print(type(x)) # &lt;class 'float'&gt;y = 10print(type(y)) # &lt;class 'int'&gt;z = 'a'print(type(z)) # &lt;class 'str'&gt; number = int(input(&quot;Number of the todo to edit: &quot;))int([x]) -&gt; integer int(x, base=10) -&gt; integerConvert a number or string to an integer, or return 0 if no arguments are given. If x is a number, return x.__int__(). For floating point numbers, this truncates towards zero. If x is not a number or if base is given, then x must be a string, bytes, or bytearray instance representing an integer literal in the given base. The literal can be preceded by ‘+’ or ‘-‘ and be surrounded by whitespace. The base defaults to 10. number = float('1.23') str1 = str(12.3) str(object=’’) -&gt; str str(bytes_or_buffer[, encoding[, errors]]) -&gt; strCreate a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.__str__() (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to ‘strict’. list.index()12todo_list = ['todo 1', 'todo 2', 'todo 3']print(todo_list.index('todo 1')) # 0 def index(self, __value: _T, __start: SupportsIndex = 0, __stop: SupportsIndex = sys.maxsize) -&gt; intReturn first index of value.Raises ValueError if the value is not present list.getitem()def __getitem__(self, __i: SupportsIndex) -&gt; _TReturn self[index]. 'Hello'[2] = 'a'‘str’ object does not support item assignment str.replace()123filename = 1.raw data.txt'filename = filename.replace('.', '-', 1)print(filename) # 1-raw data.txt def replace(self: LiteralString, __old: LiteralString, __new: LiteralString, __count: SupportsIndex = -1) -&gt; LiteralStringReturn a copy with all occurrences of substring old replaced by new. countMaximum number of occurrences to replace. -1 (the default value) means replace all occurrences.If the optional argument count is given, only the first count occurrences are replaced. tuple12345filenames1 = ('1.raw data.txt', '2.reports.txt', '3.presentations.txt')print(type(filenames1)) # &lt;class 'tuple'&gt;# 'tuple' object does not support item assignmentfilenames1[0] = 'new file.txt' python local variable only in function12345678filenames = ['1.raw data.txt', '2.reports.txt', '3.presentations.txt']for filename in filenames: filename = filename.replace('.', '-', 1) print(filename)print(filename) # 3-presentations.txtprint(filenames) enumerate functionenumerateto name things on a list one by one class enumerate(Iterator[tuple[int, _T]], Generic[_T])Return an enumerate object. The enumerate object yields pairs containing a count (from start, which defaults to zero) and a value yielded by the iterable argument.enumerate is useful for obtaining an indexed list:(0, seq[0]), (1, seq[1]), (2, seq[2]), … iterablean object supporting iteration 123456# 0 - todo 1# 1 - todo 2# 2 - todo 3todo_list = ['todo 1', 'todo 2', 'todo 3']for index, item in enumerate(todo_list): print(index, &quot; - &quot;, item) 12345todo_list = ['todo 1', 'todo 2', 'todo 3']a = enumerate(todo_list)print(type(a)) # &lt;class 'enumerate'&gt;b = list(a)print(b) # [(0, 'todo 1'), (1, 'todo 2'), (2, 'todo 3')] format string123index = 1item = 'hello'print(f&quot;{index + 1}-{item}&quot;) # '2-hello' list.pop()12345todo_list = ['todo 1', 'todo 2', 'todo 3']popped = todo_list.pop(1)print(todo_list, popped) # ['todo 1', 'todo 3'] 'todo 2'popped = todo_list.pop()print(todo_list, popped) # ['todo 1'] 'todo 3' def pop(self, __index: SupportsIndex = -1) -&gt; _TRemove and return item at index (default last). list.sort()def sort(self: list[SupportsRichComparisonT], *, key: None = None, reverse: bool = False) -&gt; None Sort the list in ascending order and return None.The sort is in-place (i.e. the list itself is modified) and stable (i.e. the order of two equal elements is maintained).If a key function is given, apply it once to each list item and sort them, ascending or descending, according to their function values.The reverse flag can be set to sort in descending order. 123waiting_list = ['sen', 'ben', 'john']waiting_list.sort()print(waiting_list) # ['ben', 'john', 'sen']","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/python/Udemy-Learn-Python-in-60-Days-with-20-Apps/"},{"title":"Jekyll wiki","text":"Creating a GitHub Pages site with Jekyll Creating a repository for your site 每个用户唯一的一个PAGE REPOSITORYUSERNAME.github.io网站地址默认为https://USERNAME.github.io Open Git Bash. navigate to the location where you want to store your site’s source files, replacing PARENT-FOLDER with the folder you want to contain the folder for your repository. cd PARENT-FOLDER initialize a local Git repository, replacing REPOSITORY-NAME with the name of your repository. $ git init REPOSITORY-NAME Change directories to the repository. 12$ cd REPOSITORY-NAME# Changes the working directory 5.1. chose to publish your site from the docs folder on the default branch, create and change directories to the docs folder. 123$ mkdir docs# Creates a new folder called docs$ cd docs 5.2. chose to publish your site from the gh-pages branch, create and checkout the gh-pages branch. 1234$ git checkout --orphan gh-pages# Creates a new branch, with no history or contents, called gh-pages, and switches to the gh-pages branch$ git rm -rf .# Removes the contents from your default branch from the working directory To create a new Jekyll site, use the jekyll new command: $ jekyll new –skip-bundle . Creates a Jekyll site in the current directory Open the Gemfile that Jekyll created. Add “#” to the beginning of the line that starts with gem “jekyll” to comment out this line. Add the github-pages gem by editing the line starting with # gem “github-pages”. Change this line to: gem “github-pages”, “~&gt; GITHUB-PAGES-VERSION”, group: :jekyll_pluginsReplace GITHUB-PAGES-VERSION with the latest supported version of the github-pages gem. You can find this version here: “Dependency versions.” The correct version Jekyll will be installed as a dependency of the github-pages gem. gem “github-pages”, “~&gt; 228”, group: :jekyll_plugins Save and close the Gemfile. intall some dependecies BundlerConveniently, bundler has a feature to alias a Gem-server to another one. This way, you can leave your Gemfile source ‘https://rubygems.org‘ at the top of each Gemfile.Run this command:bundle config mirror.https://rubygems.org https://gems.ruby-china.comTo remove the aliasing, just delete the appropriate line in ~/.bundle/config. bundle config mirror.https://rubygems.org https://gems.ruby-china.com bundle config mirror.https://rubygems.org https://rubygems.org From the command line, run bundle install. make any necessary edits to the _config.yml file. This is required for relative paths when the repository is hosted in a subdirectory. 12baseurl: &quot;/lucfe/&quot; # the subpath of your site, e.g. /blogurl: &quot;https://ncf2010.us.kg&quot; # the base hostname &amp; protocol for your site, e.g. http://example.com 10.Run your Jekyll site locally.$ bundle add webrick$ bundle exec jekyll serve Add and commit your work. git add .git commit -m ‘Initial GitHub pages site with Jekyll’ 11.Add your repository on GitHub.com as a remote, replacing USER with the account that owns the repository and REPOSITORY with the name of the repository. $ git remote add origin https://github.com/USER/REPOSITORY.git 如果你clone下来一个别人的仓库，在此基础上完成你的代码，推送到自己的仓库可能遇到如下问题： error: remote origin already exists.表示远程仓库已存在。 因此你要进行以下操作： 1、先输入git remote rm origin 删除关联的origin的远程库 12.Push the repository to GitHub, replacing BRANCH with the name of the branch you’re working on. git branch -M maingit push -u origin main git push -u origin BRANCH Configure your publishing source main branch,doc/ folder gh-pages, / folder optinal permalink _config.yml # Outputtingpermalink: none PERMALINK STYLE URL TEMPLATEdate /:categories/:year/:month/:day/:title:output_extnone /:categories/:title:output_ext Markdown › Copy Files: DestinationDefines where files copied created by drop or paste should be created. This is a map from globs that match on the Markdown document to destinations.item value `\"*\" /assets/images/${documentBaseName}/` when copy image to vs code the ![](),is relative path like../../../assets/images/2023-09-05-jekyll-wiki/image-6.png Directory Structure_includes These are the partials that can be mixed and matched by your layouts and posts to facilitate reuse. The liquid tag can be used to include the partial in _includes/file.ext. _layouts These are the templates that wrap posts. Layouts are chosen on a post-by-post basis in the front matter, which is described in the next section. The liquid tag {{ content }} is used to inject content into the web page. _posts Your dynamic content, so to speak. The naming convention of these files is important, and must follow the format: YEAR-MONTH-DAY-title.MARKUP. The permalinks can be customized for each post, but the date and markup language are determined solely by the file name. _site This is where the generated site will be placed (by default) once Jekyll is done transforming it. It’s probably a good idea to add this to your .gitignore file. index.html or index.md and other HTML, Markdown files Provided that the file has a front matter section, it will be transformed by Jekyll. The same will happen for any .html, .markdown, .md, or .textile file in your site’s root directory or directories not listed above. The Gemfile and Gemfile.lock files are used by Bundler to keep track of the required gems and gem versions you need to build your Jekyll site. AssetsAny file in /assets will be copied over to the user’s site upon build unless they have a file with the same relative path. You can ship any kind of asset here: SCSS, an image, a webfont, etc. All files in /assets will be output into the compiled site in the /assets folder just as you’d expect from using Jekyll on your sites. themeTo locate a theme’s files on your computer: Run bundle info –path followed by the name of the theme’s gem, e.g., bundle info –path minima for Jekyll’s default theme. This returns the location of the gem-based theme files. CustomizationTo override the default structure and style of minima, simply create the concerned directory at the root of your site, copy the file you wish to customize to that directory, and then edit the file.e.g., to override the _includes/head.html file to specify a custom style path, create an _includes directory, copy _includes/head.html from minima gem folder to &lt;yoursite&gt;/_includes and start editing that file. To modify any stylesheet you must take the extra step of also copying the main sass file (_sass/minima.scss in the Minima theme) into the _sass directory in your site’s source. An alternative, to continue getting theme updates on all stylesheets, is to use higher specificity CSS selectors in your own additional, originally named CSS files. Converting gem-based themes to regular themesPermalinkSuppose you want to get rid of the gem-based theme and convert it to a regular theme, where all files are present in your Jekyll site directory, with nothing stored in the theme gem. To do this, copy the files from the theme gem’s directory into your Jekyll site directory. (For example, copy them to /myblog if you created your Jekyll site at /myblog. See the previous section for details.) Then you must tell Jekyll about the plugins that were referenced by the theme. You can find these plugins in the theme’s gemspec file as runtime dependencies. If you were converting the Minima theme, for example, you might see: spec.add_runtime_dependency “jekyll-feed”, “&gt; 0.12”spec.add_runtime_dependency “jekyll-seo-tag”, “&gt; 2.6” You should include these references in the Gemfile. You could list them individually in both Gemfile and _config.yml. 1234# ./Gemfilegem &quot;jekyll-feed&quot;, &quot;~&gt; 0.12&quot;gem &quot;jekyll-seo-tag&quot;, &quot;~&gt; 2.6&quot; 123456# ./_config.ymlplugins: - jekyll-feed - jekyll-seo-tag If you’re publishing on GitHub Pages you should update only your _config.yml as GitHub Pages doesn’t load plugins via Bundler. Either way, don’t forget to bundle update. Finally, remove references to the theme gem in Gemfile and configuration. For example, to remove minima: Open Gemfile and remove gem “minima”, “~&gt; 2.5”.Open _config.yml and remove theme: minima.Now bundle update will no longer get updates for the theme gem.","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/ssg/jekyll-wiki/"},{"title":"达内 Python","text":"程序： 计算机指令，实现需求的软件 多态1234567891011121314151617181920212223242526class Person(): def __init__(self, name): self.name = name def travel(self, vehicle, position): vehicle.transport(position)class Vehicle(): def __init__(self): pass def transport(self, position): passclass Car(Vehicle): def transport(self, position): print(&quot;car&quot;, position)class Airplane(Vehicle): def transport(self, position): print(&quot;airplane&quot;, position)person_1 = Person(&quot;lucfe&quot;)car_1 = Car()airplane_1 = Airplane()person_1.travel(car_1, &quot;beijing&quot;)person_1.travel(airplane_1, &quot;beijing&quot;) car beijingairplane beijing","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/python/danei_python/"},{"title":"static site generator wiki","text":"ssgDocsify Docsify generates your documentation website on the fly. Unlike GitBook, it does not generate static html files. Instead, it smartly loads and parses your Markdown files and displays them as a website. Docsify makes it easy to create a documentation website, but is not a static-site generator and is not SEO friendly. Docusaurus Docusaurus is a static-site generator. It builds a single-page application with fast client-side navigation, leveraging the full power of React to make your site interactive. It provides out-of-the-box documentation features but can be used to create any kind of site (personal website, product, blog, marketing landing pages, etc). The docs feature provides users with a way to organize Markdown files in a hierarchical format. Extend and customize with React MDX:Write interactive components via JSX and React embedded in Markdown. MDX allows you to use JSX in your markdown content. You can import components, such as interactive charts or alerts, and embed them within your content. This makes writing long-form content with components a blast. MDX has no runtime, all compilation occurs during the build stage jekyllruby StaticMarkdown, Liquid, HTML &amp; CSS go in. Static sites come out ready for deployment. Blog-awarePermalinks, categories, pages, posts, and custom layouts are all first-class citizens here. SimpleNo more databases, comment moderation, or pesky updates to install—just your content. moderation 适度；适中；合理the quality of being reasonable and not being extreme评审 peskycausing trouble; annoying. hexoHexo provides the Nunjucks template engine by default Valine was born in August 7, 2017. It’s a fast, simple &amp; efficient Leancloud based no back end comment system. Theoretically, but not limited to static blog. Hexo, Jekyll, Typecho, Hugo, Ghost, Docsify and other blog or document programs are currently using Valine. valine 需要 leancloud leancloud开发版：开发版让用户可以在开发阶段和个人项目中免费使用 LeanCloud 的大部分功能。大部分商业应用在发布给外部用户后会超过开发版的用量限制，将会需要升级到商用版。 Jinja is a fast, expressive, extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. Then the template is passed data to render the final document. Nunjucks is essentially a port of jinja2 A notable feature of Hexo is tag plugins. Tag plugins are snippets of code you can add to your Markdown files without having to write complex or messy HTML to render specific content. Octopress plugins. Tag PluginsTag plugins are different from post tags. They are ported from Octopress and provide a useful way for you to quickly add specific content to your posts. theme layoutLayout folder. This folder contains the theme’s template files, which define the appearance of your website. Hexo provides the Nunjucks template engine by default, but you can easily install additional plugins to support alternative engines such as EJS or Pug. Hexo chooses the template engine based on the file extension of the template (just like the posts). For example: layout.ejs - uses EJSlayout.njk - uses Nunjucks hexojs/warehouse A JSON database with Models, Schemas, and a flexible querying interface. It powers the wildly successful static site generator Hexo. Hugo The Single Binary ApproachSome static site generators install a single binary and don’t require complex dependency management. The single binary approach gets things set up quickly and easily. One of the advantages of using Hugo is that it doesn’t depend on client-side JS. Hugo supports unlimited content types, taxonomies, menus, dynamic API-driven content, and more, all without plugins. Hugo ships with pre-made templates to make quick work of SEO, commenting, analytics and other functions. One line of code, and you’re done. Hugo’s Go-based templating","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/ssg/static%20site%20generator%20wiki/"},{"title":"dead simple python","text":"your workbenchPackages and Virtual EnvironmentsA package is a collection of code, which is analogous to a library in mostother programming languages. Some packages require other packages to be installed first. Certain packageshave conflicts with other packages. You can also install specific versionsof a package, depending on what exactly you need.This is why virtual environments exist. A virtual environment is a sandbox where you can install only thePython packages you need for a particular project, without the risk ofthose packages clashing with those for another project (or your system).You neveractually change what Python packages are installed on your system, soyou avoid breaking important things that have nothing to do with yourproject. You may even create virtual environments that have nothing to do witha particular project. Creating a Virtual EnvironmentTo create the virtual environment with the name venv_1 in the currentworking directory, run the following command in the command line: python3 -m venv venv_1 venv_1 is the desired path to the virtual environment. In thiscase, venv is just a relative path, creating a venv/ directory in the currentworking directory. However, you could also use an absolute path, and youcould call it whatever you want python3 -m venv /opt/myvirtualenv vscode python create environment Activating a Virtual EnvironmentOn Windows, run this: venv_1\\Scripts\\activate.bat venv_1/Scripts/activate.bat vscodepython select interpreter If you have multiple shells (usually terminal windows) open, you should beaware that the virtual environment is only active for the one shell you explicitlyactivated it in! environment paths will be overridden by the virtual environment.Practically speaking, any packages you install in the virtual environmentare only usable there, and from the venv, the system-wide packages cannotbe accessed unless you explicitly specify otherwise. If you want the virtual environment to also see the system-wide packages, you can do so with a special flag python3 -m venv –system-site-packages venv_1 Leaving a Virtual Environmentvenv_1\\Scripts\\deactivate.bat Introducing pipSystem-Wide Packagespython3 -m pip command Installing Packagespip install package If you want to install a specific version of something, append two equalsigns (==), followed by the desired version number (no spaces): pip install PySide6==6.1.2 Bonus: you can even use operators like &gt;=, to mean “at least this versionor greater.” These are called requirement specifiers. pip install PySide6&gt;=6.1.2 If you’re on a UNIX-like system, you may need to use pip install“PySide6&gt;=6.1.2” instead, since &gt; has another meaning in the shell. requirements.txtwriting a requirements.txt file for your project. This file lists the packages your project needs. Whencreating a virtual environment, you and other users can install all therequired packages with a single command, using this file. To create this file, list the name of a pip package, as well as its version (ifrequired), on each line. requirements.txt 12PySide2&gt;=5.11.1appdirs install all those packages in one shot with thiscommand: pip install -r requirements.txt Upgrading Packagespip install –upgrade PySide6 pip install –upgrade -r requirements.txt Removing Packagespip uninstall package Installing one package will also install anyother packages it relies upon, which we call its dependencies. Uninstalling apackage does not remove its dependencies, so you may need to go throughand remove them yourself. Herein lies one more advantage of virtual environments. Once I’m inthat sort of a pickle, I can delete the virtual environment, create a new one,and install only those packages I need. Seriously. Never use sudo pipVirtual Environments and GitIf you’re using Git, create or edit a file called .gitignore in the root directory of your repository. Add this line somewhere in it: venv_1/ the whole shebangThe shebang (short for haSH-BANG, or #!) 1 provides the path to thePython interpreter. While it’s optional, I strongly recommend includingit in your code, as it means the file can be marked as executable and rundirectly, like this: ./hello_world.py hello_world.py 12#!/usr/bin/env python3print(&quot;Hello, world!&quot;) If you happen to have a script which runs in both Python 2 and Python 3,use this shebang instead: #!/usr/bin/env python File EncodingSince Python 3.1, all Python files have used the UTF-8 encoding, allowing theinterpreter to use all of the characters in Unicode. (Prior to that version,the default was to use the old ASCII encoding.) # -*- coding: latin-1 -*- # coding: latin-1 # This Python file uses the following encoding: latin-1 Whatever you use, it must be exactly as shown above, except for swapping latin-1 for whatever encoding you want. For this reason, the first orsecond forms are preferred. A Few Extra Virtual Environment TricksUsing a Virtual Environment Without Activating assuming my virtual environment is venv, I could do thisin the terminal: 123venv/bin/pip install pylintvenv/bin/python&gt; import pylint import pylint still will not work on the system-wide Pythoninteractive shell Quality Control: Static Analyzersstaticanalyzer, which reads your source code, looking for potential problems ordeviations from the standards. One common type of static analyzer, called a linter,checks your source code for common mistakes, potential errors, and styleinconsistencies. Two of the most popular linters are Pylint and PyFlakes. PylintStyle Janitors: Autoformatting Toolsan autoformatter, which can automatically change your Python code—spacing, indentation, and preferred equivalent expressions (such as != instead of &lt;&gt;)—to be PEP 8 compliant. Twooptions are autopep8 and Black. An Exhibition of Code EditorsPyCharmTheprofessional edition adds tools for data, scientific development, and webdevelopment. SYNTA X CR ASH COURSEStatements and ExpressionEach line of code in Python that ends with a line break is a statement,sometimes more specifically known as a simple statement. A section of code that evaluates to a single value is called an expression. put expressions nearly anywhere a value is expected.The expression is evaluated down to a value, and that value is used in thatposition in the statement. The Importance of WhitespacePEP 8 style guide stresses using either four spaces or a single tab per indentation level. Consistency is key! Python really doesn’t care whether you usetabs, two spaces, four spaces, or even seven spaces (although that’s probablya step too far) for each level of indentation. The point is to be consistentwithin any and every given block of code. Doing NothingOn occasion, you will need to insert a statement that has absolutely noeffect. This is particularly useful when you need to put a syntactically validplaceholder where a suite of code will exist later. For this purpose, Pythonprovides the pass keyword. 123raining = Trueif raining: pass Comments and DocstringsTo write comments in Python, precede the line with a hash (#). Everythingbetween the hash and the end of the line is a comment and will be ignoredby the interpreter. DocstringsDocstrings exist to provide documentation for functions, classes, andmodules, especially public ones. They conventionally begin and end withthree quotation marks (“””), allowing the string to automatically span multiple lines. You would typically place docstrings at the top, inside of whatever they’re defining, such as in the function above. There are three important distinctions between comments anddocstrings: Docstrings are string literals, and they are seen by the interpreter; comments are ignored. Docstrings are used in automatic documentation generation. Docstrings are generally only docstrings when they appear at the top ofthe module, function, class, or method they define. Comments can liveanywhere. It is perfectly possible to use a triple-quoted string literal to write a sortof “multiline comment,” but it’s not recommended, since a string literal caneasily get left in a place where Python will try to use it as a value. Declaring VariablesPython is dynamically typed, meaning the data type of a value is determined when it is evaluated. This contrasts with statically typed languages,in which you declare the data type initially. (C++ and Java are both staticallytyped.) using theassignment operator (=). It infers the data type. If the name is a new variable, Python will create it; if the name already exists, Python will changethe value. It’s a pretty straightforward system. two rules to follow with Python variables: Define a variable before you access it; otherwise, you’ll get an error. Don’t change what kind of data you’re storing in the variable, evenwhen replacing a value. Python is considered a strongly typed language, meaning you usually can’tmagically combine data of different types. For example, it won’t allow youto add an integer and a string together. Python is, however, weakly bound, so it is possible to assign a value of adifferent type to an existing variable. While this is technically permissible,it is strongly discouraged, as it can produce confusing code. What About Constants?Python doesn’t have any formally defined constants. In keeping with PEP 8,you would indicate a variable is intended to be treated as a constant byusing all-caps names with underscores. This naming convention is sometimes humorously referred to as screaming snake case for the all-caps (screaming) and the underscores (snakes). For example, the name INTEREST_RATE MathematicsMeet the Number TypesIntegers (int) store whole numbers. In Python, integers are always signedand effectively have no maximum value. Integers use decimal base (base-10)by default, Floating-point numbers (float) store numbers with a decimal part (forexample, 3.141592).Internally, values are stored as double-precision, IEEE 754 floatingpoint numbers, which are subject to the limits inherent in that format. specify an invalid number with float(“nan”), a numberlarger than the largest possible value with float(“inf”), or a number smallerthan the smallest possible value with float(“-inf”). Decimal stores fixed-point decimal numbers, while Fractiondoes the same for fractionsTo use either, you’ll need to import them first. 123456789101112from decimal import Decimalfrom fractions import Fractionthird_fraction = Fraction(1, 3)third_fixed = Decimal(&quot;0.333&quot;)third_float = 1 / 3print(third_fraction) # 1/3print(third_fixed) # 0.333print(third_float) # 0.3333333333333333third_float = float(third_fraction)print(third_float) # 0.3333333333333333third_float = float(third_fixed)print(third_float) # 0.333 12345678910print(-42) # negative (unary), evaluates to -42print(abs(-42)) # absolute value, evaluates to 42print(40 + 2) # addition, evaluates to 42print(44 - 2) # subtraction, evaluates to 42print(21 * 2) # multiplication, evaluates to 42print(680 / 16) # division, evaluates to 42.5print(680 // 16) # floor division (discard remainder), evaluates to 42print(1234 % 149) # modulo, evaluates to 42print(7 ** 2) # exponent, evaluates to 49print((9 + 5) * 3) # parentheses, evaluates to 42 Python offers augmentedassignment operators, sometimes informally called compound assignmentoperators. These allow you to perform an operation with the current valueof the variable as the left operand. 12345678foo = 10foo += 10 # value is now 20 (10 + 10)foo -= 5 # value is now 15 (20 – 5)foo *= 16 # value is now 240 (15 * 16)foo //= 5 # value is now 48 (240 // 5)foo /= 4 # value is now 12.0 (48 / 4)foo **= 2 # value is now 144.0 (12.0 ** 2)foo %= 51 # value is now 42.0 (144.0 % 15) the divmod() function to efficiently perform the calculation, returning the two results in a tuple. Thus, c = divmod(a, b) is thesame as c = (a // b, a % b). bitwise operators 123456print(9 &amp; 8) # bitwise AND, evaluates to 8print(9 | 8) # bitwise OR, evaluates to 9print(9 ^ 8) # bitwise XOR, evaluates to 1print(~8) # unary bitwise ones complement (flip), evaluates to -9print(1 &lt;&lt; 3) # bitwise left shift, evaluates to 8print(8 &gt;&gt; 3) # bitwise right shift, evaluates to 1 the math module123456789import mathprint(math.pi) # PI 3.141592653589793print(math.tau) # TAU 6.283185307179586print(math.e) # Euler's number 2.718281828459045print(math.inf) # Infinityprint(math.nan) # Not-a-Numberinfinity_1 = float('inf')infinity_2 = math.infprint(infinity_1 == infinity_2) # prints True 12345678910import mathdistance_ft = 65 # the distance to the objectangle_deg = 74 # the angle to the top of the object# Convert from degrees to radiansangle_rad = math.radians(angle_deg)# Calculate the height of the objectheight_ft = distance_ft * math.tan(angle_rad)# Round to one decimal placeheight_ft = round(height_ft, 1)print(height_ft) # outputs 226.7 Comparison Operators12345678score = 98high_score = 100print(score == high_score) # equals, evaluates to Falseprint(score != high_score) # not equals, evaluates to Trueprint(score &lt; high_score) # less than, evaluates to Trueprint(score &lt;= high_score) # less than or equals, evaluates to Trueprint(score &gt; high_score) # greater than, evaluates to Falseprint(score &gt;= high_score) # greater than or equals, evaluates to False Boolean, None, and Identity OperatorsTake particular note of the last condition, eggs is spam which illustrates an important gotcha with the is operator. It actually compares the identity of thevariables, rather than the value 123456789101112131415161718192021spam = Trueeggs = Falsepotatoes = Noneif spam is True: # Evaluates to True print(&quot;We have spam.&quot;)if spam is not False: # Evaluates to True print(&quot;I DON'T LIKE SPAM!&quot;)if spam: # Implicitly evaluates to True (preferred) print(&quot;Spam, spam, spam, spam...&quot;)if eggs is False: # Evaluates to True print(&quot;We're all out of eggs.&quot;)if eggs is not True: # Evaluates to True print(&quot;No eggs, but we have spam, spam, spam, spam...&quot;)if not eggs: # Implicitly evaluates to True (preferred) print(&quot;Would you like spam instead?&quot;)if potatoes is not None: # Evaluates to False (preferred) print(&quot;Yum&quot;) # We never reach this...potatoes is None!if potatoes is None: # Evaluates to True (preferred) print(&quot;Yes, we have no potatoes.&quot;)if eggs is spam: # Evaluates to False (CAUTION!!!) print(&quot;This won't work.&quot;) TruthinessMost expressions and values in Python can be evaluated to a True or Falsevalue. This is typically done by using the value as an expression by itself,although you can also pass it to the bool() function to convert it explicitly. 1234answer = 42if answer: print(&quot;Evaluated to True&quot;) # this runsprint(bool(answer)) # prints True When an expression will evaluate to True, it is considered “truthy.”When it will evaluate to False, it is “falsey.” The None constant, values representing zero, and empty collections are all considered “falsey,” while mostother values are “truthy.” Logical Operators12345678spam = Trueeggs = Falseif spam and eggs: # AND operator, evaluates to False print(&quot;I do not like green eggs and spam.&quot;)if spam or eggs: # OR operator, evaluates to True print(&quot;Here's your meal.&quot;)if (not eggs) and spam: # NOT (and AND) operators, evaluates to True print(&quot;But I DON'T LIKE SPAM!&quot;) 1234score = 98high_score = 100print(score != high_score) # not equals operator, evaluates to Trueprint(not score == high_score) # not operator, evaluates to True The condition employing the != operator is preferred for readability. The Walrus OperatorPython 3.8 introduced assignment expressions, which allow you to assign avalue to a variable and use that variable in another expression at the sametime. This is possible with the so-called walrus operator (:=). 123if (eggs := 7 + 5) == 12: print(&quot;We have one dozen eggs&quot;)print(eggs) # prints 12 Python first evaluates the expression on theleft (7+5) and then assigns it to the variable eggs.The assignment expression is then evaluated to a single value, namelythe value of eggs, which is used in the comparison Two particularly useful style rules are put forthby this PEP:• If either assignment statements or assignment expressions can be used,then prefer statements; they are clear declarations of intent.• If using assignment expressions would lead to ambiguity about execution order, then restructure to use statements instead. StringsString LiteralsThe only time you’d really need to escape either single or doublequotes with backslashes would be if you had both types of quotes in thestring at once:question = &quot;What do you mean, \\&quot;it's fine\\&quot;?&quot; triple quotes define multiline string literals. In otherwords, I can use them to do this: 123456789parrot = &quot;&quot;&quot;\\This parrot is no more!He has ceased to be!He's expired and gone to meet his maker!He's a stiff!Bereft of life, he rests in peace!&quot;&quot;&quot;print(parrot) The only exception occurs when you use a backslash (\\) to escapeparticular character, like I did with that newline at the beginning 1. It isconventional to escape the first newline after the opening triple quotes, justto make the code look cleaner. concatenate (combine) string literals, simply bywriting them next to one another, without any operators between them. Forexample, spam = “Hello “ “world” “!” is valid, resulting in the string Helloworld!. Raw StringsRaw strings constitute another form of string literal, wherein the backslash(\\) is always treated as a literal character. They’re preceded with an r, suchas in this example:print(r&quot;I love backslashes: \\ Aren't they cool?&quot;) Formatted Strings123in_stock = 0print(&quot;This cheese shop has &quot; + str(in_stock) + &quot; types of cheese.&quot;)print(f&quot;This cheese shop has {in_stock} types of cheese.&quot;) Instead, you’d have toevaluate that expression in advance, assign the result to a name, and use itin the f-string. The ord() function returns the number representing the unicode code of a specified character. print(f”{ord(‘\\n’)}”) # SyntaxError newline_ord = ord(‘\\n’)print(f”{newline_ord}”) # prints “10” Format SpecificationsImmediately after the expression, you may choose to include one ofthree special flags: !r, !a, or !s (although that last one is the default behavior, so it can be omitted in most cases). These determine which functionis used to fetch the string representation of some value: repr(), ascii(), orstr(), respectively Next comes the format specification itself, which always begins with acolon (:), followed by one or more flags. These have to be specified in a particular order to work, although any of them may be omitted if they’re notdesired: Align An alignment flag, specifying left (&lt;), right (&gt;), center (^), or (ifnumeric) split with the sign aligned left but the digits aligned right (=).This is optionally preceded by a character that will be used to fill anyblank space in the alignment.Sign A flag controlling when the sign is displayed on a number. Theplus (+) flag displays the sign on both positive and negative numbers,while the minus (–) flag only displays it on negative numbers. A thirdoption is to show a leading space on positive numbers and a sign onnegative numbers (SPACE).Alternative form The hash (#) flag turns on the “alternative form,”which has different meanings for different types (see documentation).Leading zeros The zero (0) flag causes leading zeros to be displayed(unless a fill character is specified for alignment).Width The width of the output string in characters. This is where thealignment comes into play.Grouping A flag controlling whether numbers should separate thousands with a comma (,) or an underscore (_). If omitted, no separatoris used. If enabled, the underscore separator also appears every fourdigits in octal, hexadecimal, and binary numbers.Precision A dot (.), followed by an integer for decimal precisionType A flag controlling how numbers are displayed; common optionsinclude binary (b), character (c), decimal (d), hexadecimal (x), exponent notation (e), fixed-point (f), and general (g). There are more (seedocumentation). 123456spam = 1234.56789print(f&quot;{spam:=^+15,.2f}&quot;) # prints &quot;===+1,234.57===&quot;spam = 42print(f&quot;{spam:#07x}&quot;) # prints &quot;0x0002a&quot;spam = &quot;Hi!&quot;print(f&quot;{spam:-^20}&quot;) # prints &quot;--------Hi!---------&quot; String Conversionstr(), is the one you’ll use most often, as it returnsthe human-readable representation of the value. repr() returns the canonical string representation of the value:that is, (usually) the value as Python sees it. In the case of many basic datatypes, this will return the same thing as str(), but when used on mostobjects, the output contains additional information useful in debugging. The ascii() function is the same as repr(), except that the string literalit returns is completely ASCII-compatible, having escaped any non-ASCII(for example, Unicode) characters. A Note on String ConcatenationTypical concatenation with + or the join() function has the same result,but the latter function will be as fast or faster, especially when you’re usingother implementations of Python besides CPython. Therefore, wheneveryou need to concatenate and f-strings aren’t right for the job, you shouldconsider using join() instead of the + or += operators. In practice, f-stringsare the fastest, but join() is your next-best option. 123456789greeting = &quot;Hello&quot;name = &quot;Jason&quot;message = greeting + &quot;, &quot; + name + &quot;!&quot; # value is &quot;Hello, Jason!&quot;print(message)message = &quot;&quot;.join((greeting, &quot;, &quot;, name, &quot;!&quot;)) # value is &quot;Hello, Jason!&quot;print(message) Functions 0Python functions are first-class citizens, which means they can be treated likeany other object Classes and Objects 0Error Handling 01234567num_from_user = input(&quot;Enter a number: &quot;)try: num = int(num_from_user)except ValueError: print(&quot;You didn't enter a valid number.&quot;) num = 0print(f&quot;Your number squared is {num**2}&quot;) Tuples and ListsLists constitute the most array-like collection in Python. In CPython,they are implemented as variable-length arrays A tuple is somewhat similar to a list, but with a few key differences.First, a tuple cannot have items added, reassigned, or removed after its creation. Attempting to modify the contents of a tuple with bracket notationwill result in a TypeError. This is because tuples, unlike lists, are immutable, effectively meaning their contents cannot be modified The guideline is to use tuples for collections of items of different types(heterogeneous collections) and to use lists for collections of items of the sametype (homogeneous collections). LoopsStructural Pattern MatchingPython 3.10 gained structural pattern matching via PEP 634.This provides conditional logic that is at least syntactically similar to switchstatements of other languages. In short, you test a single subject, such as avariable, against one or more patterns. If the subject matches the pattern,the associated suite of code runs. lunch_order = input(“What would you like for lunch? “)match lunch_order: case ‘pizza’: print(“Pizza time!”) case ‘sandwich’: print(“Here’s your sandwich”) case ‘taco’: print(‘Taco, taco, TACO, tacotacotaco!’) case _: print(“Yummy.”) The underscore (_) in the last case is the wildcard, which will match anyvalue. This serves as a fallback case, and it must come last, as it will matchanything. PROJECT STRUCTURE AND IMPORTSSetting Up the RepositoryYour Python code belongs in a separate subdirectory and not in theroot of the repository. This is very important, as your repository’s root directory will get mighty cluttered with build files, packaging scripts, documentation, virtual environments, and all manner of other things that aren’tactually part of the source code. Modules and PackagesA module is any Python (.py) file. A package, occasionally called a regular package, is one or more modules within a directory. That directory must include a file called __init__.py (which can be empty). The __init__.py file is important! If it isn’t there,Python will not know the directory constitutes a package. PEP 8 and NamingModules should have short, all-lowercase names. Underscores canbe used in the module name if it improves readability. Pythonpackages should also have short, all-lowercase names, althoughthe use of underscores is discouraged. Do this: omission/data/data_loader.pyNOT this: omission/Data/DataLoader.py another special file in my top-level package: __main__.py. Thisis the file that runs when I execute my top-level package directly, via thiscommand: Import Dos and Don’ts12345678#!/usr/bin/env python3def open(): print(&quot;Ahhhhhhhhhhhhhh.&quot;)def close(): print(&quot;Thank you for making a simple door very happy.&quot;)import smart_doorsmart_door.open()smart_door.close() The namespace of open() and close() is smart_door. A namespace is anexplicitly defined path to something, such as a function. The functionopen() has the namespace smart_door, which tells me that open() belongs tothat particular module. Importing Within Your Project12345678910111213141516omission-git/└── omission/ ├── __init__.py ├── __main__.py ├── app.py ├── common/ │ ├── __init__.py │ ├── classproperty.py │ ├── constants.py │ └── game_enums.py ├── data/ │ ├── __init__.py │ ├── data_loader.py │ ├── game_round_settings.py │ ├── scoreboard.py │ └── settings.py Listing 4-8: Directory structure of omission-git/ Absolute ImportsI have a class GameMode defined within the game_enums.py module, whichlives in the omission/common package. I want to use that class within mygame_round_settings.py module, defined in the omission/data package Because I defined omission as a top-level package and organized my modules into subpackages, it’s pretty straightforward. In game_round_settings.py,I’d write the following: from omission.common.game_enums import GameMode This line is an absolute import. It starts at the top-level package, omission,and walks down into the common package Relative ImportsYou can also import from a module in the same package or subpackage.This is known as a relative import or an intrapackage reference. A module knows what package it belongs to, and a package knows itsparent package (if it has one). Because of this, relative imports can start thesearch from the current package and move up and down through the project structure. Within omission/data/game_round_settings.py, I can use the followingimport statement: from ..common.game_enums import GameMode Listing 4-11: game_round_settings.py:1c The two dots (..) mean “the current package’s direct parent package,”which, in this case, is omission Importing from the Same Package In omission/data/settings.py, I havethis statement for importing a class from the module omission/data/game_round_settings.py: from omission.data.game_round_settings import GameRoundSettings from game_round_settings import GameRoundSettings However, that will not work. It will fail to locate the game_round_settings.py module because I am running the top-level package (python3 -m omission),and absolute imports for anything within the package being executed(omission) have to start from the top. use a relative import, which looks much simpler than theabsolute import: from .game_round_settings import GameRoundSettings Entry PointsThe parts of the project that are run first when importing orexecuting are called entry points Module Entry PointsWhen you import a Python module or package, it is given a special variablecalled __name__. This contains the fully qualified name of the module or package, which is the name as the import system sees it. For example, the fullyqualified name of the module omission/common/game_enums.py would beomission.common.game_enums. when a module or package is run directly, its __name__ is set to the value “__main__“. a package called testpkg, which contains the module awesome.py. It defines a function, greet(): 123def greet(): print(&quot;Hello, world!&quot;)print(&quot;Awesome module was run.&quot;) In another module in the same directory as testpkg, I have this module(example.py), which I run directly with python3 example.py: 123from testpkg import awesomeprint(__name__) # prints &quot;__main__&quot;print(awesome.__name__) # prints &quot;testpkg.awesome&quot; 123Awesome module was run.__main__testpkg.awesome what if I want that first message to appear only if awesome.py is executed directly, and not when the module is only imported? To accomplishthat, I’d check the value of __name__ variable in a conditional statement. I’verewritten my awesome.py file to do exactly that: 1234def greet(): print(&quot;Hello, world!&quot;)if __name__ == &quot;__main__&quot;: print(&quot;Awesome module was run.&quot;) Package Entry Pointsomission project has a file called __main__ in the top-levelpackage. This file is automatically run when a package is executed directly,but never when importing the package So, when executing omission via python3 -m omission, Python first runsthe __init__.py module (as always), followed by its __main__.py module.Otherwise, if the package is imported instead, only __init__.py is executed. A good __main__.py for a top-level package would look something likethe following: 1234def main(): # Code to start/run your package.if __name__ == &quot;__main__&quot;: main() Program Entry PointsHowever, you (or your eventual end user) may want to run the programmerely by double-clicking or directly executing some single Python file.With everything else in place, this is trivial to implement. To make my omission project easy to run, I created a single script fileoutside the top-level package, named omission.py: 12from omission.__main__ import mainmain() VARIABLES AND TYPESVariables According to Python: Names and ValuesA name refers to a value or an object. A value is a particular instance of data in memoryThe term variable refers to the combination of the two: a name that refers to a value. answer = 42insight = answer insight is not bound to answer, but rather to the samevalue that answer was already bound to when I assigned insight. A namealways points to a value. isdoesn’t check whether a name points to equivalent values, but rather whetherit points to the same value in memory. When you make an assignment, Python makes its own decisions behindthe scenes about whether to create a new value in memory or bind to anexisting value spam = 123456789maps = spameggs = 123456789 print(spam == maps) # prints Trueprint(spam == eggs) # prints True print(spam is maps) # prints Trueprint(spam is eggs) # prints False (probably) (Interactive session) answer = 42insight = 42print(answer is insight) # prints True The is operator checks identity. Unless you really know what you’re doing,only use this to check if something is None.&gt; the built-in function id() returns an integer representing the identity of whatever is passed to it. Data TypesNames are bound to values, and those values exist in memory, as long asthere is some reference to them. You can bind a name to literally any value youwant, but you are limited as to what you can do with any particular value. The type() Functionprint(type(answer)) # prints &lt;class 'int'&gt; if type(answer) is int: print(“What’s the question?”) use isinstance() instead of type(), as it accounts for subclasses andinheritance if isinstance(answer, int): print(“What’s the question?”) Duck TypingIf it looks like a duck, walks like a duck, and quacks like a duck,then it probably is a duck. Python doesn’t care much about what a value’s data type is, but ratherit cares about the functionality of the value’s data type. If your class behaves as itshould, it usually won’t matter what it inherits from. Scope and Garbage CollectionScope is what defines where a variable can be accessed from. It might beavailable to an entire module or limited to the suite (body) of a function. Aname can be global, meaning it is defined by itself in a module, or it can belocal, meaning it only exists within a particular function or comprehension. Local Scope and the Reference-Counting Garbage CollectorFunctions (including lambdas) and comprehensions define their ownscope; they are the only structures in the language to do so. When a scope reaches its end, all the names definedwithin it are automatically deleted. . Modules andclasses don’t have their own scope in the strictest sense; they only havetheir own namespace. loops don’t have their own scope. a reference count, which is simplya count of how many references exist for that value. Every time a value isbound to a name, a reference is created (although there are other ways thelanguage may create references). When there are no more references, thevalue is deleted. This is the reference-counting garbage collector, and it efficientlyhandles most garbage collection scenarios. def spam(): message = “Spam” word = “spam” for _ in range(100): separator = “, “ message += separator + word message += separator message += “spam!” return message output = spam()print(output)even though the name message is deleted when spam() exits, the value is not. Interpreter ShutdownWhen the Python interpreter is asked to shut down, such as when a Pythonprogram terminates, it enters interpreter shutdown. During this phase, the interpreter goes through the process of releasing all allocated resources, callingthe garbage collector multiple times, and triggering destructors in objects. Global ScopeWhen a name is defined within a module but outside of any function, class,or comprehension, it is considered to be in global scope usingthe global high_score name. This means that anywhere I assign a value to thename high_score in score(), the function will use the global name, instead oftrying to create a new local name. If you’re only accessing the currentvalue bound to a global name, you don’t need to use the global keyword. The Dangers of Global ScopeThe nonlocal Keyword trying to assign to a globalname will actually define a new local name that shadows the global one. The same behavior is true of the inner function using names defined inthe outer function, which is known as the nested scope or enclosing scope. Toget around this, I specify that eggs is nonlocal, The nonlocal keyword starts looking for the indicated name in the innermost nested scope, and if it doesn’t find it, it moves to the next enclosingscope above that. It repeats this until it either finds the name or determinesthat the name does not exist in a nonglobal enclosing scope. Scope Resolutionwhich scopes it searches for a name, and in what order,is called the scope resolution order the acronym LEGB LocalEnclosing-function locals (that is, anything found via nonlocal)GlobalBuilt-in The Curious Case of the Class Every namedeclared directly within a class is known as an attribute, and it is accessedthrough the dot (.) operator on the class (or object) name. The Immutable TruthValues in Python can be either immutable or mutable. The difference hingeson whether the values can be modified in place, meaning they can be changedright where they are in memory. Immutable types cannot be modified in place. For example, integers (int),floating-point numbers (float), strings (str), and tuples (tuple) are all immutable. If you attempt to mutate an immutable value, you’ll wind up with acompletely different value being created: eggs = 12carton = eggsprint(eggs is carton) # prints Trueeggs += 1print(eggs is carton) # prints Falseprint(eggs) # prints 13print(carton) # prints 12 Mutable types, on the other hand, can be modified in place.Lists constitute one example of a mutable type: temps = [87, 76, 79]highs = tempsprint(temps is highs) # prints Truetemps += [81]print(temps is highs) # prints Trueprint(highs) # prints [87, 76, 79, 81]print(temps) # prints [87, 76, 79, 81]","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/python/dead_simple_python/"},{"title":"python 100 days","text":"语言元素变量和类型整型：支持二进制（如0b100，换算成十进制是4）、八进制（如0o100，换算成十进制是64）、十进制（100）和十六进制（0x100，换算成十进制是256）的表示法。 浮点型：支持科学计数法（如1.23456e2）。 字符串型：字符串是以单引号或双引号括起来的任意文本，比如’hello’和”hello”,字符串还有原始字符串表示法、字节字符串表示法、Unicode字符串表示法，而且可以书写成多行的形式（用三个单引号或三个双引号开头，三个单引号或三个双引号结尾）。 12345678910111213141516&quot;&quot;&quot;使用type()检查变量的类型Version: 0.1Author: 骆昊&quot;&quot;&quot;a = 100b = 12.345c = 1 + 5jd = 'hello, world'e = Trueprint(type(a)) # &lt;class 'int'&gt;print(type(b)) # &lt;class 'float'&gt;print(type(c)) # &lt;class 'complex'&gt;print(type(d)) # &lt;class 'str'&gt;print(type(e)) # &lt;class 'bool'&gt; 可以使用Python中内置的函数对变量类型进行转换。 int()：将一个数值或字符串转换成整数，可以指定进制。float()：将一个字符串转换成浮点数。str()：将指定的对象转换成字符串形式，可以指定编码。chr()：将整数转换成该编码对应的字符串（一个字符）。ord()：将字符串（一个字符）转换成对应的编码（整数）。 变量命名硬性规则： 变量名由字母（广义的Unicode字符，不包括特殊字符）、数字和下划线构成，数字不能开头。 大小写敏感（大写的a和小写的A是两个不同的变量）。 不要跟关键字（有特殊含义的单词，后面会讲到）和系统保留字（如函数、模块等的名字）冲突。 PEP 8要求： 用小写字母拼写，多个单词用下划线连接。 受保护的实例属性用单个下划线开头。 私有的实例属性用两个下划线开头。 运算符 描述 [] [:] 下标，切片 ** 指数 ~ + - 按位取反, 正负号 * / % // 乘，除，模，整除 + - 加，减 &gt;&gt; &lt;&lt; 右移，左移 &amp; 按位与 ^ | 按位异或，按位或 &lt;= &lt; &gt; &gt;= 小于等于，小于，大于，大于等于 == != 等于，不等于 is is not 身份运算符 in not in 成员运算符 not or and 逻辑运算符 = += -= *= /= %= //= **= &amp;= |= ^= &gt;&gt;= &lt;&lt;= （复合）赋值运算符 运算符 描述 实例 &amp; 按位与运算符：参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0 (a &amp; b) 输出结果 12 ，二进制解释： 0000 1100 按位或运算符：只要对应的二个二进位有一个为1时，结果位就为1。 ^ 按位异或运算符：当两对应的二进位相异时，结果为1 (a ^ b) 输出结果 49 ，二进制解释： 0011 0001 ~ 按位取反运算符：对数据的每个二进制位取反,即把1变为0,把0变为1 。~x 类似于 -x-1 (~a ) 输出结果 -61 ，二进制解释： 1100 0011，在一个有符号二进制数的补码形式。 &lt;&lt; 左移动运算符：运算数的各二进位全部左移若干位，由 &lt;&lt; 右边的数字指定了移动的位数，高位丢弃，低位补0。 a &lt;&lt; 2 输出结果 240 ，二进制解释： 1111 0000 &gt;&gt; 右移动运算符：把”&gt;&gt;”左边的运算数的各二进位全部右移若干位，&gt;&gt; 右边的数字指定了移动的位数 a &gt;&gt; 2 输出结果 15 ，二进制解释： 0000 1111 12345678910111213141516a = 60 # 60 = 0011 1100 b = 13 # 13 = 0000 1101 c = 0 c = a &amp; b; # 12 = 0000 1100c = a | b; # 61 = 0011 1101 c = a ^ b; # 49 = 0011 0001 c = ~a; # -61 = 1100 0011c = a &lt;&lt; 2; # 240 = 1111 0000c = a &gt;&gt; 2; # 15 = 0000 1111 身份运算符用于比较两个对象的存储单元 is 是判断两个标识符是不是引用自一个对象x is y, 类似 id(x) == id(y) , 如果引用的是同一个对象则返回 True，否则返回 False 注： id() 函数用于获取对象内存地址。 比较运算符和逻辑运算符在and运算符左边为False的情况下，右边的表达式根本不会执行。 or运算符也是有短路功能的，在它左边的布尔值为True的情况下，右边的表达式根本不会执行。 print(f'{f:.1f}华氏度 = {c:.1f}摄氏度')其中{f:.1f}和{c:.1f}可以先看成是{f}和{c}，表示输出时会用变量f和变量c的值替换掉这两个占位符，后面的:.1f表示这是一个浮点数，小数点后保留1位有效数字。 123f = float(input('请输入华氏温度: '))c = (f - 32) / 1.8print('%.1f华氏度 = %.1f摄氏度' % (f, c)) print函数中的字符串%.1f是一个占位符，稍后会由一个float类型的变量值替换掉它。同理，如果字符串中有%d，后面可以用一个int类型的变量值替换掉它，而%s会被字符串的值替换掉。 123456789&quot;&quot;&quot;输入年份 如果是闰年输出True 否则输出False&quot;&quot;&quot;year = int(input('请输入年份: '))# 如果代码太长写成一行不便于阅读 可以使用\\对代码进行折行is_leap = year % 4 == 0 and year % 100 != 0 or \\ year % 400 == 0print(is_leap) 循环结构break关键字来提前终止循环，需要注意的是break只能终止它所在的那个循环，这一点在使用嵌套的循环结构需要引起注意。除了break之外，还有另一个关键字是continue，它可以用来放弃本次循环后续的代码直接让循环进入下一轮。 sqrt() function is an inbuilt function in Python programming language that returns the square root of any number. Syntax: math.sqrt(x) Parameter: x is any number such that x&gt;=0 Returns: It returns the square root of the number passed in the parameter. Error: When x&lt;0 it does not executes due to a runtime error. 最大公因数，也称最大公约数、最大公因子，指两个或多个整数共有约数中最大的一个。两个或多个整数公有的倍数叫做它们的公倍数，其中除0以外最小的一个公倍数就叫做这几个整数的最小公倍数。最小公倍数=两数的乘积/最大公约（因）数 12345678910111213141516&quot;&quot;&quot;输入两个正整数计算它们的最大公约数和最小公倍数&quot;&quot;&quot;x = int(input('x = '))y = int(input('y = '))# 如果x大于y就交换x和y的值if x &gt; y: # 通过下面的操作将y的值赋给x, 将x的值赋给y x, y = y, x# 从两个数中较小的数开始做递减的循环for factor in range(x, 0, -1): if x % factor == 0 and y % factor == 0: print('%d和%d的最大公约数是%d' % (x, y, factor)) print('%d和%d的最小公倍数是%d' % (x, y, x * y // factor)) break 函数和模块的使用在Python中，函数的参数可以有默认值，也支持使用可变参数，所以Python并不需要像其他语言一样支持函数的重载 函数重载（英语：function overloading）或方法重载，是某些编程语言（如 C++、C#、Java、Swift、Kotlin 等）具有的一项特性，该特性允许创建多个具有不同实现的同名函数。对重载函数的调用会运行其适用于调用上下文的具体实现，即允许一个函数调用根据上下文执行不同的任务。 例如，doTask() 和 doTask(object o) 是重载函数。调用后者，必须传入一个 object 作为参数，而调用前者时则不需要参数。 用模块管理函数module1.py 12def foo(): print('hello, world!') module2.py 12def foo(): print('goodbye, world!') test.py 12345import module1 as m1import module2 as m2m1.foo()m2.foo() 如果我们导入的模块除了定义函数之外还有可以执行代码，那么Python解释器在导入这个模块时就会执行这些代码，事实上我们可能并不希望如此，因此如果我们在模块中编写了执行代码，最好是将这些执行代码放入如下所示的条件中，这样的话除非直接运行该模块，if条件下的这些代码是不会执行的，因为只有直接执行的模块的名字才是&quot;__main__&quot;。 module3.py 123456789101112131415def foo(): passdef bar(): pass# __name__是Python中一个隐含的变量它代表了模块的名字# 只有被Python解释器直接执行的模块的名字才是__main__if __name__ == '__main__': print('call foo()') foo() print('call bar()') bar() test.py 123import module3# 导入module3时 不会执行模块中if条件成立时的代码 因为模块的名字是module3而不是__main__ 变量的作用域Python查找一个变量时会按照“局部作用域”、“嵌套作用域”、“全局作用域”和“内置作用域”的顺序进行搜索. 123456789101112131415161718def foo(): b = 'hello' # Python中可以在函数内部再定义函数 def bar(): c = True print(a) print(b) print(c) bar() # print(c) # NameError: name 'c' is not definedif __name__ == '__main__': a = 100 # print(b) # NameError: name 'b' is not defined foo() 代码的if分支中定义了一个变量a，这是一个全局变量（global variable），属于全局作用域，因为它没有定义在任何一个函数中。在上面的foo函数中我们定义了变量b，这是一个定义在函数中的局部变量（local variable），属于局部作用域，在foo函数的外部并不能访问到它；但对于foo函数内部的bar函数来说，变量b属于嵌套作用域，在bar函数中我们是可以访问到它的。bar函数中的变量c属于局部作用域，在bar函数之外是无法访问的。 “内置作用域”就是Python内置的那些标识符，我们之前用过的input、print、int等都属于内置作用域。 global关键字来指示foo函数中的变量a来自于全局作用域，如果全局作用域中没有a，那么下面一行的代码就会定义变量a并将其置于全局作用域。同理，如果我们希望函数内部的函数能够修改嵌套作用域中的变量，可以使用nonlocal关键字来指示变量来自于嵌套作用域，请大家自行试验。 1234567def main(): # Todo: Add your code here passif __name__ == '__main__': main() 字符串和常用数据结构在\\后面还可以跟一个八进制或者十六进制数来表示字符，例如\\141和\\x61都代表小写字母a，前者是八进制的表示法，后者是十六进制的表示法。也可以在\\后面跟Unicode字符编码来表示字符，例如\\u9a86\\u660a代表的是中文“骆昊”。 raw string如果不希望字符串中的\\表示转义，我们可以通过在字符串的最前面加上字母r来加以说明 To include the newline character in the string, prefix the string variable with r or R to create a raw string: raw_s = r'Hi\\nHello' print(raw_s)The output is: Hi\\nHello Including Double Backslash Characters in a String Using Raw String 12str2 = 'abc123456'print(str2[::-1]) # 654321cba 1234567891011121314151617s1 = 'hello ' * 3print(s1) # hello hello hello s2 = 'world's1 += s2print(s1) # hello hello hello worldprint('ll' in s1) # Trueprint('good' in s1) # Falsestr2 = 'abc123456'# 从字符串中取出指定位置的字符(下标运算)print(str2[2]) # c# 字符串切片(从指定的开始索引到指定的结束索引)print(str2[2:5]) # c12print(str2[2:]) # c123456print(str2[2::2]) # c246print(str2[::2]) # ac246print(str2[::-1]) # 654321cbaprint(str2[-3:-1]) # 45 1234567891011121314151617181920212223242526272829303132333435str1 = 'hello, world!'# 通过内置函数len计算字符串的长度print(len(str1)) # 13# 获得字符串首字母大写的拷贝print(str1.capitalize()) # Hello, world!# 获得字符串每个单词首字母大写的拷贝print(str1.title()) # Hello, World!# 获得字符串变大写后的拷贝print(str1.upper()) # HELLO, WORLD!# 从字符串中查找子串所在位置print(str1.find('or')) # 8print(str1.find('shit')) # -1# 与find类似但找不到子串时会引发异常# print(str1.index('or'))# print(str1.index('shit'))# 检查字符串是否以指定的字符串开头print(str1.startswith('He')) # Falseprint(str1.startswith('hel')) # True# 检查字符串是否以指定的字符串结尾print(str1.endswith('!')) # True# 将字符串以指定的宽度居中并在两侧填充指定的字符print(str1.center(50, '*'))# 将字符串以指定的宽度靠右放置左侧填充指定的字符print(str1.rjust(50, ' '))str2 = 'abc123456'# 检查字符串是否由数字构成print(str2.isdigit()) # False# 检查字符串是否以字母构成print(str2.isalpha()) # False# 检查字符串是否以数字和字母构成print(str2.isalnum()) # Truestr3 = ' jackfrued@126.com 'print(str3)# 获得字符串修剪左右两侧空格之后的拷贝print(str3.strip()) 123a, b = 5, 10print('{0} * {1} = {2}'.format(a, b, a * b))print(f'{a} * {b} = {a * b}') 常用数据结构12345678910list1 = [1, 3, 5, 7, 100]# 通过循环用下标遍历列表元素for index in range(len(list1)): print(list1[index])# 通过for循环遍历列表元素for elem in list1: print(elem)# 通过enumerate函数处理列表之后再遍历可以同时获得元素索引和值for index, elem in enumerate(list1): print(index, elem) 向列表中添加元素以及如何从列表中移除元素 1234567891011121314151617181920212223list1 = [1, 3, 5, 7, 100]# 添加元素list1.append(200)list1.insert(1, 400)# 合并两个列表# list1.extend([1000, 2000])list1 += [1000, 2000]print(list1) # [1, 400, 3, 5, 7, 100, 200, 1000, 2000]print(len(list1)) # 9# 先通过成员运算判断元素是否在列表中，如果存在就删除该元素if 3 in list1: list1.remove(3)if 1234 in list1: list1.remove(1234)print(list1) # [1, 400, 5, 7, 100, 200, 1000, 2000]# 从指定的位置删除元素list1.pop() #最后一个list1.pop(0)list1.pop(len(list1) - 1)print(list1) # [400, 5, 7, 100, 200, 1000]# 清空列表元素list1.clear()print(list1) # [] 列表的排序操作 1234567891011121314list1 = ['orange', 'apple', 'zoo', 'internationalization', 'blueberry']list2 = sorted(list1)# sorted函数返回列表排序后的拷贝不会修改传入的列表# 函数的设计就应该像sorted函数一样尽可能不产生副作用list3 = sorted(list1, reverse=True)# 通过key关键字参数指定根据字符串长度进行排序而不是默认的字母表顺序list4 = sorted(list1, key=len)print(list1)print(list2)print(list3)print(list4)# 给列表对象发出排序消息直接在列表对象上进行排序list1.sort(reverse=True)print(list1) 生成式和生成器 123456789101112131415161718import sysf = [x for x in range(1, 10)]print(f)f = [x + y for x in 'ABCDE' for y in '1234567']print(f)# 用列表的生成表达式语法创建列表容器# 用这种语法创建列表之后元素已经准备就绪所以需要耗费较多的内存空间f = [x ** 2 for x in range(1, 1000)]print(sys.getsizeof(f)) # 查看对象占用内存的字节数print(f)# 请注意下面的代码创建的不是一个列表而是一个生成器对象# 通过生成器可以获取到数据但它不占用额外的空间存储数据# 每次需要数据的时候就通过内部的运算得到数据(需要花费额外的时间)f = (x ** 2 for x in range(1, 1000))print(sys.getsizeof(f)) # 相比生成式生成器不占用存储数据的空间print(f)for val in f: print(val) 通过yield关键字将一个普通函数改造成生成器函数。 1234567891011121314def fib(n): a, b = 0, 1 for _ in range(n): a, b = b, a + b yield adef main(): for val in fib(20): print(val)if __name__ == '__main__': main() 123456# instead of doing:temp = aa = bb = temp# do this:a, b = b, a 使用集合Python中的集合跟数学上的集合是一致的，不允许有重复元素，而且可以进行交集、并集、差集等运算。 字典12345678910111213141516171819202122232425262728293031323334353637# 创建字典的字面量语法scores = {'骆昊': 95, '白元芳': 78, '狄仁杰': 82}print(scores)# 创建字典的构造器语法items1 = dict(one=1, two=2, three=3, four=4)# 通过zip函数将两个序列压成字典items2 = dict(zip(['a', 'b', 'c'], '123'))# 创建字典的推导式语法items3 = {num: num ** 2 for num in range(1, 10)}print(items1, items2, items3)# 通过键可以获取字典中对应的值print(scores['骆昊'])print(scores['狄仁杰'])# 对字典中所有键值对进行遍历for key in scores: print(f'{key}: {scores[key]}')# 更新字典中的元素scores['白元芳'] = 65scores['诸葛王朗'] = 71scores.update(冷面=67, 方启鹤=85)print(scores)if '武则天' in scores: print(scores['武则天'])print(scores.get('武则天'))# get方法也是通过键获取对应的值但是可以设置默认值print(scores.get('武则天', 60))# 删除字典中的元素print(scores.popitem())print(scores.popitem())print(scores.pop('骆昊', 100))# 清空字典scores.clear()print(scores) index = pos if has_dot else pos + 1 1234567891011121314def get_suffix(filename, has_dot=False): &quot;&quot;&quot; 获取文件名的后缀名 :param filename: 文件名 :param has_dot: 返回的后缀名是否需要带点 :return: 文件的后缀名 &quot;&quot;&quot; pos = filename.rfind('.') if 0 &lt; pos &lt; len(filename) - 1: index = pos if has_dot else pos + 1 return filename[index:] else: return '' 面向对象编程基础属性到底具有怎样的访问权限（也称为可见性）。因为在很多面向对象编程语言中，我们通常会将对象的属性设置为私有的（private）或受保护的（protected），简单的说就是不允许外界访问，而对象的方法通常都是公开的（public），因为公开的方法就是对象能够接受的消息。 在Python中，属性和方法的访问权限只有两种，也就是公开的和私有的，如果希望属性是私有的，在给属性命名时可以用两个下划线作为开头 1234567891011121314151617181920class Test: def __init__(self, foo): self.__foo = foo def __bar(self): print(self.__foo) print('__bar')def main(): test = Test('hello') # AttributeError: 'Test' object has no attribute '__bar' test.__bar() # AttributeError: 'Test' object has no attribute '__foo' print(test.__foo)if __name__ == &quot;__main__&quot;: main() 但是，Python并没有从语法上严格保证私有属性或方法的私密性，它只是给私有的属性和方法换了一个名字来妨碍对它们的访问，事实上如果你知道更换名字的规则仍然可以访问到它们 123456789101112131415161718class Test: def __init__(self, foo): self.__foo = foo def __bar(self): print(self.__foo) print('__bar')def main(): test = Test('hello') test._Test__bar() print(test._Test__foo)if __name__ == &quot;__main__&quot;: main() 不建议将属性设置为私有的，因为这会导致子类无法访问（后面会讲到）。所以大多数Python程序员会遵循一种命名惯例就是让属性名以单下划线开头来表示属性是受保护的，本类之外的代码在访问这样的属性时应该要保持慎重。这种做法并不是语法上的规则，单下划线开头的属性和方法外界仍然是可以访问的，所以更多的时候它是一种暗示或隐喻 封装封装的理解是”隐藏一切可以隐藏的实现细节，只向外界暴露（提供）简单的编程接口” 面向对象进阶通过属性的getter（访问器）和setter（修改器）方法进行对应的操作。如果要做到这点，就可以考虑使用@property包装器来包装getter和setter方法，使得对属性的访问既安全又方便 1234567891011121314151617181920212223242526272829303132333435363738class Person(object): def __init__(self, name, age): self._name = name self._age = age # 访问器 - getter方法 @property def name(self): return self._name # 访问器 - getter方法 @property def age(self): return self._age # 修改器 - setter方法 @age.setter def age(self, age): self._age = age def play(self): if self._age &lt;= 16: print('%s正在玩飞行棋.' % self._name) else: print('%s正在玩斗地主.' % self._name)def main(): person = Person('王大锤', 12) person.play() person.age = 22 person.play() # person.name = '白元芳' # AttributeError: can't set attributeif __name__ == '__main__': main() slotsPython是一门动态语言。通常，动态语言允许我们在程序运行时给对象绑定新的属性或方法，当然也可以对已经绑定的属性和方法进行解绑定。但是如果我们需要限定自定义类型的对象只能绑定某些属性，可以通过在类中定义__slots__变量来进行限定。需要注意的是__slots__的限定只对当前类的对象生效，对子类并不起任何作用。 12345678910111213141516171819202122232425262728293031323334class Person(object): # 限定Person对象只能绑定_name, _age和_gender属性 __slots__ = ('_name', '_age', '_gender') def __init__(self, name, age): self._name = name self._age = age @property def name(self): return self._name @property def age(self): return self._age @age.setter def age(self, age): self._age = age def play(self): if self._age &lt;= 16: print('%s正在玩飞行棋.' % self._name) else: print('%s正在玩斗地主.' % self._name)def main(): person = Person('王大锤', 22) person.play() person._gender = '男' # AttributeError: 'Person' object has no attribute '_is_gay' # person._is_gay = True 静态方法和类方法先写一个方法来验证三条边长是否可以构成三角形，这个方法很显然就不是对象方法，因为在调用这个方法时三角形对象尚未创建出来（因为都不知道三条边能不能构成三角形），所以这个方法是属于三角形类而并不属于三角形对象的。我们可以使用静态方法来解决这类问题 123456789101112131415161718192021222324252627282930313233343536373839from math import sqrtclass Triangle(object): def __init__(self, a, b, c): self._a = a self._b = b self._c = c @staticmethod def is_valid(a, b, c): return a + b &gt; c and b + c &gt; a and a + c &gt; b def perimeter(self): return self._a + self._b + self._c def area(self): half = self.perimeter() / 2 return sqrt(half * (half - self._a) * (half - self._b) * (half - self._c))def main(): a, b, c = 3, 4, 5 # 静态方法和类方法都是通过给类发消息来调用的 if Triangle.is_valid(a, b, c): t = Triangle(a, b, c) print(t.perimeter()) # 也可以通过给类发消息来调用对象方法但是要传入接收消息的对象作为参数 # print(Triangle.perimeter(t)) print(t.area()) # print(Triangle.area(t)) else: print('无法构成三角形.')if __name__ == '__main__': main() 在类中定义类方法，类方法的第一个参数约定名为cls，它代表的是当前类相关的信息的对象（类本身也是一个对象，有的地方也称之为类的元数据对象），通过这个参数我们可以获取和类相关的信息并且可以创建出类的对象 123456789101112131415161718192021222324252627282930313233343536373839404142434445from time import time, localtime, sleepclass Clock(object): &quot;&quot;&quot;数字时钟&quot;&quot;&quot; def __init__(self, hour=0, minute=0, second=0): self._hour = hour self._minute = minute self._second = second @classmethod def now(cls): ctime = localtime(time()) return cls(ctime.tm_hour, ctime.tm_min, ctime.tm_sec) def run(self): &quot;&quot;&quot;走字&quot;&quot;&quot; self._second += 1 if self._second == 60: self._second = 0 self._minute += 1 if self._minute == 60: self._minute = 0 self._hour += 1 if self._hour == 24: self._hour = 0 def show(self): &quot;&quot;&quot;显示时间&quot;&quot;&quot; return '%02d:%02d:%02d' % \\ (self._hour, self._minute, self._second)def main(): # 通过类方法创建对象并获取系统时间 clock = Clock.now() while True: print(clock.show()) sleep(1) clock.run()if __name__ == '__main__': main() 类之间的关系 在已有类的基础上创建新类，这其中的一种做法就是让一个类从另一个类那里将属性和方法直接继承下来，从而减少重复代码的编写。提供继承信息的我们称之为父类，也叫超类或基类；得到继承信息的我们称之为子类，也叫派生类或衍生类。子类除了继承父类提供的属性和方法，还可以定义自己特有的属性和方法，所以子类比父类拥有的更多的能力 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778class Person(object): &quot;&quot;&quot;人&quot;&quot;&quot; def __init__(self, name, age): self._name = name self._age = age @property def name(self): return self._name @property def age(self): return self._age @age.setter def age(self, age): self._age = age def play(self): print('%s正在愉快的玩耍.' % self._name) def watch_av(self): if self._age &gt;= 18: print('%s正在观看爱情动作片.' % self._name) else: print('%s只能观看《熊出没》.' % self._name)class Student(Person): &quot;&quot;&quot;学生&quot;&quot;&quot; def __init__(self, name, age, grade): super().__init__(name, age) self._grade = grade @property def grade(self): return self._grade @grade.setter def grade(self, grade): self._grade = grade def study(self, course): print('%s的%s正在学习%s.' % (self._grade, self._name, course))class Teacher(Person): &quot;&quot;&quot;老师&quot;&quot;&quot; def __init__(self, name, age, title): super().__init__(name, age) self._title = title @property def title(self): return self._title @title.setter def title(self, title): self._title = title def teach(self, course): print('%s%s正在讲%s.' % (self._name, self._title, course))def main(): stu = Student('王大锤', 15, '初三') stu.study('数学') stu.watch_av() t = Teacher('骆昊', 38, '砖家') t.teach('Python程序设计') t.watch_av()if __name__ == '__main__': main() 用子类对象去替换掉一个父类对象，这是面向对象编程中一个常见的行为，对应的原则称之为里氏替换原则。 子类在继承了父类的方法后，可以对父类已有的方法给出新的实现版本，这个动作称之为方法重写（override）。通过方法重写我们可以让父类的同一个行为在子类中拥有不同的实现版本，当我们调用这个经过子类重写的方法时，不同的子类对象会表现出不同的行为，这个就是多态（poly-morphism）。 12345678910111213141516171819202122232425262728293031323334353637from abc import ABCMeta, abstractmethodclass Pet(object, metaclass=ABCMeta): &quot;&quot;&quot;宠物&quot;&quot;&quot; def __init__(self, nickname): self._nickname = nickname @abstractmethod def make_voice(self): &quot;&quot;&quot;发出声音&quot;&quot;&quot; passclass Dog(Pet): &quot;&quot;&quot;狗&quot;&quot;&quot; def make_voice(self): print('%s: 汪汪汪...' % self._nickname)class Cat(Pet): &quot;&quot;&quot;猫&quot;&quot;&quot; def make_voice(self): print('%s: 喵...喵...' % self._nickname)def main(): pets = [Dog('旺财'), Cat('凯蒂'), Dog('大黄')] for pet in pets: pet.make_voice()if __name__ == '__main__': main() 将Pet类处理成了一个抽象类，所谓抽象类就是不能够创建对象的类，这种类的存在就是专门为了让其他类去继承它。 Dog和Cat两个子类分别对Pet类中的make_voice抽象方法进行了重写并给出了不同的实现版本，当我们在main函数中调用该方法时，这个方法就表现出了多态行为（同样的方法做了不同的事情）。 python从语法层面并没有像Java或C#那样提供对抽象类的支持，但是我们可以通过abc模块的ABCMeta元类和abstractmethod包装器来达到抽象类的效果，如果一个类中存在抽象方法那么这个类就不能够实例化（创建对象）。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899&quot;&quot;&quot;某公司有三种类型的员工 分别是部门经理、程序员和销售员需要设计一个工资结算系统 根据提供的员工信息来计算月薪部门经理的月薪是每月固定15000元程序员的月薪按本月工作时间计算 每小时150元销售员的月薪是1200元的底薪加上销售额5%的提成&quot;&quot;&quot;from abc import ABCMeta, abstractmethodclass Employee(object, metaclass=ABCMeta): &quot;&quot;&quot;员工&quot;&quot;&quot; def __init__(self, name): &quot;&quot;&quot; 初始化方法 :param name: 姓名 &quot;&quot;&quot; self._name = name @property def name(self): return self._name @abstractmethod def get_salary(self): &quot;&quot;&quot; 获得月薪 :return: 月薪 &quot;&quot;&quot; passclass Manager(Employee): &quot;&quot;&quot;部门经理&quot;&quot;&quot; def get_salary(self): return 15000.0class Programmer(Employee): &quot;&quot;&quot;程序员&quot;&quot;&quot; def __init__(self, name, working_hour=0): super().__init__(name) self._working_hour = working_hour @property def working_hour(self): return self._working_hour @working_hour.setter def working_hour(self, working_hour): self._working_hour = working_hour if working_hour &gt; 0 else 0 def get_salary(self): return 150.0 * self._working_hourclass Salesman(Employee): &quot;&quot;&quot;销售员&quot;&quot;&quot; def __init__(self, name, sales=0): super().__init__(name) self._sales = sales @property def sales(self): return self._sales @sales.setter def sales(self, sales): self._sales = sales if sales &gt; 0 else 0 def get_salary(self): return 1200.0 + self._sales * 0.05def main(): emps = [ Manager('刘备'), Programmer('诸葛亮'), Manager('曹操'), Salesman('荀彧'), Salesman('吕布'), Programmer('张辽'), Programmer('赵云') ] for emp in emps: if isinstance(emp, Programmer): emp.working_hour = int(input('请输入%s本月工作时间: ' % emp.name)) elif isinstance(emp, Salesman): emp.sales = float(input('请输入%s本月销售额: ' % emp.name)) # 同样是接收get_salary这个消息但是不同的员工表现出了不同的行为(多态) print('%s本月工资为: ￥%s元' % (emp.name, emp.get_salary()))if __name__ == '__main__': main() 图形用户界面和游戏开发基本上使用tkinter来开发GUI应用需要以下5个步骤： 导入tkinter模块中我们需要的东西。 创建一个顶层窗口对象并用它来承载整个GUI应用。 在顶层窗口对象上添加GUI组件。 通过代码将这些GUI组件的功能组织起来。 进入主事件循环(main loop)。 12345678910111213141516171819202122232425262728293031323334353637383940414243import tkinterimport tkinter.messageboxdef main(): flag = True # 修改标签上的文字 def change_label_text(): nonlocal flag flag = not flag color, msg = ('red', 'Hello, world!')\\ if flag else ('blue', 'Goodbye, world!') label.config(text=msg, fg=color) # 确认退出 def confirm_to_quit(): if tkinter.messagebox.askokcancel('温馨提示', '确定要退出吗?'): window.quit() # 创建顶层窗口 window = tkinter.Tk() # 设置窗口大小 window.geometry('240x160') # 设置窗口标题 window.title('小游戏') # 创建标签对象并添加到顶层窗口 label = tkinter.Label(window, text='Hello, world!', font='Arial -32', fg='red') label.pack(expand=1) # 创建一个装按钮的容器 panel = tkinter.Frame(window) # 创建按钮对象 指定添加到哪个容器中 通过command参数绑定事件回调函数 button1 = tkinter.Button(panel, text='修改', command=change_label_text) button1.pack(side='left') button2 = tkinter.Button(panel, text='退出', command=confirm_to_quit) button2.pack(side='right') panel.pack(side='bottom') # 开启主事件循环 tkinter.mainloop()if __name__ == '__main__': main() 文件和异常 操作模式 具体含义 'r' 读取 （默认） 'w' 写入（关闭文件之后，会先截断/删除之前的内容） 'x' 写入，如果文件已经存在会产生异常 'a' 追加，将内容写入到已有文件的末尾 'b' 二进制模式 't' 文本模式（默认） '+' 更新（既可以读又可以写） 如果open函数指定的文件并不存在或者无法打开，那么将引发异常状况导致程序崩溃。为了让代码有一定的健壮性和容错性，我们可以使用Python的异常机制对可能在运行时发生状况的代码进行适当的处理。 123456789101112131415161718def main(): f = None try: f = open('致橡树.txt', 'r', encoding='utf-8') print(f.read()) except FileNotFoundError: print('无法打开指定的文件!') except LookupError: print('指定了未知的编码!') except UnicodeDecodeError: print('读取文件时解码错误!') finally: if f: f.close()if __name__ == '__main__': main() 调用了sys模块的exit函数退出Python环境，finally块都会被执行，因为exit函数实质上是引发了SystemExit异常） 由于finally块的代码不论程序正常还是异常都会执行到,因此我们通常把finally块称为“总是执行代码块”，它最适合用来做释放外部资源的操作。如果不愿意在finally代码块中关闭文件对象释放资源，也可以使用上下文语法，通过with关键字指定文件对象的上下文环境并在离开上下文环境时自动释放文件资源，代码如下所示。 1234567891011121314def main(): try: with open('致橡树.txt', 'r', encoding='utf-8') as f: print(f.read()) except FileNotFoundError: print('无法打开指定的文件!') except LookupError: print('指定了未知的编码!') except UnicodeDecodeError: print('读取文件时解码错误!')if __name__ == '__main__': main() 除了使用文件对象的read方法读取文件之外，还可以使用for-in循环逐行读取或者用readlines方法将文件按行读取到一个列表容器中 123456789101112131415161718192021222324import timedef main(): # 一次性读取整个文件内容 with open('致橡树.txt', 'r', encoding='utf-8') as f: print(f.read()) # 通过for-in循环逐行读取 with open('致橡树.txt', mode='r') as f: for line in f: print(type(line)) #str print(line, end='') time.sleep(0.5) print() # 读取文件按行读取到列表中 with open('致橡树.txt') as f: lines = f.readlines() print(lines) if __name__ == '__main__': main() JSON JSON Python object dict array list string str number (int / real) int / float true / false True / False null None json模块主要有四个比较重要的函数，分别是： dump - 将Python对象按照JSON格式序列化到文件中 dumps - 将Python对象处理成JSON格式的字符串 load - 将文件中的JSON数据反序列化成对象 loads - 将字符串的内容反序列化成Python对象 序列化（serialization）在计算机科学的数据处理中，是指将数据结构或对象状态转换为可以存储或传输的形式，这样在需要的时候能够恢复到原先的状态，而且通过序列化的数据重新获取字节时，可以利用这些字节来产生原始对象的副本（拷贝）。与这个过程相反的动作，即从一系列字节中提取数据结构的操作，就是反序列化（deserialization） 12345678910111213141516171819202122232425import jsondef main(): mydict = { 'name': '骆昊', 'age': 38, 'qq': 957658, 'friends': ['王大锤', '白元芳'], 'cars': [ {'brand': 'BYD', 'max_speed': 180}, {'brand': 'Audi', 'max_speed': 280}, {'brand': 'Benz', 'max_speed': 320} ] } try: with open('data.json', 'w', encoding='utf-8') as fs: json.dump(mydict, fs) except IOError as e: print(e) print('保存数据完成!')if __name__ == '__main__': main() re 函数 说明 compile(pattern, flags=0) 编译正则表达式返回正则表达式对象 match(pattern, string, flags=0) 用正则表达式匹配字符串 成功返回匹配对象 否则返回None search(pattern, string, flags=0) 搜索字符串中第一次出现正则表达式的模式 成功返回匹配对象 否则返回None fullmatch(pattern, string, flags=0) match函数的完全匹配（从字符串开头到结尾）版本 findall(pattern, string, flags=0) 查找字符串所有与正则表达式匹配的模式 返回字符串的列表 finditer(pattern, string, flags=0) 查找字符串所有与正则表达式匹配的模式 返回一个迭代器 purge() 清除隐式编译的正则表达式的缓存 re.I / re.IGNORECASE 忽略大小写匹配标记 re.M / re.MULTILINE 多行匹配标记 进程和线程进程就是操作系统中执行的一个程序，操作系统以进程为单位分配存储空间，每个进程都有自己的地址空间、数据栈以及其他用于跟踪进程执行的辅助数据，操作系统管理所有进程的执行，为它们合理的分配资源。进程可以通过fork或spawn的方式来创建新的进程来执行其他的任务，不过新的进程也有自己独立的内存空间，因此必须通过进程间通信机制（IPC，Inter-Process Communication）来实现数据共享，具体的方式包括管道、信号、套接字、共享内存区等。 一个进程还可以拥有多个并发的执行线索，简单的说就是拥有多个可以获得CPU调度的执行单元，这就是所谓的线程。由于线程在同一个进程下，它们可以共享相同的上下文，因此相对于进程而言，线程间的信息共享和通信更加容易。在单核CPU系统中，真正的并发是不可能的，因为在某个时刻能够获得CPU的只有唯一的一个线程，多个线程共享了CPU的执行时间。在其他进程的角度，多线程的程序对其他程序并不友好，因为它占用了更多的CPU执行时间，导致其他程序无法获得足够的CPU执行时间； 多进程程序中的代码只能按顺序一点点的往下执行，那么即使执行两个毫不相关的下载任务，也需要先等待一个文件下载完成后才能开始下一个下载任务，很显然这并不合理也没有效率。 123456789101112131415161718192021from random import randintfrom time import time, sleepdef download_task(filename): print('开始下载%s...' % filename) time_to_download = randint(5, 10) sleep(time_to_download) print('%s下载完成! 耗费了%d秒' % (filename, time_to_download))def main(): start = time() download_task('Python从入门到住院.pdf') download_task('Peking Hot.avi') end = time() print('总共耗费了%.2f秒.' % (end - start))if __name__ == '__main__': main() 开始下载Python从入门到住院.pdf…Python从入门到住院.pdf下载完成! 耗费了6秒开始下载Peking Hot.avi…Peking Hot.avi下载完成! 耗费了7秒总共耗费了13.01秒. 通过Process类创建了进程对象，通过target参数我们传入一个函数来表示进程启动后要执行的代码，后面的args是一个元组，它代表了传递给函数的参数。Process对象的start方法用来启动进程，而join方法表示等待进程执行结束。运行上面的代码可以明显发现两个下载任务“同时”启动了，而且程序的执行时间将大大缩短，不再是两个任务的时间总和。 12345678910111213141516171819202122232425262728from multiprocessing import Processfrom os import getpidfrom random import randintfrom time import time, sleepdef download_task(filename): print('启动下载进程，进程号[%d].' % getpid()) print('开始下载%s...' % filename) time_to_download = randint(5, 10) sleep(time_to_download) print('%s下载完成! 耗费了%d秒' % (filename, time_to_download))def main(): start = time() p1 = Process(target=download_task, args=('Python从入门到住院.pdf', )) p1.start() p2 = Process(target=download_task, args=('Peking Hot.avi', )) p2.start() p1.join() p2.join() end = time() print('总共耗费了%.2f秒.' % (end - start))if __name__ == '__main__': main() 启动下载进程，进程号[1530].开始下载Python从入门到住院.pdf…启动下载进程，进程号[1531].开始下载Peking Hot.avi…Peking Hot.avi下载完成! 耗费了7秒Python从入门到住院.pdf下载完成! 耗费了10秒总共耗费了10.01秒. 多线程直接使用threading模块的Thread类来创建线程 1234567891011121314151617181920212223242526from random import randintfrom threading import Threadfrom time import time, sleepdef download(filename): print('开始下载%s...' % filename) time_to_download = randint(5, 10) sleep(time_to_download) print('%s下载完成! 耗费了%d秒' % (filename, time_to_download))def main(): start = time() t1 = Thread(target=download, args=('Python从入门到住院.pdf',)) t1.start() t2 = Thread(target=download, args=('Peking Hot.avi',)) t2.start() t1.join() t2.join() end = time() print('总共耗费了%.3f秒' % (end - start))if __name__ == '__main__': main() 通过继承Thread类的方式来创建自定义的线程类，然后再创建线程对象并启动线程。代码如下所示。 1234567891011121314151617181920212223242526272829303132from random import randintfrom threading import Threadfrom time import time, sleepclass DownloadTask(Thread): def __init__(self, filename): super().__init__() self._filename = filename def run(self): print('开始下载%s...' % self._filename) time_to_download = randint(5, 10) sleep(time_to_download) print('%s下载完成! 耗费了%d秒' % (self._filename, time_to_download))def main(): start = time() t1 = DownloadTask('Python从入门到住院.pdf') t1.start() t2 = DownloadTask('Peking Hot.avi') t2.start() t1.join() t2.join() end = time() print('总共耗费了%.2f秒.' % (end - start))if __name__ == '__main__': main() 如果一个资源被多个线程竞争使用，那么我们通常称之为“临界资源”，对“临界资源”的访问需要加上保护，否则资源会处于“混乱”的状态。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849from time import sleepfrom threading import Threadclass Account(object): def __init__(self): self._balance = 0 def deposit(self, money): # 计算存款后的余额 new_balance = self._balance + money # 模拟受理存款业务需要0.01秒的时间 sleep(0.01) # 修改账户余额 self._balance = new_balance @property def balance(self): return self._balanceclass AddMoneyThread(Thread): def __init__(self, account, money): super().__init__() self._account = account self._money = money def run(self): self._account.deposit(self._money)def main(): account = Account() threads = [] # 创建100个存款的线程向同一个账户中存钱 for _ in range(100): t = AddMoneyThread(account, 1) threads.append(t) t.start() # 等所有存款的线程都执行完毕 for t in threads: t.join() print('账户余额为: ￥%d元' % account.balance)if __name__ == '__main__': main() 通过“锁”来保护“临界资源”，只有获得“锁”的线程才能访问“临界资源”，而其他没有得到“锁”的线程只能被阻塞起来，直到获得“锁”的线程释放了“锁”，其他线程才有机会获得“锁”，进而访问被保护的“临界资源”。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051from time import sleepfrom threading import Thread, Lockclass Account(object): def __init__(self): self._balance = 0 self._lock = Lock() def deposit(self, money): # 先获取锁才能执行后续的代码 self._lock.acquire() try: new_balance = self._balance + money sleep(0.01) self._balance = new_balance finally: # 在finally中执行释放锁的操作保证正常异常锁都能释放 self._lock.release() @property def balance(self): return self._balanceclass AddMoneyThread(Thread): def __init__(self, account, money): super().__init__() self._account = account self._money = money def run(self): self._account.deposit(self._money)def main(): account = Account() threads = [] for _ in range(100): t = AddMoneyThread(account, 1) threads.append(t) t.start() for t in threads: t.join() print('账户余额为: ￥%d元' % account.balance)if __name__ == '__main__': main() Python的多线程并不能发挥CPU的多核特性 任务的类型，可以把任务分为计算密集型和I/O密集型。计算密集型任务的特点是要进行大量的计算，消耗CPU资源，比如对视频进行编码解码或者格式转换等等计算密集型任务由于主要消耗CPU资源，这类任务用Python这样的脚本语言去执行效率通常很低，最能胜任这类任务的是C语言 涉及到网络、存储介质I/O的任务都可以视为I/O密集型任务.这类任务的特点是CPU消耗很少，任务的大部分时间都在等待I/O操作完成（因为I/O的速度远远低于CPU和内存的速度）网络应用和Web应用。 单线程+异步I/O充分利用操作系统提供的异步I/O支持，就可以用单进程单线程模型来执行多任务，这种全新的模型称为事件驱动模型。 Nginx就是支持异步I/O的Web服务器，它在单核CPU上采用单进程模型就可以高效地支持多任务。在多核CPU上，可以运行多个进程（数量与CPU核心数相同），充分利用多核CPU。 在Python语言中，单线程+异步I/O的编程模型称为协程,基于事件驱动编写高效的多任务程序. 协程最大的优势就是极高的执行效率，因为子程序切换不是线程切换，而是由程序自身控制，因此，没有线程切换的开销。协程的第二个优势就是不需要多线程的锁机制，因为只有一个线程，也不存在同时写变量冲突，在协程中控制共享资源不用加锁，只需要判断状态就好了，所以执行效率比多线程高很多。 如果想要充分利用CPU的多核特性，最简单的方法是多进程+协程，既充分利用多核，又充分发挥协程的高效率，可获得极高的性能。 网络编程协议族就是一系列的协议及其构成的通信模型. TCP/IP模型。与国际标准化组织发布的OSI/RM这个七层模型不同，TCP/IP是一个四层模型，也就是说，该模型将我们使用的网络从逻辑上分解为四个层次，自底向上依次是：网络接口层、网络层、传输层和应用层，如下图所示。 IP通常被翻译为网际协议，它服务于网络层，主要实现了寻址和路由的功能。“路由器”的网络中继设备，它们会存储转发我们发送到网络上的数据分组，让从源头发出的数据最终能够找到传送到目的地通路，这项功能就是所谓的路由。 TCP全称传输控制协议，它是基于IP提供的寻址和路由服务而建立起来的负责实现端到端可靠传输的协议. 数据不传丢不传错（利用握手、校验和重传机制可以实现）。 流量控制（通过滑动窗口匹配数据发送者和接收者之间的传输速度）。 拥塞控制（通过RTT时间以及对滑动窗口的控制缓解网络拥堵）。 网络应用模式C/S模式和B/S模式。这里的C指的是Client（客户端），通常是一个需要安装到某个宿主操作系统上的应用程序；而B指的是Browser（浏览器），它几乎是所有图形化操作系统都默认安装了的一个应用软件；通过C或B都可以实现对S（服务器）的访问。去中心化的网络应用通常没有固定的服务器或者固定的客户端，所有应用的使用者既可以作为资源的提供者也可以作为资源的访问者。 requests12345678910111213141516171819202122232425262728293031323334353637from time import timefrom threading import Threadimport requests# 继承Thread类创建自定义的线程类class DownloadHanlder(Thread): def __init__(self, url): super().__init__() self.url = url def run(self): filename = self.url[self.url.rfind('/') + 1:] resp = requests.get(self.url) with open('/Users/Hao/' + filename, 'wb') as f: f.write(resp.content)def main(): # 通过requests模块的get函数获取网络资源 # 下面的代码中使用了天行数据接口提供的网络API # 要使用该数据接口需要在天行数据的网站上注册 # 然后用自己的Key替换掉下面代码的中APIKey即可 resp = requests.get( 'http://api.tianapi.com/meinv/?key=APIKey&amp;num=10') # 将服务器返回的JSON格式的数据解析为字典 data_model = resp.json() for mm_dict in data_model['newslist']: url = mm_dict['picUrl'] # 通过多线程的方式实现图片下载 DownloadHanlder(url).start()if __name__ == '__main__': main() 套接字编程 socket套接字就是一套用C语言写成的应用程序开发库，主要用于实现进程间通信和网络编程，在网络应用开发中被广泛使用。 基于套接字来使用传输层提供的传输服务，并基于此开发自己的网络应用。实际开发中使用的套接字可以分为三类：流套接字（TCP套接字）、数据报套接字和原始套接字。 TCP套接字在Python中可以通过创建socket对象并指定type属性为SOCK_STREAM来使用TCP套接字。一台主机可能拥有多个IP地址，而且很有可能会配置多个不同的服务，所以作为服务器端的程序，需要在创建套接字对象后将其绑定到指定的IP地址和端口上。 12345678910111213141516171819202122232425262728293031323334from socket import socket, SOCK_STREAM, AF_INETfrom datetime import datetimedef main(): # 1.创建套接字对象并指定使用哪种传输服务 # family=AF_INET - IPv4地址 # family=AF_INET6 - IPv6地址 # type=SOCK_STREAM - TCP套接字 # type=SOCK_DGRAM - UDP套接字 # type=SOCK_RAW - 原始套接字 server = socket(family=AF_INET, type=SOCK_STREAM) # 2.绑定IP地址和端口(端口用于区分不同的服务) # 同一时间在同一个端口上只能绑定一个服务否则报错 server.bind(('127.0.0.1', 6789)) # 3.开启监听 - 监听客户端连接到服务器 # 参数512可以理解为连接队列的大小 server.listen(512) print('服务器启动开始监听...') while True: # 4.通过循环接收客户端的连接并作出相应的处理(提供服务) # accept方法是一个阻塞方法如果没有客户端连接到服务器代码不会向下执行 # accept方法返回一个元组其中的第一个元素是客户端对象 # 第二个元素是连接到服务器的客户端的地址(由IP和端口两部分构成) client, addr = server.accept() print(str(addr) + '连接到了服务器.') # 5.发送数据 client.send(str(datetime.now()).encode('utf-8')) # 6.断开连接 client.close()if __name__ == '__main__': main() 运行服务器程序后我们可以通过Windows系统的telnet来访问该服务器，结果如下图所示 通过Python的程序来实现TCP客户端的功能 123456789101112131415from socket import socketdef main(): # 1.创建套接字对象默认使用IPv4和TCP协议 client = socket() # 2.连接到服务器(需要指定IP地址和端口) client.connect(('127.0.0.1', 6789)) # 3.从服务器接收数据 print(client.recv(1024).decode('utf-8')) client.close()if __name__ == '__main__': main() 使用多线程技术处理多个用户请求的服务器，该服务器会向连接到服务器的客户端发送一张图片。 123456789101112131415161718192021222324252627282930313233343536373839404142434445from socket import socket, SOCK_STREAM, AF_INETfrom base64 import b64encodefrom json import dumpsfrom threading import Threaddef main(): # 自定义线程类 class FileTransferHandler(Thread): def __init__(self, cclient): super().__init__() self.cclient = cclient def run(self): my_dict = {} my_dict['filename'] = 'guido.jpg' # JSON是纯文本不能携带二进制数据 # 所以图片的二进制数据要处理成base64编码 my_dict['filedata'] = data # 通过dumps函数将字典处理成JSON字符串 json_str = dumps(my_dict) # 发送JSON字符串 self.cclient.send(json_str.encode('utf-8')) self.cclient.close() # 1.创建套接字对象并指定使用哪种传输服务 server = socket() # 2.绑定IP地址和端口(区分不同的服务) server.bind(('192.168.1.2', 5566)) # 3.开启监听 - 监听客户端连接到服务器 server.listen(512) print('服务器启动开始监听...') with open('guido.jpg', 'rb') as f: # 将二进制数据处理成base64再解码成字符串 data = b64encode(f.read()).decode('utf-8') while True: client, addr = server.accept() # 启动一个线程来处理客户端的请求 FileTransferHandler(client).start()if __name__ == '__main__': main() client: 1234567891011121314151617181920212223242526272829from socket import socketfrom json import loadsfrom base64 import b64decodedef main(): client = socket() client.connect(('192.168.1.2', 5566)) # 定义一个保存二进制数据的对象 in_data = bytes() # 由于不知道服务器发送的数据有多大每次接收1024字节 data = client.recv(1024) while data: # 将收到的数据拼接起来 in_data += data data = client.recv(1024) # 将收到的二进制数据解码成JSON字符串并转换成字典 # loads函数的作用就是将JSON字符串转成字典对象 my_dict = loads(in_data.decode('utf-8')) filename = my_dict['filename'] filedata = my_dict['filedata'].encode('utf-8') with open('/Users/Hao/' + filename, 'wb') as f: # 将base64格式的数据解码成二进制数据并写入文件 f.write(b64decode(filedata)) print('图片已保存.')if __name__ == '__main__': main() JSON并不能携带二进制数据，因此对图片的二进制数据进行了Base64编码的处理。Base64是一种用64个字符表示所有二进制数据的编码方式，通过将二进制数据每6位一组的方式重新组织，刚好可以使用0~9的数字、大小写字母以及“+”和“/”总共64个字符表示从000000到111111的64种状态。 udp不对传输的可靠性和可达性做出任何承诺从而避免了TCP中握手和重传的开销，所以在强调性能和而不是数据完整性的场景中（例如传输网络音视频数据），UDP可能是更好的选择 email12345678910111213141516171819202122from smtplib import SMTPfrom email.header import Headerfrom email.mime.text import MIMETextdef main(): # 请自行修改下面的邮件发送者和接收者 sender = 'abcdefg@126.com' receivers = ['uvwxyz@qq.com', 'uvwxyz@126.com'] message = MIMEText('用Python发送邮件的示例代码.', 'plain', 'utf-8') message['From'] = Header('王大锤', 'utf-8') message['To'] = Header('骆昊', 'utf-8') message['Subject'] = Header('示例代码实验邮件', 'utf-8') smtper = SMTP('smtp.126.com') # 请自行修改下面的登录口令 smtper.login(sender, 'secretpass') smtper.sendmail(sender, receivers, message.as_string()) print('邮件发送完成!')if __name__ == '__main__': main() 进阶数据结构和算法 迭代器/生成器 并发编程","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/python/github_python_100_days/"},{"title":"pierian data python django","text":"errors and exception handlingtry: code to be attempted(may lead to an error)except: code will execute in case there is an error in try blockfinally: a final block of code to be executed, ragardless of an error 1234567891011121314try: print('10' + 10)except IOError: print('you have input/output error!') print('do you check the file permissions?')except TypeError: print('you are using the wrong data types!')except: print(&quot;there is an error!&quot;)# else:# print(&quot;Else block ran&quot;)finally: print(&quot;finally will always run, error or no error!&quot;) object oriented programmingpart one: syntax structure12345678class NameOfClass(): def __init__(self, param1, param2): self.param1 = param1 self.param2 = param2 def some_method(self): #perform some action print(self.param1) create a class1234567891011121314151617class Student(): # class attribute planet = 'Earth' def __init__(self, name, gpa): self.name = name self.gpa = gpastu1 = Student(name='Jose', gpa=4.0)print(stu1) # &lt;__main__.Student object at 0x0000026F37D5E810&gt;print(type(stu1)) # &lt;class '__main__.Student'&gt;print(stu1.name) # Josestu2 = Student(name='Mini', gpa=3.5)print(Student.planet) # Earthprint(stu1.planet) # Earthprint(stu2.planet) # Earth methods12345678910111213141516171819202122232425262728293031323334class Circle(): pi = 3.14 def __init__(self, radius=1): self.radius = radius def area(self): return self.radius * self.radius * Circle.pi # return self.radius * self.radius * self.pi def perimeter(self): return self.radius * 2 * Circle.pi def double_radius(self): self.radius *= 2 def multiply_radius(self, number): self.radius *= numbermy_circle = Circle(radius=20)print(my_circle.radius) # 20my_circle.double_radius()print(my_circle.radius) # 40my_circle.multiply_radius(3)print(my_circle.radius) # 120print(my_circle.area) # &lt;bound method Circle.area of &lt;__main__.Circle object at 0x00000219A522EAD0&gt;&gt;print(my_circle.area()) # 1256.0print(my_circle.perimeter()) # 125.60000000000001 inheritancecreate derived variations of classes through the use of inheritance 1234567891011121314151617181920212223242526272829303132333435363738394041424344class Person(): def __init__(self, first_name, last_name): self.first_name = first_name self.last_name = last_name def hello(self): print(&quot;hello!&quot;) def report(self): print(f&quot;I am {self.first_name} {self.last_name}&quot;)x = Person(&quot;John&quot;, &quot;Smith&quot;)x.hello()x.report()class Agent(Person): def __init__(self, first_name, last_name, code_name): super().__init__(first_name, last_name) # Person.__init__(first_name, last_name) self.code_name = code_name def report(self): print('I am here') # return super().report() def reveal(self, passcode): if passcode == '123': print('i am a secret agent') else: self.report()y = Agent('John', 'sme', '007')y.hello()y.report()y.reveal('123') # i am a secret agenty.reveal('000') # I am hereprint(y.code_name) # 007 special methods12345678910111213141516171819202122class Book(): def __init__(self, title, author, pages) -&gt; None: self.title = title self.author = author self.pages = pages def __str__(self): return f&quot;{self.title} written by {self.author}&quot; def __len__(self): return self.pagesmy_book = Book('Python Rocks!', 'Jose', 120)# print(my_book) # &lt;__main__.Book object at 0x00000284301FE810&gt;# print(len(my_book)) # TypeError: object of type 'Book' has no len()print(my_book) # Python Rocks! written by Joseprint(len(my_book)) # 120 modules and packages123456789from mymodule import useful_func, UsefulClass# from mymodule import UsefulClassfrom mypackage.mysubmodule import my_sub_funcuseful_func() # Using the useful_funcmy_usefull_object = UsefulClass('hello')my_usefull_object.report() # hellomy_sub_func() # using a functiong from mysubmodule.py mymodule.py 1234567891011def useful_func(): print(&quot;Using the useful_func&quot;)class UsefulClass(): def __init__(self, message) -&gt; None: self.message = message def report(self): print(self.message) mypackage -&gt; __init__.py mypackage -&gt; mysubmodule.py 12def my_sub_func(): print('using a functiong from mysubmodule.py') django first django projectdjango-admin startproject my_site_1 python manage.py runserverpython manage.py runserver 8080 django applicationsa sub-component of a single django project(web application) python manage.py startapp app_name views, routing, and urlspath() urlpattern view name kwargs urlpatterns = [ path(‘’, home_view, name=’homepage’),] dynamic views and logicresponses and 404123456789def news_view(request, topic): try: result = articles[topic] return HttpResponse(articles[topic]) except: # result = 'No page for that topic' # return HttpResponseNotFound(result) raise Http404(&quot;404 GENERIC ERROR!&quot;) # return HttpResponse(articles[topic]) url names and reverse","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/python/pierian_data_django_python/"},{"title":"mosh python","text":"expression : a statement get a result primitive typeboolean only -&gt; False True string 1234567message = &quot;&quot;&quot;dasfas dgadgsasdg asdfadsf&quot;&quot;&quot; 12str1 = &quot;hello&quot;str1[0] 12345first = &quot;Mosh&quot;last = &quot;Hamedani&quot;full = f&quot;{first + last}&quot;print(full) 12345str1 = &quot;Hello world&quot;str1.find(&quot;lo&quot;)if &quot;lo&quot; in course: pass 1234abs(-2.9)import mathmath.ceil(2.2) falsy -&gt; bool()“”0None ternary operator 12345678age = 22# if age &gt;= 18:# message = &quot;Eligible&quot;# else:# message = &quot;Not eligible&quot;message = &quot;Eligible&quot; if age &gt;= 18 else &quot;Not eligible&quot;print(message) short circule 12if high_income and good_credit and not student: pass 如果high_income 是FALSE,good_credit 根本没有进行判断 “b” &gt; “a” -&gt; True iterable for x in “hello” pass function default return None class level attribute 1234567891011class Point: default_color = &quot;red&quot; def __init__(self): passpoint = Point()print(point.default_color)print(Point.default_color) class method 12345678910class Point: def __init__(self, x, y): pass @classmethod def zero(cls): return cls(0, 0) # Point(0, 0) passpoint = Point.zero() 1234567891011class Point: def __init__(self, x, y): self.x = x self.y = y def __str__(self): return f&quot;({self.x}, {self.y})&quot;point = Point(1, 2)print(point)print(str(point))","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/python/mosh_python/"},{"title":"qiangfeng python","text":"网络请求库 –&gt; 浏览器客户端 网站服务器WSGI： The Web Server Gateway Interface is a simple calling convention for web servers to forward requests to web applications or frameworks written in the Python programming language. 浏览器客户端WebKit is a browser engine developed by Apple and primarily used in its Safari web browser, as well as all web browsers on iOS and iPadOS. HTTP RequestsStart lineHTTP requests are messages sent by the client to initiate an action on the server. Their start-line contain three elements: An HTTP method, a verb (like GET, PUT or POST) or a noun (like HEAD or OPTIONS), that describes the action to be performed. For example, GET indicates that a resource should be fetched or POST means that data is pushed to the server (creating or modifying a resource, or generating a temporary document to send back). The request target, usually a URL, or the absolute path of the protocol, port, and domain are usually characterized by the request context. The format of this request target varies between different HTTP methods. The HTTP version, which defines the structure of the remaining message, acting as an indicator of the expected version to use for the response. HTTP request headerThe start-line and HTTP headers of the HTTP message are collectively known as the head of the requests, whereas its payload is known as the body. 12345678910111213GET /home.html HTTP/1.1Host: developer.mozilla.orgUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:50.0) Gecko/20100101 Firefox/50.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflate, brReferer: https://developer.mozilla.org/testpage.htmlConnection: keep-aliveUpgrade-Insecure-Requests: 1If-Modified-Since: Mon, 18 Jul 2016 02:36:04 GMTIf-None-Match: &quot;c561c68d0ba92bbeb8b0fff2a9199f722e3a621a&quot;Cache-Control: max-age=0 BodyThe final part of the request is its body. Not all requests have one: requests fetching resources, like GET, HEAD, DELETE, or OPTIONS, usually don’t need one. Some requests send data to the server in order to update it: as often the case with POST requests (containing HTML form data). Bodies can be broadly divided into two categories: Single-resource bodies, consisting of one single file, defined by the two headers: Content-Type and Content-Length. Multiple-resource bodies, consisting of a multipart body, each containing a different bit of information. This is typically associated with HTML Forms. HTTP Responses Status lineThe start line of an HTTP response, called the status line, contains the following information: The protocol version, usually HTTP/1.1. A status code, indicating success or failure of the request. Common status codes are 200, 404, or 302 A status text. A brief, purely informational, textual description of the status code to help a human understand the HTTP message. A typical status line looks like: HTTP/1.1 404 Not Found. 网络请求： urlliburllib is a package that collects several modules for working with URLs: requestsRequests is an HTTP client library for the Python programming language. Requests is one of the most, if not the most, popular Python libraries that is not included with Python due to its elegant mapping of the HTTP protocol onto Python’s object-oriented semanticsIt is implemented as a wrapper for urllib3, another 3rd party Python HTTP library. selenium appium 手机app 数据解析 reThis module provides regular expression matching operations similar to those found in Perl. xpathXPath (XML Path Language) is an expression language designed to support the query or transformation of XML documents.The XPath language is based on a tree representation of the XML document, and provides the ability to navigate around the tree, selecting nodes by a variety of criteria. bs4 json 数据存储 pymysql mongodb elasticsearch 多任务 多线程 threading/queue抢占式多任务处理（Preemptive multitasking）是计算机操作系统中，一种实现多任务处理（multi task）的方式。相对于协作式多任务处理而言。协作式环境下，下一个进程被调度的前提是当前进程主动放弃时间片；抢占式环境下，操作系统完全决定进程调度方案，操作系统可以剥夺耗时长的进程的时间片，提供给其它进程。 协程 asynio | gevent/eventlet协程非常类似于线程。但是协程是协作式多任务的，而典型的线程是内核级抢占式多任务的。协作式多任务（Cooperative Multitasking），是一种多任务处理方式，多任务是使电脑能同时处理多个程序的技术，相对于抢占式多任务（Preemptive multitasking）由操作系统决定任务切换时机。协作式多任务要求每一个运行中的程序，定时放弃(yield)自己的执行权利，告知操作系统可让下一个程序执行，因为需要程序之间合作达到调度，故称作协作式多任务。 反爬虫 UA(user-agent) 登录cookie 请求频次 -&gt; IP代理 验证码 动态js（splash/api）","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/python/qiangfeng_python/"},{"title":"python crash course","text":"Getting StartedSetting up your Programming Environmentinstalling Pythonhttps://www.python.org/downloads/ run the installer. Make sure you select the option Add Python to PATH, which will make it easier to configure your system correctly. Figure 1-1 shows this option selected. Running Python in a Terminal SessionOpen a new command window and enter python in lowercase. You shouldsee a Python prompt (&gt;&gt;&gt;), which means Windows has found the version ofPython you just installed. Installing the Python Extension for VS CodeTo install the Python extension, click the Manage icon, which lookslike a gear in the lower-left corner of the VS Code app. In the menu thatappears, click Extensions. Enter python in the search box and click thePython extension. (If you see more than one extension named Python,choose the one supplied by Microsoft.) running hello_world.pyfolder: python_work file: hello_world.py print(&quot;Hello Python world!&quot;) vscode -&gt; run -&gt; Run Without Debugging or press CTRL-F5 Hello Python world! Running Python Programs from a Terminalterminal to run hello_world.py: 12345C:\\&gt; cd Desktop\\python_workC:\\Desktop\\python_work&gt; dirhello_world.pyC:\\Desktop\\python_work&gt; python hello_world.pyHello Python world! First, use the cd command to navigate to the python_work folder, which is in the Desktop folder. Next, use the dir command to make sure hello_world.py is in this folder. Then run the file using the command python hello_world.py. Variables and Simple Data Typesvariable12message = &quot;Hello Python world!&quot;print(message) output Hello Python world! We’ve added a variable named message. Every variable is connected to avalue, which is the information associated with that variable. 1234message = &quot;Hello Python world!&quot;print(message)message = &quot;Hello Python Crash Course world!&quot;print(message) output: 12Hello Python world!Hello Python Crash Course world! You can change the value of a variable in your program at any time,and Python will always keep track of its current value. Naming and Using Variablesrules: Variable names can contain only letters, numbers, and underscores.They can start with a letter or an underscore, but not with a number.For instance, you can call a variable message_1 but not 1_message. Spaces are not allowed in variable names, but underscores can be usedto separate words in variable names. For example, greeting_message worksbut greeting message will cause errors. Avoid using Python keywords and function names as variable names.For example, do not use the word print as a variable name; Pythonhas reserved it for a particular programmatic purpose. (See “PythonKeywords and Built-in Functions” on page 466.) Variable names should be short but descriptive. For example, name isbetter than n, student_name is better than s_n, and name_length is betterthan length_of_persons_name. Be careful when using the lowercase letter l and the uppercase letter Obecause they could be confused with the numbers 1 and 0. The Python variables you’re using at this point should be lowercase. You won’t get errors if you use uppercase letters, but uppercase letters in variable names have special meanings that we’ll discuss in later chapters. Avoiding Name Errors When Using Variables12message = &quot;Hello Python Crash Course reader!&quot;print(mesage) When an error occurs in your program, The interpreter providesa traceback when a program cannot run successfully. A traceback is a record of where the interpreter ran into trouble when trying to execute your code. example: 12345Traceback (most recent call last):File &quot;hello_world.py&quot;, line 2, in &lt;module&gt; # 1 print(mesage) # 2 ^^^^^^NameError: name 'mesage' is not defined. Did you mean: 'message'? # 3 The output reports that an error occurs in line 2 of the file hello_world.py and tells us what kind of error it found 3.In this case it found a name errorand reports that the variable being printed, mesage, has not been defined. A name error usually means we either forgot to set a variable’s value before using it, or we made a spelling mistake when entering the variable’s name. If Python finds a variable name that’s similar to the one it doesn’t recognize, it will ask if that’s the name you meant to use. Variables Are Labels It’s much better to think of variables as labels that you can assign to values. You canalso say that a variable references a certain value. StringsA string is a series of characters.Anything inside quotes is considered a string in Python, and you can use single or double quotes around your strings like this: “This is a string.”‘This is also a string.’ use quotes and apostrophes within your strings: ‘I told my friend, “Python is my favorite language!”‘“The language ‘Python’ is named after Monty Python, not the snake.”“One of Python’s strengths is its diverse and supportive community.” Changing Case in a String with Methodsstring.title() Return a version of the string where each word is titlecased.More specifically, words start with uppercased characters and all remaining cased characters have lower case. 12name = &quot;ada lovelace&quot;print(name.title()) output:Ada Lovelace A method is an action that Python can perform on a piece of data. The dot (.) after name in name.title() tells Python to make the title() method act on the variable name. Every method is followed by a set of parentheses, becausemethods often need additional information to do their work. That information is provided inside the parentheses. The title() function doesn’t needany additional information, so its parentheses are empty. change a string to all uppercase or all lowercase letters like this: 123name = &quot;Ada Lovelace&quot;print(name.upper())print(name.lower()) This will display the following: ADA LOVELACEada lovelace The lower() method is particularly useful for storing data. You typically won’t want to trust the capitalization that your users provide, so you’ll convert strings to lowercase before storing them. Then when you want to display the information, you’ll use the case that makes the most sense foreach string. Using Variables in Stringsuse a variable’s value inside a string: 1234first_name = &quot;ada&quot;last_name = &quot;lovelace&quot;full_name = f&quot;{first_name} {last_name}&quot; # 1print(full_name) place the letter f immediatelybefore the opening quotation mark 1. Put braces around the name ornames of any variable you want to use inside the string. These strings are called f-strings. The f is for format, because Pythonformats the string by replacing the name of any variable in braces with itsvalue. The output from the previous code is:ada lovelace another example: 1234first_name = &quot;ada&quot;last_name = &quot;lovelace&quot;full_name = f&quot;{first_name} {last_name}&quot;print(f&quot;Hello, {full_name.title()}!&quot;) # 1 output: Hello, Ada Lovelace! Adding Whitespace to Strings with Tabs or Newlineswhitespace refers to any nonprinting characters, such asspaces, tabs, and end-of-line symbols.use whitespace to organize your output so it’s easier for users to read. a tab \\t: 1234&gt;&gt;&gt; print(&quot;Python&quot;)Python&gt;&gt;&gt; print(&quot;\\tPython&quot;) Python newline \\n: 12345&gt;&gt;&gt; print(&quot;Languages:\\nPython\\nC\\nJavaScript&quot;)Languages:PythonCJavaScript combine tabs and newlines: 12345&gt;&gt;&gt; print(&quot;Languages:\\n\\tPython\\n\\tC\\n\\tJavaScript&quot;)Languages: Python C JavaScript Stripping Whitespace‘python’ and ‘python ‘ to a program, they are two different strings. often you’ll want to compare two strings to determine whether they are the same. Extra whitespace can be confusing in much simpler situations as well. eliminate extra whitespace from data that people enter. To ensure that no whitespace exists at the right side of a string, usethe rstrip() method: 1234567&gt;&gt;&gt; favorite_language = 'python ' # 1&gt;&gt;&gt; favorite_language # 2'python '&gt;&gt;&gt; favorite_language.rstrip() # 3'python'&gt;&gt;&gt; favorite_language # 4'python ' However, it is only removed temporarily. If you ask for the valueof favorite_language again, the string looks the same as when it was entered,including the extra whitespace 4.To remove the whitespace from the string permanently, you have toassociate the stripped value with the variable name: 1234&gt;&gt;&gt; favorite_language = 'python '&gt;&gt;&gt; favorite_language = favorite_language.rstrip() # 1&gt;&gt;&gt; favorite_language'python' strip whitespace from the left side of a string using the lstrip() methodfrom both sides at once using strip(): 1234567&gt;&gt;&gt; favorite_language = ' python ' # 1 &gt;&gt;&gt; favorite_language.rstrip() # 2 ' python'&gt;&gt;&gt; favorite_language.lstrip() # 3 'python '&gt;&gt;&gt; favorite_language.strip() # 4 'python' In the real world, these stripping functions are used most often to clean upuser input before it’s stored in a program. Removing Prefixesremove a prefix. 123&gt;&gt;&gt; nostarch_url = 'https://nostarch.com'&gt;&gt;&gt; nostarch_url.removeprefix('https://')'nostarch.com' Enter the name of the variable followed by a dot, and then the methodremoveprefix(). Inside the parentheses, enter the prefix you want to removefrom the original string. Like the methods for removing whitespace, removeprefix() leaves theoriginal string unchanged. If you want to keep the new value with the prefix removed, either reassign it to the original variable or assign it to a newvariable: &gt;&gt;&gt; simple_url = nostarch_url.removeprefix('https://') Avoiding Syntax Errors with StringsA syntax error occurs when Python doesn’t recognize a section of your program as valid Python code. example 12message = 'One of Python's strengths is its diverse community.'print(message) You’ll see the following output: 1234File &quot;apostrophe.py&quot;, line 1message = 'One of Python's strengths is its diverse community.'1 ^SyntaxError: unterminated string literal (detected at line 1) Your editor’s syntax highlighting feature should help you spot some syntax errors quickly as you write your programs. If you see Python code highlighted as if it’s English or English highlighted as if it’s Python code, you probably have a mismatched quotation mark somewhere in your file. NumbersIntegersYou can add (+), subtract (-), multiply (*), and divide (/) integers in Python. 12345678&gt;&gt;&gt; 2 + 35&gt;&gt;&gt; 3 - 21&gt;&gt;&gt; 2 * 36&gt;&gt;&gt; 3 / 21.5 uses two multiplication symbols to represent exponents: 123456&gt;&gt;&gt; 3 ** 29&gt;&gt;&gt; 3 ** 327&gt;&gt;&gt; 10 ** 61000000 Python supports the order of operations too, so you can use multipleoperations in one expression. You can also use parentheses to modify theorder of operations. For example: 1234&gt;&gt;&gt; 2 + 3*414&gt;&gt;&gt; (2 + 3) * 420 The spacing in these examples has no effect on how Python evaluates the expressions; it simply helps you more quickly spot the operations that have priority when you’re reading through the code. FloatsPython calls any number with a decimal point a float. it refers to the fact that a decimal point Variables and can appear at any position in a number. For the most part, you can use floats without worrying about how theybehave. Simply enter the numbers you want to use, and Python will mostlikely do what you expect: 12345678&gt;&gt;&gt; 0.1 + 0.10.2&gt;&gt;&gt; 0.2 + 0.20.4&gt;&gt;&gt; 2 *0.10.2&gt;&gt;&gt; 2* 0.20.4 However, be aware that you can sometimes get an arbitrary number ofdecimal places in your answer: 1234&gt;&gt;&gt; 0.2 + 0.10.30000000000000004&gt;&gt;&gt; 3 * 0.10.30000000000000004 This happens in all languages and is of little concern. Python tries tofind a way to represent the result as precisely as possible, which is sometimesdifficult given how computers have to represent numbers internally. Integers and FloatsWhen you divide any two numbers, even if they are integers that result in awhole number, you’ll always get a float: 12&gt;&gt;&gt; 4/22.0 If you mix an integer and a float in any other operation, you’ll get afloat as well: 123456&gt;&gt;&gt; 1 + 2.03.0&gt;&gt;&gt; 2 * 3.06.0&gt;&gt;&gt; 3.0 ** 29.0 Python defaults to a float in any operation that uses a float, even if theoutput is a whole number. Underscores in NumbersWhen you’re writing long numbers, you can group digits using underscoresto make large numbers more readable: 123&gt;&gt;&gt; universe_age = 14_000_000_000&gt;&gt;&gt; print(universe_age)14000000000 Python ignores the underscores when storing these kinds of values. Even if you don’t group the digits in threes, the value will still be unaffected. To Python, 1000 is the same as 1_000, which is the same as 10_00. Thisfeature works for both integers and floats. Multiple AssignmentYou can assign values to more than one variable using just a single line ofcode. This can help shorten your programs and make them easier to read; you’ll use this technique most often when initializing a set of numbers.For example, here’s how you can initialize the variables x, y, and z to zero: &gt;&gt;&gt; x, y, z = 0, 0, 0 You need to separate the variable names with commas, and do the samewith the values, and Python will assign each value to its respective variable.As long as the number of values matches the number of variables, Pythonwill match them up correctly ConstantsA constant is a variable whose value stays the same throughout the life of aprogram. Python doesn’t have built-in constant types, but Python programmers use all capital letters to indicate a variable should be treated as a constant and never be changed: MAX_CONNECTIONS = 5000 Commentsu should add notes within your programs that describe your overall approach to theproblem you’re solving. A comment allows you to write notes in your spokenlanguage, within your programs. How Do You Write Comments?In Python, the hash mark (#) indicates a comment. Anything following ahash mark in your code is ignored by the Python interpreter. For example: 12# Say hello to everyone.print(&quot;Hello Python people!&quot;) Python ignores the first line and executes the second line.Hello Python people! Introducing Listswhat is a listA list is a collection of items in a particular order Because a list usually contains more than one element, it’s a good idea to make the name of your list plural, such as letters, digits, or names In Python, square brackets ([]) indicate a list, and individual elements in the list are separated by commas.example 12bicycles = ['trek', 'cannondale', 'redline', 'specialized']print(bicycles) output:['trek', 'cannondale', 'redline', 'specialized'] Accessing Elements in a ListLists are ordered collections, so you can access any element in a list bytelling Python the position, or index, of the item desired. To access an element in a list, write the name of the list followed by the index of the itemenclosed in square brackets. 12bicycles = ['trek', 'cannondale', 'redline', 'specialized']print(bicycles[0]) outputtrek Index Positions Start at 0, Not 1Python has a special syntax for accessing the last element in a list. If youask for the item at index -1, Python always returns the last item in the list: 123bicycles = ['trek', 'cannondale', 'redline', 'specialized']print(bicycles[-1]) The index -2 returns the second item from the end of the list, the index -3 returns the third item from the end, and so forth. Using Individual Values from a ListYou can use individual values from a list just as you would any other variable. 123bicycles = ['trek', 'cannondale', 'redline', 'specialized']message = f&quot;My first bicycle was a {bicycles[0].title()}.&quot;print(message) Modifying, Adding, and Removing ElementsMost lists you create will be dynamic, meaning you’ll build a list and thenadd and remove elements from it as your program runs its course. Modifying Elements in a ListTo change an element, use the name of the list followedby the index of the element you want to change, and then provide the newvalue you want that item to have. 1234motorcycles = ['honda', 'yamaha', 'suzuki']print(motorcycles)motorcycles[0] = 'ducati'print(motorcycles) output[‘honda’, ‘yamaha’, ‘suzuki’][‘ducati’, ‘yamaha’, ‘suzuki’] Adding Elements to a ListAppending Elements to the End of a Listappend the item to thelist. When you append an item to a list, the new element is added to the endof the list 1234motorcycles = ['honda', 'yamaha', 'suzuki']print(motorcycles)motorcycles.append('ducati')print(motorcycles) To put your users in control, start by defining an empty list thatwill hold the users’ values. Then append each new value provided to the listyou just created. For example, 12345motorcycles = []motorcycles.append('honda')motorcycles.append('yamaha')motorcycles.append('suzuki')print(motorcycles) output[‘honda’, ‘yamaha’, ‘suzuki’] Inserting Elements into a ListYou can add a new element at any position in your list by using the insert()method. You do this by specifying the index of the new element and thevalue of the new item:This operation shifts every other value in the list one position to theright. 123motorcycles = ['honda', 'yamaha', 'suzuki']motorcycles.insert(0, 'ducati')print(motorcycles) output[ducati’, ‘honda’, ‘yamaha’, ‘suzuki’] Removing Elements from a ListRemoving an Item Using the del Statementknow the position of the item you want to remove from a list, you canuse the del statement: motorcycles = [‘honda’, ‘yamaha’, ‘suzuki’]print(motorcycles)del motorcycles[0]print(motorcycles) Removing an Item Using the pop() MethodThe pop() method removes the last item in a list, but it lets you workwith that item after removing it. The term pop comes from thinking of alist as a stack of items and popping one item off the top of the stack. In thisanalogy, the top of a stack corresponds to the end of a list. 12345motorcycles = ['honda', 'yamaha', 'suzuki']print(motorcycles)popped_motorcycle = motorcycles.pop()print(motorcycles)print(popped_motorcycle) [‘honda’, ‘yamaha’, ‘suzuki’][‘honda’, ‘yamaha’]suzuki Popping Items from Any Position in a List123motorcycles = ['honda', 'yamaha', 'suzuki']first_owned = motorcycles.pop(0)print(f&quot;The first motorcycle I owned was a {first_owned.title()}.&quot;) The first motorcycle I owned was a Honda. Remember that each time you use pop(), the item you work with is nolonger stored in the list. when you want to delete an item from a list and not use that item in any way, use the del statement; if you want to use an item as you remove it, use the pop() method. Removing an Item by ValueIf you only know the value of the item you want to remove, youcan use the remove() method 1234motorcycles = ['honda', 'yamaha', 'suzuki', 'ducati']print(motorcycles)motorcycles.remove('ducati')print(motorcycles) [‘honda’, ‘yamaha’, ‘suzuki’, ‘ducati’][‘honda’, ‘yamaha’, ‘suzuki’] The remove() method deletes only the first occurrence of the value you specify. If there’s a possibility the value appears more than once in the list, you’ll need to use a loop to make sure all occurrences of the value are removed. Organizing a ListSometimes you’ll wantto preserve the original order of your list, and other times you’ll want tochange the original order. Sorting a List Permanently with the sort() MethodThe sort() method changes the order of the list permanently. The carsare now in alphabetical order, and we can never revert to the original order: 123cars = ['bmw', 'audi', 'toyota', 'subaru']cars.sort()print(cars) [‘audi’, ‘bmw’, ‘subaru’, ‘toyota’] o sort this list in reverse-alphabetical order 123cars = ['bmw', 'audi', 'toyota', 'subaru']cars.sort(reverse=True)print(cars) [‘toyota’, ‘subaru’, ‘bmw’, ‘audi’] Sorting a List Temporarily with the sorted() FunctionThe sorted() function lets you display your listin a particular order, but doesn’t affect the actual order of the list. 1234567cars = ['bmw', 'audi', 'toyota', 'subaru']print(&quot;Here is the original list:&quot;)print(cars)print(&quot;\\nHere is the sorted list:&quot;)print(sorted(cars))print(&quot;\\nHere is the original list again:&quot;)print(cars) output: Here is the original list:[‘bmw’, ‘audi’, ‘toyota’, ‘subaru’]Here is the sorted list:[‘audi’, ‘bmw’, ‘subaru’, ‘toyota’]1 Here is the original list again:[‘bmw’, ‘audi’, ‘toyota’, ‘subaru’] The sorted() function can also accept a reverse=Trueargument if you want to display a list in reverse-alphabetical order. Sorting a list alphabetically is a bit more complicated when all the values are not in lowercase Printing a List in Reverse OrderIf we originally stored the list of cars in chronological order according to whenwe owned them, we could easily rearrange the list into reverse-chronologicalorder: 1234cars = ['bmw', 'audi', 'toyota', 'subaru']print(cars)cars.reverse()print(cars) [‘bmw’, ‘audi’, ‘toyota’, ‘subaru’][‘subaru’, ‘toyota’, ‘audi’, ‘bmw’] Finding the Length of a List cars = [‘bmw’, ‘audi’, ‘toyota’, ‘subaru’]len(cars) Avoiding Index Errors When Working with Lists12motorcycles = ['honda', 'yamaha', 'suzuki']print(motorcycles[3]) This example results in an index error: 12345Traceback (most recent call last): File &quot;motorcycles.py&quot;, line 2, in &lt;module&gt; print(motorcycles[3]) ~~~~~~~~~~~^^^IndexError: list index out of range Keep in mind that whenever you want to access the last item in a list,you should use the index -1. This will always work, even if your list haschanged size since the last time you accessed it: motorcycles = [‘honda’, ‘yamaha’, ‘suzuki’]print(motorcycles[-1]) output: suzuki The only time this approach will cause an error is when you request thelast item from an empty list: 12motorcycles = []print(motorcycles[-1]) No items are in motorcycles, so Python returns another index error: 123456Traceback (most recent call last): File &quot;motorcyles.py&quot;, line 3, in &lt;module&gt; print(motorcycles[-1]) ~~~~~~~~~~~^^^^IndexError: list index out of range If an index error occurs and you can’t figure out how to resolve it, tryprinting your list or just printing the length of your list. Your list might lookmuch different than you thought it did, especially if it has been manageddynamically by your program. Seeing the actual list, or the exact number ofitems in your list, can help you sort out such logical errors. Working with ListsLooping allows you to take the same action, or setof actions, with every item in a list Looping Through an Entire ListSay we have a list of magicians’ names, and we want to print out each name in the list. We could do this by retrieving each name from the list individually, but this approach could cause several problems. For one, it wouldbe repetitive to do this with a long list of names. Also, we’d have to changeour code each time the list’s length changed. Using a for loop avoids both ofthese issues by letting Python manage these issues internally. 123magicians = ['alice', 'david', 'carolina']for magician in magicians: print(magician) alicedavidcarolina A Closer Look at Loopingfor magician in magicians: This line tells Python to retrieve the first value from the list magicians and associate it with the variable magician. the set of steps is repeated once for each item in the list, no matter how many itemsare in the list. you can chooseany name you want for the temporary variable that will be associated witheach value in the list. However, it’s helpful to choose a meaningful namethat represents a single item from the list. Using singular and plural names can helpyou identify whether a section of code is working with a single element fromthe list or the entire list. Doing More Work Within a for Loop1234magicians = ['alice', 'david', 'carolina']for magician in magicians: print(f&quot;{magician.title()}, that was a great trick!&quot;) print(f&quot;I can't wait to see your next trick, {magician.title()}.\\n&quot;) Alice, that was a great trick!I can’t wait to see your next trick, Alice. David, that was a great trick!I can’t wait to see your next trick, David. Carolina, that was a great trick!I can’t wait to see your next trick, Carolina. Doing Something After a for LoopAny lines of code after the for loop that are not indented are executedonce without repetition. 12345magicians = ['alice', 'david', 'carolina']for magician in magicians: print(f&quot;{magician.title()}, that was a great trick!&quot;) print(f&quot;I can't wait to see your next trick, {magician.title()}.\\n&quot;)print(&quot;Thank you, everyone. That was a great magic show!&quot;) Alice, that was a great trick!I can’t wait to see your next trick, Alice. David, that was a great trick!Working with Lists 53I can’t wait to see your next trick, David. Carolina, that was a great trick!I can’t wait to see your next trick, Carolina. Thank you, everyone. That was a great magic show! Avoiding Indentation ErrorsPython uses indentation to determine how a line, or group of lines, is relatedto the rest of the program. common indentation errors. For example, peoplesometimes indent lines of code that don’t need to be indented or forgetto indent lines that need to be indented. Forgetting to Indent123magicians = ['alice', 'david', 'carolina']for magician in magicians:print(magician) 1234File &quot;magicians.py&quot;, line 3 print(magician) ^IndentationError: expected an indented block after 'for' statement on line 2 Forgetting to Indent Additional LinesThis is a logical error. The syntax is valid Python code, but the code doesnot produce the desired result because a problem occurs in its logic. If youexpect to see a certain action repeated once for each item in a list and it’sexecuted only once, determine whether you need to simply indent a line ora group of lines. 1234magicians = ['alice', 'david', 'carolina']for magician in magicians: print(f&quot;{magician.title()}, that was a great trick!&quot;)print(f&quot;I can't wait to see your next trick, {magician.title()}.\\n&quot;) output: Alice, that was a great trick!David, that was a great trick!Carolina, that was a great trick!I can’t wait to see your next trick, Carolina. Indenting Unnecessarily12message = &quot;Hello Python world!&quot; print(message) File “hello_world.py”, line 2 print(message) ^IndentationError: unexpected indent You can avoid unexpected indentation errors by indenting only when you have a specific reason to do so. Indenting Unnecessarily After the Loop12345magicians = ['alice', 'david', 'carolina']for magician in magicians: print(f&quot;{magician.title()}, that was a great trick!&quot;) print(f&quot;I can't wait to see your next trick, {magician.title()}.\\n&quot;) print(&quot;Thank you everyone, that was a great magic show!&quot;) 123456789101112Alice, that was a great trick!I can't wait to see your next trick, Alice.Thank you everyone, that was a great magic show!David, that was a great trick!I can't wait to see your next trick, David.Thank you everyone, that was a great magic show!Carolina, that was a great trick!I can't wait to see your next trick, Carolina.Thank you everyone, that was a great magic show! This is another logical error, similar to the one in “Forgetting to IndentAdditional Lines” on page 54. Because Python doesn’t know what you’retrying to accomplish with your code, it will run all code that is written invalid syntax. If an action is repeated many times when it should be executedonly once, you probably need to unindent the code for that action. Forgetting the Colon123magicians = ['alice', 'david', 'carolina']for magician in magicians print(magician) 1234 File &quot;magicians.py&quot;, line 2 for magician in magicians ^SyntaxError: expected ':' Making Numerical ListsUsing the range() Functionrange(stop) -&gt; range object range(start, stop[, step]) -&gt; range object Return an object that produces a sequence of integers from start (inclusive) to stop (exclusive) by step. range(i, j) produces i, i+1, i+2, …, j-1. start defaults to 0, and stop is omitted! range(4) produces 0, 1, 2, 3. These are exactly the valid indices for a list of 4 elements. When step is given, it specifies the increment (or decrement). generate a series of numbers. 12for value in range(1, 5): print(value) output:1234 You can also pass range() only one argument, and it will start thesequence of numbers at 0. Using range() to Make a List of Numbersconvert the results of range()directly into a list using the list() function. 12numbers = list(range(1, 6))print(numbers) This is the result:[1, 2, 3, 4, 5] 12345squares = []for value in range(1, 11): square = value ** 2 squares.append(square)print(squares) [1, 4, 9, 16, 25, 36, 49, 64, 81, 100] Simple Statistics with a List of Numbers1234567&gt;&gt;&gt; digits = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]&gt;&gt;&gt; min(digits)0&gt;&gt;&gt; max(digits)9&gt;&gt;&gt; sum(digits)45 List ComprehensionsA list comprehension allows you to generatethis same list in just one line of code. A list comprehension combines thefor loop and the creation of new elements into one line, and automaticallyappends each new element. 12squares = [value**2 for value in range(1, 11)]print(squares) output:[1, 4, 9, 16, 25, 36, 49, 64, 81, 100] Working with Part of a ListSlicing a ListTo make a slice, you specify the index of the first and last elements you wantto work with.n, Python stops one item before thesecond index you specify. 12players = ['charles', 'martina', 'michael', 'florence', 'eli']print(players[0:3]) output:[‘charles’, ‘martina’, ‘michael’] 12players = ['charles', 'martina', 'michael', 'florence', 'eli']print(players[:4]) [‘charles’, ‘martina’, ‘michael’, ‘florence’] 12players = ['charles', 'martina', 'michael', 'florence', 'eli']print(players[2:]) [‘michael’, ‘florence’, ‘eli’] 12players = ['charles', 'martina', 'michael', 'florence', 'eli']print(players[-3:]) Looping Through a Slice1234players = ['charles', 'martina', 'michael', 'florence', 'eli']print(&quot;Here are the first three players on my team:&quot;)1 for player in players[:3]: print(player.title()) Here are the first three players on my team:CharlesMartinaMichael Copying a List12345678my_foods = ['pizza', 'falafel', 'carrot cake']friend_foods = my_foods[:]my_foods.append('cannoli')friend_foods.append('ice cream')print(&quot;My favorite foods are:&quot;)print(my_foods)print(&quot;\\nMy friend's favorite foods are:&quot;)print(friend_foods) My favorite foods are:[‘pizza’, ‘falafel’, ‘carrot cake’, ‘cannoli’]My friend’s favorite foods are:[‘pizza’, ‘falafel’, ‘carrot cake’, ‘ice cream’] 123456789my_foods = ['pizza', 'falafel', 'carrot cake']# This doesn't work:friend_foods = my_foodsmy_foods.append('cannoli')friend_foods.append('ice cream')print(&quot;My favorite foods are:&quot;)print(my_foods)print(&quot;\\nMy friend's favorite foods are:&quot;)print(friend_foods) My favorite foods are:[‘pizza’, ‘falafel’, ‘carrot cake’, ‘cannoli’, ‘ice cream’]My friend’s favorite foods are:[‘pizza’, ‘falafel’, ‘carrot cake’, ‘cannoli’, ‘ice cream’] TuplesLists work well for storing collections of items that can change throughout thelife of a program. Python refers to values that cannot change asimmutable, and an immutable list is called a tuple. Defining a TupleA tuple looks just like a list, except you use parentheses instead of squarebrackets. 123dimensions = (200, 50)print(dimensions[0])print(dimensions[1]) output20050 12dimensions = (200, 50)dimensions[0] = 250 1234Traceback (most recent call last): File &quot;dimensions.py&quot;, line 2, in &lt;module&gt; dimensions[0] = 250TypeError: 'tuple' object does not support item assignment Tuples are technically defined by the presence of a comma; the parentheses make themlook neater and more readable. If you want to define a tuple with one element, youneed to include a trailing comma: my_t = (3,) Looping Through All Values in a Tuple123dimensions = (200, 50)for dimension in dimensions: print(dimension) 20050 Writing Over a TupleAlthough you can’t modify a tuple, you can assign a new value to a variablethat represents a tuple 12345678dimensions = (200, 50)print(&quot;Original dimensions:&quot;)for dimension in dimensions: print(dimension)dimensions = (400, 100)print(&quot;\\nModified dimensions:&quot;)for dimension in dimensions: print(dimension) if Statements 0Programming often involves examininga set of conditions and deciding whichaction to take based on those conditions.Python’s if statement allows you to examinethe current state of a program and respond appropriately to that state. a example123456cars = ['audi', 'bmw', 'subaru', 'toyota']for car in cars: if car == 'bmw': print(car.upper()) else: print(car.title()) output AudiBMWSubaruToyota Conditional Testsan expression that can be evaluated asTrue or False and is called a conditional test. Python uses the values True andFalse to decide whether the code in an if statement should be executed. Checking for Equalityequality operator returnsTrue if the values on the left and right side of the operator match, and False ifthey don’t match. 123&gt;&gt;&gt; car = 'audi'&gt;&gt;&gt; car == 'bmw'False Ignoring Case When Checking for Equality1234567&gt;&gt;&gt; car = 'Audi'&gt;&gt;&gt; car == 'audi'False&gt;&gt;&gt; car.lower() == 'audi'True&gt;&gt;&gt; car'Audi' Checking for Inequality123requested_topping = 'mushrooms'if requested_topping != 'anchovies': print(&quot;Hold the anchovies!&quot;) Hold the anchovies! Numerical Comparisonsmathematical comparisons 123456789&gt;&gt;&gt; age = 19&gt;&gt;&gt; age &lt; 21True&gt;&gt;&gt; age &lt;= 21True&gt;&gt;&gt; age &gt; 21False&gt;&gt;&gt; age &gt;= 21False Checking Multiple ConditionsUsing and to Check Multiple ConditionsTo check whether two conditions are both True simultaneously, use the keyword and to combine the two conditional tests; if each test passes, the overallexpression evaluates to True. If either test fails or if both tests fail, the expression evaluates to False. 1234567&gt;&gt;&gt; age_0 = 22&gt;&gt;&gt; age_1 = 18&gt;&gt;&gt; age_0 &gt;= 21 and age_1 &gt;= 21False&gt;&gt;&gt; age_1 = 22&gt;&gt;&gt; age_0 &gt;= 21 and age_1 &gt;= 21True To improve readability, you can use parentheses around the individualtests(age_0 &gt;= 21) and (age_1 &gt;= 21) Checking Whether a Value Is in a ListTo find out whether a particular value is already in a list, use the keyword in. 12345&gt;&gt;&gt; requested_toppings = ['mushrooms', 'onions', 'pineapple']&gt;&gt;&gt; 'mushrooms' in requested_toppingsTrue&gt;&gt;&gt; 'pepperoni' in requested_toppingsFalse Checking Whether a Value Is Not in a List1234banned_users = ['andrew', 'carolina', 'david']user = 'marie'if user not in banned_users: print(f&quot;{user.title()}, you can post a response if you wish.&quot;) Marie, you can post a response if you wish. Boolean ExpressionsA Boolean expression is just another name for a conditionaltest. A Boolean value is either True or False, just like the value of a conditionalexpression after it has been evaluated. if StatementsSimple if Statements if conditional_test: do something if-else Statementstake one action when a conditional test passes and a different action in all other cases.An if-else block is similar to a simple if statement, but the else statement allowsyou to define an action or set of actions that are executed when the conditional test fails. 1234567age = 17if age &gt;= 18: print(&quot;You are old enough to vote!&quot;) print(&quot;Have you registered to vote yet?&quot;)else: print(&quot;Sorry, you are too young to vote.&quot;) print(&quot;Please register to vote as soon as you turn 18!&quot;) Sorry, you are too young to vote.Please register to vote as soon as you turn 18! The if-elif-else ChainPython’s if-elif-else syntax. Python executes only oneblock in an if-elif-else chain. It runs each conditional test in order, untilone passes. When a test passes, the code following that test is executed andPython skips the rest of the tests. 1234567age = 12if age &lt; 4: print(&quot;Your admission cost is $0.&quot;)elif age &lt; 18: print(&quot;Your admission cost is $25.&quot;)else: print(&quot;Your admission cost is $40.&quot;) Your admission cost is $25. Using Multiple elif Blocks12345678910age = 12if age &lt; 4: price = 0elif age &lt; 18: price = 25elif age &lt; 65: price = 40else: price = 20print(f&quot;Your admission cost is ${price}.&quot;) Omitting the else BlockOther times, it’s clearer to use an additional elif statement that catches the specific condition of interest 12345678910age = 12if age &lt; 4: price = 0elif age &lt; 18: price = 25elif age &lt; 65: price = 40elif age &gt;= 65: price = 20print(f&quot;Your admission cost is ${price}.&quot;) The else block is a catchall statement. It matches any condition thatwasn’t matched by a specific if or elif test, and that can sometimes includeinvalid or even malicious data.If you have a specific final condition you’retesting for, consider using a final elif block and omit the else block. As aresult, you’ll be more confident that your code will run only under the correct conditions. Testing Multiple ConditionsThe if-elif-else chain is powerful, but it’s only appropriate to use when youjust need one test to pass. As soon as Python finds one test that passes, itskips the rest of the tests. sometimes it’s important to check all conditions of interest. Inthis case, you should use a series of simple if statements with no elif or elseblocks. This technique makes sense when more than one condition couldbe True, and you want to act on every condition that is True. 12345678requested_toppings = ['mushrooms', 'extra cheese']if 'mushrooms' in requested_toppings: print(&quot;Adding mushrooms.&quot;)if 'pepperoni' in requested_toppings: print(&quot;Adding pepperoni.&quot;)if 'extra cheese' in requested_toppings: print(&quot;Adding extra cheese.&quot;)print(&quot;\\nFinished making your pizza!&quot;) Adding mushrooms.Adding extra cheese. Finished making your pizza! wrong: 12345678requested_toppings = ['mushrooms', 'extra cheese']if 'mushrooms' in requested_toppings: print(&quot;Adding mushrooms.&quot;)elif 'pepperoni' in requested_toppings: print(&quot;Adding pepperoni.&quot;)elif 'extra cheese' in requested_toppings: print(&quot;Adding extra cheese.&quot;)print(&quot;\\nFinished making your pizza!&quot;) Adding mushrooms. Finished making your pizza! Using if Statements with ListsChecking for Special Items1234567requested_toppings = ['mushrooms', 'green peppers', 'extra cheese']for requested_topping in requested_toppings: if requested_topping == 'green peppers': print(&quot;Sorry, we are out of green peppers right now.&quot;) else: print(f&quot;Adding {requested_topping}.&quot;)print(&quot;\\nFinished making your pizza!&quot;) Adding mushrooms.Sorry, we are out of green peppers right now.Adding extra cheese. Finished making your pizza! Checking That a List Is Not Emptywe won’t be able to assumethat a list has any items in it each time a loop is run. In this situation, it’suseful to check whether a list is empty before running a for loop. 1234567requested_toppings = []if requested_toppings: for requested_topping in requested_toppings: print(f&quot;Adding {requested_topping}.&quot;) print(&quot;\\nFinished making your pizza!&quot;)else: print(&quot;Are you sure you want a plain pizza?&quot;) Are you sure you want a plain pizza? Using Multiple Lists12345678available_toppings = ['mushrooms', 'olives', 'green peppers', 'pepperoni', 'pineapple', 'extra cheese']requested_toppings = ['mushrooms', 'french fries', 'extra cheese']for requested_topping in requested_toppings: if requested_topping in available_toppings: print(f&quot;Adding {requested_topping}.&quot;) else: print(f&quot;Sorry, we don't have {requested_topping}.&quot;)print(&quot;\\nFinished making your pizza!&quot;) Adding mushrooms.Sorry, we don’t have french fries.Adding extra cheese. Finished making your pizza! DictionariesA Simple Dictionary123alien_0 = {'color': 'green', 'points': 5}print(alien_0['color'])print(alien_0['points']) green5 Working with DictionariesA dictionary in Python is a collection of key-value pairs. Each key is connected toa value, and you can use a key to access the value associated with that key. Akey’s value can be a number, a string, a list, or even another dictionary. a dictionary is wrapped in braces ({}) with a series of key-valuepairs inside the braces A key-value pair is a set of values associated with each other. When youprovide a key, Python returns the value associated with that key. Every key isconnected to its value by a colon, and individual key-value pairs are separatedby commas. Accessing Values in a DictionaryTo get the value associated with a key, give the name of the dictionary andthen place the key inside a set of square brackets Adding New Key-Value PairsTo add a new key-value pair, you would give thename of the dictionary followed by the new key in square brackets, alongwith the new value. 12345alien_0 = {'color': 'green', 'points': 5}print(alien_0)alien_0['x_position'] = 0alien_0['y_position'] = 25print(alien_0) {‘color’: ‘green’, ‘points’: 5}{‘color’: ‘green’, ‘points’: 5, ‘x_position’: 0, ‘y_position’: 25} Dictionaries retain the order in which they were defined Starting with an Empty Dictionary1234alien_0 = {}alien_0['color'] = 'green'alien_0['points'] = 5print(alien_0) {‘color’: ‘green’, ‘points’: 5} Modifying Values in a DictionaryTo modify a value in a dictionary, give the name of the dictionary with thekey in square brackets and then the new value you want associated withthat key. 1234alien_0 = {'color': 'green'}print(f&quot;The alien is {alien_0['color']}.&quot;)alien_0['color'] = 'yellow'print(f&quot;The alien is now {alien_0['color']}.&quot;) The alien is green.The alien is now yellow. 1234567891011121314alien_0 = {'x_position': 0, 'y_position': 25, 'speed': 'medium'}print(f&quot;Original position: {alien_0['x_position']}&quot;)# Move the alien to the right.# Determine how far to move the alien based on its current speed.if alien_0['speed'] == 'slow': x_increment = 1elif alien_0['speed'] == 'medium': x_increment = 2else: # This must be a fast alien. x_increment = 3# The new position is the old position plus the increment.alien_0['x_position'] = alien_0['x_position'] + x_incrementprint(f&quot;New position: {alien_0['x_position']}&quot;) Original x-position: 0New x-position: 2 Removing Key-Value Pairs1234alien_0 = {'color': 'green', 'points': 5}print(alien_0)del alien_0['points']print(alien_0) A Dictionary of Similar ObjectsIt’s good practice to include a comma after thelast key-value pair as well, so you’re ready to add a new key-value pair on thenext line. 12345678favorite_languages = { 'jen': 'python', 'sarah': 'c', 'edward': 'rust', 'phil': 'python', }language = favorite_languages['sarah'].title()print(f&quot;Sarah's favorite language is {language}.&quot;) Using get() to Access Values12alien_0 = {'color': 'green', 'speed': 'slow'}print(alien_0['points']) 12345Traceback (most recent call last): File &quot;alien_no_points.py&quot;, line 2, in &lt;module&gt; print(alien_0['points']) ~~~~~~~^^^^^^^^^^KeyError: 'points' As a second optionalargument, you can pass the value to be returned if the key doesn’t exist: 123alien_0 = {'color': 'green', 'speed': 'slow'}point_value = alien_0.get('points', 'No point value assigned.')print(point_value) No point value assigned. If you leave out the second argument in the call to get() and the key doesn’t exist, Python will return the value None. The special value None means “no value exists.” This is not an error: it’s a special value meant to indicate the absence of a value. Looping Through a DictionaryLooping Through All Key-Value Pairs123456789user_0 = { 'username': 'efermi', 'first': 'enrico', 'last': 'fermi', }for key, value in user_0.items(): print(f&quot;\\nKey: {key}&quot;) print(f&quot;Value: {value}&quot;) Key: usernameValue: efermiKey: firstValue: enricoKey: lastValue: fermi 12345678favorite_languages = { 'jen': 'python', 'sarah': 'c', 'edward': 'rust', 'phil': 'python', }for name, language in favorite_languages.items(): print(f&quot;{name.title()}'s favorite language is {language.title()}.&quot;) Jen’s favorite language is Python.Sarah’s favorite language is C.Edward’s favorite language is Rust.Phil’s favorite language is Python. Looping Through All the Keys in a Dictionary12345678favorite_languages = { 'jen': 'python', 'sarah': 'c', 'edward': 'rust', 'phil': 'python', }for name in favorite_languages.keys(): print(name.title()) JenSarahEdwardPhil Looping through the keys is actually the default behavior when loopingthrough a dictionary, so this code would have exactly the same output if youwrote: for name in favorite_languages: 123456789favorite_languages = { --snip-- }friends = ['phil', 'sarah']for name in favorite_languages.keys(): print(f&quot;Hi {name.title()}.&quot;) if name in friends: language = favorite_languages[name].title() print(f&quot;\\t{name.title()}, I see you love {language}!&quot;) Hi Jen.Hi Sarah. Sarah, I see you love C!Hi Edward.Hi Phil. Phil, I see you love Python! The keys() method isn’t just for looping: it actually returns a sequence ofall the keys 12345favorite_languages = { --snip-- }if 'erin' not in favorite_languages.keys(): print(&quot;Erin, please take our poll!&quot;) Erin, please take our poll! Looping Through a Dictionary’s Keys in a Particular OrderLooping through a dictionary returns the items in the same order theywere inserted. 12345678favorite_languages = { 'jen': 'python', 'sarah': 'c', 'edward': 'rust', 'phil': 'python', }for name in sorted(favorite_languages.keys()): print(f&quot;{name.title()}, thank you for taking the poll.&quot;) Edward, thank you for taking the poll.Jen, thank you for taking the poll.Phil, thank you for taking the poll.Sarah, thank you for taking the poll. Looping Through All Values in a Dictionaryuse the values() method to return a sequence of values without anykeys 123456789favorite_languages = { 'jen': 'python', 'sarah': 'c', 'edward': 'rust', 'phil': 'python', }print(&quot;The following languages have been mentioned:&quot;)for language in favorite_languages.values(): print(language.title()) The following languages have been mentioned:PythonCRustPython To see each language chosen without repetition, we can use a set. A setis a collection in which each item must be unique: 123456favorite_languages = { --snip-- }print(&quot;The following languages have been mentioned:&quot;)for language in set(favorite_languages.values()): print(language.title()) The following languages have been mentioned:PythonCRust You can build a set directly using braces and separating the elements with commas: languages = {‘python’, ‘rust’, ‘python’, ‘c’}languages{‘rust’, ‘python’, ‘c’} Unlikelists and dictionaries, sets do not retain items in any specific order. Nestingstore multiple dictionaries in a list, or a list ofitems as a value in a dictionary. This is called nesting. You can nest dictionaries inside a list, a list of items inside a dictionary, or even a dictionary insideanother dictionary. 123456alien_0 = {'color': 'green', 'points': 5}alien_1 = {'color': 'yellow', 'points': 10}alien_2 = {'color': 'red', 'points': 15}aliens = [alien_0, alien_1, alien_2]for alien in aliens: print(alien) {‘color’: ‘green’, ‘points’: 5}{‘color’: ‘yellow’, ‘points’: 10}{‘color’: ‘red’, ‘points’: 15} 123456789101112# Make an empty list for storing aliens.aliens = []# Make 30 green aliens.for alien_number in range(30): new_alien = {'color': 'green', 'points': 5, 'speed': 'slow'} aliens.append(new_alien)# Show the first 5 aliens.for alien in aliens[:5]: print(alien)print(&quot;...&quot;)# Show how many aliens have been created.print(f&quot;Total number of aliens: {len(aliens)}&quot;) {‘color’: ‘green’, ‘points’: 5, ‘speed’: ‘slow’}{‘color’: ‘green’, ‘points’: 5, ‘speed’: ‘slow’}{‘color’: ‘green’, ‘points’: 5, ‘speed’: ‘slow’}{‘color’: ‘green’, ‘points’: 5, ‘speed’: ‘slow’}{‘color’: ‘green’, ‘points’: 5, ‘speed’: ‘slow’}…Total number of aliens: 30 A List in a Dictionary12345678910# Store information about a pizza being ordered.pizza = { 'crust': 'thick', 'toppings': ['mushrooms', 'extra cheese'], }# Summarize the order.print(f&quot;You ordered a {pizza['crust']}-crust pizza &quot; &quot;with the following toppings:&quot;)for topping in pizza['toppings']: print(f&quot;\\t{topping}&quot;) You ordered a thick-crust pizza with the following toppings: mushrooms extra cheese 12345678910favorite_languages = { 'jen': ['python', 'rust'], 'sarah': ['c'], 'edward': ['rust', 'go'], 'phil': ['python', 'haskell'], }for name, languages in favorite_languages.items(): print(f&quot;\\n{name.title()}'s favorite languages are:&quot;) for language in languages: print(f&quot;\\t{language.title()}&quot;) Jen’s favorite languages are: Python RustSarah’s favorite languages are: CEdward’s favorite languages are: Rust GoPhil’s favorite languages are: Python Haskell A Dictionary in a Dictionary12345678910111213141516171819users = { 'aeinstein': { 'first': 'albert', 'last': 'einstein', 'location': 'princeton', }, 'mcurie': { 'first': 'marie', 'last': 'curie', 'location': 'paris', }, }for username, user_info in users.items(): print(f&quot;\\nUsername: {username}&quot;) full_name = f&quot;{user_info['first']} {user_info['last']}&quot; location = user_info['location'] print(f&quot;\\tFull name: {full_name.title()}&quot;) print(f&quot;\\tLocation: {location.title()}&quot;) Username: aeinstein Full name: Albert Einstein Location: PrincetonUsername: mcurie Full name: Marie Curie Location: Paris Notice that the structure of each user’s dictionary is identical. Althoughnot required by Python, this structure makes nested dictionaries easier towork with. If each user’s dictionary had different keys, the code inside thefor loop would be more complicated. User Input and while LoopsHow the input() Function WorksThe input() function pauses your program and waits for the user to entersome text. Once Python receives the user’s input, it assigns that input to avariable to make it convenient for you to work with. message = input(“Tell me something, and I will repeat it back to you: “)print(message) Writing Clear Promptsinclude a clear, easy-tofollow prompt that tells the user exactly what kind of information you’relooking for. Any statement that tells the user what to enter should work. Add a space at the end of your prompts (after the colon in the preceding example) to separate the prompt from the user’s response and to makeit clear to your user where to enter their text. 12name = input(&quot;Please enter your name: &quot;)print(f&quot;\\nHello, {name}!&quot;) Please enter your name: EricHello, Eric! 1234prompt = &quot;If you share your name, we can personalize the messages you see.&quot;prompt += &quot;\\nWhat is your first name? &quot;name = input(prompt)print(f&quot;\\nHello, {name}!&quot;) If you share your name, we can personalize the messages you see.What is your first name? EricHello, Eric! Using int() to Accept Numerical Input1234&gt;&gt;&gt; age = input(&quot;How old are you? &quot;)How old are you? 21&gt;&gt;&gt; age'21' 123456&gt;&gt;&gt; age = input(&quot;How old are you? &quot;)How old are you? 21&gt;&gt;&gt; age &gt;= 18Traceback (most recent call last): File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;TypeError: '&gt;=' not supported between instances of 'str' and 'int' age = input(“How old are you? “)How old are you? 21age = int(age)age &gt;= 18True The Modulo Operatormodulo operator (%),which divides one number by another number and returns the remainder: 123456number = input(&quot;Enter a number, and I'll tell you if it's even or odd: &quot;)number = int(number)if number % 2 == 0: print(f&quot;\\nThe number {number} is even.&quot;)else: print(f&quot;\\nThe number {number} is odd.&quot;) Introducing while Loops1234current_number = 1while current_number &lt;= 5: print(current_number) current_number += 1 Letting the User Choose When to Quit123456prompt = &quot;\\nTell me something, and I will repeat it back to you:&quot;prompt += &quot;\\nEnter 'quit' to end the program. &quot;message = &quot;&quot;while message != 'quit': message = input(prompt) print(message) Tell me something, and I will repeat it back to you:Enter ‘quit’ to end the program. Hello everyone!Hello everyone!Tell me something, and I will repeat it back to you:Enter ‘quit’ to end the program. Hello again.Hello again.Tell me something, and I will repeat it back to you:Enter ‘quit’ to end the program. quitquit Using a Flagmore complicated programs inwhich many different events could cause the program to stop running?trying to test all these conditions in one whilestatement becomes complicated and difficult. For a program that should run only as long as many conditions aretrue, you can define one variable that determines whether or not the entireprogram is active. This variable, called a flag, acts as a signal to the program. We can write our programs so they run while the flag is set to Trueand stop running when any of several events sets the value of the flag toFalse. 123456789prompt = &quot;\\nTell me something, and I will repeat it back to you:&quot;prompt += &quot;\\nEnter 'quit' to end the program. &quot;active = Truewhile active: message = input(prompt) if message == 'quit': active = False else: print(message) Using break to Exit a LoopTo exit a while loop immediately without running any remaining code inthe loop, regardless of the results of any conditional test, use the break statement. 12345678prompt = &quot;\\nPlease enter the name of a city you have visited:&quot;prompt += &quot;\\n(Enter 'quit' when you are finished.) &quot; while True: city = input(prompt) if city == 'quit': break else: print(f&quot;I'd love to go to {city.title()}!&quot;) Using continue in a LoopRather than breaking out of a loop entirely without executing the rest of itscode, you can use the continue statement to return to the beginning of theloop, based on the result of a conditional test. 123456current_number = 0while current_number &lt; 10:current_number += 1 if current_number % 2 == 0: continue print(current_number) 13579 Avoiding Infinite Loops1234# This loop runs forever!x = 1while x &lt;= 5: print(x) Ifyour program gets stuck in an infinite loop, press CTRL-C or just close theterminal window displaying your program’s output. Using a while Loop with Lists and DictionariesA for loop is effective for looping through a list, but you shouldn’t modify a list inside a for loop because Python will have trouble keeping track ofthe items in the list. To modify a list as you work through it, use a while loop Moving Items from One List to Another1234567891011121314# Start with users that need to be verified,# and an empty list to hold confirmed users.unconfirmed_users = ['alice', 'brian', 'candace']confirmed_users = []# Verify each user until there are no more unconfirmed users.# Move each verified user into the list of confirmed users.while unconfirmed_users: current_user = unconfirmed_users.pop() print(f&quot;Verifying user: {current_user.title()}&quot;) confirmed_users.append(current_user)# Display all confirmed users.print(&quot;\\nThe following users have been confirmed:&quot;)for confirmed_user in confirmed_users: print(confirmed_user.title()) Verifying user: CandaceVerifying user: BrianVerifying user: Alice The following users have been confirmed:CandaceBrianAlice Removing All Instances of Specific Values from a List12345pets = ['dog', 'cat', 'dog', 'goldfish', 'cat', 'rabbit', 'cat']print(pets)while 'cat' in pets: pets.remove('cat')print(pets) [‘dog’, ‘cat’, ‘dog’, ‘goldfish’, ‘cat’, ‘rabbit’, ‘cat’][‘dog’, ‘dog’, ‘goldfish’, ‘rabbit’] Filling a Dictionary with User Input1234567891011121314151617responses = {}# Set a flag to indicate that polling is active.polling_active = Truewhile polling_active: # Prompt for the person's name and response. name = input(&quot;\\nWhat is your name? &quot;) response = input(&quot;Which mountain would you like to climb someday? &quot;) # Store the response in the dictionary. responses[name] = response # Find out if anyone else is going to take the poll. repeat = input(&quot;Would you like to let another person respond? (yes/ no) &quot;) if repeat == 'no': polling_active = False# Polling is complete. Show the results.print(&quot;\\n--- Poll Results ---&quot;)for name, response in responses.items(): print(f&quot;{name} would like to climb {response}.&quot;) What is your name? EricWhich mountain would you like to climb someday? DenaliWould you like to let another person respond? (yes/ no) yesWhat is your name? LynnWhich mountain would you like to climb someday? Devil’s ThumbWould you like to let another person respond? (yes/ no) no— Poll Results —Eric would like to climb Denali.Lynn would like to climb Devil’s Thumb. FunctionsDefining a Function1234def greet_user(): &quot;&quot;&quot;Display a simple greeting.&quot;&quot;&quot; print(&quot;Hello!&quot;)greet_user() The text on the second line is a comment called a docstring, whichdescribes what the function does. When Python generates documentationfor the functions in your programs, it looks for a string immediately afterthe function’s definition. These strings are usually enclosed in triple quotes,which lets you write multiple lines. Passing Information to a Function1234def greet_user(username): &quot;&quot;&quot;Display a simple greeting.&quot;&quot;&quot; print(f&quot;Hello, {username.title()}!&quot;)greet_user('jesse') Hello, Jesse! Arguments and ParametersThe variable username in the definition of greet_user() is an example of aparameter, a piece of information the function needs to do its job. The value‘jesse’ in greet_user(‘jesse’) is an example of an argument. An argument isa piece of information that’s passed from a function call to a function. Passing ArgumentsPositional Arguments def describe_pet(animal_type, pet_name): “””Display information about a pet.””” print(f”\\nI have a {animal_type}.”) print(f”My {animal_type}’s name is {pet_name.title()}.”)describe_pet(‘hamster’, ‘harry’) Multiple Function Calls123456def describe_pet(animal_type, pet_name): &quot;&quot;&quot;Display information about a pet.&quot;&quot;&quot; print(f&quot;\\nI have a {animal_type}.&quot;) print(f&quot;My {animal_type}'s name is {pet_name.title()}.&quot;)describe_pet('hamster', 'harry')describe_pet('dog', 'willie') I have a hamster.My hamster’s name is Harry.I have a dog.My dog’s name is Willie. Order Matters in Positional Arguments12345def describe_pet(animal_type, pet_name): &quot;&quot;&quot;Display information about a pet.&quot;&quot;&quot; print(f&quot;\\nI have a {animal_type}.&quot;) print(f&quot;My {animal_type}'s name is {pet_name.title()}.&quot;)describe_pet('harry', 'hamster') I have a harry.My harry’s name is Hamster. Keyword Arguments12345def describe_pet(animal_type, pet_name): &quot;&quot;&quot;Display information about a pet.&quot;&quot;&quot; print(f&quot;\\nI have a {animal_type}.&quot;) print(f&quot;My {animal_type}'s name is {pet_name.title()}.&quot;)describe_pet(animal_type='hamster', pet_name='harry') Default ValuesWhen writing a function, you can define a default value for each parameter.If an argument for a parameter is provided in the function call, Pythonuses the argument value. If not, it uses the parameter’s default value. When you use default values, any parameter with a default value needs to be listedafter all the parameters that don’t have default values. This allows Python to continue interpreting positional arguments correctly. 12345def describe_pet(pet_name, animal_type='dog'): &quot;&quot;&quot;Display information about a pet.&quot;&quot;&quot; print(f&quot;\\nI have a {animal_type}.&quot;) print(f&quot;My {animal_type}'s name is {pet_name.title()}.&quot;)describe_pet(pet_name='willie') I have a dog.My dog’s name is Willie. describe_pet(‘willie’)describe_pet(pet_name=’harry’, animal_type=’hamster’) Equivalent Function CallsBecause positional arguments, keyword arguments, and default values canall be used together, you’ll often have several equivalent ways to call a function 12345678def describe_pet(pet_name, animal_type='dog'):# A dog named Willie.describe_pet('willie')describe_pet(pet_name='willie')# A hamster named Harry.describe_pet('harry', 'hamster')describe_pet(pet_name='harry', animal_type='hamster')describe_pet(animal_type='hamster', pet_name='harry') Avoiding Argument Errors12345def describe_pet(animal_type, pet_name): &quot;&quot;&quot;Display information about a pet.&quot;&quot;&quot; print(f&quot;\\nI have a {animal_type}.&quot;) print(f&quot;My {animal_type}'s name is {pet_name.title()}.&quot;)describe_pet() 1234567Traceback (most recent call last):File &quot;pets.py&quot;, line 6, in &lt;module&gt;describe_pet() ^^^^^^^^^^^^^^TypeError: describe_pet() missing 2 required positional arguments: 'animal_type' and 'pet_name' Return Values123456def get_formatted_name(first_name, last_name): &quot;&quot;&quot;Return a full name, neatly formatted.&quot;&quot;&quot; full_name = f&quot;{first_name} {last_name}&quot; return full_name.title()musician = get_formatted_name('jimi', 'hendrix')print(musician) Making an Argument Optional12345678def get_formatted_name(first_name, middle_name, last_name): &quot;&quot;&quot;Return a full name, neatly formatted.&quot;&quot;&quot; full_name = f&quot;{first_name} {middle_name} {last_name}&quot; return full_name.title()musician = get_formatted_name('john', 'lee', 'hooker')print(musician)musician = get_formatted_name('jimi', 'hendrix')print(musician) John Lee HookerJimi Hendrix Returning a Dictionary12345678def build_person(first_name, last_name, age=None): &quot;&quot;&quot;Return a dictionary of information about a person.&quot;&quot;&quot; person = {'first': first_name, 'last': last_name} if age: person['age'] = age return personmusician = build_person('jimi', 'hendrix', age=27)print(musician) Using a Function with a while Loop12345678910111213141516def get_formatted_name(first_name, last_name): &quot;&quot;&quot;Return a full name, neatly formatted.&quot;&quot;&quot; full_name = f&quot;{first_name} {last_name}&quot; return full_name.title()while True: print(&quot;\\nPlease tell me your name:&quot;) print(&quot;(enter 'q' at any time to quit)&quot;) f_name = input(&quot;First name: &quot;) if f_name == 'q': break l_name = input(&quot;Last name: &quot;) if l_name == 'q': break formatted_name = get_formatted_name(f_name, l_name) print(f&quot;\\nHello, {formatted_name}!&quot;) Passing a List1234567def greet_users(names): &quot;&quot;&quot;Print a simple greeting to each user in the list.&quot;&quot;&quot; for name in names: msg = f&quot;Hello, {name.title()}!&quot; print(msg)usernames = ['hannah', 'ty', 'margot']greet_users(usernames) Hello, Hannah!Hello, Ty!Hello, Margot! Modifying a List in a Function12345678910111213# Start with some designs that need to be printed.unprinted_designs = ['phone case', 'robot pendant', 'dodecahedron']completed_models = []# Simulate printing each design, until none are left.# Move each design to completed_models after printing.while unprinted_designs: current_design = unprinted_designs.pop() print(f&quot;Printing model: {current_design}&quot;) completed_models.append(current_design)# Display all completed models.print(&quot;\\nThe following models have been printed:&quot;)for completed_model in completed_models: print(completed_model) 12345678910111213141516171819def print_models(unprinted_designs, completed_models): &quot;&quot;&quot; Simulate printing each design, until none are left.144 Chapter 8 Move each design to completed_models after printing. &quot;&quot;&quot; while unprinted_designs: current_design = unprinted_designs.pop() print(f&quot;Printing model: {current_design}&quot;) completed_models.append(current_design)def show_completed_models(completed_models): &quot;&quot;&quot;Show all the models that were printed.&quot;&quot;&quot; print(&quot;\\nThe following models have been printed:&quot;) for completed_model in completed_models: print(completed_model)unprinted_designs = ['phone case', 'robot pendant', 'dodecahedron']completed_models = []print_models(unprinted_designs, completed_models)show_completed_models(completed_models) Preventing a Function from Modifying a ListYou can send a copy of a list to a function like this:function_name(list_name[:]) print_models(unprinted_designs[:], completed_models) Passing an Arbitrary Number of Arguments12345def make_pizza(*toppings): &quot;&quot;&quot;Print the list of toppings that have been requested.&quot;&quot;&quot; print(toppings)make_pizza('pepperoni')make_pizza('mushrooms', 'green peppers', 'extra cheese') (‘pepperoni’,)(‘mushrooms’, ‘green peppers’, ‘extra cheese’) 12345678def make_pizza(*toppings): &quot;&quot;&quot;Summarize the pizza we are about to make.&quot;&quot;&quot;Functions 147 print(&quot;\\nMaking a pizza with the following toppings:&quot;) for topping in toppings: print(f&quot;- {topping}&quot;)make_pizza('pepperoni')make_pizza('mushrooms', 'green peppers', 'extra cheese') Making a pizza with the following toppings: pepperoniMaking a pizza with the following toppings: mushrooms green peppers extra cheese Mixing Positional and Arbitrary ArgumentsIf you want a function to accept several different kinds of arguments, theparameter that accepts an arbitrary number of arguments must be placedlast in the function definition. Python matches positional and keywordarguments first and then collects any remaining arguments in the finalparameter. 1234567def make_pizza(size, *toppings): &quot;&quot;&quot;Summarize the pizza we are about to make.&quot;&quot;&quot; print(f&quot;\\nMaking a {size}-inch pizza with the following toppings:&quot;) for topping in toppings: print(f&quot;- {topping}&quot;)make_pizza(16, 'pepperoni')make_pizza(12, 'mushrooms', 'green peppers', 'extra cheese') Making a 16-inch pizza with the following toppings: pepperoni Making a 12-inch pizza with the following toppings: mushrooms green peppers extra cheese Using Arbitrary Keyword Argumentsdef build_profile(first, last, **user_info): “””Build a dictionary containing everything we know about a user.””” user_info[‘first_name’] = first user_info[‘last_name’] = last return user_infouser_profile = build_profile(‘albert’, ‘einstein’, location=’princeton’, field=’physics’)print(user_profile) {‘location’: ‘princeton’, ‘field’: ‘physics’,‘first_name’: ‘albert’, ‘last_name’: ‘einstein’} write functions that accept as many key-valuepairs as the calling statement provides You’ll often see the parameter name **kwargs used to collect nonspecific keywordarguments. Storing Your Functions in Modulesstoring your functions in a separate file called a module and then importingthat module into your main program. An import statement tells Python tomake the code in a module available in the currently running program file Importing an Entire Module12345def make_pizza(size, *toppings): &quot;&quot;&quot;Summarize the pizza we are about to make.&quot;&quot;&quot; print(f&quot;\\nMaking a {size}-inch pizza with the following toppings:&quot;) for topping in toppings: print(f&quot;- {topping}&quot;) import pizzapizza.make_pizza(16, ‘pepperoni’)pizza.make_pizza(12, ‘mushrooms’, ‘green peppers’, ‘extra cheese’) Importing Specific Functionsfrom module_name import function_name from module_name import function_0, function_1, function_2 123from pizza import make_pizzamake_pizza(16, 'pepperoni')make_pizza(12, 'mushrooms', 'green peppers', 'extra cheese') Using as to Give a Function an Alias123from pizza import make_pizza as mpmp(16, 'pepperoni')mp(12, 'mushrooms', 'green peppers', 'extra cheese') Using as to Give a Module an Alias123import pizza as pp.make_pizza(16, 'pepperoni')p.make_pizza(12, 'mushrooms', 'green peppers', 'extra cheese') Importing All Functions in a Modulefrom pizza import *make_pizza(16, ‘pepperoni’)make_pizza(12, ‘mushrooms’, ‘green peppers’, ‘extra cheese’) The best approach is to import the function or functions you want, orimport the entire module and use the dot notation. This leads to clear codethat’s easy to read and understand ClassesCreating and Using a Class123456789101112class Dog: &quot;&quot;&quot;A simple attempt to model a dog.&quot;&quot;&quot; def __init__(self, name, age): &quot;&quot;&quot;Initialize name and age attributes.&quot;&quot;&quot; self.name = name self.age = age def sit(self): &quot;&quot;&quot;Simulate a dog sitting in response to a command.&quot;&quot;&quot; print(f&quot;{self.name} is now sitting.&quot;) def roll_over(self): &quot;&quot;&quot;Simulate rolling over in response to a command.&quot;&quot;&quot; print(f&quot;{self.name} rolled over!&quot;) The __init__() method is a special methodthat Python runs automatically whenever we create a new instance basedon the Dog class. This method has two leading underscores and two trailing underscores, a convention that helps prevent Python’s default methodnames from conflicting with your method names. The self parameter is required in the method definition, andit must come first, before the other parameters. It must be included inthe definition because when Python calls this method later (to create aninstance of Dog), the method call will automatically pass the self argument.Every method call associated with an instance automatically passes self,which is a reference to the instance itself; it gives the individual instanceaccess to the attributes and methods in the class Making an Instance from a Class123my_dog = Dog('Willie', 6)print(f&quot;My dog's name is {my_dog.name}.&quot;)print(f&quot;My dog is {my_dog.age} years old.&quot;) My dog’s name is Willie.My dog is 6 years old. Calling Methods12345class Dog: --snip--my_dog = Dog('Willie', 6)my_dog.sit()my_dog.roll_over() Willie is now sitting.Willie rolled over! Creating Multiple Instances12345678910class Dog: --snip--my_dog = Dog('Willie', 6)your_dog = Dog('Lucy', 3)print(f&quot;My dog's name is {my_dog.name}.&quot;)print(f&quot;My dog is {my_dog.age} years old.&quot;)my_dog.sit()print(f&quot;\\nYour dog's name is {your_dog.name}.&quot;)print(f&quot;Your dog is {your_dog.age} years old.&quot;)your_dog.sit() My dog’s name is Willie.My dog is 6 years old.Willie is now sitting.Your dog’s name is Lucy.Your dog is 3 years old.Lucy is now sitting. Working with Classes and Instances12345678910111213class Car: &quot;&quot;&quot;A simple attempt to represent a car.&quot;&quot;&quot; def __init__(self, make, model, year): &quot;&quot;&quot;Initialize attributes to describe a car.&quot;&quot;&quot; self.make = make self.model = model self.year = year def get_descriptive_name(self): &quot;&quot;&quot;Return a neatly formatted descriptive name.&quot;&quot;&quot; long_name = f&quot;{self.year} {self.make} {self.model}&quot; return long_name.title()my_new_car = Car('audi', 'a4', 2024)print(my_new_car.get_descriptive_name()) 2024 Audi A4 Setting a Default Value for an Attribute123456789101112131415class Car: def __init__(self, make, model, year): &quot;&quot;&quot;Initialize attributes to describe a car.&quot;&quot;&quot; self.make = make self.model = model self.year = year self.odometer_reading = 0 def get_descriptive_name(self): --snip-- def read_odometer(self): &quot;&quot;&quot;Print a statement showing the car's mileage.&quot;&quot;&quot; print(f&quot;This car has {self.odometer_reading} miles on it.&quot;)my_new_car = Car('audi', 'a4', 2024)print(my_new_car.get_descriptive_name())my_new_car.read_odometer() 2024 Audi A4This car has 0 miles on it. Modifying Attribute ValuesModifying an Attribute’s Value Directly123456class Car: --snip--my_new_car = Car('audi', 'a4', 2024)print(my_new_car.get_descriptive_name())my_new_car.odometer_reading = 23my_new_car.read_odometer() 2024 Audi A4This car has 23 miles on it. Modifying an Attribute’s Value Through a Method12345678class Car: --snip-- def update_odometer(self, mileage): &quot;&quot;&quot;Set the odometer reading to the given value.&quot;&quot;&quot; self.odometer_reading = mileagemy_new_car = Car('audi', 'a4', 2024)my_new_car.update_odometer(23)my_new_car.read_odometer() 2024 Audi A4This car has 23 miles on it. 1234567891011class Car: --snip-- def update_odometer(self, mileage): &quot;&quot;&quot; Set the odometer reading to the given value. Reject the change if it attempts to roll the odometer back. &quot;&quot;&quot; if mileage &gt;= self.odometer_reading: self.odometer_reading = mileage else: print(&quot;You can't roll back an odometer!&quot;) Incrementing an Attribute’s Value Through a Method12345678910111213class Car: --snip-- def update_odometer(self, mileage): --snip-- def increment_odometer(self, miles): &quot;&quot;&quot;Add the given amount to the odometer reading.&quot;&quot;&quot; self.odometer_reading += milesmy_used_car = Car('subaru', 'outback', 2019)print(my_used_car.get_descriptive_name())2 my_used_car.update_odometer(23_500)my_used_car.read_odometer()my_used_car.increment_odometer(100)my_used_car.read_odometer() 2019 Subaru OutbackThis car has 23500 miles on it.This car has 23600 miles on it. Inheritance1234567891011121314151617181920212223242526272829303132class Car: &quot;&quot;&quot;A simple attempt to represent a car.&quot;&quot;&quot; def __init__(self, make, model, year): &quot;&quot;&quot;Initialize attributes to describe a car.&quot;&quot;&quot; self.make = make self.model = model self.year = year self.odometer_reading = 0 def get_descriptive_name(self): &quot;&quot;&quot;Return a neatly formatted descriptive name.&quot;&quot;&quot; long_name = f&quot;{self.year} {self.make} {self.model}&quot; return long_name.title() def read_odometer(self): &quot;&quot;&quot;Print a statement showing the car's mileage.&quot;&quot;&quot; print(f&quot;This car has {self.odometer_reading} miles on it.&quot;) def update_odometer(self, mileage): &quot;&quot;&quot;Set the odometer reading to the given value.&quot;&quot;&quot; if mileage &gt;= self.odometer_reading: self.odometer_reading = mileage else: print(&quot;You can't roll back an odometer!&quot;) def increment_odometer(self, miles): &quot;&quot;&quot;Add the given amount to the odometer reading.&quot;&quot;&quot; self.odometer_reading += milesclass ElectricCar(Car): &quot;&quot;&quot;Represent aspects of a car, specific to electric vehicles.&quot;&quot;&quot; def __init__(self, make, model, year): &quot;&quot;&quot;Initialize attributes of the parent class.&quot;&quot;&quot; super().__init__(make, model, year)my_leaf = ElectricCar('nissan', 'leaf', 2024)print(my_leaf.get_descriptive_name()) 2024 Nissan Leaf Defining Attributes and Methods for the Child Class1234567891011121314151617class Car: --snip--class ElectricCar(Car): &quot;&quot;&quot;Represent aspects of a car, specific to electric vehicles.&quot;&quot;&quot; def __init__(self, make, model, year): &quot;&quot;&quot; Initialize attributes of the parent class. Then initialize attributes specific to an electric car. &quot;&quot;&quot; super().__init__(make, model, year) self.battery_size = 40 def describe_battery(self): &quot;&quot;&quot;Print a statement describing the battery size.&quot;&quot;&quot; print(f&quot;This car has a {self.battery_size}-kWh battery.&quot;)my_leaf = ElectricCar('nissan', 'leaf', 2024)print(my_leaf.get_descriptive_name())my_leaf.describe_battery() 2024 Nissan LeafThis car has a 40-kWh battery. Overriding Methods from the Parent Class the class Car had a method called fill_gas_tank(). This method ismeaningless for an all-electric vehicle, so you might want to override thismethod 12345class ElectricCar(Car): --snip-- def fill_gas_tank(self): &quot;&quot;&quot;Electric cars don't have gas tanks.&quot;&quot;&quot; print(&quot;This car doesn't have a gas tank!&quot;) Instances as Attributes1234567891011121314151617181920class Battery: &quot;&quot;&quot;A simple attempt to model a battery for an electric car.&quot;&quot;&quot; def __init__(self, battery_size=40): &quot;&quot;&quot;Initialize the battery's attributes.&quot;&quot;&quot; self.battery_size = battery_size def describe_battery(self): &quot;&quot;&quot;Print a statement describing the battery size.&quot;&quot;&quot; print(f&quot;This car has a {self.battery_size}-kWh battery.&quot;)class ElectricCar(Car): &quot;&quot;&quot;Represent aspects of a car, specific to electric vehicles.&quot;&quot;&quot; def __init__(self, make, model, year): &quot;&quot;&quot;Initialize attributes of the parent class.&quot;&quot;&quot; super().__init__(make, model, year) self.battery = Battery()my_leaf = ElectricCar('nissan', 'leaf', 2024)print(my_leaf.get_descriptive_name())my_leaf.battery.describe_battery() 2024 Nissan LeafThis car has a 40-kWh battery. 1234567891011121314151617class Car: --snip--class Battery: --snip-- def get_range(self): &quot;&quot;&quot;Print a statement about the range this battery provides.&quot;&quot;&quot; if self.battery_size == 40: range = 150 elif self.battery_size == 65: range = 225 print(f&quot;This car can go about {range} miles on a full charge.&quot;)class ElectricCar(Car): --snip--my_leaf = ElectricCar('nissan', 'leaf', 2024)print(my_leaf.get_descriptive_name())my_leaf.battery.describe_battery()my_leaf.battery.get_range() Importing ClassesImporting a Single Classcar.py 1234567891011121314151617181920212223242526&quot;&quot;&quot;A class that can be used to represent a car.&quot;&quot;&quot;class Car: &quot;&quot;&quot;A simple attempt to represent a car.&quot;&quot;&quot; def __init__(self, make, model, year): &quot;&quot;&quot;Initialize attributes to describe a car.&quot;&quot;&quot; self.make = make self.model = model self.year = year self.odometer_reading = 0 def get_descriptive_name(self): &quot;&quot;&quot;Return a neatly formatted descriptive name.&quot;&quot;&quot; long_name = f&quot;{self.year} {self.make} {self.model}&quot; return long_name.title() def read_odometer(self): &quot;&quot;&quot;Print a statement showing the car's mileage.&quot;&quot;&quot; print(f&quot;This car has {self.odometer_reading} miles on it.&quot;) def update_odometer(self, mileage): &quot;&quot;&quot;Set the odometer reading to the given value.&quot;&quot;&quot; if mileage &gt;= self.odometer_reading: self.odometer_reading = mileage else: print(&quot;You can't roll back an odometer!&quot;) def increment_odometer(self, miles): &quot;&quot;&quot;Add the given amount to the odometer reading.&quot;&quot;&quot; self.odometer_reading += miles my_car.py 12345from car import Carmy_new_car = Car('audi', 'a4', 2024)print(my_new_car.get_descriptive_name())my_new_car.odometer_reading = 23my_new_car.read_odometer() 2024 Audi A4This car has 23 miles on it. Storing Multiple Classes in a Modulecar.py 123456789101112131415161718192021222324252627&quot;&quot;&quot;A set of classes used to represent gas and electric cars.&quot;&quot;&quot;class Car: --snip--class Battery: &quot;&quot;&quot;A simple attempt to model a battery for an electric car.&quot;&quot;&quot; def __init__(self, battery_size=40): &quot;&quot;&quot;Initialize the battery's attributes.&quot;&quot;&quot; self.battery_size = battery_size def describe_battery(self): &quot;&quot;&quot;Print a statement describing the battery size.&quot;&quot;&quot; print(f&quot;This car has a {self.battery_size}-kWh battery.&quot;) def get_range(self): &quot;&quot;&quot;Print a statement about the range this battery provides.&quot;&quot;&quot; if self.battery_size == 40: range = 150 elif self.battery_size == 65: range = 225 print(f&quot;This car can go about {range} miles on a full charge.&quot;)class ElectricCar(Car): &quot;&quot;&quot;Represent aspects of a car, specific to electric vehicles.&quot;&quot;&quot; def __init__(self, make, model, year): &quot;&quot;&quot;Initialize attributes of the parent class.&quot;&quot;&quot; super().__init__(make, model, year) self.battery = Battery() my_electric_car.py 12345from car import ElectricCarmy_leaf = ElectricCar('nissan', 'leaf', 2024)print(my_leaf.get_descriptive_name())my_leaf.battery.describe_battery()my_leaf.battery.get_range() 2024 Nissan LeafThis car has a 40-kWh battery.This car can go about 150 miles on a full charge. Importing Multiple Classes from a Module12345from car import Car, ElectricCarmy_mustang = Car('ford', 'mustang', 2024)print(my_mustang.get_descriptive_name())my_leaf = ElectricCar('nissan', 'leaf', 2024)print(my_leaf.get_descriptive_name()) 2024 Ford Mustang2024 Nissan Leaf Importing an Entire Module012345import carmy_mustang = car.Car('ford', 'mustang', 2024)print(my_mustang.get_descriptive_name())my_leaf = car.ElectricCar('nissan', 'leaf', 2024)print(my_leaf.get_descriptive_name()) Importing All Classes from a Modulefrom module_name import * This method is not recommended for two reasons. First, it’s helpful to beable to read the import statements at the top of a file and get a clear sense ofwhich classes a program uses. With this approach it’s unclear which classesyou’re using from the module. This approach can also lead to confusionwith names in the file. If you accidentally import a class with the same nameas something else in your program file, you can create errors that are hardto diagnose. Importing a Module into a Modulecar.py “””A class that can be used to represent a car.”””class Car: –snip– electric_car.py “””A set of classes that can be used to represent electric cars.”””from car import Carclass Battery: –snip–class ElectricCar(Car): –snip– my_cars.py 123456from car import Carfrom electric_car import ElectricCarmy_mustang = Car('ford', 'mustang', 2024)print(my_mustang.get_descriptive_name())my_leaf = ElectricCar('nissan', 'leaf', 2024)print(my_leaf.get_descriptive_name()) Using Aliasesfrom electric_car import ElectricCar as ECmy_leaf = EC(‘nissan’, ‘leaf’, 2024) import electric_car as ecmy_leaf = ec.ElectricCar(‘nissan’, ‘leaf’, 2024) Files and ExceptionsTesting Your Code","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/python/python%20crash%20course/"},{"title":"udemy_python_100_days","text":"Create a virtual environmentA best practice among Python developers is to use a project-specific virtual environment. Once you activate that environment, any packages you then install are isolated from other environments, including the global interpreter environment, reducing many complications that can arise from conflicting package versions. You can create non-global environments in VS Code using Venv or Anaconda with Python: Create Environment. Open the Command Palette (Ctrl+Shift+P), start typing the Python: Create Environment command to search, and then select the command. The command then presents a list of interpreters that can be used for your project. Ensure your new environment is selected by using the Python: Select Interpreter command from the Command Palette. day 01print function12print(&quot;print('what to print')&quot;)print('print(&quot;what to print&quot;)') stringprint(&quot;Hello world!\\nHello World!&quot;) outputHello world!Hello World 12print (&quot;Hello&quot; + &quot; Angela&quot;)print (&quot;Hello&quot; + &quot; &quot; &quot;Angela&quot;) Hello AngelaHello Angela print(&quot;Hello world!&quot;) 123 File &quot;c:\\Users\\lcf\\Documents\\learning\\udemy_python\\02.py&quot;, line 6 print(&quot;Hello world!&quot;)IndentationError: unexpected indent print((&quot;Hello world&quot;) 123 print((&quot;Hello world&quot;) ^SyntaxError: '(' was never closed print('string concatenation with &quot;+&quot; sign') string concatenation with “+” sign inputinput(&quot;some prompt&quot;) print(&quot;Hello &quot; + input(&quot;What is your name?&quot;)) print(len(input(&quot;What is your name? &quot;))) variable12name = input(&quot;What is your name? &quot;)print(name) What is your name? lucfelucfe 12345name = &quot;Jack&quot;print(name)name = &quot;Angela&quot;print(name) JackAngela print(len(input(&quot;What is your name? &quot;))) 123name = input(&quot;What is your name? &quot;)length = len(name)print(length) What is your name? lucfe5 – 123456789a = input(&quot;a: &quot;)b = input(&quot;b: &quot;)c = bb = aa = cprint(&quot;a = &quot; + a)print(&quot;b = &quot; + b) a: 146b: 645a = 645b = 146 12name = &quot;Jack&quot;print(nama) 12345Traceback (most recent call last): File &quot;c:\\Users\\lcf\\Documents\\learning\\udemy_python\\01.04.py&quot;, line 12, in &lt;module&gt; print(nama) ^^^^NameError: name 'nama' is not defined. Did you mean: 'name'? day 02data type string 12print(&quot;Hello&quot;[0])print(&quot;123&quot; + &quot;358&quot;) integer print(123 + 345) print(12_34_435_4) float 3.1415 boolean TrueFalse len(132) 1234Traceback (most recent call last): File &quot;c:\\Users\\lcf\\Documents\\learning\\udemy_python\\02.01.py&quot;, line 13, in &lt;module&gt; len(132)TypeError: object of type 'int' has no len() num_char = len(input(&quot;what is your name?&quot;))print(&quot;your name &quot; + num_char + &quot; characters.&quot;) print(“your name “ + num_char + “ characters.”) ~~~~~~~~~~~~~^~~~~~~~~~TypeError: can only concatenate str (not “int”) to str new_num_char = str(num_char) print(type(1234)) &lt;class 'int'&gt; float(&quot;100.5) 1234567two_digit_num = input(&quot;your number is?&quot;)print(type(two_digit_num))first_digit = int(two_digit_num[-2])second_digit = int(two_digit_num[-1])answer = str(first_digit + second_digit)print(&quot;your answer is &quot; + answer) mathmatical operator 7 - 43 * 22 ** 36 / 3 print(type(6/2))&lt;class 'float'&gt; pemdas parentheses ()exponents **multiplication/division * /addition/subtraction + - left to right 12print(3 * 3 + 3 / 3 - 3)print(3 * (3 + 3) / 3 - 3) 7.03.0 print(8 / 3)print(round(8 / 3))print(round(8 / 3, 2))print(8 // 3)print(type(8 // 3)) 2.666666666666666532.672&lt;class 'int'&gt; % remainder 1234score = 4score -= 2# score = score - 2print(score) 2 123456score = 0height = 1.8isWinning = Truename = &quot;john&quot;print(f&quot;your name is {name},your score is {score}, your height is {height}, your are winning is {isWinning}&quot;) your name is john,your score is 0, your height is 1.8, your are winning is True pay_each = round(pay_each) 33.6 pay_each = &quot;{:.2f}&quot;.format(pay_each) 33.60 day 03if condition: do thiselse: do that 123456789height = int(input(&quot;what is your height? &quot;))if height &gt; 120: print(&quot;you can&quot;)else: print(&quot;you cant&quot;)height &gt;= 120height == 120height != 120 123456number = int(input(&quot;number pls? &quot;))even_odd = number % 2if even_odd == 1: print(&quot;odd&quot;)else: print(&quot;even&quot;) if condition1: if condition2: do this else: do thatelse: do else if condition1: do Aelif condition2: do Belse: do that year = int(input(“which year? “)) 12345678910if year % 4 == 0: if year % 100 == 0: if year % 400 == 0: print(&quot;a leap year&quot;) else: print(&quot;not a leap year&quot;) else: print(&quot;a leap year&quot;)else: print(&quot;not a leap year&quot;) if condition1: do Aif condition2: do Bif condition3: do C logical operators and or not 123456print(&quot;&quot;&quot;dfasagagsags&quot;&quot;&quot;)print('you\\'re good &quot;student&quot;') day 04randomisation mersenne twister python module 12import randomprint(random.randint(1, 10)) random module Returns a random integer between a and b (both inclusive). random.random() -&gt; Returns the next random floating point number between [0.0 to 1.0) 123import randomrandom_float = random.random()print(random_float) 0.0000000… -&gt; 0.9999999…0.9597056472657862 print(random_float * 5) 0.000000… –&gt; 4.99999…2.441770790800433 list have order fruits = [item1, item2] data structure day 05for item in items_list: do someting on item 12students_heights = input(&quot;a list of student height&quot;).split()range(0, len(students_heights)) rge = range(1, 10) &lt;class 'range'&gt; Return an object that produces a sequence of integers from start (inclusive) to stop (exclusive) by step. 1234567print(students_scores)max_score = 0for score in students_scores: if max_score &lt; score: max_score = score# max_score = max(students_scores) Randomize a List using Random.Shuffle()Random.Shuffle() is the most recommended method to shuffle a list. Python in its random library provides this inbuilt function which in-place shuffles the list. letters[random.randint(0, len(letters)-1)] random.choice(letters) day 06python buildin funtions 12345def my_function(): print(&quot;Hello&quot;) print(&quot;Bye&quot;)my_function() range(6) day 07 How To Use Break, Continue, and Pass Statements when Working with Loops in Python 3 1234# import moduel_07_01# stages = moduel_07_01.stagesfrom moduel_07_01 import stages day 08argument parameter def my_function(something) #do this with something my_function(123) somthing -&gt; parameter123 -&gt; arguments positional argumentkeyword argument greet_with(name = &quot;Angela&quot;, location = &quot;London&quot;)greet_with(location = &quot;London&quot;, name = &quot;Angela&quot;) math.ceil(-23.11) : -23.0math.ceil(300.16) : 301.0math.ceil(300.72) : 301.0 math.floor(-23.11) : -24.0math.floor(300.16) : 300.0math.floor(300.72) : 300.0 12345#for n in range(len(alphabet)):# if letter == alphabet[n]:# letter_index = n# breakletter_index = alphabet.index(letter) day 09dictionares {key: value} 1234567dic1 = { &quot;bug&quot;: &quot;asd&quot;, &quot;function&quot;: &quot;asdfq&quot;, 123: &quot;asgqe&quot;, &quot;name&quot;: 164,} dic1[“bug”]dic1[123] dic1[“bog”]KeyError: ‘bog’ add a pairdic1[“Loop”] = “asdf asdf wrye” wipe a dicdic1 = {} edit an itemdic1[“bug”] = “sdaf dasfa das g” 123for key in dic1: print(key) print(dic1[key]) { key: [list], key2: {dict},} 12345678910111213141516171819202122232425262728293031323334# nesting a list in a dictionarytravel_log = { &quot;france&quot;: [&quot;paris&quot;, &quot;lille&quot;, &quot;dijon&quot;], &quot;germany&quot;: [&quot;berlin&quot;, &quot;hamburg&quot;],}# nesting a dictionary in a dictionarytravel_log = { &quot;france&quot;: { &quot;visited_cities&quot;: [&quot;paris&quot;, &quot;lille&quot;, &quot;dijon&quot;], &quot;total_visits&quot;: 12, }, &quot;germany&quot;: { &quot;visited_cities&quot;: [&quot;berlin&quot;, &quot;hamburg&quot;], &quot;total_visits&quot;: 6, },}# nesting a dictionary in a listtravel_log = [ { &quot;country&quot;: &quot;france&quot;, &quot;visited_cities&quot;: [&quot;paris&quot;, &quot;lille&quot;, &quot;dijon&quot;], &quot;total_visits&quot;: 12, }, { &quot;country&quot;:&quot;germany&quot;, &quot;visited_cities&quot;: [&quot;berlin&quot;, &quot;hamburg&quot;], &quot;total_visits&quot;: 6, }] day 101234def my_function(): return 3 * 2result = my_function str.title()Return a titlecased version of the string where words start with an uppercase character and the remaining characters are lowercase. 12345678910111213141516171819202122def add(a, b): return a + bdef sub(a, b): return a - bdef multi(a, b): return a * bdef div(a, b): return a / boperations = { &quot;+&quot;: add, &quot;-&quot;: sub, &quot;*&quot;: multi, &quot;/&quot;: div,}cal_function = operations[&quot;*&quot;]cal_function(2, 3) 123456789101112131415161718192021222324252627282930# local scope# in a function# any named object, not just variablesdef drink_potion(): potion_strenth = 2 print(f&quot;{potion_strenth}&quot;)drink_potion()# global scope# not in a functionplayer_health = 10def drink_potion(): potion_strenth = 2 print(f&quot;{potion_strenth}&quot;) print(f&quot;{player_health}&quot;)# no block scope# if statementgame_level = 3enemies = ['skeleton', 'zombie', 'alien']if game_level &lt; 5: new_enemy = enemies[0]print(f&quot;{new_enemy}&quot;) 123456789101112enemies = 1def increse_enemies(): enemies = 2 print(f&quot;{enemies}&quot;)# 2increse_enemies()print(f&quot;{enemies}&quot;)# 1 12345678910111213enemies = 1def increse_enemies(): global enemies enemies = 2 print(f&quot;{enemies}&quot;)# 2increse_enemies()print(f&quot;{enemies}&quot;)# 2 12345678enemies = 1def increse_enemies(): print(f&quot;{enemies}&quot;) return enemies + 1enemies = increse_enemies() # global constant PI = 3.1415926 day 13debug day 14day 15day 16object oriented programming oop attributehas methoddoes classtype/blueprint object car = CarBlueprint() object.attributecar.speed object.method()car.move() day 17class name PascalCase not camelCase else: snake_case initialize -&gt; construtor def init(self): day 18dontfrom turtle import * module aliasimport turtle as t installing moduel tuple tuple_a = (1, 2, 3) = list(tuple) day 19event listeners higher order function object state instance day 20day 21class inheritance slicing list/dictionary [2: 5: 2][::-1] day 22create the screen create the paddle create the ball and move detect collision with wall and bounce detect collision with paddle detect when paddle misses keep score day 23move the turtle with keypress create and move the cars detect collision with car detect when turtle reaches the other side create a scoreboard day 24read/write files 12345with open(&quot;data.txt&quot;) as file: return file.read()with open(&quot;data.txt&quot;, mode=&quot;w&quot;) as file: file.write(str(self.high_score)) absolute file path relative file path./ working directry or “” ../ working directory parent folder 12345strip_name = name.strip()mail_content = start_content.replace(&quot;[name]&quot;, strip_name)with open(&quot;Input/Names/invited_names.txt&quot;) as invited_names_file: invited_names = invited_names_file.readlines() The readlines() method returns a list containing each line in the file as a list item. The replace() method replaces a specified phrase with another specified phrase.Note: All occurrences of the specified phrase will be replaced, if nothing else is specified. string.strip(characters)Remove spaces at the beginning and at the end of the string:include “\\n” day 25csv files 1234import csvwith open(&quot;data.csv&quot;) as data_file: weather_data = csv.reader(data_file) pandas -&gt; data analysis 1234# print(data[&quot;temp&quot;])# print(type(data[&quot;temp&quot;]))# print(data)# print(type(data)) Series columnDataFrame table import pandas data = pandas.read_csv(“data.csv”) print(data[data[&quot;day&quot;] == &quot;Monday&quot;])print(type(data[data[&quot;day&quot;] == &quot;Monday&quot;])) -&gt; DataFrame ser.iloc[0]Purely integer-location based indexing for selection by position. Series.item()Return the first element of the underlying data as a Python scalar. 12345678data_dict = { &quot;students&quot;: [&quot;Amy&quot;, &quot;James&quot;, &quot;Angela&quot;], &quot;scores&quot;: [76, 56, 65],}data = pandas.DataFrame(data_dict)data.to_csv(&quot;score_data.csv&quot;)print(data) day 26comprehension create a list from a exsiting list 12345678910# new_list = [new_item for item in list]numbers = [1, 2, 3]new_list = []for n in numbers: add_1 = n + 1 new_list.append(add_1)n_list = [n+1 for n in numbers] 123numbers = range(1, 5)print(type(numbers))new_list = [n * 2 for n in numbers] 123name = &quot;Angela&quot;new_list = [letter for letter in name]print(new_list) 12345names = ['Alwe', 'Betaafh', 'carol', 'dava']short_names = [name for name in names if len(name) &lt; 5]print(short_names)long_names = [name.upper() for name in names if len(name) &gt;= 5]print(long_names) [‘Alwe’, ‘dava’][‘BETAAFH’, ‘CAROL’] int(num.strip()) -&gt; int(num) new_dict = {new_key:new_value for item in list}new_dict = {new_key:new_value for (key, value) in dict_1.items()} 123names = ['Alwe', 'Betaafh', 'carol', 'dava']student_scores = {item: random.randint(0, 100) for item in names}print(student_scores) {‘Alwe’: 45, ‘Betaafh’: 95, ‘carol’: 21, ‘dava’: 24} 12student_scores = {'Alwe': 45, 'Betaafh': 95, 'carol': 21, 'dava': 24}passed_student = {student: score for (student, score) in student_scores.items() if score &gt;= 60} The split() method splits a string into a list. You can specify the separator, default separator is any whitespace. 123456789student_dict = { &quot;student&quot;: [&quot;Angela&quot;, &quot;James&quot;, &quot;Lily&quot;], &quot;score&quot;: [56, 76, 98]}# for key, value in student_dict.items():for (key, value) in student_dict.items(): print(key) print(value) 123456for (index, row) in student_data.iterrows(): print(index) print(row) print(type(row)) print(row[&quot;student&quot;]) print(type(row[&quot;student&quot;])) 12345678910110student Angelascore 56Name: 0, dtype: object&lt;class 'pandas.core.series.Series'&gt;Angela&lt;class 'str'&gt; day 27tkinter gui function advanced argument default value # def my_function(a=0, b, c=0):def my_function(b, a=0, c=0): =… any number of argumentsunlimited position arguments 12345678910def add(*args): result = 0 print(type(args)) for n in args: print(n) result += n return resultresult = add(1, 2, 3, 4)print(result) &lt;class 'tuple'&gt; 12345678def calc(n, **kwargs): print(type(kwargs)) print(kwargs) n += kwargs[&quot;add&quot;] n *= kwargs[&quot;multi&quot;] return ncalc(2, add=3, multi=5) &lt;class 'dict'&gt;{‘add’: 3, ‘multi’: 5} 123456789class Car: def __init__(self, **kwargs): self.make = kwargs[&quot;make&quot;] # self.model = kwargs[&quot;model&quot;] self.model = kwargs.get(&quot;model&quot;)my_car = Car(make=&quot;Nissan&quot;)print(my_car.model) None Options control things like the color and border width of a widget. Options can be set in three ways: At object creation time, using keyword argumentsfred = Button(self, fg=&quot;red&quot;, bg=&quot;blue&quot;)After object creation, treating the option name like a dictionary indexfred[&quot;fg&quot;] = &quot;red&quot;fred[&quot;bg&quot;] = &quot;blue&quot;Use the config() method to update multiple attrs subsequent to object creationfred.config(fg=&quot;red&quot;, bg=&quot;blue&quot;) 1234567891011121314151617181920## labelmy_label = tkinter.Label(text=&quot;label text&quot;, font=(&quot;Arial&quot;, 24, &quot;bold&quot;))my_label.pack()## buttondef button_click(): print(&quot;I am clicked&quot;)button = tkinter.Button(text=&quot;Click Me&quot;, command=button_click)button.pack()## entryinput = tkinter.Entry(width=10)input.pack()input_text = input.get() day 28dynamic type a = 1a = “Hello” day 291234passwords_1 = ['a', 'b']passwords_2 = ['c', 'd']passwords_3 = ['e', 'f']passwords = passwords_1 + passwords_2 + passwords_3 final_password = &quot;&quot;.join(passwords) messagebox.showinfo(title=&quot;oops&quot;, message=&quot;Please dont leave any fields empty!&quot;) is_ok = messagebox.askokcancel(title=f&quot;{website}&quot;, message=f&quot;Email: {username}\\nPassword: {password}\\n Is it ok to save?&quot;) 123456789101112131415161718label_username = Label(text=&quot;Email/Username:&quot;)label_username.grid(row=2, column=0)text_website = Entry(width=45)text_website.focus()# text_website.delete(0, END)text_website.grid(row=1, column=1, columnspan=2)text_username = Entry(width=45)text_username.insert(0, &quot;lucfe2010@gmail.com&quot;)text_username.grid(row=2, column=1, columnspan=2)button_password = Button(text=&quot;Generate Password&quot;, command=generate_password)button_password.grid(row=3, column=2) 12345678window = Tk()window.title(&quot;password manager&quot;)window.config(padx=50, pady=50)canvas_main = Canvas(width=200, height=200, highlightthickness=0)bg_img = PhotoImage(file=&quot;logo.png&quot;)canvas_main.create_image(100, 100, image=bg_img)canvas_main.grid(column=1, row=0) day 30123456789101112131415161718# # FileNotFoundError# with open(&quot;a_file.txt&quot;) as file:# file.read()# #KeyError# a_dictionary = {&quot;key&quot;: &quot;value&quot;}# value = a_dictionary[&quot;non_existent_key&quot;]# # index error# fruit_list = [&quot;apple&quot;, &quot;banana&quot;, &quot;pear&quot;]# fruit = fruit_list[3]# #type error# text = &quot;abc&quot;# print(text + 5) 123456789101112try: # something that might cause an exception passexcept: # do this if there was an exception passelse: # do this if there were no exceptions passfinally: # do this no matter what happens pass 123456789101112131415try: file = open(&quot;a_file.txt&quot;) a_dictionary = {&quot;key&quot;: &quot;value&quot;} # value = a_dictionary[&quot;non_existent_key&quot;]except FileNotFoundError: print(&quot;there was an error&quot;) open = open(&quot;a_file.txt&quot;, &quot;w&quot;)except KeyError as e: print(f&quot;key error{e}&quot;)else: print(&quot;no error here&quot;) content = file.read() print(content)finally: open.close() 12345678height = float(input(&quot;height: &quot;))weight = int(input(&quot;weight: &quot;))if height &gt; 3: raise ValueError(&quot;human should not be over 3 meters&quot;)bmi = weight / height ** 2print(bmi) 1234567891011fruits = [&quot;Apple&quot;, &quot;Pear&quot;, &quot;Orange&quot;]def make_pie(index): try: fruit = fruits[index] except IndexError as e: print(&quot;Fruit pie&quot;) else: print(fruit + &quot; pie&quot;)make_pie(4) 123456789101112131415161718192021222324252627facebook_posts = [ {&quot;likes&quot;: 21, &quot;Comments&quot;: 2}, {&quot;likes&quot;: 13, &quot;Comments&quot;: 2, &quot;Shares&quot;: 1}, {&quot;likes&quot;: 33, &quot;Comments&quot;: 8, &quot;Shares&quot;: 3}, {&quot;Comments&quot;: 4, &quot;Shares&quot;: 2}, {&quot;Comments&quot;: 1, &quot;Shares&quot;: 1}, {&quot;likes&quot;: 19, &quot;Comments&quot;: 3},]total_like = 0## for post in facebook_posts:# try:# post_likes = post['likes']# except KeyError:# post_likes = 0# finally:# total_like = total_like + post_likes# print(total_like)for post in facebook_posts: try: total_like = total_like + post['likes'] except KeyError: passprint(total_like) 123456789101112131415161718192021222324252627phonetic_dict = {row[&quot;letter&quot;]: row.code for (index, row) in data.iterrows()}print(phonetic_dict)# is_end = True# while is_end:# word = input(&quot;enter a word: &quot;).upper()# try:# output_list = [phonetic_dict[letter] for letter in word]# except KeyError:# print(&quot;sorry, only letters in the alphabet&quot;)# else:# print(output_list)# is_end = Falsedef generate_phonetic(): word = input(&quot;enter a word: &quot;).upper() try: output_list = [phonetic_dict[letter] for letter in word] except KeyError: print(&quot;sorry, only letters in the alphabet&quot;) generate_phonetic() else: print(output_list)generate_phonetic() 123456789101112131415161718192021222324252627website = text_website.get()username = text_username.get()password = text_password.get()new_data = { website: { &quot;email&quot;: username, &quot;password&quot;: password, }}try: with open(&quot;data.json&quot;, &quot;r&quot;) as fp: data = json.load(fp)except FileNotFoundError: with open(&quot;data.json&quot;, &quot;w&quot;) as fp: json.dump(new_data, fp, indent=4)else: data.update(new_data) with open(&quot;data.json&quot;, &quot;w&quot;) as fp: json.dump(data, fp, indent=4) print(data)finally: text_website.delete(0, END) text_password.delete(0, END) 123456789101112131415161718192021222324def search(): website = text_website.get() try: with open(&quot;data.json&quot;, 'r') as fp: data = json.load(fp) # website_infos = data[website] except FileNotFoundError: messagebox.showinfo(message=&quot;no data yet&quot;) # except KeyError: # messagebox.showinfo(message=f&quot;no password stored for {website}&quot;) else: if website in data: website_infos = data[website] email_info = website_infos[&quot;email&quot;] password_info = website_infos[&quot;password&quot;] messagebox.showinfo(title=website, message=f&quot;email: {email_info}\\npassword: {password_info}&quot;) pyperclip.copy(password_info) else: messagebox.showinfo(message=f&quot;no password stored for {website}&quot;) # email_info = website_infos[&quot;email&quot;] # password_info = website_infos[&quot;password&quot;] # messagebox.showinfo(title=website, message=f&quot;email: {email_info}\\npassword: {password_info}&quot;) # pyperclip.copy(password_info) day 31https://en.wiktionary.org/wiki/Wiktionary:Frequency_listshttps://github.com/hermitdave/FrequencyWords google excel=GOOGLETRANSLATE(A2,&quot;fr&quot;,&quot;en&quot;) https://cloud.google.com/translate/docs/languages?hl=zh-cn 123456789101112French,Englishpartie,parthistoire,historychercher,searchseulement,onlypolice,policepensais,thoughtaide,helpdemande,requestgenre,kindmois,monthfrère,brother 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778import randomfrom tkinter import *import pandasBACKGROUND_COLOR = &quot;#B1DDC6&quot;current_card = {}try: data = pandas.read_csv(&quot;data/words_to_learn.csv&quot;)except FileNotFoundError: data = pandas.read_csv(&quot;data/french_words.csv&quot;)# to_learn = data.to_dict() # {'French': {0: 'partie', 1: 'histoire',...}, 'English': {0: 'part', 1: 'history', 2:to_learn = data.to_dict(orient=&quot;records&quot;) # [{'French': 'partie', 'English': 'part'}, {'French': 'histoire', ...def is_known(): to_learn.remove(current_card) df = pandas.DataFrame(to_learn) # df.to_csv(&quot;data/words_to_learn.csv&quot;) ## need to remove the index row df.to_csv(&quot;data/words_to_learn.csv&quot;, index=False) # print(len(to_learn)) next_card()def next_card(): # print(to_learn) global current_card current_card = random.choice(to_learn) french_word = current_card[&quot;French&quot;] canvas.itemconfig(title, text=&quot;French&quot;, fill=&quot;black&quot;) canvas.itemconfig(word, text=french_word, fill=&quot;black&quot;) canvas.itemconfig(card_bg_img, image=card_front_img) global flip_timer window.after_cancel(flip_timer) flip_timer = window.after(3000, func=flip_card)def flip_card(): canvas.itemconfig(title, text=&quot;English&quot;, fill=&quot;white&quot;) canvas.itemconfig(word, text=current_card[&quot;English&quot;], fill=&quot;white&quot;) # card_back_img = PhotoImage(file=&quot;images/card_back.png&quot;) ## this is not work canvas.itemconfig(card_bg_img, image=card_back_img)window = Tk()window.title(&quot;Flashy&quot;)window.config(padx=50, pady=50, bg=BACKGROUND_COLOR)flip_timer = window.after(3000, func=flip_card)canvas = Canvas(width=800, height=526)canvas.config(bg=BACKGROUND_COLOR, highlightthickness=0)canvas.grid(row=0, column=0, columnspan=2)card_front_img = PhotoImage(file=&quot;images/card_front.png&quot;)card_back_img = PhotoImage(file=&quot;images/card_back.png&quot;)card_bg_img = canvas.create_image(400, 263, image=card_front_img)title = canvas.create_text(400, 150, text=&quot;Title&quot;, font=(&quot;Ariel&quot;, 40, &quot;italic&quot;))word = canvas.create_text(400, 263, text=&quot;word&quot;, font=(&quot;Ariel&quot;, 60, &quot;bold&quot;))wrong_img = PhotoImage(file=&quot;images/wrong.png&quot;)unknown_button = Button(image=wrong_img, command=next_card)unknown_button.config(highlightthickness=0)unknown_button.grid(row=1, column=0)right_img = PhotoImage(file=&quot;images/right.png&quot;)known_button = Button(image=right_img, command=is_known, highlightthickness=0)known_button.grid(row=1, column=1)next_card()window.mainloop() day 32 12345678910import smtplibmy_email = &quot;lcftest323@gmail.com&quot;with smtplib.SMTP(&quot;smtp.gmail.com&quot;) as connection: connection.starttls() connection.login(user=my_email, password=&quot;xxx&quot;) connection.sendmail(from_addr=my_email, to_addrs=&quot;liucf2010@sina.com&quot;, msg=&quot;Subject:Hello\\n\\nThis is the body of the email&quot;) 12345678910import datetime as dtnow = dt.datetime.now()print(now)print(now.year)print(type(now.year)) # &lt;class 'int'&gt;now.weekday()data_of_birth = dt.datetime(year=1996, month=5, day=21, hour=8,)print(data_of_birth) # 1996-05-21 08:00:00 1234567891011121314151617181920import datetime as dtimport randomimport smtplibweekday_of_today = dt.datetime.now().weekday()with open(&quot;quotes.txt&quot;, &quot;r&quot;) as fp: quotes = fp.readlines() print(quotes)if weekday_of_today == 3: today_quote = random.choice(quotes) print(f&quot;Subject:Hello\\n\\n{today_quote}&quot;) my_email = &quot;lcftest323@gmail.com&quot; # with smtplib.SMTP(&quot;smtp.gmail.com&quot;) as connection: # connection.starttls() # connection.login(user=my_email, password=&quot;xxx&quot;) # connection.sendmail(from_addr=my_email, # to_addrs=&quot;liucf2010@sina.com&quot;, # msg=f&quot;Subject:Hello\\n\\n{today_quote}&quot;) day 33123456def get_quote(): response = requests.get(url=&quot;https://api.kanye.rest/&quot;) response.raise_for_status() data = response.json() quote = data[&quot;quote&quot;] canvas.itemconfig(quote_text, text=quote) 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162import smtplibimport timeimport requestsfrom datetime import datetimeMY_LAT = 30.018256MY_LONG = 115.928905def is_dark(): parameters = { &quot;lat&quot;: MY_LAT, &quot;lng&quot;: MY_LONG, &quot;formatted&quot;: 0, } response = requests.get(url=&quot;https://api.sunrise-sunset.org/json&quot;, params=parameters) response.raise_for_status() data = response.json() print(data) sunrise = data[&quot;results&quot;][&quot;sunrise&quot;] sunset = data[&quot;results&quot;][&quot;sunset&quot;] sunrise_time_hour = int(sunrise.split(&quot;T&quot;)[1].split(&quot;+&quot;)[0].split(&quot;:&quot;)[0]) sunset_time_hour = int(sunset.split(&quot;T&quot;)[1].split(&quot;+&quot;)[0].split(&quot;:&quot;)[0]) time_now_hour = datetime.now().hour print(time_now_hour) if time_now_hour &gt;= sunset_time_hour or time_now_hour &lt;= sunrise_time_hour: return True else: return Falsedef is_near_home(): response = requests.get(url=&quot;http://api.open-notify.org/iss-now.json&quot;) print(response.status_code) response.raise_for_status() data = response.json() print(type(data)) print(data[&quot;iss_position&quot;]) longitude = float(data[&quot;iss_position&quot;][&quot;longitude&quot;]) latitude = float(data[&quot;iss_position&quot;][&quot;latitude&quot;]) iss_position = (longitude, latitude) print(iss_position) print(iss_position) if iss_position[0] &lt;= MY_LAT + 5 and iss_position[0] &gt;= MY_LAT - 5 and iss_position[1] &lt;= MY_LONG + 5 and iss_position[1] &gt;= MY_LONG -5: return True else: return Falseprogram_going = Truewhile program_going: if is_near_home() and is_dark(): with smtplib.SMTP(&quot;smtp.google.com&quot;) as connection: connection.starttls() connection.login(&quot;lucfe2010@gmail.com&quot;, &quot;xxx&quot;) connection.sendmail(&quot;lucfe2010@gmail.com&quot;, &quot;liucf2010@hotmail.com&quot;, msg=f&quot;Subject:check iss\\n\\nnow&quot;) time.sleep(60) day 34import htmlq_text = html.unescape(self.current_question.text) 12345678910111213141516171819# type hints# age: int# name: str# height: float# is_human: booldef police_check(age: int) -&gt; bool: if age &gt; 18: can_drive = True else: can_drive = False return can_driveif police_check(20): print(&quot;pass&quot;) main.py 1234567891011121314151617181920212223from question_model import Questionfrom data import question_datafrom quiz_brain import QuizBrainfrom ui import QuizInterfacequestion_bank = []for question in question_data: question_text = question[&quot;question&quot;] question_answer = question[&quot;correct_answer&quot;] new_question = Question(question_text, question_answer) question_bank.append(new_question)quiz = QuizBrain(question_bank)ui = QuizInterface(quiz)# while quiz.still_has_questions():# quiz.next_question()print(&quot;You've completed the quiz&quot;)print(f&quot;Your final score was: {quiz.score}/{quiz.question_number}&quot;) quizbrain.py 123456789101112131415161718192021222324252627282930313233343536import htmlclass QuizBrain: def __init__(self, q_list): self.question_number = 0 self.score = 0 self.question_list = q_list self.current_question = None def still_has_questions(self): return self.question_number &lt; len(self.question_list) def next_question(self): self.current_question = self.question_list[self.question_number] self.question_number += 1 q_text = html.unescape(self.current_question.text) # user_answer = input(f&quot;Q.{self.question_number}: {q_text} (True/False): &quot;) # self.check_answer(user_answer) return f&quot;Q.{self.question_number}: {q_text} (True/False): &quot; def check_answer(self, user_answer): correct_answer = self.current_question.answer if user_answer.lower() == correct_answer.lower(): self.score += 1 # print(&quot;You got it right!&quot;) return True else: # print(&quot;That's wrong.&quot;) return False # print(f&quot;Your current score is: {self.score}/{self.question_number}&quot;) # print(&quot;\\n&quot;) ui.py 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263THEME_COLOR = &quot;#375362&quot;from tkinter import *from quiz_brain import QuizBrainclass QuizInterface: def __init__(self, quiz: QuizBrain): self.quiz = quiz self.window = Tk() self.window.title('quiz') self.window.config(padx=20, pady=20, bg=THEME_COLOR) self.score_label = Label(text=&quot;This is old text&quot;, fg=&quot;white&quot;, bg=THEME_COLOR) self.score_label.grid(column=1, row=0) self.canvas = Canvas(width=300, height=250, bg=&quot;white&quot;) self.question_text = self.canvas.create_text( 150, 125, width=280, text=&quot;test question&quot;, font=('Arial', 20, &quot;italic&quot;), fill=THEME_COLOR) self.canvas.grid(column=0, row=1, columnspan=2, pady=50) true_img = PhotoImage(file=&quot;images/true.png&quot;) self.true_button = Button(image=true_img, highlightthickness=0, command=self.answer_true) self.true_button.grid(column=0, row=2) false_img = PhotoImage(file=&quot;images/false.png&quot;) self.false_button = Button(image=false_img, highlightthickness=0, command=self.answer_false) self.false_button.grid(column=1, row=2) self.get_next_question() self.window.mainloop() def get_next_question(self): self.canvas.config(bg=&quot;white&quot;) if self.quiz.still_has_questions(): q_text = self.quiz.next_question() self.canvas.itemconfig(self.question_text, text=q_text) self.score_label.config(text=f&quot;Score: {self.quiz.score}&quot;) else: self.canvas.itemconfig(self.question_text, text=&quot;end of the quize&quot;) self.true_button.config(state=&quot;disabled&quot;) self.false_button.config(state=&quot;disabled&quot;) def answer_true(self): is_right = self.quiz.check_answer(&quot;True&quot;) self.get_feedback(is_right) def answer_false(self): is_right = self.quiz.check_answer(&quot;False&quot;) self.get_feedback(is_right) def get_feedback(self, is_right): if is_right: self.canvas.config(bg=&quot;green&quot;) else: self.canvas.config(bg=&quot;red&quot;) self.window.after(1000,self.get_next_question)","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/python/udemy_python_100_days/"},{"title":"","text":"VMWare window server修改密码VMWare——window server 2008/2012 administrator 密码忘记，设置重置密码用VMWare安装window server 2008或者2012忘记密码后，想要修改密码满麻烦的。 以下过程是我成功修改密码的过程： 1.首先需要需要链接一个ISO文件 需要特别注意把“启用连接”勾上，这个地方坑了我好长时间。不勾上，系统启动没办法CD-ROM Drive进入的。 2.关闭虚拟机。以下面的方式打开虚拟机： 3进入BIOS界面—&gt;选择Boot:确保启动方式是以CD-ROM Driver 4.然后重新启动。重新启动后，会进入到安装系统界面。 5.点击下一步，在下一个界面左下面，第一行：Repair your computer（修复你的计算机），点击这个； 6.之后会进入到选择界面，选择Troubleshoot（故障排除）： 7.之后新的界面Advanced options（高级选项）,选择Command Prompt（命令提示）选项： 8.这个时候会出现一个命令提示框，需要输入以下命令： d:（注：根据实际情况，系统盘文件放置的位置）cd windows\\system32ren Utilman.exe Utilman.exe.oldcopy cmd.exe Utilman.exe 8.关闭命令提示框，点击Continue(继续)；当出现欢迎界面，点击Windows key +U： 9.出现命令，输入以下命令：net user administrator “new password”,关闭提示框，这个时候就可以使用你新设的密码登录了。 以上步骤成功修改了vmware虚拟机window server 2008/2012的密码。","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20organization/Virtual%20machine/VMWare%20window%20server%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/"},{"title":"","text":"VMware网络连接模式VMware网络连接模式——桥接模式、NAT模式以及仅主机模式的介绍和区别 在使用VMware Workstation(以下简称：VMware)创建虚拟机的过程中，配置虚拟机的网络连接是非常重要的一环，当我们为虚拟机配置网络连接时，我们可以看到如下图所示的几种网络连接模式：桥接模式、NAT模式、仅主机模式、自定义网络连接模式。那么这几种网络连接模式都各自有什么主要用途，它们之间又有哪些区别呢？ 磨刀不误砍柴工，为了更好地使用虚拟机，了解这几种连接模式的主要用途以及它们之间的区别是非常有必要的。在这里，我们就以下面的网络连接示意图为例来进行相关介绍。 在VMware中，虚拟机的网络连接主要是由VMware创建的虚拟交换机(也叫做虚拟网络)负责实现的，VMware可以根据需要创建多个虚拟网络。在Windows系统的主机上，VMware最多可以创建20个虚拟网络，每个虚拟网络可以连接任意数量的虚拟机网络设备； 在Linux系统的主机上，VMware最多可以创建255个虚拟网络，但每个虚拟网络仅能连接32个虚拟机网络设备。VMware的虚拟网络都是以”VMnet+数字”的形式来命名的，例如 VMnet0、VMnet1、VMnet2……以此类推(在Linux系统的主机上，虚拟网络的名称均采用小写形式，例如 vmnet0 )。 当我们安装VMware时，VMware会自动为3种网络连接模式各自创建1个虚拟机网络：VMnet0(桥接模式)、VMnet8(NAT模式)、VMnet1(仅主机模式)。此外，我们也可以根据需要自行创建更多的虚拟网络。 VMware 桥接模式 VMware桥接模式，也就是将虚拟机的虚拟网络适配器与主机的物理网络适配器进行交接，虚拟机中的虚拟网络适配器可通过主机中的物理网络适配器直接访问到外部网络(例如图中所示的局域网和Internet，下同)。简而言之，这就好像在上图所示的局域网中添加了一台新的、独立的计算机一样。因此，虚拟机也会占用局域网中的一个IP地址，并且可以和其他终端进行相互访问。桥接模式网络连接支持有线和无线主机网络适配器。如果你想把虚拟机当做一台完全独立的计算机看待，并且允许它和其他终端一样的进行网络通信，那么桥接模式通常是虚拟机访问网络的最简单途径。 VMware NAT模式 NAT，是Network Address Translation的缩写，意即网络地址转换。NAT模式也是VMware创建虚拟机的默认网络连接模式。使用NAT模式网络连接时，VMware会在主机上建立单独的专用网络，用以在主机和虚拟机之间相互通信。虚拟机向外部网络发送的请求数据”包裹”，都会交由NAT网络适配器加上”特殊标记”并以主机的名义转发出去，外部网络返回的响应数据”包裹”，也是先由主机接收，然后交由NAT网络适配器根据”特殊标记”进行识别并转发给对应的虚拟机，因此，虚拟机在外部网络中不必具有自己的IP地址。从外部网络来看，虚拟机和主机在共享一个IP地址，默认情况下，外部网络终端也无法访问到虚拟机。 此外，在一台主机上只允许有一个NAT模式的虚拟网络。因此，同一台主机上的多个采用NAT模式网络连接的虚拟机也是可以相互访问的。 前面我们已经提到，默认情况下，外部网络无法访问到虚拟机，不过我们也可以通过手动修改NAT设置实现端口转发功能，将外部网络发送到主机指定端口的数据转发到指定的虚拟机上。比如，我们在虚拟机的80端口上”建立”了一个站点，只要我们设置端口转发，将主机88端口上的数据转发给虚拟机的80端口，就可以让外部网络通过主机的88端口访问到虚拟机80端口上的站点。 VMware 仅主机模式 仅主机模式，是一种比NAT模式更加封闭的的网络连接模式，它将创建完全包含在主机中的专用网络。仅主机模式的虚拟网络适配器仅对主机可见，并在虚拟机和主机系统之间提供网络连接。相对于NAT模式而言，仅主机模式不具备NAT功能，因此在默认情况下，使用仅主机模式网络连接的虚拟机无法连接到Internet(在主机上安装合适的路由或代理软件，或者在Windows系统的主机上使用Internet连接共享功能，仍然可以让虚拟机连接到Internet或其他网络)。 在同一台主机上可以创建多个仅主机模式的虚拟网络，如果多个虚拟机处于同一个仅主机模式网络中，那么它们之间是可以相互通信的；如果它们处于不同的仅主机模式网络，则默认情况下无法进行相互通信(可通过在它们之间设置路由器来实现相互通信)。 自定义网络连接配置 利用 WMware 提供的虚拟网络连接组件，你还可以创建复杂的虚拟网络。在这里我们不对其进行详细介绍，你可以参考官方文档，然后通过VMware提供的虚拟网络编辑器来创建虚拟网络。 形象的说： 桥接模式的虚拟机，就像一个在路由器”民政局”那里”上过户口”的成年人，有自己单独的居住地址，虽然和主机住在同一个大院里，但好歹是有户口的人，可以大摇大摆地直接和外面通信。 NAT模式的虚拟机，纯粹就是一个没上过户口的黑户，路由器”民政局”根本不知道有这么个人，自然也不会主动和它通信。即使虚拟机偶尔要向外面发送点的信件，都得交给主机以主机的名义转发出去，主机还专门请了一位叫做NAT的老大爷来专门负责这些虚拟机的发信、收信事宜。仅主机模式的虚拟机，纯粹是一个彻彻底底的黑奴，不仅没有户口、路由器”民政局”不知道这么号人，还被主机关在小黑屋里，连信件也不准往外发。","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20organization/Virtual%20machine/VMware%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E6%A8%A1%E5%BC%8F/"},{"title":"","text":"CygwinCygwin是一个在windows平台上运行的类UNIX模拟环境，是Cygnus Solutions公司开发的自由软件（该公司开发的著名工具还有eCos，不过现已被Redhat收购）。它对于学习UNIX/Linux操作环境，或者从UNIX到Windows的应用程序移植，或者进行某些特殊的开发工作，尤其是使用GNU工具集在Windows上进行嵌入式系统开发，非常有用。随着嵌入式系统开发在国内日渐流行，越来越多的开发者对Cygwin产生了兴趣。","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20organization/windows%20operation%20system.md/unix%20on%20windows/"},{"title":"","text":"基于 LDAP 的 AD 域服务器搭建及其使用1.1 AD 域服务 什么是目录（directory）呢？ 日常生活中使用的电话薄内记录着亲朋好友的姓名、电话与地址等数据，它就是 telephone directory（电话目录）；计算机中的文件系统（file system）内记录着文件的文件名、大小与日期等数据，它就是 file directory（文件目录）。 如果这些目录内的数据能够由系统加以整理，用户就能够容易且迅速地查找到所需的数据，而 directory service（目录服务）提供的服务，就是要达到此目的。在现实生活中，查号台也是一种目录；在 Internet 上，百度和谷歌提供的搜索功能也是一种目录服务。 Active Directory 域内的 directory database（目录数据库）被用来存储用户账户、计算机账户、打印机和共享文件夹等对象，而提供目录服务的组件就是 Active Directory （活动目录）域服务（Active Directory Domain Service，AD DS），它负责目录数据库的存储、添加、删除、修改与查询等操作。一般适用于一个局域网内。 在 AD 域服务（AD DS）内，AD 就是一个命名空间（Namespace）。利用 AD，我们可以通过对象名称来找到与这个对象有关的所有信息。 在 TCP/IP 网络环境内利用 Domain Name System（DNS）来解析主机名与 IP 地址的对应关系，也就是利用 DNS 来解析来得到主机的 IP 地址。除此之外，AD 域服务也与 DNS 紧密结合在一起，它的域命名空间也是采用 DNS 架构，因此域名采用 DNS 格式来命名，例如可以将 AD 域的域名命名为 moonxy.com。 1.2 AD域对象与属性 AD 域内的资源以对象（Object）的形式存在，例如用户、计算机与打印机等都是对象，而对象则通过属性（Attriburte）来描述其特征，也就是说对象本身是一些属性的集合。例如，创建一个账户张三，则必须添加一个对象类型（object class）为用户的对象（也就是用户账户），然后在这个用户账户内输入张三的姓名、登录账户、电话号码和电子邮件等信息，这其中的用户账户就是对象，而姓名、登录账户等数据就是该对象的属性，张三就是对象类型为用户（user）的对象。 1.3 AD 域控制器 DC AD 域服务（AD DS）的目录数据存储在域控制器（Domain Controller，DC）内。一个域内可以有多台域控制器，每台域控制器的地位几乎是平等的，它们各自存储着一份几乎完全相同的 Active Directory。当在任何一台域控制器内添加了一个用户账户后，此账户默认被创建在此域控制器的 Active Directory，之后会自动被复制（replicate）到其他域控制器的 Active Directory，以便让所有域控制器内的 Active Directory 数据都能够同步（synchronize）。 当用户在域内某台计算机登录时，会由其中一台域控制器根据其 Active Directory 内的账户数据，来审核用户输入的账户与密码是否正确。如果是正确的，用户就可以登录成功；反之，会被拒绝登录。域控制器是由服务器级别的额计算机来扮演的，例如 Windows Server 2012 和 Windows Server 2008 R2 等。 通常，域控制器的 Active Directory 数据库是可以被读写的，除此之外，还有 Active Directory 数据库是只可以读取、不可以被修改的只读域控制器（Read-Only Domain Controller，RODC）。例如，某子公司位于远程网络，如果安全措施并不像总公司一样完备，则可以使用 RODC。 1.4 LDAP LDAP（Lightweight Directory Access Protocol），轻量目录访问协议，是一种用来查询与更新 Active Directory 的目录服务通信协议。AD 域服务利用 LDAP 命名路径（LDAP naming path）来表示对象在 AD 内的位置，以便用它来访问 AD 内的对象。 LDAP 数据的组织方式： LDAP 名称路径如下： 标识名称（distinguished Name，DN）：它是对象在 Active Directory 内的完整路径，DN 有三个属性，分别是 CN，OU，DC。 DC (Domain Component)：域名组件； CN (Common Name)：通用名称，一般为用户名或计算机名； OU (Organizational Unit)：组织单位； 例如，如上用户账户，其 DN 为： CN=张三,OU=Web前端组,OU=软件开发部,DC=moonxy,DC=com 其中 DC（Domain Component）表示 DNS 域名中的组件，例如 moonxy.com 中的 moonxy 与 com；OU为组织单位（Organization Unit）；CN为通用名称（Common Name），一般为用户名或服务器名。除了DC与OU之外，其他都利用CN来表示，例如用户与计算机对象都属于CN。上述DN表示法中的 moonxy.com 为域名，软件研发部、Web前端组都是组织单位。此 DN 表示账户张三存储在 moonxy.com\\软件研发部\\Web前端组路径中。 相对标识名称（Relative Distinguished Name，RDN）：RDN用来代表DN完整路径中的部分路径，例如上面路径中的 CN=张三与 OU=Web前端组等都是 RDN。 Base DN：LDAP 目录树的最顶部就是根，也就是所谓的 “Base DN”，如 “DC=moonxy,DC=com”。 除了 DN 与 RDN 这两个对象名称外，另外还有如下两个名称： 全局唯一标识符（Global Unique Identifier，GUID）：GUID 是一个128位的数值，系统会自动为每个对象指定一个唯一的GUID。虽然可以改变对象的名称，但是其GUID永远不会改变。 用户主体名称（User Principal Name，UPN）：每个用户还可以有一个比DN更短、更容易记忆的 UPN，例如上面的张三隶属于 moonxy.com，则其 UPN 可以为 zhangsan@moonxy.com。用户登录时所输入的账户名最好是 UPN，因为无论此用户的账户被移动到哪一个域，其 UPN 都不会改变，因此用户可以一直使用同一个名称来登录。 AD 与 LDAP 的关系：LDAP 是一种用来访问 AD 数据库的目录服务协议，AD DS 会通过 LDAP 名称路径来表示对象在 AD 数据库中的位置，以便用它来访问 AD 数据库内的对象。LDAP 的名称路径包括有 DN、RDN。 openLDAP（Linux），Active Directory（Microsoft）等是对 LDAP 目录访问协议的具体实现，除了实现协议的功能，还对它进行了扩展。 1.5 全局编录 虽然在域树内的所有域共享一个 Active Directory，但是 Active Directory 数据却分散在各个域内，而每个域仅存储该域本身的数据。因此，为了让用户、应用程序能够快速找到位于其他域内的资源，在 AD 域服务器内设计了全局编录（Global Catalog，GC）。 全局编录的数据存储在域控制器内，这台域控制器被称为全局编录服务器，它存储着林内所有域的 AD 内的每个对象。不过只存储对象的部分属性，这些属性都是常用来搜索的属性，例如用户的电话号码、登录账户名等。全局编录让用户即使不知道对象位于哪一个域内，仍然可以快速的找到所需的对象。 用户登录时，全局编录服务器还负责提供该用户所属的通用组的信息；用户利用 UPN 登录时，它会负责提供该用户隶属于哪一个域的信息。 一个林内的所有域树共享相同的全局编录，而林内的第一台域控制器默认就是全局编录服务器。必要时，也可以另外指派其他域控制器来当做全局编录服务器。","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20organization/windows%20operation%20system.md/windows%20server/"},{"title":"windows wiki","text":"clean and backup windowssettings–system–about–(right)advan_system_setting Click the Windows menu and type ‘Disk Cleanup’ in the search bar to get started. To disable transparency effects, open the Windows menu and type ‘Make Start, taskbar and Action Center transparent’. This will pull up the Color Settings. From here you can choose to switch off transparency. To reset your PC, go to Start &gt; Settings &gt; Update &amp; Security &gt; Recovery &gt; Reset this PC &gt; Get Started. Then, select Keep my files, choose cloud or local, change your settings, and set Restore preinstalled apps? to No.One of the benefits of this new approach is that Windows attempts to recover from a previously created system image or – failing that – using a special series of install files that download the latest version of Windows during the reinstall process. type: recovery drive into the search field on the taskbar and hit Enter. Or select the option to create from the results at the top or click Open from the app description section. A system image is another way to say “full backup,” as it contains a copy of everything on the computer, including the installation, settings, apps, and files.Quick note: You’ll also receive a prompt to create a system repair disc, but because most devices no longer include an optical drive, you can skip it. If you have to restore the machine, you can use a USB installation media to access the recovery enviroment.Connect the drive with the full backup to the device.Connect the Windows 10 USB bootable drive to the computer.On the “Windows Setup” page, click the Next button.Click the Repair your computer option from the bottom-left corner of the screen.Click the Troubleshoot option. The downside is that personal files and desktop apps won’t come along for the ride, but you should already be backing up your personal files separately. At the very least, a recovery drive wil bring Windows 10 back to a bootable and working state.However, if preserving your personal files is absolutely necessary, a System Image Backup is another recovery option. This method allows you to create an image of your entire Windows environment, including your personal files and applications. windows desktop managementmultiple desktops The idea of virtual desktops is straightforward: Instead of just a single desktop, you create a second, third, fourth, and so on. On each desktop, you arrange individual programs or combinations of apps you want to use for a specific task. Then, when it’s time to tackle one of those tasks,you switch to the virtual desktop and get right to work. windows snapDrag the top window border (not the title bar) to the top edge of the screen, or drag thebottom border to the bottom edge of the screen. With either action, when you reach theedge, the window snaps to full height without changing its width. When you drag theborder away from the window edge, the opposite border snaps to its previous position. Snap side-by-side Windows at different widths The secret is to snap the first window and immediately drag its inside edge to adjust thewindow to your preferred width. Now grab the title bar of the window you want to seealongside it and snap it to the opposite edge of the display. The newly snapped windowexpands to fill the space remaining after you adjusted the width of the first window. Keyboard shortcuts and gestures for resizing and moving windows Task Keyboard shortcut Gesture Maximize window Windows key+ Up Arrow Drag title bar to top of screen Resize window to full screen height without changing its width Shift+Windows key+Up Arrow Drag top or bottom border to edge of screen Restore a maximized or full-height window Windows key+Down Arrow Drag title bar or border away from screen edge Minimize a restored window Windows key+Down Arrow Click the Minimize button Snap to the left half of the screen Windows key+Left Arrow* Drag title bar to left edge Snap to the right half of the screen Windows key+Right Arrow* Drag title bar to right edge Move to the next virtual desktop Ctrl+Windows key+Left/Right Arrow Three-finger swipe on precision touchpad; none for mouse Move to the next monitor Shift+Windows Key+Left/Right Arrow Drag title bar Minimize all windows except the active window (press again to restore windows previously minimized with this shortcut) Windows key+Home “Shake” the title bar Minimize all windows Windows key+M Restore windows after minimizing Shift+Windows key+M disk managementWindows key+X Open the Quick Link menuright click windows start icon extend/shrink volumesadjust the sizes of your partitions. increase or reduce the size of the seleted partition 扩展/压缩 卷 virtual file librarylibrary is colletion of certain kinds of files based on a theme. they work in virtual manner: the files aren’t literally stored in these libraries, they are merely colloted and linked to the library. taskbar jump liststaskbar jump lists for quick access to documents and folders a jump list is the official name of the menu that appears when you right-click to a taskbar button.Each Jump List includes commands to open the program, to pin the program to the taskbar (or unpin it), and to close all open windows represented by the button. In addition, for programs developed to take advantage of this feature, Jump Lists can include shortcuts to common tasks that can be performed with that program, such as New Window or New InPrivate Window on a Microsoft Edge Jump List. For Microsoft Office programs, Adobe Acrobat, and other similarly document-centric programs, Jump Lists also typically include linksto recently opened files. font smoothingusing font smoothing to make text easier on the eyes to check or change your font-somoothing settings, type cleartype in the search box and then click Ajust ClearType Text performanceOn modern hardware with even a moderate graphics processor, these options make little orno difference in actual performance. The loss of animation can be disconcerting, in fact, as youwonder where a particular item went when you minimized it. These options offer the most payoff on older devices with underpowered graphics hardware. file exploreUse the date navigator to zoom through timeIf you click a date heading, the filter options display a date navigator like the one shownnext, with common date groupings available at the bottom of the list. You can also clickSelect A Date Or Date Range and use the calendar to filter the file list that way Use check boxes to simplify file selectionFile Explorer offers two modes of file and folder selection—with and without check boxes.You can switch between them by means of the Item Check Boxes command on the View tab.With check boxes on, you can select multiple items that are not adjacent to one another byclicking or tapping the check box for each one in turn; to remove an item from the selection,clear its check box. In either case, there’s no need to hold down the Ctrl key To scrub a file of unwanted metadata, select one or more files in File Explorer, clickHome &gt; Properties &gt; Remove Properties. explore searchWhatever text you type as a search term must appear at the beginning of a word, not inthe middle. Thus, entering des returns items containing the words desire, destination, anddestroy but not undesirable or saddest. Search terms are not case sensitive. Thus, entering Bott returns items with Ed Bott as a tagor property, but the results also include files containing the words bottom and bottle. To search for an exact phrase, enclose the phrase within quotation marks. If you enter twoor more words without using quotes, the search results list includes items that contain allof the words individually. Advanced queries support the following types of search parameters, which can be combinedusing search operators:● File contents. Keywords, phrases, numbers, and text strings● Kinds of items. Folders, documents, pictures, music, and so on● Data stores. Specific locations in the Windows file system containing indexed items● File properties. Size, date, tags, and so on Searching by item type or kindTo search for files with a particular file name extension, you can simply enter the extension inthe search box, like this:.ext(Note that this method of searching does not work for .exe or .msc files.) The results include filesthat incorporate the extension in their contents as well as in their file names—which might ormight not be what you want. You’ll get a more focused search by using the ext: operator, including an asterisk wildcard and a period like this:ext:.txt NOTEAs with many properties, you have more than one way to specify an exact file nameextension. In addition to ext:, you can use fileext:, extension:, or fileextension:. File name extensions are useful for some searches, but you’ll get even better results using twodifferent search properties: Type and Kind. The Type property limits your search based on thevalue found in the Type field for a given object. Thus, to look for files saved in any MicrosoftExcel format, type this term in the search box:type:excelTo find any music file saved in MP3 format, type this text in the search box:type:mp3To constrain your search to groups of related file types, use the Kind property, in the syntaxkind:=value. Enter kind:=doc, for example, to return text files, Microsoft Office documents,Adobe Acrobat documents, HTML and XML files, and other document formats. This search termalso accepts folder, pic, picture, music, song, program, and video as values to search for. Changing the scope of a searchYou can specify a folder or library location by using folder:, under:, in:, or path:. Thus,folder:documents restricts the scope of the search to your Documents library, and in:videos mackie finds all files in the Videos library that contain Mackie in the file name or any property. Searching for item propertiesYou can search on the basis of any property recognized by the file system. (The list of availableproperties for files is identical to the ones we discuss in “Layouts, previews, and other ways toarrange files” in Chapter 9.) To see the whole list of available properties, switch to Detail view inFile Explorer, right-click any column heading, and then click More. The Choose Details dialogbox that appears enumerates the available properties.When you enter text in the search box, Windows searches file names, all properties, and indexedcontent, returning items where it finds a match with that value. That often generates moresearch results than you want. To find all documents of which Jean is the author, omitting documents that include the word Jean in their file names or content, you type author:jean in thesearch box. (To eliminate documents authored by Jeanne, Jeannette, or Jeanelle, add an equalsign and enclose jean in quotation marks: author:=”jean”.)When searching on the basis of dates, you can use long or short forms, as you please. For example, the search valuesmodified:9/29/16andmodified:09/29/2016are equivalent. (If you don’t mind typing the extra four letters, use datemodified: instead.)To search for dates before or after a particular date, use the less-than (&lt;) and greater-than (&gt;)operators. For example,modified:&gt;09/30/2015searches for dates later than September 30, 2015. Use the same two operators to specify filesizes below and above some value.Use two periods to search for items within a range of dates. To find files modified in Septemberor October 2016, type this search term in the Start menu search box:modified:9/1/2016..10/31/2016You can also use ranges to search by file size. The search filters suggest some common rangesand even group them into neat little buckets, so you can type size: and then click Medium tofind files in the range 100 KB to 1 MB.Again, don’t be fooled into thinking that this list represents the full selection of available sizes.You can specify an exact size range—using operators such as &gt;, &gt;=, &lt;, and &lt;=. (Also, you can usethe “..” operator.) For example, size:0 MB..1 MB is the same as size:&lt;=1 MB. You can specifyvalues using bytes, KB, MB, or GB. Using multiple criteria for complex searchesYou can use the Boolean operators AND, OR, and NOT to combine or negate criteria in thesearch box. These operators need to be spelled in capital letters (or they will be treated as ordinary text). In place of the AND operator, you can use a plus sign (+), and in place of the NOToperator, you can use a minus sign (–). You can also use parentheses to group criteria; itemsin parentheses separated by a space use an implicit AND operator. Table 10-1 provides someexamples of combined criteria.Table 10-1 Some examples of complex search values This search value Returns Siechert AND Bott Items in which at least one indexed element (property,file name, or an entire word within its contents) begins with or equals Siechert and another element in the same item begins with or equals Bott title:(“report” NOT draft) Items in which the Title property contains the word report and does not contain a word that begins with draft tag:tax AND author:Doug Items authored by Doug that include Tax in the Tags field tag:tax AND author:(Doug OR Craig) AND modified:&lt;1/1/18 Items authored by Doug or Craig, last modified before January 1, 2018, with Tax in the Tags field NOTE When you use multiple criteria based on different properties, an AND conjunction isassumed unless you specify otherwise. The search value tag:Ed Author:Carl is equivalentto the search value tag:Ed AND Author:Carl. Using wildcards and character-mode searchesFile-search wildcards can be traced back to the dawn of Microsoft operating systems, wellbefore the Windows era. In Windows 10, two of these venerable operators are alive and well:● The asterisk (), also known as a star operator, can be placed anywhere in the search stringand will match zero, one, or any other number of characters. In indexed searches, whichtreat your keyword as a prefix, this operator is always implied at the end; thus, a search forvoice turns up voice, voices, and voice-over. Add an asterisk at the beginning of the searchterm (**voice), and your search also turns up any item containing invoice or invoices. Youcan put an asterisk in the middle of a search term as well, which is useful for searchingthrough folders full of data files that use a standard naming convention. If all yourinvoices start with INV, followed by an invoice number, followed by the date (INV-0038-20180227, for example), you can produce a quick list of all 2018 invoices by searching forINV*2018*. ● The question mark (?) is a more focused wildcard. In index searches, it matches exactlyone character in the exact position where it’s placed. Using the naming scheme definedin the previous item, you can use the search term filename:INV-????-2018* to locate anyfile in the current location that has a 2018 date stamp and an invoice number (betweenhyphens) that is exactly four characters long.To force Windows Search to use strict character matches in an indexed location, type a tilde (~)as the first character in the search box, followed immediately by your term. If you open yourDocuments library and type ~??v in the search box, you’ll find any document whose file namecontains any word that has a v in the third position, such as saved, level, and, of course, invoice.This technique does not match on file contents. Sharing files, printers, and other resources over a local networkUnderstanding sharing and security models in WindowsMuch like Windows 7, Windows 10 offers two ways to share file resources, whether you’re doingso locally or over the network:● Public folder sharing. When you place files and folders in your Public folder or its subfolders, those files are available to anyone who has a user account on your computer.Each person who signs in has access to his or her own profile folders (Documents, Music,and so on), and everyone who signs in has access to the Public folder. (You need to dig abit to find the Public folder, which—unlike other profiles—doesn’t appear under Desktopin the left pane of File Explorer. Navigate to C:\\Users\\Public. If you use the Public folderoften, pin it to the Quick Access list in File Explorer.)By default, all users with an account on your computer can sign in and create, view, modify, and delete files in the Public folders. The person who creates a file in a Public folder (orcopies an item to a Public folder) is the file’s owner and has Full Control access. All otherswho sign in locally have Modify access.Settings in Advanced Sharing Settings (accessible from Settings &gt; Network &amp; Internet,discussed in the next section) determine whether the contents of your Public folder aremade available on your network and whether entering a user name and password isrequired for access. If you turn on password-protected sharing, only network users whohave a user account on your computer (or those who know the user name and passwordfor an account on your computer) can access files in the Public folder. Without passwordprotected sharing, everyone on your network has access to your Public folder files if youenable network sharing of the Public folder.You can’t select which network users get access, nor can you specify different access levelsfor different users. Sharing via the Public folder is quick and easy—but it’s inflexible.● Advanced sharing. By choosing to share folders or files outside the Public folder, youcan specify precisely which user accounts are able to access your shared data, and youcan specify the types of privileges those accounts enjoy. You can grant different accessprivileges to different users. For example, you might enable some users to modify sharedfiles and create new ones, enable other users to read files without changing them, andlock out still other users altogether. You don’t need to decide between sharing the Public folder and sharing specific folders,because you can use both methods simultaneously. You might find that a mix of sharing stylesworks best for you; each has its benefits:● Sharing specific folders is best for files you want to share with some users but not withothers—or if you want to grant different levels of access to different users● Public folder sharing provides a convenient, logical way to segregate your personal documents, pictures, music, and so on from those you want to share with everyone who uses yourcomputer or your network. Configuring your network for sharingIf you plan to share folders and files with other users on your network, you need to take a few preparatory steps. (If you plan to share only with others who use your computer by signing in locally,you can skip these steps. And if your computer is part of a domain, some of these steps—or theirequivalent in the domain world—must be done by an administrator on the domain controller. Wedon’t cover those details in this book.) Be sure that all computers use the same workgroup name. With modern versions ofWindows, this step isn’t absolutely necessary, although it does improve network discoveryperformance. Be sure that your network’s location is set to Private. This setting makes it possible forother users to discover shared resources and provides appropriate security for a network in ahome or an office. For details, see “Setting the network location,” earlier in this chapter. Be sure that Network Discovery is turned on. This should happen automatically whenyou set the network location to Private, but you can confirm the setting—and change it ifnecessary—in Advanced Sharing Settings, which is shown in Figure 13-18. To open AdvancedSharing Settings, go to Settings &gt; Network &amp; Internet; on the Status page, click Sharing Options. Figure 13-18 After you review settings for the Private profile, click the arrow by All Networks(below Guest Or Public) to see additional options. Select your sharing options. In Advanced Sharing Settings, make a selection for each ofthe following network options. You’ll find the first option under the Private profile; to viewthe remaining settings, expand All Networks.■ File And Printer Sharing. Turn on this option if you want to share specific files orfolders, the Public folder, or printers; it must be turned on if you plan to share anyfiles (other than media streaming) over your network.The mere act of turning on file and printer sharing does not expose any of yourcomputer’s files or printers to other network users; that occurs only after you makeadditional sharing settings.■ Public Folder Sharing. If you want to share items in your Public folder with allnetwork users (or, if you enable password-protected sharing, all users who have auser account and password on your computer), turn on Public folder sharing. If youdo so, network users will have read/write access to Public folders. With Public foldersharing turned off, anyone who signs in to your computer locally has access to Public folders, but network users do not.■ Media Streaming. Turning on media streaming provides access to pictures, music,and video through streaming protocols that can send media to computers or toother media playback devices. In an era where most people stream their musiccollections from services like Spotify, this option is increasingly esoteric and nearlyirrelevant.■ File Sharing Connections. Leave this option set to 128-bit encryption, which hasbeen the standard for most of this century.■ Password Protected Sharing. When password-protected sharing is turned on,network users cannot access your shared folders (including Public folders, if shared)or printers unless they can provide the user name and password of a user accounton your computer. With this setting enabled, when another user attempts to accessa shared resource, Windows sends the user name and password that the personused to sign in to her own computer. If that matches the credentials for a local useraccount on your computer, the user gets immediate access to the shared resource(assuming permissions to use the resource have been granted to that user account).If either the user name or the password does not match, Windows asks the user toprovide credentials.With password-protected sharing turned off, Windows does not require a username and password from network visitors. Instead, network access is provided byusing the Guest account. As we explain in Chapter 11, “Managing user accounts,passwords, and credentials,” this account isn’t available for interactive use but canhandle these tasks in the background. Configure user accounts. If you use password-protected sharing, each personwho accesses a shared resource on your computer must have a user account on yourcomputer. Use a Microsoft account or, for a local account, use the same user name asthat person uses on his or her own computer and the same password as well. If you dothat, network users will be able to access shared resources without having to enter theircredentials after they’ve signed in to their own computer. Sharing files and folders from any folderWhether you plan to share files and folders with other people who share your computer orthose who connect to your computer over the network (or both), the process for setting upshared resources is the same as long as the Sharing Wizard is enabled. We recommend you usethe Sharing Wizard even if you normally disdain wizards. It’s quick, easy, and certain to makeall the correct settings for network shares and NTFS permissions—a sometimes-daunting taskif undertaken manually. After you configure shares with the wizard, you can always dive in andmake changes manually if you need to. (Although it’s possible to use the Advanced Sharingoptions to configure network sharing independently of NTFS permissions, we don’t recommendthat technique and do not cover it in this edition.)To be sure the Sharing Wizard is enabled, open File Explorer Options. (Type folder in the searchbox, and then choose File Explorer Options. Or, in File Explorer, click View &gt; Options.) In the dialog box that appears, shown next, click the View tab. Near the bottom of the Advanced Settingslist, see that Use Sharing Wizard (Recommended) is selected: With the Sharing Wizard at the ready, follow these steps to share a folder or files: In File Explorer, select the folders or files you want to share. (You can select multipleobjects.) Right-click and choose Give Access To &gt; Specific People. (In versions before 1709, thecommand is Share With.) Alternatively, click or tap the Share tab and then click SpecificPeople in the Share With box. You might need to click the arrow in the Share With box todisplay Specific People. The File Sharing dialog box appears, as shown in Figure 13-19. Figure 13-19 For each name in the list other than the owner, you can click the arrow to set theaccess level—or remove that account from the list.3. In the entry box, enter the name or Microsoft account for each user with whom you wantto share. You can type a name in the box or click the arrow to display a list of availablenames; then click Add. Repeat this step for each person you want to add.The list includes all users who have an account on your computer, plus Everyone. Guestis included if password-protected sharing is turned off. If you want to grant access tosomeone who doesn’t appear in the list, click Create A New User, which takes you to UserAccounts in Control Panel. NOTEIf you select Everyone and you have password-protected sharing enabled, the usermust still have a valid account on your computer. However, if you turned off passwordprotected sharing, network users can gain access only if you grant permission toEveryone or to Guest. For each user, select a permission level. Your choices are ■ Read. Users with this permission level can view shared files and run shared programs, but they cannot change or delete files. Selecting Read in the Sharing Wizard is equivalent to setting NTFS permissions to Read &amp; Execute. ■ Read/Write. Users assigned the Read/Write permission have the same privileges you do as owner: they can view, change, add, and delete files in a shared folder. Selecting Read/Write sets NTFS permissions to Full Control for this user. NOTE You might see other permission levels if you return to the Sharing Wizard after you set up sharing. Contribute indicates Modify permission. Custom indicates NTFS permissions other than Read &amp; Execute, Modify, or Full Control. Mixed appears if you select multiple items and they have different sharing settings. Owner, of course, identifies the owner of the item. Click Share. After a few moments, the wizard displays a page like the one shown in Figure13-20. In the final step of the wizard, you can do any of the following:■ Send an email message to the people with whom you’re sharing. The messageincludes a link to the shared items.■ Copy the network path to the Clipboard. This is handy if you want to send a link viaanother application, such as a messaging app. (To copy the link for a single item ina list, right-click the share name and choose Copy Link.)■ Double-click a share name to open the shared item.■ Open File Explorer with your computer selected in the Network folder, showingeach network share on your computer.When you’re finished with these tasks, click Done. Figure 13-20 The Sharing Wizard displays the network path for each item you shared.Creating a share requires privilege elevation, but after a folder has been shared, the share isavailable to network users no matter who is signed in to your computer—or even when nobodyis signed in. Inside OUTUse advanced sharing to create shorter network pathsConfusingly, when you share one of your profile folders (or any other subfolder of%SystemDrive%\\Users), Windows creates a network share for the Users folder—not forthe folder you shared. This behavior isn’t a security problem; NTFS permissions preventnetwork users from seeing any folders or files except the ones explicitly shared. But itdoes lead to some long Universal Naming Convention (UNC) paths to network shares.For example, sharing the PDW subfolder of Documents (as shown in Figure 13-16) creates the network path \\CARL-SURFACE\\Users\\Carl\\Documents\\PDW. If this same folderhad been anywhere on your computer outside the Users folder, no matter how deeplynested, the network path would instead be \\CARL-SURFACE\\PDW. Other people towhom you granted access wouldn’t need to click through a series of folders to find thefiles in the intended target folder.Network users, of course, can map a network drive or save a shortcut to your targetfolder to avoid this problem. But you can work around it from the sharing side, too: Useadvanced sharing to share the folder directly. (Do this after you’ve used the SharingWizard to set up permissions.) And while you’re doing that, be sure the share name youcreate doesn’t have spaces. Eliminating them makes it easier to type a share path thatworks as a link. Stopping or changing sharing of a file or folderIf you want to stop sharing a particular shared file or folder, select it in File Explorer and on theShare tab, click Remove Access (Stop Sharing in versions before 1709). Or right-click and chooseGive Access To &gt; Remove Access. Doing so removes access control entries that are not inherited.In addition, the network share is removed; the folder will no longer be visible in another user’sNetwork folder.To change share permissions, right-click and choose Give Access To &gt; Specific People. In theFile Sharing dialog box (shown earlier in Figure 13-15), you can add users, change permissions,or remove users. (To stop sharing with a user, click the permission level by the user’s name andchoose Remove.) Working with mapped network foldersMapping a network folder makes it appear to applications as though the folder is part of yourown computer. Windows assigns a drive letter to the mapped folder, making the folder appearlike an additional hard drive. You can still access a mapped folder in the conventional manner by navigating to it through the Network folder. But mapping gives the folder an alias—theassigned drive letter—that provides an alternative means of access.To map a network folder to a drive letter, follow these steps: Open This PC in File Explorer, and on the ribbon’s Computer tab, click Map Network Drive.(Alternatively, after you open a computer in the Network folder, right-click a networkshare and choose Map Network Drive.) Select a drive letter from the Drive list. You can choose any letter that’s not already in use. In the Folder box, type the path to the folder you want or, more easily, click Browse andnavigate to the folder. Select Reconnect At Sign-In if you want Windows to connect to this shared folderautomatically at the start of each session. If your regular sign-in account doesn’t have permission to connect to the resource, selectConnect Using Different Credentials. (After you click Finish, Windows asks for the username and password you want to use for this connection.) Click Finish.In File Explorer, the “drive” appears under This PC.If you change your mind about mapping a network folder, right-click the folder’s icon in yourThis PC folder. Choose Disconnect on the resulting shortcut menu, and the connection will besevered. Connecting to a network printerTo use a printer that has been shared, open the Network folder in File Explorer and double-clickthe name of the server to which the printer is attached. If the shared printers on that serverare not visible, return to the Network folder, click to select the server, and then, on the ribbon’sNetwork tab, click View Printers. Right-click the printer and choose Connect. Alternatively, fromthe Devices And Printers folder, click Add A Printer and use the Add Printer Wizard to add a network printer. disk partUNDERSTANDING DISK-MANAGEMENT TERMINOLOGYThe current version of Disk Management has simplified somewhat the arcane language ofdisk administration. Nevertheless, it’s still important to have a bit of the vocabulary underyour belt. The following terms and concepts are the most important:● Volume. A volume is a disk or subdivision of a disk that is formatted and availablefor storage. If a volume is assigned a drive letter, it appears as a separate entity in FileExplorer. A hard disk can have one or more volumes.● Mounted drive. A mounted drive is a volume that is mapped to an empty folder onan NTFS-formatted disk. A mounted drive does not get a drive letter and does notappear separately in File Explorer. Instead, it behaves as though it were a subfolder onanother volume.● Basic disk and dynamic disk. The two principal types of hard-disk organization inWindows are called basic and dynamic:■ A basic disk can be subdivided into as many as four partitions. (Disks thathave been initialized using a GUID Partition Table can have more than four.)All volumes on a basic disk must be simple volumes. When you use Disk Management to create new simple volumes, the first three partitions it creates areprimary partitions. The fourth is created as an extended partition using allremaining unallocated space on the disk. An extended partition can be organized into as many as 2,000 logical disks. In use, a logical disk behaves exactlylike a primary partition.■ A dynamic disk offers organizational options not available on a basic disk. Inaddition to simple volumes, dynamic disks can contain spanned or stripedvolumes. These last two volume types combine space from multiple disks. Weexpect that very few of our readers will ever use dynamic disks.● Simple volume. A simple volume is a volume contained entirely within a singlephysical device. On a basic disk, a simple volume is also known as a partition.● Spanned volume. A spanned volume is a volume that combines space from physically separate disks, making the combination appear and function as though it were asingle storage medium.● Striped volume. A striped volume is a volume in which data is stored in 64-KB stripsacross physically separate disks to improve performance.● Active partition, boot partition, and system partition. The active partition is theone from which an x86-based computer starts after you power it up. The first physical hard disk attached to the system (Disk 0) must include an active partition. Theboot partition is the partition where the Windows system files are located. The system partition is the partition that contains the bootstrap files that Windows uses tostart your system and display the boot menu. Beginning with version 1703, Windows 10 includes new display code that improves rendering for some older desktop apps that previously looked a little blurry on high-DPI displays. Ifyou notice that a desktop program isn’t scaling properly, you can use another new option thatdebuted in version 1703 to change its behavior. Find the program’s executable file, right-click toopen its properties dialog box, click Change High DPI Settings on the Compatibility tab, selectthe Override High DPI Scaling Behavior setting, and change it to System (Enhanced). This setting overrides the way the selected program handles DPI scaling, eliminating the use of bitmapstretching and forcing the application to be scaled by Windows: Windows 10 supports scaling factors from 100 percent all the way to 450 percent, with most elements of the user interface looking crystal-clear even at the highest scaling levels. That includesStart, Cortana, File Explorer, and the Windows taskbar. Windows registryThe Windows registry is the central storage location that contains configuration details forhardware, system settings, services, user customizations, applications, and every detail—largeand small—that makes Windows work. Understanding the Registry Editor hierarchyRegistry Editor (Regedit.exe) offers a unified view of the registry’s contents as well as tools formodifying its contents. You’ll find this important utility on the All Apps list, under the WindowsAdministrative Tools category. It also shows up when you use the search box. Alternatively, youcan type regedit at a command prompt or in the Run dialog box. Registry Editor has been virtually unchanged since the last century. However, beginning in version 1703, you might havenoticed some small but long-needed improvements: an address bar, new keyboard shortcutsfor traversing the registry, and the addition of a View-menu command with which you canselect the font for displaying the registry.Figure 19-5 shows a (mostly) collapsed view of the Windows 10 registry, as seen through Registry Editor.The Computer node appears at the top of the Registry Editor tree listing. Beneath it, as shownhere, are five root keys: HKEY_CLASSES_ROOT, HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE,HKEY_USERS, and HKEY_CURRENT_CONFIG. For simplicity’s sake and typographical convenience, this book, like many others, abbreviates the root key names as HKCR, HKCU, HKLM,HKU, and HKCC, respectively.Root keys, sometimes called predefined keys, contain subkeys. Registry Editor displays this structure in a hierarchical tree in the left pane. In Figure 19-5, for example, HKLM is open, showing itstop-level subkeys. Figure 19-5 The registry consists of five root keys, each of which contains many subkeys. Subkeys, which we call keys for short, can contain subkeys of their own, which in turn canbe expanded as necessary to display additional subkeys. The address bar near the top of theRegistry Editor window shows the full path of the currently selected key: Computer\\HKLMHARDWARE\\DESCRIPTION\\System\\BIOS, in the previous figure. NOTEOne of the Registry Editor changes introduced in version 1703 is the address bar. In it,you can type a registry path and press Enter to jump directly to that key, much as youcan for jumping to a folder in File Explorer. For the root keys, you can type the full nameor the commonly used abbreviations described earlier. To go to the address bar and select its current content, press Alt+D or Ctrl+L, the samekeyboard shortcuts that work in File Explorer as well as most web browsers. Previousversions of Registry Editor displayed the path in a status bar at the bottom of the screen,but you couldn’t edit it or select it for copying. The contents of HKEY_LOCAL_MACHINE define the workings of Windows itself, and its subkeysmap neatly to several hives we mentioned at the start of this section. HKEY_USERS contains anentry for every existing user account (including system accounts), each of which uses the security identifier, or SID, for that account. The remaining three predefined keys don’t exist, technically. Like the file system in Windows—which uses junctions, symlinks, and other trickery to display a virtual namespace—the registryuses a bit of misdirection (implemented with the REG_LINK data type) to create these convenient representations of keys that are actually stored within HKEY_LOCAL_MACHINE andHKEY_USERS:● HKEY_CLASSES_ROOT is merged from keys within HKLM\\Software\\Classes and HKEY_USERS\\sid_Classes (where sid is the security identifier of the currently signed-in user).● HKEY_CURRENT_USER is a view into the settings for the currently signed-in user account,as stored in HKEY_USERS\\sid (where sid is the security identifier of the currently signed-inuser).● HKEY_CURRENT_CONFIG displays the contents of the Hardware Profiles\\Current subkeyin HKLM\\SYSTEM\\CurrentControlSet\\Hardware Profiles.Any changes you make to keys and values in these virtual keys have the same effect as if youhad edited the actual locations. The HKCR and HKCU keys are generally more convenient to use. Registry values and data typesEvery key contains at least one value. In Registry Editor, that obligatory value is known as thedefault value. Many keys have additional values. The names, data types, and data associatedwith values appear in the right pane. The default value for many keys is not defined. You can think of an empty default value as aplaceholder—a slot that could hold data but currently does not. All values other than the default always include the following three components: name, datatype, and data. Figure 19-6, for example, shows customized settings for the current user’slock screen. (Note the full path to this key in the address bar at the top of the Registry Editorwindow.) The SlideshowEnabled value (near the bottom of the list) is of data type REG_DWORD. Thedata associated with this value (on the system used for this figure) is 0x00000000. The prefix 0xdenotes a hexadecimal value. Registry Editor displays the decimal equivalent of hexadecimalvalues in parentheses after the value. Selecting a key on the left displays all its values on the right.The registry uses the following data types:● REG_SZ. The SZ indicates a zero-terminated string. This variable-length string can containUnicode as well as ANSI characters. When you enter or edit a REG_SZ value, Registry Editor terminates the value with a 00 byte for you.● REG_BINARY. The REG_BINARY type contains binary data—0s and 1s.● REG_DWORD. This data type is a “double word”—that is, a 32-bit numeric value.Although it can hold any integer from 0 to 232, the registry often uses it for simple Boolean values (0 or 1) because the registry lacks a Boolean data type.● REG_QWORD. This data type is a “quadruple word”—a 64-bit numeric value.● REG_MULTI_SZ. This data type contains a group of zero-terminated strings assigned to asingle value.● REG_EXPAND_SZ. This data type is a zero-terminated string containing an unexpandedreference to an environment variable, such as %SystemRoot%. (For information aboutenvironment variables, see “Interacting with PowerShell” earlier in this chapter.) If youneed to create a key containing a variable name, use this data type, not REG_SZ. Internally, the registry also uses REG_LINK, REG_FULL_RESOURCE_DESCRIPTOR, REG_RESOURCE_LIST, REG_RESOURCE_REQUIREMENTS_LIST, and REG_NONE data types. Although you might occasionally see references in technical documentation to these data types, they’renot visible or accessible in Registry Editor Identifying the elements of a .reg fileAs you review the examples shown in the two figures, note the following characteristics of .regfiles:● Header line. The file begins with the line “Windows Registry Editor Version 5.00.” Whenyou merge a .reg file into the registry, Registry Editor uses this line to verify that the filecontains registry data. Version 5 (the version used with Windows 7 and later versions,including Windows 10) generates Unicode text files, which can be used with all supportedversions of Windows as well as the now-unsupported Windows XP and Windows 2000.● Key names. Key names are delimited by brackets and must include the full path from theroot key to the current subkey. The root key name must not be abbreviated. (Don’t useHKCU, for example.) Figure 19-7 shows only one key name, but you can have as many asyou want.● The default value. Undefined default values do not appear in .reg files. Defined defaultvalues are identified by the special character @. Thus, a key whose default REG_SZ valuewas defined as MyApp would appear in a .reg file this way:“@”=”MyApp”● Value names. Value names must be enclosed in quotation marks, whether or not theyinclude space characters. Follow the value name with an equal sign. ● Data types. REG_SZ values don’t get a data type identifier or a colon. The data directlyfollows the equal sign. Other data types are identified as shown in Table 19-5.Table 19-5 Data types identified in .reg filesData type | IdentifierREG_BINARY | hexREG_DWORD | dwordREG_QWORD | hex(b)REG_MULTI_SZ | hex(7)REG_EXPAND_SZ | hex(2)A colon separates the identifier from the data. Thus, for example, a REG_DWORD valuenamed “Keyname” with value data of 00000000 looks like this:“Keyname”=dword:00000000● REG_SZ values. Ordinary string values must be enclosed in quotation marks. A backslashcharacter within a string must be written as two backslashes. Thus, for example, the pathC:\\Program Files\\Microsoft Office\\ is written like this:“C:\\Program Files\\Microsoft Office\\“● REG_DWORD values. DWORD values are written as eight hexadecimal digits, withoutspaces or commas. Do not use the 0x prefix.● All other data types. Other data types—including REG_EXPAND_SZ, REG_MULTI_SZ,and REG_QWORD—appear as comma-delimited lists of hexadecimal bytes (two hexdigits, a comma, two more hex digits, and so on). The following is an example of a REG_MULTI_SZ value:“Addins”=hex(7):64,00,3a,00,5c,00,6c,00,6f,00,74,00,00,75,00,73,00,5c,00,31,00,32,00,33,00,5c,00,61,00,64,00,64,00,64,00,69,00,6e,00,73,00,5c,00,64,00,71,00,61,00,75,00,69,00,2e,00,31,00,32,00,61,00,00,00,00,00,00,00● Line-continuation characters. You can use the backslash as a line-continuation character. The REG_MULTI_SZ value just shown, for example, is all one stream of bytes. Weadded backslashes and broke the lines for readability, and you can do the same in your.reg files.● Line spacing. You can add blank lines for readability. Registry Editor ignores them.● Comments. To add a comment line to a .reg file, begin the line with a semicolon. 如何卸载windows的服务？卸载服务？找到一个需要卸载的服务 双击打开 如何我们需要复制下来这个服务的名称 然后再cmd下输入 sc delete 服务名称来卸载服务 输入完成之后回车即可 卸载完成 安装到服务器的Windows Service卸载的时候出错了，结果在服务列表中就一直驻留，并且系统进程一直在运行，怎么都杀不掉。 最后终于找到办法了： 1.常规做法，批处理命令卸载 Net Stop ServiceNamesc delete ServiceNamepause 2.如果还是没办法，那就继续尝试 a.找到系统注册表，删掉服务的注册表信息，通常路径在：HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services 找到你的Service服务的名字，然后把整个文件夹删掉 b.如果还是在继续运行，service列表中还显示的话，用管理员权限打开cmd 命令 sc delete serviceName,如果提示 “the specified service is marked as deletion”。 导致windows service不能部署，也不能被删除，使用 SC 命令也不奏效。确实冒了一把冷汗。经过10几分钟的折腾，终于弄明白了：原来是windows service database缓存的原因，reboot server可以完美解决问题。但实际上我们可以尝试: 关闭所有windows service控制面板。 查找windows service的PID：SC queryex service_name 杀掉进程：taskkill /PID service_pid /f 这样就再也不用担心windows service部署了。 至此就可以完全卸载掉了。 Win10的序列号查询本机的Win10的序列号很容易查出来，按“Win”+ “R”，运行powershell，然后执行以下命令：(Get-WmiObject -query ‘select * from SoftwareLicensingService’).OA3xOriginalProductKey 输入法半角状态就是说输入法状态条中，那半月形变为圆形时为全角这时输入的英文字母及数字与汉字等大，半角当然是输入法状态条中为半月形时的状态了，这时输入的英文字母及数字不与汉字等大为汉字一半(全角占用两个字节)。","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20organization/windows%20operation%20system.md/windows%20wiki/"},{"title":"","text":"windows shortcutShift + 单击任务栏按钮 打开应用或快速打开另一个应用实例。Windows 徽标键 + D 显示和隐藏桌面。Windows 徽标键 + E 打开文件资源管理器。Windows 徽标键 + I 打开设置。Windows 徽标键 + L 锁定你的电脑或切换帐户。 Windows 徽标键 + R 打开“运行”对话框。Windows 徽标键 + S 打开搜素。Windows 徽标键 + Shift + S 获取部分屏幕的屏幕截图。Windows 徽标键 + X 打开“快速链接”菜单。Windows 徽标键 + 数字 打开桌面，然后启动固定到任务栏的应用（位于数字所指明的位置）。 如果应用已处于运行状态，则切换至该应用。 Windows 徽标键 + Shift + 数字 打开桌面，然后启动固定到任务栏的应用新实例（位于数字所指明的位置）。Windows 徽标键 + 向上键 最大化窗口。Windows 徽标键 + 向下键 删除屏幕上的当前应用并最小化桌面窗口。Windows 徽标键 + 向左键 最大化屏幕左侧的应用或桌面窗口。Windows 徽标键 + 向右键 最大化屏幕右侧的应用或桌面窗口。Windows 徽标键 + M 最小化所有窗口。Windows 徽标键 + Shift + M 还原桌面上的最小化窗口。Windows 徽标键 + Home 最小化活动桌面窗口之外的所有窗口（在第二个笔划时还原所有窗口）。Windows 徽标键 + Shift + 向左键或向右键 将桌面上的应用或窗口从一台显示器移动至另一台显示器。Ctrl + X 剪切选定项。Ctrl + C（或 Ctrl + Insert） 复制选定项。Ctrl + V（或 Shift + Insert） 粘贴选定项。Ctrl + Z 撤消操作。Ctrl + Y 恢复操作。Alt + Tab 在打开的应用之间切换。Alt + F4 关闭活动项，或者退出活动应用。Ctrl + F4 关闭活动文档（在可全屏显示并允许你同时 打开多个文档 的应用 中）。 一、ALT+Esc 可以使当前窗口最小化。二、Win+D 最小化所有窗口，再按一下就可以还原窗口。三、Windows+M 最小化所有窗口 。四、Windows+Shift+M 还原最小化的窗口。 4、Win鍵+Ctrl+左鍵：切換至左側虛擬桌面。5、Win鍵+Ctrl+右鍵：切換至右側虛擬桌面。","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20organization/windows%20operation%20system.md/windows_shortcut/"},{"title":"","text":"批处理获取管理员运行权限的几种方法很多用了Win10版本系统的人都会发现，Windows对程序的运行权限是控制得更加严格了，即使你将UAC控制放至最低，如果没有特别赋予外来程序管理员运行权限的话，很多程序都会运行出错，包括很多用于系统维护的批处理程序由于运行权限不够都会导致出错，最简单的方法莫过于用右键点击程序，然后选择“以管理员身份运行”，对于那些需要经常使用的程序，我们可以进入程序的属性里面勾选上“以管理员身份运行”，这样每次点击它都会直接以管理员身份运行了。以上这些都是对单个程序的临时解决措施。那么对于众多的批处理程序，每次都用右键觉得很麻烦，又不可能到每个程序的属性里面去设置一下，效率低下，那有没有办法让批处理程序能够自动获取管理员运行权限呢，让其直接双击即可实现正常运行，答案当然是有的。下面是我从网上找到的几种提升批处理运行权限的方法，另外也有一些本人自己摸索出来的方法。 方法1：借用VBS脚本 1%1 mshta vbscript:CreateObject(&quot;Shell.Application&quot;).ShellExecute(&quot;cmd.exe&quot;,&quot;/c %~s0 ::&quot;,&quot;&quot;,&quot;runas&quot;,1)(window.close)&amp;&amp;exit 方法2：借用VBS脚本 12%1 start &quot;&quot; mshta vbscript:createobject(&quot;shell.application&quot;).shellexecute(&quot;&quot;&quot;%~0&quot;&quot;&quot;,&quot;::&quot;,,&quot;runas&quot;,1)(window.close)&amp;exitexit /B 方法3：借用VBS脚本 12345echo Set UAC = CreateObject^(&quot;Shell.Application&quot;^) &gt; &quot;%temp%\\getadmin.vbs&quot;echo UAC.ShellExecute &quot;%~s0&quot;, &quot;&quot;, &quot;&quot;, &quot;runas&quot;, 1 &gt;&gt; &quot;%temp%\\getadmin.vbs&quot;&quot;%temp%\\getadmin.vbs&quot;del /f /q &quot;%temp%\\getadmin.vbs&quot; &gt;nulexit /B 方法4：借用第三方程序 12nircmd elevate cmd /c &quot;%0&quot;exit /B 方法5：runas命令runas /noprofile /user:Administrator “%0”exit /B 以上是批处理获取管理员权限的5种方法，只要把这几个命令放进批处理优先执行即可，当然还要加上判断是否已经获取管理员权限的语句，否则批处理就会无限循环下去。判断批处理是否已获取管理员权限的方法，网上用的最多的是下面这句命令： 以方法1为例： 123456&gt;nul 2&gt;&amp;1 &quot;%SYSTEMROOT%\\system32\\cacls.exe&quot; &quot;%SYSTEMROOT%\\system32\\config\\system&quot;if '%errorlevel%' NEQ '0' (goto UACPrompt) else (goto UACAdmin):UACPrompt%1 mshta vbscript:CreateObject(&quot;Shell.Application&quot;).ShellExecute(&quot;cmd.exe&quot;,&quot;/c %~s0 ::&quot;,&quot;&quot;,&quot;runas&quot;,1)(window.close)&amp;&amp;exit:UACAdminecho 已获取管理员权限 用cacls命令来判断管理员权限固然不错，但经过实践我发现cacls返回的errorlevel值不够稳定，经常会变换出其他不可预知的错误码，造成判断有误，导致批处理进入死循环。当然也有人采用能否往系统目录（比如system32）写入文件的方法来判断，我觉得这些都不够好，后来我发现使用bcdedit命令来判断比较准确，一般情况下它只会返回两个错误码0和1，很少见到有其他值出现，目前它是我觉得用来判断管理员权限最好的方法。 前3种方法是使用了VBS脚本，方法1最简洁，一行代码就搞定了，但我发现Win10系统似乎不支持短文件名，一旦文件路径出现空格，该命令就会出错；方法2也不赖，只有两行代码，在Win10系统能稳定运行；方法3比较复杂，还会产生临时文件，但也能在Win10系统稳定运行；第4种方法使用了第三方程序，不会产生临时文件，代码也简单，但你得先下载nircmd.exe这个工具；第5种方法采用了系统自带的命令runas来实现，理论上是没问题的，但实际上比较难实现，首先要求Administrator管理员账户必须已经启用，其次还必须设置有管理员密码，否则都会得到拒绝的提示。 以上5种方法都可以提升批处理的运行权限，可根据具体情况选择最合适的方法，我比较喜欢方法2，代码简洁，运行稳定，不会产生临时文件，其次方法4也不错。如果您有更好的批处理提权方法，也可以跟大家一起分享！共同进步！ 附：批处理获取管理员权限完整代码 123456789101112@echo offif exist &quot;%SystemRoot%\\SysWOW64&quot; path %path%;%windir%\\SysNative;%SystemRoot%\\SysWOW64;%~dp0bcdedit &gt;nulif '%errorlevel%' NEQ '0' (goto UACPrompt) else (goto UACAdmin):UACPrompt%1 start &quot;&quot; mshta vbscript:createobject(&quot;shell.application&quot;).shellexecute(&quot;&quot;&quot;%~0&quot;&quot;&quot;,&quot;::&quot;,,&quot;runas&quot;,1)(window.close)&amp;exitexit /B:UACAdmincd /d &quot;%~dp0&quot;echo 当前运行路径是：%CD%echo 已获取管理员权限pause","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20organization/windows%20operation%20system.md/%E6%89%B9%E5%A4%84%E7%90%86%E8%8E%B7%E5%8F%96%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%90%E8%A1%8C%E6%9D%83%E9%99%90%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/"},{"title":"","text":"Ubuntu 18.04修改默认源为国内源安装Ubuntu 18.04后，使用国外源太慢了，修改为国内源会快很多。 修改阿里源为Ubuntu 18.04默认的源 备份/etc/apt/sources.list 备份1cp /etc/apt/sources.list /etc/apt/sources.list.bak 在/etc/apt/sources.list文件前面添加如下条目 添加阿里源12345678910deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse 最后执行如下命令更新源 更新12sudo apt-get updatesudo apt-get upgrade 另外其他几个国内源如下：中科大源 中科大源12345678910deb https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiversedeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiversedeb https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiversedeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiversedeb https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiversedeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiversedeb https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiversedeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiversedeb https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiversedeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse 163源 163源12345678910deb http://mirrors.163.com/ubuntu/ bionic main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ bionic-security main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ bionic-updates main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ bionic-proposed main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ bionic-backports main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ bionic main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ bionic-security main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ bionic-updates main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ bionic-proposed main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ bionic-backports main restricted universe multiverse 清华源 清华源12345678910deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiversedeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiversedeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiversedeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiversedeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiversedeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20organization/unix/Ubuntu%2018.04%E4%BF%AE%E6%94%B9%E9%BB%98%E8%AE%A4%E6%BA%90%E4%B8%BA%E5%9B%BD%E5%86%85%E6%BA%90/"},{"title":"docker","text":"配置文件、启动命令应用程序、环境变量第三方软件库和依赖包运行时环境操作系统 例子前端 Vue后端 SprintBootDB MySql 开发环境、测试环境 NodeJSnpm依赖java运行时环境第三方依赖（springboot）mysql数据库环境变量、启动脚本配置Redis（缓存）配置Nginx 原理虚拟机 docker New Linux installations, installed using the wsl –install command, will be set to WSL 2 by default. You can list your installed Linux distributions and check the version of WSL each is set to by entering the command: wsl -l -v in PowerShell or Windows Command Prompt. To change or reset your password, open the Linux distribution and enter the command: passwd. You will be asked to enter your current password, then asked to enter your new password, and then to confirm your new password. If you forgot the password for your Linux distribution: Open PowerShell and enter the root of your default WSL distribution using the command: wsl -u root If you need to update the forgotten password on a distribution that is not your default, use the command: wsl -d Debian -u root, replacing Debian with the name of your targeted distribution. Once your WSL distribution has been opened at the root level inside PowerShell, you can use this command to update your password: passwd &lt;username&gt; where &lt;username&gt; is the username of the account in the distribution whose password you’ve forgotten. You will be prompted to enter a new UNIX password and then confirm that password. Once you’re told that the password has updated successfully, close WSL inside of PowerShell using the command: exit. wsl --shutdown Install VS Code and the WSL extension Install the Remote Development extension pack. This extension pack includes the WSL extension, in addition to the Remote - SSH, and Dev Containers extensions, enabling you to open any folder in a container, on a remote machine, or in WSL. This Remote Development extension pack includes four extensions: Remote - SSH - Work with source code in any location by opening folders on a remote machine/VM using SSH. Supports x86_64, ARMv7l (AArch32), and ARMv8l (AArch64) glibc-based Linux, Windows 10/Server (1803+), and macOS 10.14+ (Mojave) SSH hosts.Remote - Tunnels - Work with source code in any location by opening folders on a remote machine/VM using a VS Code Tunnel (rather than SSH).Dev Containers - Work with a separate toolchain or container based application by opening any folder mounted into or inside a container.WSL - Get a Linux-powered development experience from the comfort of Windows by opening any folder in the Windows Subsystem for Linux. Install Docker Desktop on Windows When prompted, ensure the Use WSL 2 instead of Hyper-V option on the Configuration page is selected or not depending on your choice of backend. If your system only supports one of the two options, you will not be able to select which backend to use. dockfiledocker compose exampleCreate an empty project directory. cd my_wordpress/ Create a docker-compose.yml file that starts your WordPress blog and a separate MySQL instance with volume mounts for data persistence: 123456789101112131415161718192021222324252627282930313233services: db: # We use a mariadb image which supports both amd64 &amp; arm64 architecture image: mariadb:10.6.4-focal # If you really want to use MySQL, uncomment the following line #image: mysql:8.0.27 command: '--default-authentication-plugin=mysql_native_password' volumes: - db_data:/var/lib/mysql restart: always environment: - MYSQL_ROOT_PASSWORD=somewordpress - MYSQL_DATABASE=wordpress - MYSQL_USER=wordpress - MYSQL_PASSWORD=wordpress expose: - 3306 - 33060 wordpress: image: wordpress:latest volumes: - wp_data:/var/www/html ports: - 80:80 restart: always environment: - WORDPRESS_DB_HOST=db - WORDPRESS_DB_USER=wordpress - WORDPRESS_DB_PASSWORD=wordpress - WORDPRESS_DB_NAME=wordpressvolumes: db_data: wp_data: run docker compose up -d from your project directory. Bring up WordPress in a web browserIf you are using Docker Desktop for Mac or Docker Desktop for Windows, you can use http://localhost as the IP address, and open http://localhost:80 in a web browser. phpmyadmin All of the following examples will bring you phpMyAdmin on http://localhost:8080 where you can enjoy your happy MySQL administration. 服务器：db Usage with docker-compose and arbitrary serverThis will run phpMyAdmin with the arbitrary server option - allowing you to specify any MySQL/MariaDB server on the login page. version: ‘3.1’ 12345678910services: phpmyadmin: image: phpmyadmin restart: always ports: - 8080:80 environment: - PMA_ARBITRARY=1 Mount the volume containing your themes or plugins to the proper directory; and then apply them through the “wp-admin” UI. Ensure read/write/execute permissions are in place for the user: Themes go in a subdirectory in /var/www/html/wp-content/themes/Plugins go in a subdirectory in /var/www/html/wp-content/plugins/ mysqldocker run -d --name mysql_1 -p 3307:3306 -e TZ=Asia/Shanghai -e MYSQL_ROOT_PASSWORD=123 mysql $ docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag… where some-mysql is the name you want to assign to your container, my-secret-pw is the password to be set for the MySQL root user and tag is the tag specifying the MySQL version you want. Using a custom MySQL configuration file If /my/custom/config-file.cnf is the path and name of your custom configuration file, you can start your mysql container like this (note that only the directory path of the custom config file is used in this command): $ docker run --name some-mysql -v /my/custom:/etc/mysql/conf.d -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag This will start a new container some-mysql where the MySQL instance uses the combined startup settings from /etc/mysql/my.cnf and /etc/mysql/conf.d/config-file.cnf, with settings from the latter taking precedence. Configuration without a cnf fileMany configuration options can be passed as flags to mysqld. This will give you the flexibility to customize the container without needing a cnf file. For example, if you want to change the default encoding and collation for all tables to use UTF-8 (utf8mb4) just run the following: $ docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci docker run -d-ddeamon后台服务 -p 宿主机端口:虚拟机端口port虚拟机端口取决于应用程序 -v 数据卷：容器目录/var/lib/docker/volumes/-v 宿主机目录：容器目录volumn双向映射 -e KEY=VALUEenvironment Repository:TAG volume mysql123456789docker run -d \\ --name mysql \\ -p 3306:3306 \\ -e TZ=Asia/Shanghai \\ -e MYSQL_ROOT_PASSWORD=123 \\ -v /root/mysql/data:/var/lib/mysql \\ -v /root/mysql/init:docker-entrypoint-initdb.d \\ -v /root/mysql /conf:etc/mysql/conf.d \\ mysql If /my/custom/config-file.cnf is the path and name of your custom configuration file, you can start your mysql container like this (note that only the directory path of the custom config file is used in this command): $ docker run –name some-mysql -v /my/custom:/etc/mysql/conf.d -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tagThis will start a new container some-mysql where the MySQL instance uses the combined startup settings from /etc/mysql/my.cnf and /etc/mysql/conf.d/config-file.cnf, with settings from the latter taking precedence. Initializing a fresh instanceWhen a container is started for the first time, a new database with the specified name will be created and initialized with the provided configuration variables. Furthermore, it will execute files with extensions .sh, .sql and .sql.gz that are found in /docker-entrypoint-initdb.d. Files will be executed in alphabetical order. Create a data directory on a suitable volume on your host system, e.g. /my/own/datadir. $ docker run --name some-mysql -v /my/own/datadir:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag openjdk:11.0-jre-buster 1234567891011121314FROM ubuntu:16:04# JDK安装目录ENV JAVA_DIR=/usr/local# copy jdk 和 java项目包COPY ./jdk8.tar.gz $JAVA_DIR/COPY ./docker-demo.jar /tmp/app.jar# install jdkRUN cd $JAVA_DIR \\ &amp;&amp; tar -xf ./jdk8.tar.gz \\ &amp;&amp; mv ./jdk1.8.0_144 ./java8# environment variableENV JAVA_HOME=$JAVA_DIR/JAVA8ENV PATH=$PATH:$JAVA_HOME/bin# JAVA项目启动命令ENTRYPOINT [&quot;java&quot;, &quot;-jar&quot;, &quot;/app.jar&quot;] 1234567FROM openjdk:11.0-jre-buster#设置系统时区COPY docker-demo.jar /app.jarENTRYPOINT [&quot;java&quot;, &quot;-jar&quot;, &quot;/app.jar&quot;] docker build -t myImage:1.0 .-t -&gt; 镜像起名. -&gt; dock file所在目录 network 加入自定义网络的容器可以通过容器名互相访问 docker run -d --name app_server_name --network custom_network_name docker_image_name","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20organization/unix/docker/"},{"title":"","text":"intall Appache,PHP and MySQL on ubuntuIn this tutorial we are going to learn how to configure Ubuntu 18.04 server as a web server using the Ubuntu LAMP stack, which includes the Apache web server, PHP programming Language and MySQL/MariaDB Database Server. We will start by installing and configuring Apache web server, then we will install PHP, MySQL Server and phpMyAdmin web interface. Install and Configure Apache web server on Ubuntu 18.04Apache is the most popular and stable web server for Ubuntu Linux. The Apache HTTP server for Ubuntu 18 provided by the apache2 package. To install apache2 on Ubuntu, open the terminal and execute: 12sudo apt-get updatesudo apt-get install apache2 That is all you need to do. Now, open a web browser from a remote computer and type the IP address of your Ubuntu server in the address bar. You will get the Apache2 Ubuntu Default Page. Install and Configure Apache web server on Ubuntu 18.04The apache2.conf file is the main configuration file which you can find under the /etc/apache2/ directory.The /var/www/html is the default DocumentRoot, You can immediately serve static HTML website by putting the contents (e.g. HTML, images, CSS, JavaScript and etc.) into the /var/www/html directory.Creating Apache Virtual HostsVirtual Hosting are a way of serving multiple websites from a single server. Every website will have their own configuration and separate Document Root to host website contents. Creating an Apache Virtual Host is a simple task. For this demonstration, I am going to create a new virtual host for the example.com domain. The /var/www/example.com directory going to be the DocumentRoot. First create the DocumentRoot: sudo mkdir /var/www/example.com Create the Virtual Host configuration file inside the /etc/apache2/sites-available/ folder (Filename must end with ‘.conf’ extension). sudo vim /etc/apache2/sites-available/example.com.conf Add following VirtualHost configuration: 1234567&lt;VirtualHost *:80&gt; ServerName www.example.com ServerAlias example.com DocumentRoot /var/www/example.com ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined&lt;/VirtualHost&gt; Save the file, enable the new site and reload the Apache web server: sudo a2ensite example.com.confsudo systemctl reload apache2And now our web server is ready to serve &lt;www.example.com&gt; website. Of Course we still don’t have anything in our DocumentRoot and you also need to configure DNS records to point your domain name to the server IP address. To test virtual host without DNS, create an index.html file inside the DocumentRoot and entry to the hosts file on your local computer, pointing &lt;www.example.com&gt; to your Ubuntu server IP address. Install PHP programming LanguagePHP is a programming language for developing web applications and essential part of the Ubuntu LAMP Stack. To install PHP on Ubuntu 18.04, Run: sudo apt-get updatesudo apt-get install php The php package will install the “php7.2” as well as “libapache2-mod-php7.2” module that required to work with Ubuntu Apache web server. After the installation is complete, we need to restart the apache server: sudo systemctl restart apache2.serviceTo test the PHP installation, create an index.php file under the /var/www/html folder and add the phpinfo() function: 123&lt;?php phpinfo();?&gt; Then access the index.php by typing http://your-server-ip/index.php in the web browser (e.g. 192.168.1.100/index.php). You should get information page that displays PHP configuration settings on your Ubuntu 18.04 Server. Install MySQL Server on Ubuntu 18.04Next, we are going to install MySQL Server as our Database server. Installing MySQL Server on Ubuntu 18.04 is straightforward. Open the terminal update the package list and install the mysql-server package: sudo apt-get install mysql-server(If you want to Install MariaDB, install the mariadb-server package instead of mysql-server package). After the installation has finished, Log in to the MySQL console with the following command: sudo mysqlNote that the MySQL server on Ubuntu use auth_socket plugin to authenticate mysql root and does not need a password for connecting as a root user. If you want to enable password authentication, click on the following link to learn how to set the MySQL root password on Ubuntu 18.04. Install phpMyAdmin on Ubuntu 18.04phpMyAdmin is a web based graphical user interface to manage MySQL/MariaDB Database server. To install phpMyAdmin on Ubuntu 18.04 Server, Run: sudo apt-get updatesudo apt-get install phpmyadminWhen asked to choose web server that should be automatically configured to run phpMyAdmin, select apache2 by pressing the space bar on the keyboard. Install phpMyAdmin on Ubuntu 18.04After the installation completes, you can access phpMyAdmin at http://server-ip/phpmyadmin or http://domain-name/phpmyadmin. Now you have a fully functional web server up and running with Apache, MySQL and PHP programming language. SummaryIn this tutorial we learned how to install Lamp stack on Ubuntu 18.04 server. The LAMP stack stands for Linux Apache MySQL and PHP, it is a web hosting platform for Linux to server web pages using http protocol.","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20organization/unix/intall%20Appache,PHP%20and%20MySQL%20on%20ubuntu/"},{"title":"","text":"National Center for Education Statistics Classification of Instructional Programs - 202001 AGRICULTURAL/ANIMAL/PLANT/VETERINARY SCIENCE AND RELATED FIELDS. CIP Title or Definition ChangedInstructional programs that focus on agriculture, animal, plant, veterinary, and related sciences and that prepares individuals to apply specific knowledge, methods, and techniques to the management and performance of agricultural and veterinary operations. 01.00 Agriculture, GeneralInstructional content is defined in code 01.0000. 01.0000 Agriculture, General. A program that focuses on the general principles and practice of agricultural research and production and that may prepare individuals to apply this knowledge to the solution of practical agricultural problems. Includes instruction in basic animal, plant, and soil science; animal husbandry and plant cultivation; soil conservation; and agricultural operations such as farming, ranching, and agricultural business.See also: 14.0301 - Agricultural Engineering. 01.01 Agricultural Business and ManagementInstructional content for this group of programs is defined in codes 01.0101 - 01.0199. 01.0101 Agricultural Business and Management, General.A general program that focuses on modern business and economic principles involved in the organization, operation, and management of agricultural enterprises. 01.0102 Agribusiness/Agricultural Business Operations.A program that prepares individuals to manage agricultural businesses and agriculturally related operations within diversified corporations. Includes instruction in agriculture, agricultural specialization, business management, accounting, finance, marketing, planning, human resources management, and other managerial responsibilities. 01.0103 Agricultural Economics.A program that focuses on the application of economics to the analysis of resource allocation, productivity, investment, and trends in the agricultural sector, both domestically and internationally. Includes instruction in economics and related subfields as well as applicable agricultural fields.Examples: AgroeconomicsSee also: 03.0204 - Environmental/Natural Resource Economics. 01.0104 Farm/Farm and Ranch Management.A program that prepares individuals to manage farms, ranches, and similar enterprises. Includes instruction in applicable agricultural specialization, business management, accounting, taxation, capitalization, purchasing, government programs and regulations, operational planning and budgeting, contracts and negotiation, and estate planning. 01.0105 Agricultural/Farm Supplies Retailing and Wholesaling.A program that prepares individuals to sell agricultural products and supplies, provide support services to agricultural enterprises, and purchase and market agricultural products. Includes instruction in basic business management, marketing, retailing and wholesaling operations, and applicable principles of agriculture and agricultural operations.See also: 52.1803 - Retailing and Retail Operations., 52.1901 - Auctioneering., 52.0202 - Purchasing, Procurement/Acquisitions and Contracts Management. 01.0106 Agricultural Business Technology/Technician. CIP Title or Definition ChangedA program that prepares individuals to perform specialized support functions related to agricultural business offices and operations and to operate agricultural office equipment, software, and information systems. Includes instruction in basic agricultural business principles, office management, equipment operation, standard software, and database management. 01.0199 Agricultural Business and Management, Other.Any instructional program in agricultural business and management not listed above. 01.02 Agricultural MechanizationInstructional content for this group of programs is defined in codes 01.0201 - 01.0299. 01.0201 Agricultural Mechanization, General.A program that generally prepares individuals to sell, select, and service agricultural or agribusiness technical equipment and facilities, including computers, specialized software, power units, machinery, equipment structures, and utilities. Includes instruction in agricultural power systems, planning and selecting materials for the construction of support facilities, mechanical practices associated with irrigation and water conservation, erosion control, and agricultural data processing systems. 01.0204 Agricultural Power Machinery Operation.A program that prepares individuals to operate specialized farm, ranch, and agribusiness power equipment of a stationary, mobile, or hand-operated nature. Includes instruction in operating specialized equipment such as terrestrial and airborne crop-spraying equipment; tractors and hauling equipment; planting and harvesting equipment; cutting equipment; power sources and systems for silos, irrigation, pumping, and applications such as dairy, feeding and shearing operations; processing equipment; and applicable electrical, mechanical, and safety principles.Examples: Farm Equipment OperatorSee also: 49.0202 - Construction/Heavy Equipment/Earthmoving Equipment Operation. 01.0205 Agricultural Mechanics and Equipment/Machine Technology/Technician. CIP Title or Definition ChangedA program that prepares individuals to maintain and repair specialized farm, ranch, and agribusiness power equipment and vehicles. Includes instruction in the principles of diesel, combustion, electrical, steam, hydraulic, and mechanical systems and their application to the maintenance of terrestrial and airborne crop-spraying equipment; tractors and hauling equipment; planting and harvesting equipment; cutting equipment; power sources and systems for silos; irrigation and pumping equipment; dairy, feeding, and shearing operations; and processing systems.Examples: Agricultural Equipment Mechanic Agricultural Equipment Technician Agricultural Machinery Technician Farm Equipment Service Technician 01.0207 Irrigation Management Technology/Technician. (New)A program that prepares individuals for employment in the field of agricultural technology and irrigation. Includes instruction in irrigation and drainage methodologies, pumping and delivery systems, system design and evaluation, and principles of installation and repair of irrigation systems. 01.0299 Agricultural Mechanization, Other.Any instructional program in agricultural mechanization not listed above. 01.03 Agricultural Production OperationsInstructional content for this group of programs is defined in codes 01.0301 - 01.0399. 01.0301 Agricultural Production Operations, General.A program that focuses on the general planning, economics, and use of facilities, natural resources, equipment, labor, and capital to produce plant and animal products, and that may prepare individuals for work in farming, ranching, and agribusiness. 01.0302 Animal/Livestock Husbandry and Production.A program that prepares individuals to select, breed, care for, process, and market livestock and small farm animals. Includes instruction in basic animal science, animal nutrition, and animal health as applied to various species and breeds; design and operation of housing, feeding, and processing facilities; and related issues of safety, applicable regulations, logistics, and supply. 01.0303 Aquaculture.A program that prepares individuals to select, culture, propagate, harvest, and market domesticated fish, shellfish, and marine plants, both freshwater and saltwater. Includes instruction in the basic principles of aquatic and marine biology; health and nutrition of aquatic and marine life; design and operation of fish farms, breeding facilities, culture beds, and related enterprises; and related issues of safety, applicable regulations, logistics, and supply. 01.0304 Crop Production.A program that prepares individuals to cultivate grain, fiber, forage, oilseed, fruits and nuts, vegetables, and other domesticated plant products. Includes instruction in basic principles of plant science, health, and nutrition as applied to particular species and breeds; soil preparation and irrigation; pest management; planting and harvesting operations; product marketing; and applicable issues of safety, regulation, logistics, and supply. 01.0306 Dairy Husbandry and Production.A program that prepares individuals to manage the selection and care of dairy animals and associated dairy farm and processing facilities and operations. Includes instruction in basic animal and dairy science; dairy animal nutrition and health; design and operation of dairy housing, feeding, and processing facilities and equipment; and related issues of safety, sanitation, shipping and handling, and applicable regulations. 01.0307 Horse Husbandry/Equine Science and Management.A program that prepares individuals to manage the selection, breeding, care, and maintenance of work, athletic, and show horses; and to manage horse farms, stables, tracks and related equipment and operations. Includes instruction in applicable principles of animal science, care, and health; stable and track management; design and operation of facilities and equipment; and related issues such as regulations, business management; and logistics. 01.0308 Agroecology and Sustainable Agriculture.A program that focuses on agricultural principles and practices that, over the long term, enhance environmental quality, make efficient use of nonrenewable resources, integrate natural biological cycles and controls, and are economically viable and socially responsible; and that may prepare individuals to apply this knowledge to the solution of agricultural and environmental problems. Includes instruction in principles of agroecology, crop and soil sciences, entomology, horticulture, animal science, weed science and management, soil fertility and nutrient cycling, applied ecology, agricultural economics, and rangeland ecology and watershed management.Examples: Agroecology Sustainable Agriculture Organic FarmingSee also: 30.3301 - Sustainability Studies. 01.0309 Viticulture and Enology. (Moved from)Moved from 01.0309 to 01.1004 01.0310 Apiculture. (New)A program that focuses on improving the beekeeping industry, promoting pollination of fruits and vegetables, and bee colony expansion and maintenance. Includes instruction in apiary behavior, apiary equipment and supplies, beekeeping, bee pests and parasites, handling bees, hive set up and care, queen rearing, and seasonal management practices.Examples: Scientific Beekeeping Apiary ManagementSee also: 36.0120 - Beekeeping. 01.0399 Agricultural Production Operations, Other.Any instructional program in agricultural production operations not listed above. 01.04 Agricultural and Food Products ProcessingInstructional content for this group of programs is defined in codes 01.0401 - 01.0480. 01.0401 Agricultural and Food Products Processing.A program that prepares individuals to receive, inspect, store, process, and package agricultural products in the form of human food consumables, animal or plant food, or other industrial products. Includes instruction in the nutrient and industrial properties of various agricultural products; logistics and storage procedures; chemical and mechanical processing operations; packaging; safety and health requirements; and related technical and business principles. 01.0480 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 01.05 Agricultural and Domestic Animal ServicesInstructional content for this group of programs is defined in codes 01.0504 - 01.0599. 01.0504 Dog/Pet/Animal Grooming.A program that prepares individuals to provide cosmetic services for household pets, show animals, work animals and animal athletes. Includes instruction in skin, coat, and pelt grooming and styling; skin care; hoof, nail, and claw care; animal massage; minor first aid and veterinary referral; animal grooming products and applications; health and safety; and applicable regulations. 01.0505 Animal Training.A program that prepares individuals to teach and exercise animals for leisure, sport, show, and professional purposes. Includes instruction in animal psychology, health, and safety; human-animal interaction; learning and behavior styles associated with different breeds and species; and the technical and pedagogical aspects of training animals for such specific functions as obedient household pets, performing show animals, animal athletes, caregiving (e.g., seeing-eye dogs), search and rescue, and police/security work. 01.0507 Equestrian/Equine Studies.A program that focuses on the horse, horsemanship, and related subjects and prepares individuals to care for horses and horse equipment; ride and drive horses for leisure, sport, show, and professional purposes; and manage the training of horses and riders. Includes instruction in horse breeding, nutrition, health, and safety; history of the horse and horsemanship; horse development and training; riding and equestrian technique; stable, paddock, and track management; and equipment maintenance and repair. 01.0508 Taxidermy/Taxidermist.A program that prepares individuals to reproduce life-like three-dimensional representations of living animals for permanent display using elements of the deceased specimen(s) as well as artificial materials, and to manage taxidermy services and businesses. Includes instruction in specimen grading and selection, caping and fleshing, preservation procedures, tanning, drying, measurements, form and armature construction, carpentry and woodworking, molding and casting, drawing, sculptural techniques, painting and finishing techniques, basic business operations, customer communications, and applicable laws and regulations. 01.0509 Farrier Science. (New)A program of study that prepares individuals to become specialists in equine hoof care (farriers). Includes instruction in equine science, equine health and first aid, general horseshoeing, corrective horseshoeing, gait analysis, and metal forging techniques using gas or coal. 01.0599 Agricultural and Domestic Animal Services, Other.Any instructional program in agricultural and domestic animal services not listed above. 01.06 Applied Horticulture and Horticultural Business ServicesInstructional content for this group of programs is defined in codes 01.0601 - 01.0699. 01.0601 Applied Horticulture/Horticulture Operations, General.A program that focuses on the general production and processing of domesticated plants, shrubs, flowers, foliage, trees, groundcovers, and related plant materials; the management of technical and business operations connected with horticultural services; and the basic scientific principles needed to understand plants and their management and care. 01.0603 Ornamental Horticulture.A program that focuses on domesticated plants and plant materials used for decorative and recreational applications and prepares individuals to breed, grow, and utilize ornamental plant varieties for commercial and aesthetic purposes. Includes instruction in applicable plant science subjects, the environmental design and artistic aspects of horticultural product usage, and the management of horticultural operations. 01.0604 Greenhouse Operations and Management.A program that prepares individuals to produce, store, and deliver plant species in controlled indoor environments for wholesale, commercial, research, or other purposes. Includes instruction in applicable principles of plant science; climate, irrigation, and nutrition control equipment operation and maintenance; facilities management; inventory control; safety procedures; and personnel supervision. 01.0605 Landscaping and Groundskeeping.A program that prepares individuals to manage and maintain indoor and/or outdoor ornamental and recreational plants and groundcovers and related conceptual designs established by landscape architects, interior designers, enterprise owners or managers, and individual clients. Includes instruction in applicable principles of horticulture, gardening, plant and soil irrigation and nutrition, turf maintenance, plant maintenance, equipment operation and maintenance, personnel supervision, and purchasing.Examples: GreenspaceSee also: 04.0601 - Landscape Architecture. 01.0606 Plant Nursery Operations and Management.A program that prepares individuals to operate and manage outdoor plant farms, tree and shrub nurseries, and related facilities that develop domesticated plant products for propagation, harvesting, and transplantation. Includes instruction in applicable principles of plant science, farm and business management, nursery operations, equipment operation and maintenance, safety procedures, and personnel supervision. 01.0607 Turf and Turfgrass Management.A program that focuses on turfgrasses and related groundcover plants and prepares individuals to develop ornamental or recreational grasses and related products; plant, transplant, and manage grassed areas; and to produce and store turf used for transplantation. Includes instruction in applicable plant sciences, genetics of grasses, turf science, use analysis, turf management, and related economics.Examples: Golf and Sports Turf Management 01.0608 Floriculture/Floristry Operations and Management.A program that prepares individuals to operate and manage commercial and contract florist enterprises, supply and delivery services, and flower catering services. Includes instruction in the applicable principles of plant science; purchasing, storage, and delivery systems; floral design and arranging; and principles of business management.Examples: Floral Arrangement Floral Design Floristry Retail Floristry 01.0609 Public Horticulture. (New)A program of study that focuses on combining traditional horticulture and public education and outreach. Includes instruction in botany, soil science, plant science, agricultural economics, leadership, and business.See also: 36.0123 - Master Gardener/Gardening. 01.0610 Urban and Community Horticulture. (New)A program that focuses on principles and techniques for the production of horticultural crops in an urban environment. Includes instruction in ecology, environmental sustainability, food production systems, and plant and soil sciences. 01.0680 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 01.0699 Applied Horticulture/Horticultural Business Services, Other.Any instructional program in horticultural service operations not listed above.See also: 03.0508 - Urban Forestry. 01.07 International AgricultureInstructional content is defined in code 01.0701. 01.0701 International Agriculture.A program that focuses on the application of agricultural management and scientific principles to the problems of global food production and distribution, and to the study of the agricultural systems of other countries. Includes instruction in agricultural economics; comparative agricultural systems; international agribusiness and law; third-world development studies and economic development; and global applications of climate, soil, water resources, ecological and environmental studies, and animal and plant sciences.See also: 45.0604 - Development Economics and International Development. 01.08 Agricultural Public ServicesInstructional content for this group of programs is defined in codes 01.0801 - 01.0899. 01.0801 Agricultural and Extension Education Services.A program that prepares individuals to provide referral, consulting, technical assistance, and educational services to gardeners, farmers, ranchers, agribusinesses, and other organizations. Includes instruction in basic agricultural sciences, agricultural business operations, pest control, adult education methods, public relations, applicable state laws and regulations, and communication skills.See also: 13.1301 - Agricultural Teacher Education., 45.1103 - Rural Sociology., 36.0123 - Master Gardener/Gardening. 01.0802 Agricultural Communication/Journalism.A program that prepares individuals to apply journalistic, communication, and broadcasting principles to the development, production, and transmittal of agricultural information. Includes instruction in basic journalism, broadcasting, film/video, and communication techniques; the production of technically specialized information products for agricultural audiences; and the principles of agricultural sciences and business operations needed to develop and communicate agricultural subject matter in effective ways.See also: 09.0407 - Science/Health/Environmental Journalism. 01.0899 Agricultural Public Services, Other.Any instructional program in general agricultural sciences and related services not listed above. 01.09 Animal SciencesInstructional content for this group of programs is defined in codes 01.0901 - 01.0999. 01.0901 Animal Sciences, General.A general program that focuses on the scientific principles that underlie the breeding and husbandry of agricultural animals, and the production, processing, and distribution of agricultural animal products. Includes instruction in the animal sciences, animal husbandry and production, and agricultural and food products processing.See also: 26.0701 - Zoology/Animal Biology. 01.0902 Agricultural Animal Breeding.A program that focuses on the application of genetics and genetic engineering to the improvement of agricultural animal health, the development of new animal breeds, and the selective improvement of agricultural animal populations. Includes instruction in genetics, genetic engineering, population genetics, animal health, animal husbandry, and biotechnology.See also: 26.0804 - Animal Genetics. 01.0903 Animal Health.A program that focuses on the application of biological and chemical principles to the study, prevention, and control of diseases in agricultural animal populations. Includes instruction in environmental science, pharmacology, animal population studies, genetics, animal physiology and diet, disease prevention, treatment methodologies, and laboratory and testing procedures. 01.0904 Animal Nutrition.A program that focuses on the biology and chemistry of proteins, fats, carbohydrates, water, vitamins, and feed additives as related to animal health and the production of improved animal products. Includes instruction in nutrition science, animal health and physiology, biochemistry, cellular and molecular biology, animal husbandry, and food science. 01.0905 Dairy Science.A program that focuses on the application of biological and chemical principles to the production and management of dairy animals and the production and handling of dairy products. Includes instruction in animal sciences, nutrition sciences, food science and technology, biochemistry, and related aspects of human and animal health and safety. 01.0906 Livestock Management.A program that focuses on the application of biological and chemical principles to the production and management of livestock animals and the production and handling of meat and other products. Includes instruction in animal sciences, range science, nutrition sciences, food science and technology, biochemistry, and related aspects of human and animal health and safety.Examples: Meat Science 01.0907 Poultry Science.A program that focuses on the application of biological and chemical principles to the production and management of poultry animals and the production and handling of poultry products. Includes instruction in avian sciences, nutrition sciences, food science and technology, biochemistry, hatchery design, and related aspects of human and animal health and safety. 01.0999 Animal Sciences, Other.Any instructional program in the animal sciences not listed above. 01.10 Food Science and TechnologyInstructional content for this group of programs is defined in codes 01.1001 - 01.1099. 01.1001 Food Science.A program that focuses on the application of biological, chemical, and physical principles to the study of converting raw agricultural products into processed forms suitable for direct human consumption, and the storage of such products. Includes instruction in applicable aspects of the agricultural sciences, human physiology and nutrition, food chemistry, agricultural products processing, food additives, food preparation and packaging, food storage and shipment, and related aspects of human health and safety including toxicology and pathology.Examples: Food SafetySee also: 19.0501 - Foods, Nutrition, and Wellness Studies, General., 12.0509 - Culinary Science/Culinology. 01.1002 Food Technology and Processing.A program that focuses on the application of chemical, physical, and engineering principles to the development and implementation of manufacturing, packaging, storage, and distribution technologies and processes for food products. Includes instruction in food engineering, food preservation and handling, food preparation, food packaging and display, food storage and shipment, and related equipment and facilities design, operation, and maintenance. 01.1003 Brewing Science. (New)A program that focuses on the business, science, and technology of beer brewing operations. Includes instruction in biology, biochemistry, brewing, entrepreneurship, fermentation, malting, marketing, microbiology, quality control, and sanitation.Examples: Sustainable BrewingSee also: 52.0910 - Brewery/Brewpub Operations/Management. 01.1004 Viticulture and Enology. (Moved to)A program that focuses on the application of scientific and agribusiness principles to the production of grapes, the making of wine, and the wine business. Includes instruction in grapes and wines of the world; grape production; winemaking technology; plant biology; chemistry; food science, safety, and packaging; soil science; pest management; and marketing and business management.Examples: Viticulture Enology 01.1005 Zymology/Fermentation Science. (New)A program that focuses on the business, science, and technology of fermented food production. Includes instruction in biology, biochemistry, brewing, entrepreneurship, fermentation, marketing, microbiology, quality control, and sanitation.See also: 52.0910 - Brewery/Brewpub Operations/Management. 01.1099 Food Science and Technology, Other.Any instructional program in food sciences and technology not listed above. 01.11 Plant SciencesInstructional content for this group of programs is defined in codes 01.1101 - 01.1199. 01.1101 Plant Sciences, General.A general program that focuses on the scientific principles that underlie the breeding, cultivation, and production of agricultural plants, and the production, processing, and distribution of agricultural plant products. Includes instruction in the plant sciences, crop cultivation and production, and agricultural and food products processing.See also: 26.0308 - Plant Molecular Biology., 26.0307 - Plant Physiology., 26.0301 - Botany/Plant Biology., 26.0305 - Plant Pathology/Phytopathology. 01.1102 Agronomy and Crop Science.A program that focuses on the chemical, physical, and biological relationships of crops and the soils nurturing them. Includes instruction in the growth and behavior of agricultural crops, the development of new plant varieties, and the scientific management of soils and nutrients for maximum plant nutrition, health, and productivity. 01.1103 Horticultural Science.A program that focuses on the scientific principles related to the cultivation of garden and ornamental plants, including fruits, vegetables, flowers, and landscape and nursery crops. Includes instruction in specific types of plants, such as citrus; breeding horticultural varieties; physiology of horticultural species; and the scientific management of horticultural plant development and production through the life cycle. 01.1104 Agricultural and Horticultural Plant Breeding.A program that focuses on the application of genetics and genetic engineering to the improvement of agricultural plant health, the development of new plant varieties, and the selective improvement of agricultural plant populations. Includes instruction in genetics, genetic engineering, population genetics, agronomy, plant protection, and biotechnology.See also: 26.0805 - Plant Genetics. 01.1105 Plant Protection and Integrated Pest Management.A program that focuses on the application of scientific principles to the control of animal, insect and weed infestation of domesticated plant populations and other settings, including agricultural crops; the prevention/reduction of attendant economic loss; and the control of environmental pollution and degradation related to pest infestation and pest control measures. Includes instruction in entomology, applicable animal sciences, plant pathology and physiology, weed science, crop science, and environmental toxicology.Examples: Pest Management ExterminationSee also: 26.0702 - Entomology. 01.1106 Range Science and Management.A program that focuses on the scientific study of rangelands, arid regions, grasslands, and other areas of low productivity, as well as the principles of managing such resources for maximum benefit and environmental balance. Includes instruction in livestock management, wildlife biology, plant sciences, ecology, soil science, and hydrology. 01.1180 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 01.1199 Plant Sciences, Other.Any instructional program in plant sciences not listed above. 01.12 Soil SciencesInstructional content for this group of programs is defined in codes 01.1201 - 01.1299. 01.1201 Soil Science and Agronomy, General.A program that generally focuses on the scientific classification of soils, soil properties, and their relationship to agricultural crops. Includes instruction in soil chemistry, soil physics, soil biology, soil fertility, morphogenesis, mineralogy, hydrology, agronomy, and soil conservation and management. 01.1202 Soil Chemistry and Physics.A program that focuses on the application of chemical and physical principles to research and analysis concerning the nature and properties of soils and the conservation and management of soils. Includes instruction in soil and fluid mechanics, mineralogy, sedimentology, thermodynamics, geomorphology, environmental systems, analytical methods, and organic and inorganic chemistry. 01.1203 Soil Microbiology.A program that focuses on application of microbiological theory and methods to the study of the organismic properties of soils, soil-plant and soil-animal interactions, and the biological components and effects of soil management strategies. Includes instruction in microbiology and related biological sciences, applicable animal and plant sciences, soil chemistry and physics as related to biological characteristics, and environmental science. 01.1299 Soil Sciences, Other.Any instructional program in the soil sciences not listed above.Examples: Environmental Soil Science 01.13 Agriculture/Veterinary Preparatory Programs. (New)Instructional content for this group of programs is defined in codes 01.1302 - 01.1399. 01.1302 Pre-Veterinary Studies. (Moved to)A program that prepares individuals for admission to a professional program in veterinary medicine. 01.1399 Agriculture/Veterinary Preparatory Programs, Other. (New)Any instructional program that prepares individuals for admission to a professional program in agriculture or veterinary medicine or science not listed above. 01.80 Veterinary Medicine. (Moved to)Instructional content is defined in code 01.8001. 01.8001 Veterinary Medicine. (Moved to)A program that prepares individuals for the independent professional practice of veterinary medicine, involving the diagnosis, treatment, and health care management of animals and animal populations and the prevention and management of zoonosis. Includes instruction in the veterinary basic sciences, infectious and noninfectious disease, diagnostic procedures, veterinary clinical medicine, obstetrics, radiology, anesthesiology, surgery, toxicology, animal health and preventive medicine, clinical nutrition, practice management, and professional standards and ethics.Examples: Veterinary Medicine (DVM) 01.81 Veterinary Biomedical and Clinical Sciences. (Moved to)Instructional content for this group of programs is defined in codes 01.8101 - 01.8199. 01.8101 Veterinary Sciences/Veterinary Clinical Sciences, General. (Moved to)An integrated program of study in one or more of the veterinary medical or clinical sciences or a program undifferentiated as to title.Examples: Veterinary Sciences/Veterinary Clinical Sciences, General (Cert.) Veterinary Sciences/Veterinary Clinical Sciences, General (MS) Veterinary Sciences/Veterinary Clinical Sciences, General (PhD) 01.8102 Comparative and Laboratory Animal Medicine. (Moved to)A program that focuses on the scientific study of animal models of human disease and related experimental procedures, and prepares veterinarians and animal health specialists to manage the laboratory use and care of experimental animals. Includes instruction in laboratory animal husbandry, laboratory animal disease, biohazard control, gnotobiology, breeding, comparative anatomy and physiology, comparative gene mapping, protein function, physical and mathematical modeling, computer modeling, stem cell technology, colony and genetic stock management, cryopreservation, applicable regulations, and bioethics.Examples: Comparative and Laboratory Animal Medicine (Cert.) Comparative and Laboratory Animal Medicine (MS) Comparative and Laboratory Animal Medicine (PhD) 01.8103 Large Animal/Food Animal and Equine Surgery and Medicine. (Moved to)A program that focuses on the scientific study of the internal medicine and invasive and noninvasive treatment of herd, work, sport, and food animals. Includes instruction in equine medicine, swine and dairy medicine, food animal medicine, pathophysiology, large animal diseases, large animal anesthesiology and surgical procedures, preoperative and postoperative care, and specific medical specialties such as dentistry, ophthalmology, oncology, obstetrics/theriogenology, and orthopedics.Examples: Large Animal/Food Animal and Equine Surgery and Medicine (Cert.) Large Animal/Food Animal and Equine Surgery and Medicine (MS) Large Animal/Food Animal and Equine Surgery and Medicine (PhD) 01.8104 Small/Companion Animal Surgery and Medicine. (Moved to)A program that focuses on the scientific study of the internal medicine and invasive and noninvasive treatment of companion and household animals. Includes instruction in avian medicine, pet care, companion animal medicine, pathophysiology, small animal diseases, small animal anesthesiology and surgical procedures, preoperative and postoperative care, and specific medical specialties such as dentistry, ophthalmology, oncology, obstetrics/theriogenology, and orthopedics.Examples: Small/Companion Animal Surgery and Medicine (Cert.) Small/Companion Animal Surgery and Medicine (MS) Small/Companion Animal Surgery and Medicine (PhD) 01.8105 Veterinary Anatomy. (Moved to)A program that focuses on the scientific study of the structure of small and large animal cellular, organ, tissue, and body systems and their relation to physiologic function, disease, and therapeutic treatment. Includes instruction in histology, ultrastructure, molecular biology, biochemistry, developmental biology, neuroscience, electrophysiology, electron microscopy, computer imaging, and applications to specific species.Examples: Veterinary Anatomy (Cert.) Veterinary Anatomy (MS) Veterinary Anatomy (PhD) 01.8106 Veterinary Infectious Diseases. (Moved to)A program that focuses on the scientific study of zoonotic infectious diseases, disease mechanisms, and prevention and treatment strategies. Includes instruction in disease pathogenesis, vector biology, mycobacterial infection, blood parasites, retroviruses, food-borne diseases, new infectious agents, ecotoxicology, mechanisms of disease transfer, antibody resistance, comparative pathology, communicable diseases, and disease prevention and eradication.Examples: Veterinary Infectious Diseases (Cert.) Veterinary Infectious Diseases (MS) Veterinary Infectious Diseases (PhD) 01.8107 Veterinary Microbiology and Immunobiology. (Moved to)A program that focuses on the scientific study of the microbial causation and immunologic processes related to animal disease, prevention, and treatment. Includes instruction in bacteriology, mycology, virology, immune response mechanisms, humoral and cell function, cancer defenses, immune system dysfunction, immunologic diseases, parasitology, pathogenesis, and disease vectors.Examples: Veterinary Microbiology and Immunobiology (Cert.) Veterinary Microbiology and Immunobiology (MS) Veterinary Microbiology and Immunobiology (PhD) 01.8108 Veterinary Pathology and Pathobiology. (Moved to)A program that focuses on the scientific study of the development and process of disease in domestic and wild animals and applications to diagnosis, prevention, and treatment. Includes instruction in pathogenesis, immunoparasitology, viral therapy, inherited metabolic diseases, environmental toxicology, anatomical and clinical pathology, necropsy and biopsy techniques, clinical laboratory analysis, pathological interpretation, and disease diagnosis.Examples: Veterinary Pathology and Pathobiology (Cert.) Veterinary Pathology and Pathobiology (MS) Veterinary Pathology and Pathobiology (PhD) 01.8109 Veterinary Physiology. (Moved to)A program that focuses on the scientific study of the functional dynamics of animal biological systems and their relationship to the diagnosis and treatment of disease and injury. Includes instruction in mammalian and non-mammalian physiology, laboratory physiology, physiological responses to the environment, endocrinology, animal biotechnology, mechanisms of hormone action, organ systems, metabolism, and pathophysiology.Examples: Veterinary Physiology (Cert.) Veterinary Physiology (MS) Veterinary Physiology (PhD) 01.8110 Veterinary Preventive Medicine, Epidemiology, and Public Health. (Moved to)A program that focuses on the study of the prevention and control of communicable animal diseases, diseases affecting humans, and prepares veterinarians to function as public health specialists. Includes instruction in animal epidemiology, biostatistics, food safety and quality assurance, food toxicology, zoonotic and infectious diseases, disease vectors and transference, production medicine, animal health, veterinary public health practice, and inspection and evaluation methods.Examples: Veterinary Preventive Medicine, Epidemiology, and Public Health (Cert.) Veterinary Preventive Medicine, Epidemiology, and Public Health (MS) Veterinary Preventive Medicine, Epidemiology, and Public Health (PhD) 01.8111 Veterinary Toxicology and Pharmacology. (Moved to)A program that focuses on the scientific study of specific environmental and food hazards affecting domestic and wild animals and the development and action of chemical antidotes and treatments. Includes instruction in small and large animal toxicology and pharmacology, neurotoxicology, pharmacodynamics, pharmacokinetics, neuropharmacology, xenobiotics, drug resistance, pesticides, toxicological pathology, genetic and molecular toxicology, environmental toxicology, drug and toxicant analysis and evaluation, and environmental radiology.Examples: Veterinary Toxicology and Pharmacology (Cert.) Veterinary Toxicology and Pharmacology (PhD) Veterinary Toxicology and Pharmacology (MS) 01.8199 Veterinary Biomedical and Clinical Sciences, Other. (Moved to)Any instructional program in veterinary biomedical and clinical sciences not listed above.Examples: Veterinary Biomedical and Clinical Sciences, Other (Cert.) Veterinary Biomedical and Clinical Sciences, Other (MS) Veterinary Biomedical and Clinical Sciences, Other (PhD) 01.82 Veterinary Administrative Services. (New)Instructional content for this group of programs is defined in codes 01.8201 - 01.8299. 01.8201 Veterinary Administrative Services, General. (New)A general program that prepares individuals to provide administrative support services in a veterinary office or animal care facility. Includes instruction in business office operations, customer service, principles of veterinary health care operations, record-keeping, veterinary terminology, and professional standards and ethics. 01.8202 Veterinary Office Management/Administration. (New)A program that prepares individuals to manage the specialized business functions of a veterinary office. Includes instruction in business office operations, business and financial record-keeping, personnel supervision, veterinary care policy administration, conference planning, scheduling and coordination, public relations, and applicable law and regulations.Examples: Veterinary Office Administration 01.8203 Veterinary Reception/Receptionist. (New)A program that prepares individuals, under the supervision of office managers, veterinary technicians, or veterinarians, to provide customer service, visitor reception, and patient intake and discharge services. Includes instruction in veterinary office and animal care facility procedures, veterinary terminology, interpersonal skills, record-keeping, customer service, telephone skills, data entry, interpersonal communications skills, and applicable policies and regulations.Examples: Veterinary Receptionist 01.8204 Veterinary Administrative/Executive Assistant and Veterinary Secretary. (New)A program that prepares individuals to perform the duties of special assistants and personal secretaries for practicing veterinarians, veterinary health care facilities and services administrators, and other veterinary professionals. Includes instruction in business and veterinary communications, veterinary terminology, principles of veterinary health care operations, public relations and interpersonal communications, software applications, record-keeping and filing systems, scheduling and meeting planning, applicable policy and regulations, and professional standards and ethics.Examples: Veterinary Secretary 01.8299 Veterinary Administrative Services, Other. (New)Any instructional program in veterinary administrative services not listed above. 01.83 Veterinary/Animal Health Technologies/Technicians. (New)Instructional content for this group of programs is defined in codes 01.8301 - 01.8399. 01.8301 Veterinary/Animal Health Technology/Technician and Veterinary Assistant. (Moved to)A program that prepares individuals, under the supervision of veterinarians, laboratory animal specialists, and zoological professionals, to provide patient management, care, and clinical procedures assistance as well as owner communication. Includes instruction in animal nursing care, animal health and nutrition, animal handling, clinical pathology, radiology, anesthesiology, dental prophylaxis, surgical assisting, clinical laboratory procedures, office administration skills, patient and owner management, and applicable standards and regulations. 01.8399 Veterinary/Animal Health Technologies/Technicians, Other. (New)Any instructional program in veterinary or animal health technologies not listed above. 01.99 Agricultural/Animal/Plant/Veterinary Science and Related Fields, Other. CIP Title or Definition ChangedInstructional content is defined in code 01.9999. 01.9999 Agricultural/Animal/Plant/Veterinary Science and Related Fields, Other. CIP Title or Definition ChangedAny instructional program in agricultural, animal, plant, or veterinary science and related fields not listed above. 03 NATURAL RESOURCES AND CONSERVATIONInstructional programs that focus on the various natural resources and conservation fields and prepare individuals for related occupations. 03.01 Natural Resources Conservation and Research.Instructional content for this group of programs is defined in codes 03.0101 - 03.0199. 03.0101 Natural Resources/Conservation, General.A general program that focuses on the studies and activities relating to the natural environment and its conservation, use, and improvement. Includes instruction in subjects such as climate, air, soil, water, land, fish and wildlife, and plant resources; in the basic principles of environmental science and natural resources management; and the recreational and economic uses of renewable and nonrenewable natural resources.See also: 26.1307 - Conservation Biology. 03.0103 Environmental Studies.A program that focuses on environment-related issues using scientific, social scientific, or humanistic approaches or a combination. Includes instruction in the basic principles of ecology and environmental science and related subjects such as policy, politics, law, economics, social aspects, planning, pollution control, natural resources, and the interactions of human beings and nature.Examples: Ecosystem StudiesSee also: 14.1401 - Environmental/Environmental Health Engineering., 30.4401 - Geography and Environmental Studies. 03.0104 Environmental Science.A program that focuses on the application of biological, chemical, and physical principles to the study of the physical environment and the solution of environmental problems, including subjects such as abating or controlling environmental pollution and degradation; the interaction between human society and the natural environment; and natural resources management. Includes instruction in biology, chemistry, physics, geosciences, climatology, statistics, and mathematical modeling.Examples: Bioenvironmental SciencesSee also: 26.1305 - Environmental Biology., 26.1307 - Conservation Biology., 14.1401 - Environmental/Environmental Health Engineering. 03.0199 Natural Resources Conservation and Research, Other.Any instructional program in natural resources conservation and research not listed above.Examples: Environmental Conservation and Reclamation 03.02 Environmental/Natural Resources Management and Policy. CIP Title or Definition ChangedInstructional content for this group of programs is defined in codes 03.0201 - 03.0299. 03.0201 Environmental/Natural Resources Management and Policy, General. CIP Title or Definition ChangedA program that prepares individuals to plan, develop, manage, and evaluate programs to protect and regulate natural habitats and renewable natural resources. Includes instruction in the principles of wildlife and conservation biology, environmental science, animal population surveying, natural resource economics, management techniques for various habitats, applicable law and policy, administrative and communications skills, and public relations.Examples: Ecosystem Management Environmental Policy and Decision Making 03.0204 Environmental/Natural Resource Economics. CIP Title or Definition ChangedA program that focuses on the application of economic concepts and methods to the analysis of issues such as air and water pollution, land use planning, waste disposal, invasive species and pest control, conservation policies, and related environmental problems. Includes instruction in cost-benefit analysis, environmental impact assessment, evaluation and assessment of alternative resource management strategies, policy evaluation and monitoring, and descriptive and analytic tools for studying how environmental developments affect the economic system.Examples: Environmental Economics and PolicySee also: 01.0103 - Agricultural Economics. 03.0205 Water, Wetlands, and Marine Resources Management.A program that prepares individuals to apply the principles of marine/aquatic biology, oceanography, natural resource economics, and natural resources management to the development, conservation, and management of freshwater and saltwater environments. Includes instruction in subjects such as wetlands, riverine, lacustrine, coastal, and oceanic water resources; water conservation and use; flood control; pollution control; water supply logistics; wastewater management; aquatic and marine ecology; aquatic and marine life conservation; and the economic and recreational uses of water resources.See also: 26.1304 - Aquatic Biology/Limnology., 40.0605 - Hydrology and Water Resources Science., 14.0805 - Water Resources Engineering. 03.0206 Land Use Planning and Management/Development.A program that focuses on how public and/or private land and associated resources can be preserved, developed, and used for maximum social, economic, and environmental benefit. Includes instruction in natural resources management, natural resource economics, public policy, regional and land use planning, environmental impact assessment, applicable law and regulations, government and politics, principles of business and real estate land use, statistical and analytical tools, computer applications, mapping and report preparation, site analysis, cost analysis, and communications skills.See also: 04.0601 - Landscape Architecture., 31.0301 - Parks, Recreation, and Leisure Facilities Management, General. 03.0207 Environmental/Natural Resource Recreation and Tourism. CIP Title or Definition ChangedA program that prepares individuals to plan, develop, and manage tourism in a natural resource setting, with an emphasis on applying environmentally sound, culturally sensitive, and economically sustainable principles. Includes instruction in environmental studies; natural resource management and interpretation; tourism planning, management, and policies; public land use management and policies; communications; marketing; and public relations.Examples: Ecotourism Resource Recreation and Tourism Nature-Based Tourism Natural Resources Interpretation Hunting and Fishing GuideSee also: 31.0301 - Parks, Recreation, and Leisure Facilities Management, General. 03.0208 Environmental/Natural Resources Law Enforcement and Protective Services. CIP Title or Definition ChangedA program that prepares individuals to enforce natural resource and environmental protection regulations and laws; and to perform emergency duties to protect human life, property and natural resources, including fire prevention and control measures, and emergency and rescue procedures. Includes instruction in natural and physical sciences, natural resource management, outdoor field skills, firearms and outdoor equipment and vehicle operation, evidence collection and environmental sampling and monitoring, natural resource legislation, environmental compliance techniques, patrol procedures, investigation and report writing, interpersonal skills and crisis intervention, community liaison, public safety, public education, and public relations. Note: this program was re-instated after being deleted from CIP 2000; previously, it was coded as 03.0203.Examples: Conservation Enforcement 03.0209 Energy and Environmental Policy. (New)A program of study that focuses on the systematic analysis of public policy issues related to climate change, energy policy, environmental economics, global sustainability, and security. Includes instruction in climate change, clean energy technologies, environmental policy, environmental law, environmental economics, food security, fossil fuels, renewable and sustainable energy sources, and water issues. 03.0210 Bioenergy. (New)A program of study that focuses on the environmental and economic impact of using plants and microbes for the production of bio-based fuels such as ethanol and biodiesel. Includes instruction in biochemical engineering, bioprocessing, bioseparations, conversion, feedstock, economics, environmental sustainability, hydrology, and natural resource management. 03.0299 Environmental/Natural Resources Management and Policy, Other. CIP Title or Definition ChangedAny instructional program in environmental or natural resources management and policy not listed above. 03.03 Fishing and Fisheries Sciences and Management.Instructional content is defined in code 03.0301. 03.0301 Fishing and Fisheries Sciences and Management.A program that focuses on the scientific study of the husbandry and production of non-domesticated fish and shellfish populations for recreational and commercial purposes and the management of fishing and marine/aquatic product processing to ensure adequate conservation and efficient utilization. Includes instruction in the principles of marine/aquatic biology, freshwater and saltwater ecosystems, water resources, fishing production operations and management, fishing policy and regulation, and the management of recreational and commercial fishing activities.See also: 26.1302 - Marine Biology and Biological Oceanography., 49.0303 - Commercial Fishing. 03.05 Forestry.Instructional content for this group of programs is defined in codes 03.0501 - 03.0599. 03.0501 Forestry, General.A program that generally prepares individuals to manage and develop forest areas for economic, recreational, and ecological purposes. Includes instruction in forest-related sciences, mapping, statistics, harvesting and production technology, natural resources management and economics, wildlife sciences, administration, and public relations.See also: 14.3401 - Forest Engineering. 03.0502 Forest Sciences and Biology.A program that focuses on the application of one or more forest-related sciences to the study of environmental factors affecting forests and the growth and management of forest resources. Includes instruction in forest biology, forest hydrology, forest mensuration, silviculture, forest soils, water resources, environmental science, forest resources management, and wood science. 03.0506 Forest Management/Forest Resources Management.A program that prepares individuals to apply principles of forestry and natural resources management to the administration of forest lands and related resources. Includes instruction in silviculture, forest mensuration, forest protection, inventorying, biometrics, geographic information systems, remote sensing, photogrammetry, forest policy and economics, forest land use planning, fire protection and management, and related administrative skills.Examples: Silviculture Sylviculture 03.0508 Urban Forestry.A program that prepares individuals to apply the principles of forestry and related sciences to the development, care, and maintenance of individual trees and forested areas within or close to areas of dense human habitation. Includes instruction in urban environments; effects of pollution on tree species; environmental design and landscaping; urban pest infestation; urban forest management; and applicable policies and regulations.Examples: Arboriculture 03.0509 Wood Science and Wood Products/Pulp and Paper Technology/Technician. CIP Title or Definition ChangedA program that focuses on the application of chemical, physical, and engineering principles to the analysis of the properties and behavior of wood and wood products and the development of processes for converting wood into paper and other products. Includes instruction in wood classification and testing, product development, manufacturing and processing technologies, and the design and development of related equipment and systems.See also: 14.4001 - Paper Science and Engineering. 03.0510 Forest Resources Production and Management.A program that focuses on the application of forestry principles to the production, harvesting, and processing of forest resources and that prepares individuals to perform associated technical and managerial functions. Includes instruction in forest production and utilization, industrial forestry, agroforestry, transplantation, timber harvesting, selection and identification of trees, processing technologies and systems, equipment operations and maintenance, and related management skills. 03.0511 Forest Technology/Technician.A program that prepares individuals to assist foresters in the management and production of forest resources. Includes instruction in woods and field skills, tree identification, timber measurement, logging and timber harvesting, forest propagation and regeneration, forest fire-fighting, resource management, equipment operation and maintenance, record-keeping, sales and purchasing operations, and personnel supervision. 03.0599 Forestry, Other.Any program in forestry not listed above. 03.06 Wildlife and Wildlands Science and Management.Instructional content is defined in code 03.0601. 03.0601 Wildlife, Fish and Wildlands Science and Management.A program that prepares individuals to conserve and manage wilderness areas and the flora, marine and aquatic life therein, and manage wildlife reservations and zoological/aquarium facilities for recreational, commercial, and ecological purposes. Includes instruction in wildlife biology, marine/aquatic biology, environmental science, freshwater and saltwater ecosystems, natural resources management and policy, outdoor recreation and parks management, the design and operation of natural and artificial wildlife habitats, applicable law and regulations, and related administrative and communications skills.See also: 26.0709 - Wildlife Biology. 03.99 Natural Resources and Conservation, Other.Instructional content is defined in code 03.9999. 03.9999 Natural Resources and Conservation, Other.Any instructional program in natural resources and conservation not listed above.Examples: Hunting and Trapping 04 ARCHITECTURE AND RELATED SERVICESInstructional programs that prepare individuals for professional practice in the various architecture-related fields and focus on the study of related aesthetic and socioeconomic aspects of the built environment. 04.02 Architecture.Instructional content for this group of programs is defined in codes 04.0200 - 04.0299. 04.0200 Pre-Architecture Studies. (New)A program of study that is a precursor to an advanced degree in architecture. Includes instruction in architectural design, architectural graphics, architectural history, architectural technology, architectural theory and criticism, building technology, calculus, design studio, human factors, environmental architecture, geometry and trigonometry, physics, and technical drawing.Examples: Pre-Architecture 04.0201 Architecture.A program that prepares individuals for the independent professional practice of architecture and to conduct research in various aspects of the field. Includes instruction in architectural design, history, and theory; building structures and environmental systems; project and site planning; construction; professional responsibilities and standards; and related cultural, social, economic, and environmental issues.Examples: Architecture (BArch, BA/BS) Architecture (MArch/MA/MS) Architecture (PhD)See also: 15.1303 - Architectural Drafting and Architectural CAD/CADD., 14.0401 - Architectural Engineering. 04.0202 Architectural Design. (New)An advanced program of study for architects and related professionals that focuses on theoretical and practical issues in architecture and integrates digital technologies into architectural design, fabrication, and construction. Includes instruction in architectural history and urban theory, 3-D digital technologies, construction, design and fabrication methods, and sustainable practices in architecture. 04.0299 Architecture, Other. (New)Any instructional program in architecture not listed above. 04.03 City/Urban, Community, and Regional Planning.Instructional content is defined in code 04.0301. 04.0301 City/Urban, Community, and Regional Planning.A program that prepares individuals to apply principles of planning, analysis, and architecture to the development and improvement of urban areas and surrounding regions, and to function as professional planners. Includes instruction in principles of architecture; master plan development; service, communications, and transportation systems design; community and commercial development; zoning; land use planning; applied economics; policy analysis; applicable laws and regulations; and professional responsibilities and managerial duties.Examples: Urban DesignSee also: 45.1201 - Urban Studies/Affairs. 04.04 Environmental Design.Instructional content for this group of programs is defined in codes 04.0401 - 04.0499. 04.0401 Environmental Design/Architecture.A program that prepares individuals to design public and private spaces, indoor and outdoor, for leisure, recreational, commercial, and living purposes, and for professional practice as environmental designers and architects. Includes instruction in the design and planning of public and private open spaces and their relationship to buildings and other aspects of the built environment; facilities management; related aspects of interior design and architecture, landscape architecture, and urban planning; and professional responsibilities and standards.See also: 19.0601 - Housing and Human Environments, General. 04.0402 Healthcare Environment Design/Architecture. (New)A program that focuses on the design and performance of healthcare environments to optimize healing. Includes instruction in interior design, architecture, healing sciences, healthcare environments, human-centered design, and healthcare delivery.See also: 30.3701 - Design for Human Health. 04.0403 Sustainable Design/Architecture. (New)A program that focuses on the application of biological, physical, and social science in the design of sustainable cities and metropolitan regions. Includes instruction in community revitalization, community economic development, construction technology, design innovation, environmental economics, ethics, justice and politics, sustainable materials, sustainability theory, structural materials, and urbanism. 04.0499 Environmental Design, Other. (New)Any instructional program in environmental design not listed above. 04.05 Interior Architecture.Instructional content is defined in code 04.0501. 04.0501 Interior Architecture.A program that prepares individuals to apply architectural principles in the design of structural interiors for living, recreational, and business purposes and to function as professional interior architects. Includes instruction in architecture, structural systems design, heating and cooling systems, occupational and safety standards, interior design, specific end-use applications, and professional responsibilities and standards.See also: 50.0408 - Interior Design. 04.06 Landscape Architecture.Instructional content is defined in code 04.0601. 04.0601 Landscape Architecture.A program that prepares individuals for the independent professional practice of landscape architecture and research in various aspects of the field. Includes instruction in geology and hydrology; soils, groundcovers, and horticultural elements; project and site planning; landscape design, history, and theory; environmental design; applicable law and regulations; and professional responsibilities and standards.Examples: Landscape Architecture (BS, BSLA, BLA) Landscape Architecture (MSLA, MLA) Landscape Architecture (PhD)See also: 01.0605 - Landscaping and Groundskeeping., 03.0206 - Land Use Planning and Management/Development. 04.08 Architectural History, Criticism, and Conservation. CIP Title or Definition ChangedInstructional content for this group of programs is defined in codes 04.0801 - 04.0899. 04.0801 Architectural History and Criticism, General.A general program that focuses on the aesthetic, technical, and social development of the built environment and the architectural profession from earliest times to the present. Includes instruction in the principles of architecture and related fields; art history; historiography of architecture; architectural theory and criticism; related aspects of the history of technology and social and economic history; and various period, cultural, and stylistic specializations. 04.0802 Architectural Conservation. (New)A program that focuses on the architectural design principles and building techniques used in historic structures and environments, and the process of saving and restoring old buildings and districts for contemporary use and enjoyment. Includes instruction in architectural history, building conservation techniques, and material conservation.See also: 30.1201 - Historic Preservation and Conservation, General. 04.0803 Architectural Studies. (New)A program that focuses on the study of architecture, cities, landscapes, designed objects, ornament, architectural photography, and material culture in diverse places and time periods, and the social and aesthetic dimensions of contemporary architecture, landscapes, and cities, emphasizing issues of sustainable environments, new forms of urbanism, and the use of digital media for visualization and analysis. Includes instruction in the fundamentals of architecture, design, environmental and sustainability studies, historic preservation, landscape architecture, studio art, and urban affairs and planning. 04.0899 Architectural History, Criticism, and Conservation, Other. (New)Any instructional program in architectural history, criticism, and conservation not listed above. 04.09 Architectural Sciences and Technology.Instructional content for this group of programs is defined in codes 04.0901 - 04.0999. 04.0901 Architectural Technology/Technician.A program that prepares individuals to assist architects in developing plans and related documentation and in performing architectural office services. Includes instruction in architectural drafting, computer-assisted drafting and design, construction methods and materials, environmental systems, building codes and standards, structural principles, cost estimation, planning documentation, visual communication skills, display production, and architectural office management.See also: 15.1303 - Architectural Drafting and Architectural CAD/CADD. 04.0902 Architectural and Building Sciences/Technology.A program that focuses on the application of advanced technology to building design and construction, retrofitting existing buildings, and efficient operation of buildings, including lighting and daylight design, acoustics, solar design, building conservation, and energy-conscious design. Includes instruction in architecture, building technology, civil and structural engineering, mechanical engineering, environmental control systems, sustainability, and computer tools and applications.Examples: Architectural and Building Sciences/Technology (BArch, BA/BS) Architectural and Building Sciences/Technology (MArch/MA/MS) Architectural and Building Sciences/Technology (PhD) 04.0999 Architectural Sciences and Technology, Other.Any instructional program in architectural sciences and technology not listed above. 04.10 Real Estate Development.Instructional content is defined in code 04.1001. 04.1001 Real Estate Development.A program that prepares individuals to create and redevelop housing, offices, retail centers, and industrial sites. Includes instruction in architectural design and construction, historic preservation, landscape architecture, urban planning and design, business, real estate and land use law, public policy, and engineering.See also: 52.1501 - Real Estate. 04.99 Architecture and Related Services, Other.Instructional content is defined in code 04.9999. 04.9999 Architecture and Related Services, Other.Any instructional program in architecture and related programs not listed above. 05 AREA, ETHNIC, CULTURAL, GENDER, AND GROUP STUDIESInstructional programs that focus on the defined areas, regions, and countries of the world; defined minority groups within and across societies; and issues relevant to collective gender and group experience. 05.01 Area Studies.Instructional content for this group of programs is defined in codes 05.0101 - 05.0199. 05.0101 African Studies.A program that focuses on the history, society, politics, culture, and economics of one or more of the peoples of the African Continent, usually with an emphasis on Africa south of the Sahara, and including the African diasporas overseas.See also: 05.0201 - African-American/Black Studies. 05.0102 American/United States Studies/Civilization.A program that focuses on the history, society, politics, culture, and economics of the United States and its Pre-Columbian and colonial predecessors, and including the flow of immigrants from other societies. 05.0103 Asian Studies/Civilization.A program that focuses on the history, society, politics, culture, and economics of one or more of the peoples of the Asian Continent, including the study of the Asian diasporas overseas.See also: 05.0206 - Asian-American Studies. 05.0104 East Asian Studies.A program that focuses on the history, society, politics, culture, and economics of one or more of the peoples of East Asia, defined as including China, Korea, Japan, Mongolia, Taiwan, Tibet, related borderlands and island groups, and including the study of the East Asian diasporas overseas. 05.0105 Russian, Central European, East European and Eurasian Studies.A program that focuses on the history, society, politics, culture, and economics of the region encompassing Russia, Central Europe, Eastern Europe, and Eurasia, including the Balkan, Baltic, Caucasus, and Central Asian states that were republics of the former Soviet Union.Examples: Russian and East European Studies Central and Eastern European Studies CIS StudiesSee also: 05.0110 - Russian Studies. 05.0106 European Studies/Civilization.A program that focuses on the history, society, politics, culture, and economics of one or more of the peoples of the European Continent, including the study of European migration patterns and colonial empires. 05.0107 Latin American Studies.A program that focuses on the history, society, politics, culture, and economics of one or more of the Hispanic peoples of the North and South American Continents outside Canada and the United States, including the study of the Pre-Columbian period and the flow of immigrants from other societies.See also: 05.0203 - Hispanic-American, Puerto Rican, and Mexican-American/Chicano Studies. 05.0108 Near and Middle Eastern Studies.A program that focuses on the history, society, politics, culture, and economics of one or more of the peoples of North Africa, Southwestern Asia, Asia Minor, and the Arabian Peninsula, related borderlands and island groups, and including emigrant and immigrant groups.Examples: Modern Middle Eastern StudiesSee also: 30.2202 - Classical, Ancient Mediterranean, and Near Eastern Studies and Archaeology. 05.0109 Pacific Area/Pacific Rim Studies.A program that focuses on the history, society, politics, culture, and economics of one or more of the peoples of Australasia and the Pacific Ocean, related island groups and bordering coastal regions, and including pre- and post-colonial migration patterns. 05.0110 Russian Studies.A program that focuses on the history, society, politics, culture, and economics of one or more of the peoples of the Russian Federation and its Soviet, Czarist, and medieval predecessors and related borderlands.See also: 05.0105 - Russian, Central European, East European and Eurasian Studies. 05.0111 Scandinavian Studies. CIP Title or Definition ChangedA program that focuses on the history, society, politics, culture, and economics of one or more of the peoples of Scandinavia, defined as Northern Europe including Denmark, Finland, Iceland, Norway, Sweden, and related island groups (e.g., Greenland) and borderlands. 05.0112 South Asian Studies.A program that focuses on the history, society, politics, culture, and economics of one or more of the peoples of South Asia, defined as including Afghanistan, India, the Maldives, Myanmar (Burma), Pakistan, and Sri Lanka and related borderlands and island groups; and including the study of migration patterns and overseas diasporas.Examples: Indian/South Asian Studies 05.0113 Southeast Asian Studies.A program that focuses on the history, society, politics, culture, and economics of one or more of the peoples of Southeast Asia, defined as including Brunei, Cambodia, Indonesia, Laos, Malaysia, The Philippines, Singapore, Thailand, and Viet Nam; related borderlands and island groups; and including the study of migration patterns and overseas diasporas. 05.0114 Western European Studies.A program that focuses on the history, society, politics, culture, and economics of one or more of the peoples of historical Western Europe, defined as including Britain, Ireland, France, the Low Countries, the Iberian Peninsula, Italy, the Western Mediterranean, and related island groups and borderlands. 05.0115 Canadian Studies.A program that focuses on the history, society, politics, culture, and economics of one or more of the peoples of Canada and its Pre-Columbian, colonial, and pre-federation predecessors, including immigrant flows and related borderlands and island groups. 05.0116 Balkans Studies.A program that focuses on the history, society, politics, culture, and economics of one or more of the peoples inhabiting the Balkan Peninsula and associated island groups and borderlands, Southern Slavic and non-Slavic, during the medieval, Ottoman, and modern periods. 05.0117 Baltic Studies.A program that focuses on the history, society, politics, culture, and economics of one or more of the peoples inhabiting the coastlands of the Baltic Sea, including Baltic, Germanic, Scandinavian, and Slavic populations, related borderlands and island groups, and problems of cultural survival and assimilation. 05.0118 Slavic Studies.A program that focuses on the history, society, politics, culture, and economics of one or more of the Slavic peoples inhabiting Europe, Asia, and in immigrant groups elsewhere, including the study of the emergence and migration patterns of Slavic culture, languages, and populations. 05.0119 Caribbean Studies.A program that focuses on the history, society, politics, culture, and economics of one or more of the peoples inhabiting the major islands and archipelagoes of the Caribbean Sea and related coastal borderlands, including immigration patterns and Pre-Columbian, colonial, and modern societies. 05.0120 Ural-Altaic and Central Asian Studies.A program that focuses on the history, society, politics, culture, and economics of one or more of the peoples and countries of Inner/Central Asia, including the Turkic and Mongolian inhabitants of the Caspian, Amur, Tien Shan, Baikal, Gobi, Siberian, and Manchurian areas and the historical Silk Road, in terms of their past and present development. 05.0121 Commonwealth Studies.A program that focuses on the history, society, politics, culture, and economics of one or more of the peoples and countries comprising components of the historical British Empire and modern British Commonwealth, including migration patterns, shared sociocultural and political features and problems, and contemporary relations. 05.0122 Regional Studies (U.S., Canadian, Foreign). CIP Title or Definition ChangedA program that focuses on the defined geographic subregions and subcultures within modern and historical countries and societies. Includes such topics as Acadian Studies, French Canadian and Quebec Studies, Southern (U.S.) Studies, New England Studies, Southwestern Studies, Northern Studies, and others. 05.0123 Chinese Studies.A program that focuses on the history, society, politics, culture, and economics of one or more of the peoples of present-day China and its historical predecessors, related borderlands and island groups, and the overseas Chinese diaspora. 05.0124 French Studies.A program that focuses on the history, society, politics, culture, and economics of France, other Francophone countries inside and outside Europe, and the French colonial experience and the associated French minorities around the world. 05.0125 German Studies.A program that focuses on the history, society, politics, culture, and economics of Germany, the neighboring countries of Austria and Switzerland, the German minorities in neighboring European countries, and the historical areas of German influence across Europe and overseas. 05.0126 Italian Studies.A program that focuses on the history, society, politics, culture, and economics of modern Italy and its predecessors on the Italian Peninsula, including the overseas migrations of Italian peoples. 05.0127 Japanese Studies.A program that focuses on the history, society, politics, culture, and economics of the peoples of Japan, and related island groups and coastal neighbors. 05.0128 Korean Studies.A program that focuses on the history, society, politics, culture, and economics of the peoples of Korea, including related island groups and borderlands. 05.0129 Polish Studies.A program that focuses on the history, society, politics, culture, and economics of Poland and the current and historical inhabitants of the Polish lands, including borderlands, from earliest times to the present. 05.0130 Spanish and Iberian Studies.A program that focuses on the history, society, politics, culture, and economics of the peoples of the Iberian Peninsula and related island groups and border regions from earliest times to the present, with particular emphasis on the development of Spain and Portugal but including other historical and current cultures. 05.0131 Tibetan Studies.A program that focuses on the history, society, politics, culture, and economics of Tibet and its borderlands, with emphasis on both pre-modern and modern Tibet and associated religious and exile movements. 05.0132 Ukraine Studies.A program that focuses on the history, society, politics, culture, and economics of the Ukraine and its inhabitants, and related border regions, from earliest times to the present. 05.0133 Irish Studies.A program that focuses on the history, society, politics, culture, and economics of Ireland and the Irish Diaspora, from the early Christian period to the present. 05.0134 Latin American and Caribbean Studies.An integrated program that focuses on the history, society, politics, culture, and economics of the peoples and countries of the Latin American and Caribbean region.See also: 05.0107 - Latin American Studies., 05.0119 - Caribbean Studies. 05.0135 Appalachian Studies. (New)A program of study that focuses on the history, sociology, culture, and economics of the Appalachian region of the United States. Includes instruction in contemporary issues in Appalachia, political economy of Appalachia, community-based research, ethnomusicology, and oral and written languages of Appalachia. 05.0136 Arctic Studies. (New)A program that focuses on the history, society, politics, culture, and economics of the Arctic region. 05.0199 Area Studies, Other.Any instructional program in specifically defined area studies not listed above. 05.02 Ethnic, Cultural Minority, Gender, and Group Studies.Instructional content for this group of programs is defined in codes 05.0200 - 05.0299. 05.0200 Ethnic Studies.A program that focuses on the interdisciplinary and comparative study of the history, sociology, politics, culture, and economics of North American racial and ethnic groups, including African Americans, American Indians/Native Americans, Hispanic Americans, and Asian Americans.See also: 30.2301 - Intercultural/Multicultural and Diversity Studies., 30.3601 - Cultural Studies and Comparative Literature. 05.0201 African-American/Black Studies.A program that focuses on the history, sociology, politics, culture, and economics of the North American peoples descended from the African diaspora; focusing on the United States, Canada, and the Caribbean, but also including reference to Latin American elements of the diaspora.See also: 05.0101 - African Studies. 05.0202 American Indian/Native American Studies.A program that focuses on the history, sociology, politics, culture, and economics of one or more of the American Indian, Aleut, Inuit, Hawaiian and other native peoples of the Americas from earliest times until the present, with particular emphasis on U.S. and Canadian populations and their problems but including reference to Caribbean and Latin American native peoples. 05.0203 Hispanic-American, Puerto Rican, and Mexican-American/Chicano Studies.A program that focuses on the history, sociology, politics, culture, and economics of one or more of the Hispanic American immigrant populations within the U.S. and Canada, including Mexican-American Studies, Cuban American Studies, Puerto Rican Studies, and others.See also: 05.0107 - Latin American Studies. 05.0206 Asian-American Studies.A program that focuses on the history, sociology, politics, culture, and economics of Asian population groups who have immigrated to the United States and Canada, or sought refugee asylum, from the colonial period to the present, and including Chinese-Americans, Japanese-Americans, Korean-Americans, Vietnamese-Americans, Cambodian-Americans, and others.See also: 05.0103 - Asian Studies/Civilization. 05.0207 Women’s Studies.A program that focuses on the history, sociology, politics, culture, and economics of women, and the development of modern feminism in relation to the roles played by women in different periods and locations in North America and the world. Programs may focus on literature, philosophy, and the arts as much as on social studies and policy.Examples: Women’s and Gender Studies 05.0208 Gay/Lesbian Studies.A program that focuses on homosexuality in history, society, politics, and cultural life; usually with an emphasis on the modern emergence of gays and lesbians as a sociocultural minority movement, the identification of social, literary, and artistic themes and the definition of, and public policy and legal issues surrounding, the gay and lesbian community. 05.0209 Folklore Studies.A program that focuses on the study of creativity and aesthetic expression in everyday life, as expressed in narrative, literature, performing arts, culture, work, family and community.Examples: Folklore Studies Folklore and Mythology Folklore and Folklife 05.0210 Disability Studies.A program that focuses on the nature, meaning, and consequences of what it is to be defined as disabled and explores the historical, cultural, economic, physiological, and socio-political dynamics of disability. Includes instruction in disability rights, legal issues, and public policy; literature, philosophy, and the arts; and/or research in the social sciences, education, and health sciences addressing social and experiential aspects of disability. 05.0211 Deaf Studies.A program that focuses on the sociological, historical and linguistic aspects of the deaf and hearing impaired, and that prepares individuals to work with the deaf and hearing impaired. Includes instruction in American Sign Language, deaf studies, American deaf culture, structure of American Sign Language, history of the American deaf community, and civil rights of deaf people.Examples: Deaf Studies American Sign Language (ASL) and Deaf StudiesSee also: 16.1601 - American Sign Language (ASL). 05.0212 Comparative Group Studies. (New)A program that focuses on the comparative study of the history, literature, sociology, politics, culture, and economics of different groups such as racial, gender, sexual, class, ethnic, geographical, and national. Includes instruction in comparative studies, comparative literature, critical race theory, cultural anthropology, cultural studies, religious studies, science studies, social and cultural theory, urban studies, and visual culture.See also: 30.2601 - Cultural Studies/Critical Theory and Analysis. 05.0299 Ethnic, Cultural Minority, Gender, and Group Studies, Other.Any instructional program in ethnic, cultural minority, gender, and group studies not listed above.Examples: Women’s, Gay and Lesbian Studies, Integrated 05.99 Area, Ethnic, Cultural, Gender, and Group Studies, Other. (New)Instructional content is defined in code 05.9999. 05.9999 Area, Ethnic, Cultural, Gender, and Group Studies, Other. (New)Any instructional program in area, ethnic, cultural, gender, or group studies not listed above. 09 COMMUNICATION, JOURNALISM, AND RELATED PROGRAMSInstructional programs that focus on how messages in various media are produced, used, and interpreted within and across different contexts, channels, and cultures, and that prepare individuals to apply communication knowledge and skills professionally. 09.01 Communication and Media Studies.Instructional content for this group of programs is defined in codes 09.0100 - 09.0199. 09.0100 Communication, General.A program that focuses on the comprehensive study of communication, and that spans the study of mass communication/media studies, old and new media technologies, social and political applications, and speech communication and rhetoric. Includes instruction in interpersonal, group, organizational, and intercultural communication; theories of communication; critical thinking, argumentation, and persuasion; written communication; printed, electronic, and digital media; rhetorical tradition and criticism; media, society, and culture; consequences and effects of mass media; media social science and criticism; and quantitative and qualitative methods of inquiry.Examples: Communication Sciences Communication 09.0101 Speech Communication and Rhetoric.A program that focuses on the scientific, humanistic, and critical study of human communication in a variety of formats, media, and contexts. Includes instruction in the theory and practice of interpersonal, group, organizational, professional, and intercultural communication; speaking and listening; verbal and nonverbal interaction; rhetorical theory and criticism; performance studies; argumentation and persuasion; technologically mediated communication; popular culture; and various contextual applications.See also: 23.1304 - Rhetoric and Composition. 09.0102 Mass Communication/Media Studies.A program that focuses on the analysis and criticism of media institutions and media texts, how people experience and understand media content, and the roles of media in producing and transforming culture. Includes instruction in communications regulation, law, and policy; media history; media aesthetics, interpretation, and criticism; the social and cultural effects of mass media; cultural studies; the economics of media industries; visual and media literacy; and the psychology and behavioral aspects of media messages, interpretation, and utilization.Examples: Media Studies 09.0199 Communication and Media Studies, Other.Any instructional program in communication and media studies not listed above. 09.04 Journalism.Instructional content for this group of programs is defined in codes 09.0401 - 09.0499. 09.0401 Journalism.A program that focuses on the theory and practice of gathering, processing, and delivering news and that prepares individuals to be professional print journalists, news editors, and news managers. Includes instruction in news writing and editing; reporting; photojournalism; layout and graphic design; journalism law and policy; professional standards and ethics; research methods; and journalism history and criticism. 09.0402 Broadcast Journalism.A program that focuses on the methods and techniques for reporting, producing, and delivering news and news programs via radio, television, and video/film media; and that prepares individuals to be professional broadcast journalists, editors, producers, directors, and managers. Includes instruction in the principles of broadcast technology; broadcast reporting; on- and off-camera and microphone procedures and techniques; program, sound, and video/film editing; program design and production; media law and policy; and professional standards and ethics. 09.0404 Photojournalism.A program that focuses on the use of still and motion photography in journalism and prepares individuals to function as news photographers and photographic editors. Includes instruction in photography, journalism, studio procedures and techniques, camera and equipment operation and technique, news editing, print and film editing, news scene composition, subject surveillance, media law and policy, news team field operations, and professional standards and ethics.See also: 50.0605 - Photography. 09.0405 Business and Economic Journalism. (New)A program of study that prepares students to gather, analyze, and synthesize verbal and visual information to communicate stories related to business and economics across multiple media platforms. Includes instruction in accounting, business, business and economic reporting, business law, economics, finance, financial accounting and reporting, ethics, journalistic research methods and resources, and journalism skills and techniques. 09.0406 Cultural Journalism. (New)A program of study that prepares individuals to be journalists who critically examine current culture as expressed through the visual and performing arts, design, film, music, radio, television, dance, theater, and written text. Includes instruction in arts criticism, art and entertainment reporting, cultural critique, investigative reporting, newspaper reporting, photojournalism, and writing. 09.0407 Science/Health/Environmental Journalism. (New)A program that focuses on reporting on science, health, or environmental policy issues; investigating environmental problems and their causes; and public relations. Includes instruction in communication law, health reporting skills, interactive journalism, integrated marketing communication, journalism methods, media ethics, persuasion and political communication, science, health and the environment, social marketing, and video journalism.See also: 01.0802 - Agricultural Communication/Journalism. 09.0499 Journalism, Other.Any instructional program in journalism not listed above.Examples: Online Journalism 09.07 Radio, Television, and Digital Communication.Instructional content for this group of programs is defined in codes 09.0701 - 09.0799. 09.0701 Radio and Television.A program that focuses on the theories, methods, and techniques used to plan, produce, and distribute audio and video programs and messages, and that prepares individuals to function as staff, producers, directors, and managers of radio and television shows and media organizations. Includes instruction in media aesthetics; planning, scheduling, and production; writing and editing; performing and directing; personnel and facilities management; marketing and distribution; media regulations, law, and policy; and principles of broadcast technology.Examples: Radio, Television, and Film 09.0702 Digital Communication and Media/Multimedia.A program that focuses on the development, use, critical evaluation, and regulation of new electronic communication technologies using computer applications; and that prepares individuals to function as developers and managers of digital communications media. Includes instruction in computer and telecommunications technologies and processes; design and development of digital communications; marketing and distribution; digital communications regulation, law, and policy; the study of human interaction with, and use of, digital media; and emerging trends and issues.Examples: Digital MediaSee also: 50.0102 - Digital Arts. 09.0799 Radio, Television, and Digital Communication, Other.Any instructional program in radio, television, and digital communications not listed above. 09.09 Public Relations, Advertising, and Applied Communication.Instructional content for this group of programs is defined in codes 09.0900 - 09.0999. 09.0900 Public Relations, Advertising, and Applied Communication.A general program that focuses on organizational communication, public relations, and advertising; and that prepares individuals to function in a wide range of public and private sector positions requiring the skills of persuasive communication. Includes instruction in communications, public relations, and advertising theory; principles and techniques of persuasion; message/image design; marketing strategy; professional writing; public speaking and multi-media presentation skills; digital communications; and applied research.Examples: Public Relations and Advertising Applied CommunicationSee also: 09.0903 - Advertising., 09.0902 - Public Relations/Image Management. 09.0901 Organizational Communication, General.A program that focuses on general communication processes and dynamics within organizations. Includes instruction in the development and maintenance of interpersonal group relations within organizations; decision-making and conflict management; the use of symbols to create and maintain organizational images, missions, and values; power and politics within organizations; human interaction with computer technology; and how communications socializes and supports employees and team members.See also: 52.1003 - Organizational Behavior Studies. 09.0902 Public Relations/Image Management.A program that focuses on the theories and methods for managing the media image of a business, organization, or individual and the communication process with stakeholders, constituencies, audiences, and the general public; and that prepares individuals to function as public relations assistants, technicians, and managers. Includes instruction in public relations theory; related principles of advertising, marketing, and journalism; message/image design; image management; special event management; media relations; community relations; public affairs; and internal communications.Examples: Social Media ManagementSee also: 09.0900 - Public Relations, Advertising, and Applied Communication. 09.0903 Advertising.A program that focuses on the creation, execution, transmission, and evaluation of commercial messages in various media intended to promote and sell products, services, and brands; and that prepares individuals to function as advertising assistants, technicians, and managers. Includes instruction in advertising theory, marketing strategy, advertising design and production methods, campaign methods and techniques, media management, related principles of business management, and applicable technical and equipment skills.See also: 50.0402 - Commercial and Advertising Art., 09.0900 - Public Relations, Advertising, and Applied Communication. 09.0904 Political Communication.A program that focuses on human and media communication in the political process and that prepares individuals to function as members of political and public affairs organizations, political campaign staffs, and related government and media entities. Includes instruction in media effects, political speaking and debating, political advertising and marketing, image management, political journalism, opinion polling, and aspects of print and broadcast media related to the production and distribution of media messages in political settings. 09.0905 Health Communication.A program that focuses on how people, individually and collectively, understand and accommodate to health and illness and the role of communication and media in shaping professional health care messages and public acceptance of these messages. Includes instruction in the development and use of health-related and care-related messages and media; the goals and strategies of health care promotion; relationships, roles, situations, and social structures in the context of health maintenance and promotion; and applications to disease prevention, health advocacy, and communications concerning treatments.Examples: Health and Health Science Communication 09.0906 Sports Communication.A program that focuses on the methods and techniques for communicating about sports in a variety of formats, media, and contexts; and that prepares individuals to be sports reporters and writers, photojournalists, radio and television announcers, producers and directors, recreational sports promoters, and public relations specialists. Includes instruction in sports writing, photography, broadcast journalism, sports production, game rules, media and public relations, and sports promotion.See also: 31.0504 - Sport and Fitness Administration/Management., 31.0508 - Sports Studies. 09.0907 International and Intercultural Communication.A program that focuses on the specialized knowledge and skills needed for effective communication in the international community and among people of different cultures; and that prepares individuals to function at the national and international levels as journalists, public relations specialists, travel industry representatives, intercultural trainers, and/or foreign service officers. Includes instruction in journalism, communications, intercultural and international relations, marketing and public relations, and global communications policy.See also: 30.2301 - Intercultural/Multicultural and Diversity Studies. 09.0908 Technical and Scientific Communication.A program that focuses on the communication of technical and scientific knowledge to a variety of audiences through print, video, and digital media; and that prepares individuals to function as technical writers and editors, documentation developers, web designers, and usability specialists. Includes instruction in scientific and technical writing and editing, graphic and information design, web design, audience analysis, document usability and field testing, publications management, and applications to specific technical fields.Examples: Technical Communication Scientific CommunicationSee also: 23.1303 - Professional, Technical, Business, and Scientific Writing. 09.0909 Communication Management and Strategic Communications. (New)A program that focuses on the critical thinking, analysis, and practical skills essential to developing and implementing communication strategies that advance organizations goals and missions. Includes instruction in communication management, crisis communication, communications law, digital and traditional marketing strategies, media relations, social media strategies, strategic communication, traditional and emerging media, and writing for the media. 09.0999 Public Relations, Advertising, and Applied Communication, Other.Any instructional program in organizational communication, public relations, and advertising not listed above. 09.10 Publishing.Instructional content is defined in code 09.1001. 09.1001 Publishing.A program that focuses on the process of managing the creation, publication, and distribution of print and electronic books and other text products and prepares individuals to manage the editorial, technical, and business aspects of publishing operations. Includes instruction in product planning and design, editing, author relations, business and copyright law, publishing industry operations, contracting and purchasing, product marketing, electronic publishing and commerce, history of publishing, and professional standards and ethics. 09.99 Communication, Journalism, and Related Programs, Other.Instructional content is defined in code 09.9999. 09.9999 Communication, Journalism, and Related Programs, Other.Any instructional program in communication, journalism, and related fields not listed above. 10 COMMUNICATIONS TECHNOLOGIES/TECHNICIANS AND SUPPORT SERVICESInstructional programs that prepare individuals to function as equipment operators, support technicians, and operations managers in the film/video, recording, and graphic communications industries. 10.01 Communications Technologies/Technicians. CIP Title or Definition ChangedInstructional content is defined in code 10.0105. 10.0105 Communications Technology/Technician.A program that generally prepares individuals to function as workers and managers within communications industries. Includes instruction in business economics; basic management; principles of interpersonal and mediated communications; radio, television, and digital media production; and related aspects of technology and communications systems. 10.02 Audiovisual Communications Technologies/Technicians. CIP Title or Definition ChangedInstructional content for this group of programs is defined in codes 10.0201 - 10.0299. 10.0201 Photographic and Film/Video Technology/Technician. CIP Title or Definition ChangedA program that prepares individuals to apply technical knowledge and skills to the operation and maintenance of camera and lighting equipment and the production of finished still, video, and film products under the supervision of photographers, directors, and editors. Includes instruction in equipment setup and maintenance; lighting; power supplies; studio and film set tasks such as camera operator, grip, and best boy; plate and negative handling and development; laboratory procedures; and digital software applications.Examples: Photographic and Film/Video Assistant 10.0202 Radio and Television Broadcasting Technology/Technician. CIP Title or Definition ChangedA program that prepares individuals to apply technical knowledge and skills to the production of radio and television programs, and related operations, under the supervision of broadcast and studio managers, directors, editors, and producers. Includes instruction in sound, lighting, and camera operation and maintenance; power and feed control; studio operations; production preparation; broadcast engineering; related computer applications; and specialized applications such as news, entertainment, live talk, sports, commercials, and taping. 10.0203 Recording Arts Technology/Technician. CIP Title or Definition ChangedA program that prepares individuals to apply technical knowledge and skills to the production of sound recordings as finished products or as components of film/video, broadcast, live, or mixed media productions. Includes instruction in sound equipment operation and maintenance; music, dialogue, and sound effects recording; soundtrack editing; dubbing and mixing; sound engineering; tape, disk, and CD production; digital recording and transmission; amplification and modulation; and working with producers, editors, directors, artists, and production managers.See also: 50.0913 - Music Technology., 50.0917 - Sound Arts. 10.0204 Voice Writing Technology/Technician. (New)A program that prepares individuals to apply technical knowledge and skills to use voice writing computer software and speak a verbal shorthand language to create transcripts and screen captioning of live or recorded events intended for the public or a specific audience in a variety of media (e.g., digital, film, print, television) as well as for conferences, conversations, interviews, and meetings. Includes instruction in screen captioning, speed building, spoken shorthand, transcription, and voice input writing.See also: 22.0303 - Court Reporting and Captioning/Court Reporter., 51.0708 - Medical Transcription/Transcriptionist. 10.0299 Audiovisual Communications Technologies/Technicians, Other. CIP Title or Definition ChangedAny instructional program in audiovisual communications technologies not listed above.Examples: Broadcast Captioning 10.03 Graphic Communications.Instructional content for this group of programs is defined in codes 10.0301 - 10.0399. 10.0301 Graphic Communications, General.A program that generally prepares individuals to apply technical knowledge and skills in the manufacture and distribution or transmission of graphic communications products. Includes instruction in the prepress, press, and postpress phases of production operations and processes such as offset lithography, flexography, gravure, letterpress, screen printing, foil stamping, digital imaging, and other reproduction methods.See also: 50.0409 - Graphic Design., 50.0402 - Commercial and Advertising Art. 10.0302 Printing Management.A program that prepares individuals to apply technical and managerial knowledge and skills to the processes and procedures of managing printing operations from initial design through finished product distribution. Includes instruction in the principles of graphic communications design and production; quality control; printing operations management; computerization; printing plant management; business finance and marketing; logistics and distribution; personnel supervision and leadership; and professional standards in the graphic communications industry. 10.0303 Prepress/Desktop Publishing and Digital Imaging Design.A program that prepares individuals to apply technical knowledge and skills to the layout, design and typographic arrangement of printed and/or electronic graphic and textual products. Includes instruction in printing and lithographic equipment and operations, computer hardware and software, digital imaging, print preparation, page layout and design, desktop publishing, and applicable principles of graphic design and web page design. 10.0304 Animation, Interactive Technology, Video Graphics, and Special Effects.A program that prepares individuals to use computer applications and related visual and sound imaging techniques to manipulate images and information originating as film, video, still photographs, digital copy, soundtracks, and physical objects in order to communicate messages simulating real-world content. Includes instruction in specialized camerawork and equipment operation and maintenance, image capture, computer programming, dubbing, CAD applications, and applications to specific commercial, industrial, and entertainment needs. 10.0305 Graphic and Printing Equipment Operator, General Production.A program that generally prepares individuals to apply technical knowledge and skills to plan, prepare, and execute a variety of commercial and industrial graphic communications jobs. Includes instruction in the operation and maintenance of mechanical, electronic, and digital graphic, printing, and finishing equipment; and related processes. 10.0306 Platemaker/Imager.A program that prepares individuals to apply technical knowledge and skills to prepare film, digital data, and surfaces to reproduce printed or graphic images. Includes instruction in platemaking, stripping, camerawork, imposition, digital imaging, computer direct-to-plate and direct-to-press, and related processes. 10.0307 Printing Press Operator.A program that prepares individuals to apply technical knowledge and skills to set up, operate, and maintain printing presses. 10.0308 Computer Typography and Composition Equipment Operator.A program that prepares individuals to apply technical knowledge and skills to design and execute page formats, layouts and text composition, and to make typographical selections using computer graphics and other computer-assisted design programs. 10.0399 Graphic Communications, Other.Any instructional program in graphic communications not listed above. 10.99 Communications Technologies/Technicians and Support Services, Other.Instructional content is defined in code 10.9999. 10.9999 Communications Technologies/Technicians and Support Services, Other.Any instructional program in communications technologies and support services not listed above. 11 COMPUTER AND INFORMATION SCIENCES AND SUPPORT SERVICESInstructional programs that focus on the computer and information sciences and prepare individuals for various occupations in information technology and computer operations fields. 11.01 Computer and Information Sciences, General.Instructional content for this group of programs is defined in codes 11.0101 - 11.0199. 11.0101 Computer and Information Sciences, General.A general program that focuses on computing, computer science, and information science and systems. Such programs are undifferentiated as to title and content and are not to be confused with specific programs in computer science, information science, or related support services. 11.0102 Artificial Intelligence.A program that focuses on the symbolic inference, representation, and simulation by computers and software of human learning and reasoning processes and capabilities, and the computer modeling of human motor control and motion. Includes instruction in computing theory, cybernetics, human factors, natural language processing, and applicable aspects of engineering, technology, and specific end-use applications.See also: 14.4201 - Mechatronics, Robotics, and Automation Engineering. 11.0103 Information Technology.A program that focuses on the design of technological information systems, including computing systems, as solutions to business and research data and communications support needs. Includes instruction in the principles of computer hardware and software components, algorithms, databases, telecommunications, user tactics, application testing, and human interface design. 11.0104 Informatics.A program that focuses on computer systems from a user-centered perspective and studies the structure, behavior and interactions of natural and artificial systems that store, process and communicate information. Includes instruction in information sciences, human computer interaction, information system analysis and design, telecommunications structure and information architecture and management.Examples: Social InformaticsSee also: 26.1103 - Bioinformatics., 51.2706 - Medical Informatics. 11.0105 Human-Centered Technology Design. (New)A program that focuses on incorporating a human perspective into designing, researching, and creating technological interfaces. Includes instruction in design, human-computer interaction, learning, neuroscience, perception, product design, user-centered design, and usability.See also: 30.3101 - Human Computer Interaction. 11.0199 Computer and Information Sciences, Other.Any instructional program in computer science not listed above. 11.02 Computer Programming.Instructional content for this group of programs is defined in codes 11.0201 - 11.0299. 11.0201 Computer Programming/Programmer, General.A program that focuses on the general writing and implementation of generic and customized programs to drive operating systems and that generally prepares individuals to apply the methods and procedures of software design and programming to software installation and maintenance. Includes instruction in software design, low- and high-level languages and program writing; program customization and linking; prototype testing; troubleshooting; and related aspects of operating systems and networks. 11.0202 Computer Programming, Specific Applications.A program that prepares individuals to apply the knowledge and skills of general computer programming to the solution of specific operational problems and customization requirements presented by individual software users and organizational users. Includes training in specific types of software and its installation and maintenance. 11.0203 Computer Programming, Vendor/Product Certification.A program that prepares individuals to fulfill the requirements set by vendors for professional qualification as certified installation, customization, and maintenance engineers for specific software products and/or processes. Includes training in specific vendor-supported software products and their installation and maintenance. 11.0204 Computer Game Programming. (New)A program that prepares individuals to apply the knowledge and skills of design and computer programming to the development of computer games. Includes training in character and story development, computer programming, computer graphics, game design, game physics, human-computer interaction, human-centered design, and usability.See also: 50.0411 - Game and Interactive Media Design. 11.0205 Computer Programming, Specific Platforms. (New)A program that prepares individuals to design, develop, and implement software-based solutions for specific business and consumer platforms including industrial, game, mobile, tactile, and web platforms. Includes instruction in computer programming, computer hardware, data structures, database theory, maintenance, operating systems, project management, software development, and systems analysis. 11.0299 Computer Programming, Other.Any instructional program in computer programming not listed above. 11.03 Data Processing.Instructional content is defined in code 11.0301. 11.0301 Data Processing and Data Processing Technology/Technician.A program that prepares individuals to master and use computer software programs and applications for inputting, verifying, organizing, storing, retrieving, transforming (changing, updating, and deleting), and extracting information. Includes instruction in using various operating system configurations and in types of data entry such as word processing, spreadsheets, calculators, management programs, design programs, database programs, and research programs. 11.04 Information Science/Studies.Instructional content is defined in code 11.0401. 11.0401 Information Science/Studies.A program that focuses on the theory, organization, and process of information collection, transmission, and utilization in traditional and electronic forms. Includes instruction in information classification and organization; information storage and processing; transmission, transfer, and signaling; communications and networking; systems planning and design; human interfacing and use analysis; database development; information policy analysis; and related aspects of hardware, software, economics, social factors, and capacity.See also: 25.0101 - Library and Information Science., 52.1201 - Management Information Systems, General. 11.05 Computer Systems Analysis.Instructional content is defined in code 11.0501. 11.0501 Computer Systems Analysis/Analyst.A program that prepares individuals to apply programming and systems analysis principles to the selection, implementation, and troubleshooting of customized computer and software installations across the life cycle. Includes instruction in computer hardware and software; compilation, composition, execution, and operating systems; low- and high-level languages and language programming; programming and debugging techniques; installation and maintenance testing and documentation; process and data flow analysis; user needs analysis and documentation; cost-benefit analysis; and specification design.See also: 14.2701 - Systems Engineering. 11.06 Data Entry/Microcomputer Applications.Instructional content for this group of programs is defined in codes 11.0601 - 11.0699. 11.0601 Data Entry/Microcomputer Applications, General.A program that generally prepares individuals to perform basic data and text entry using standard and customized software products. Includes instruction in keyboarding skills, personal computer and work station operation, reading draft texts and raw data forms, audio and tape dictation, and various interactive software programs used for tasks such as word processing, spreadsheets, databases, and others. 11.0602 Word Processing.A program that prepares individuals to perform text typing, table construction, and document formatting tasks on personal computers at a high rate of accuracy and proficiency. Includes instruction in keyboarding skills, word processor operation, textual draft interpretation, audio and tape dictation, and specific word processing program software. 11.0699 Data Entry/Microcomputer Applications, Other.Any instructional program in data entry/microcomputer applications not listed above. 11.07 Computer Science.Instructional content is defined in code 11.0701. 11.0701 Computer Science.A program that focuses on computer theory, computing problems and solutions, and the design of computer systems and user interfaces from a scientific perspective. Includes instruction in the principles of computational science, computer development and programming, and applications to a variety of end-use situations.See also: 14.0901 - Computer Engineering, General. 11.08 Computer Software and Media Applications.Instructional content for this group of programs is defined in codes 11.0801 - 11.0899. 11.0801 Web Page, Digital/Multimedia and Information Resources Design. CIP Title or Definition ChangedA program that prepares individuals to apply HTML, CSS, XML, JavaScript, graphics applications, and other authoring tools to the design, editing, and publishing (launching) of documents, images, graphics, sound, and multimedia products on the World Wide Web. Includes instruction in Internet theory, web page standards and policies, elements of web page design, user interfaces, vector tools, special effects, interactive and multimedia components, search engines, navigation, morphing, e-commerce tools, and emerging web technologies. 11.0802 Data Modeling/Warehousing and Database Administration.A program that prepares individuals to design and manage the construction of databases and related software programs and applications, including the linking of individual data sets to create complex searchable databases (warehousing) and the use of analytical search tools (mining). Includes instruction in database theory, logic, and semantics; operational and warehouse modeling; dimensionality; attributes and hierarchies; data definition; technical architecture; access and security design; integration; formatting and extraction; data delivery; index design; implementation problems; planning and budgeting; and client and networking issues. 11.0803 Computer Graphics.A program that focuses on the software, hardware, and mathematical tools used to represent, display, and manipulate topological, two-, and three-dimensional objects on a computer screen and that prepares individuals to function as computer graphics specialists. Includes instruction in graphics software and systems; digital multimedia; graphic design; graphics devices, processors, and standards; attributes and transformations; projections; surface identification and rendering; color theory and application; and applicable geometry and algorithms. 11.0804 Modeling, Virtual Environments and Simulation.A program focusing on the principles of applied visual simulation technology and the application of quantitative analyses to human-computer interaction. Includes instruction in object-oriented programming, artificial intelligence, computer communications and networks, computer graphics, virtual worlds and simulation systems, probability, statistics, stochastic modeling, data analysis, human-performance evaluation, and human-behavior modeling.See also: 50.0411 - Game and Interactive Media Design. 11.0899 Computer Software and Media Applications, Other.Any instructional program in computer software and media applications not listed above. 11.09 Computer Systems Networking and Telecommunications.Instructional content for this group of programs is defined in codes 11.0901 - 11.0999. 11.0901 Computer Systems Networking and Telecommunications.A program that focuses on the design, implementation, and management of linked systems of computers, peripherals, and associated software to maximize efficiency and productivity, and that prepares individuals to function as network specialists and managers at various levels. Includes instruction in operating systems and applications; systems design and analysis; networking theory and solutions; types of networks; network management and control; network and flow optimization; security; configuring; and troubleshooting.Examples: Computer Systems Telecommunications Computer Systems Networking 11.0902 Cloud Computing. (New)A program that prepares individuals to design and implement enterprise software systems that rely on distributed computing and service-oriented architecture, including databases, web services, cloud computing, and mobile apps. Includes instruction in data management, distributed and cloud computing, enterprise software architecture, enterprise and cloud security, mobile systems and applications, server administration, and web development. 11.0999 Computer Systems Networking and Telecommunications, Other. (New)Any instructional program in computer systems networking and telecommunications not listed above. 11.10 Computer/Information Technology Administration and Management.Instructional content for this group of programs is defined in codes 11.1001 - 11.1099. 11.1001 Network and System Administration/Administrator.A program that prepares individuals to manage the computer operations and control the system configurations emanating from a specific site or network hub. Includes instruction in computer hardware and software and applications; local area (LAN) and wide area (WAN) networking; principles of information systems security; disk space and traffic load monitoring; data backup; resource allocation; and setup and takedown procedures.Examples: Network Administration 11.1002 System, Networking, and LAN/WAN Management/Manager.A program that prepares individuals to oversee and regulate the computer system and performance requirements of an entire organization or network of satellite users. Includes instruction in performance balancing; redundancy; local area (LAN) and wide area (WAN) network management; system migration and upgrading; outage control; problem diagnosis and troubleshooting; and system maintenance, budgeting, and management. 11.1003 Computer and Information Systems Security/Auditing/Information Assurance. CIP Title or Definition ChangedA program that prepares individuals to assess the security needs of computer and network systems, recommend safeguard solutions, and manage the implementation, auditing, and maintenance of security devices, systems, and procedures. Includes instruction in computer architecture, programming, and systems analysis; networking; telecommunications; cryptography; security system auditing and design; applicable law and regulations; risk assessment and policy analysis; contingency planning; user access issues; investigation techniques; and troubleshooting.Examples: Information Assurance IT Security Internet Security Network Security Information Systems Security Information Systems Auditing and ControlSee also: 43.0403 - Cyber/Computer Forensics and Counterterrorism. 11.1004 Web/Multimedia Management and Webmaster.A program that prepares individuals to develop and maintain web servers and the hosted web pages at one or a group of web sites, and to function as designated webmasters. Includes instruction in computer systems and networks, server installation and maintenance, web page design and editing, information resources management, web policy and procedures, Internet applications of information systems security, user interfacing and usability research, and relevant management and communications skills.Examples: Website Development Web Development Webmaster 11.1005 Information Technology Project Management.A program that prepares individuals to design, develop, and manage information technology projects in a variety of companies and organizations. Includes instruction in principles of project management, risk management, procurement and contract management, information security management, software management, organizational principles and behavior, communications, quality assurance, financial analysis, leadership, and team effectiveness.See also: 52.0211 - Project Management. 11.1006 Computer Support Specialist.A program that prepares individuals to provide technical assistance, support, and advice to computer users to help troubleshoot software and hardware problems. Includes instruction in computer concepts, information systems, networking, operating systems, computer hardware, the Internet, software applications, help desk concepts and problem solving, and principles of customer service.Examples: Technical Support Specialist Help Desk Specialist IT Support Specialist 11.1099 Computer/Information Technology Services Administration and Management, Other.Any instructional program in computer/information technology services administration and management not listed above.See also: 51.0706 - Health Information/Medical Records Administration/Administrator. 11.99 Computer and Information Sciences and Support Services, Other.Instructional content is defined in code 11.9999. 11.9999 Computer and Information Sciences and Support Services, Other.Any instructional program in computer and information sciences and support services not listed above.See also: 51.0709 - Medical Office Computer Specialist/Assistant., 51.0707 - Health Information/Medical Records Technology/Technician. 12 CULINARY, ENTERTAINMENT, AND PERSONAL SERVICES. CIP Title or Definition ChangedInstructional programs that prepare individuals to provide professional services related to cosmetology, funeral services, entertainment, and food preparation and service. 12.03 Funeral Service and Mortuary Science.Instructional content for this group of programs is defined in codes 12.0301 - 12.0399. 12.0301 Funeral Service and Mortuary Science, General.A program that generally prepares individuals for careers in the funeral service industry and for licensure as funeral service directors or morticians. Includes instruction in the basic elements of mortuary science and the business, counseling, and operational aspects of funeral service. 12.0302 Funeral Direction/Service.A program that prepares individuals for professional licensure as funeral directors and as managers of funeral homes, cemeteries, and related services. Includes instruction in the sociology of death and dying, psychology of grief and grief counseling, history of funeral service, funeral direction, business law, funeral service law, funeral home management, accounting and related computer operations, and funeral services marketing and merchandising. 12.0303 Mortuary Science and Embalming/Embalmer.A program that prepares individuals for licensure as embalmers and morticians. Includes instruction in pathogenic microbiology, systematic pathology, thanatochemistry, gross anatomy, clinical mortuary science, embalming, restorative art, applicable laws and regulations, and special services such as cremation and preparations required by specific religious communities. 12.0399 Funeral Service and Mortuary Science, Other.Any instructional program in funeral service and mortuary science not listed above. 12.04 Cosmetology and Related Personal Grooming Services.Instructional content for this group of programs is defined in codes 12.0401 - 12.0499. 12.0401 Cosmetology/Cosmetologist, General.A program that generally prepares individuals to cut, trim, and style scalp, facial, and body hair; apply cosmetic preparations; perform manicures and pedicures; massage the head and extremities; and prepare for practice as licensed cosmetologists in specialized or full-service salons. Includes instruction in hair cutting and styling, manicuring, pedicuring, facial treatments, shampooing, chemical applications, esthetics, shop management, sanitation and safety, customer service, and applicable professional and labor laws and regulations. 12.0402 Barbering/Barber.A program that prepares individuals to shave and trim facial/neck hair and beards, cut and dress hair, fit hairpieces, give facial and scalp massages, apply cosmetic treatments, and to prepare for licensure as professional barbers at various levels. Includes instruction in facial shaving; beard and mustache shaping and trimming; shampooing; hair cutting; hair styles and styling art; facial treatments and massage; chemical applications; hair and scalp anatomy and physiology; hairpiece and toupee fitting; equipment operation; health and safety; customer service; and shop business practices. 12.0404 Electrolysis/Electrology and Electrolysis Technician.A program that prepares individuals to permanently remove hair from the human scalp, face, and body using specialized charged solid needle probes, and to function as licensed electrologists and electrolysis technicians. Includes instruction in direct current electrolysis, alternating current/high frequency thermolysis, blend/dual modality treatments, equipment theory and operation, safety and sanitation, client evaluation and care, laws and regulations, and business practices. 12.0406 Make-Up Artist/Specialist.A program that prepares individuals to professionally apply cosmetic makeup preparations and perform complete and specialized appearance makeovers including hairdressing, wig work, masking, temporary prosthesis applications, cosmetic applications, and related costuming for leisure or for professional stage, camera, clinical, or security purposes. Includes instruction in period and contemporary hairstyling and costuming; wig work and hairpiece application; synthetic hair and masks; cosmetic preparations and treatments; makeup artistry; attachment, removal, and camouflaging of prostheses; health and safety; client consultation and care; pre- and post-production operations; set and crew conduct and relations; script, instruction, and prescription interpretation; labor relations; and business practices. 12.0407 Hair Styling/Stylist and Hair Design.A program that prepares individuals to shampoo, cut, style, set, and dress the scalp hair of women and/or men, braid hair, apply hair cosmetics and wigs, and prepare for licensure as professional cosmetologists, hairdressers, and barbers at various levels. Includes instruction in hair design theory and concepts, hair cleaning and shampooing, hair coloring, chemical applications and permanent reconstructions, hair anatomy and physiology, scalp diseases and treatments, wig and hairpiece fitting, hair braiding, customer service, shop management, equipment operation, health and safety, and applicable laws and regulations.Examples: Natural Hair Braider 12.0408 Facial Treatment Specialist/Facialist.A program that prepares individuals to massage and treat the face, neck, and scalp with chemical and cosmetic preparations, and to function as licensed facial specialists in specialized and full service salons. Includes instruction in facial surface anatomy; skin properties; skin decontamination and infection control; facial massage; facial makeup; facial wrapping; selection and application of creams, lotions, oils, and other chemicals and cosmetics; European and other facial techniques; client evaluation and care; applicable laws and regulations; and business practices. 12.0409 Aesthetician/Esthetician and Skin Care Specialist.A program that prepares individuals to cleanse, depilate, massage, and beautify the human body and to function as licensed estheticians and skin care specialists. Includes instruction in skin anatomy, physiology, and health; principles of nutrition; decontamination and infection control; health and safety; facial and body massage; body wrapping and spa treatments; temporary hair removal including waxing and tweezing; color and skin analysis; client consultation and care; applicable laws and regulations; business practices; and sometimes related alternative healing regimens.Examples: Waxing Basic Aesthetician/Esthetician 12.0410 Nail Technician/Specialist and Manicurist.A program that prepares individuals to shape fingernails and toenails, remove unwanted skin and blemishes, apply polish and cosmetics to nails, and function as licensed manicurists or nail technicians/specialists. Includes instruction in manicuring theory; skin anatomy; nail growth, irregularities, and diseases; sterilization and sanitation; equipment and table maintenance; cuticle, blemish, and rough skin removal; nail filing, shaping, and polishing; cream application and extremity massage; nail sculpture and design art; product storage and use; customer service; laws and regulations; and business practices. 12.0411 Permanent Cosmetics/Makeup and Tattooing.A program that prepares individuals to prepare and apply permanent markings, color, and cosmetic products to the face and body for aesthetic or clinical purposes; to remove unwanted markings; and to function as licensed permanent makeup artists and tattooists. Includes instruction in client consultation; sterilization and sanitation; skin anatomy, diseases, and disorders; skin preparation and anesthetics; color theory; machine theory and operation; needle selection; applications such as eyebrows, eyeliners, lips, lipliners, beauty marks, and blemish/mark removal; after care; laws and regulations; and business practices. 12.0412 Salon/Beauty Salon Management/Manager.A program that prepares cosmetologists, hairstylists, and other personal grooming specialists to manage beauty parlors, shops, and full-service or specialized salons and to prepare for licensure as professional salon owners and operators. Includes instruction in cosmetic services marketing and retailing; advertising and promotion; salon management; the cosmetic and salon supply industries; hiring, supervision, and labor relations; applicable business and professional laws and regulations; professional standards and image; and customer service. 12.0413 Cosmetology, Barber/Styling, and Nail Instructor.A program that prepares cosmetologists, barbers, stylists, nail technicians, and other grooming specialists to teach their specializations in licensed and accredited schools of cosmetology and barbering, and to prepare for licensure as instructors. Includes instruction in cosmetology arts and sciences teaching principles; student learning styles; professional curricula development; instructional planning; instructional methods and aids; student counseling and career assistance; test development; and classroom/clinic management.Examples: Cosmetology Master Instructor 12.0414 Master Aesthetician/Esthetician.A program that prepares individuals to massage and treat the face, neck, and body with advanced chemical and cosmetic preparations and esthetic medical treatments, and to function as licensed master or medical estheticians in dermatologists’ and plastic surgeons’ offices as well as in salons and spas. Includes instruction in advanced anatomy and physiology, skin properties and disorders, sanitation and infection control, advanced facial treatments, spa body treatments, advanced extractions, corrective makeup, chemical peels, microdermabrasion, lymphatic drainage and advanced massage techniques, pre- and post-operative esthetic skin care, client/patient evaluation and care, applicable laws and regulations, and business practices.Examples: Medical Aesthetician/Esthetician Advanced Aesthetician/Esthetician Advanced Paramedical Aesthetician/Esthetician 12.0499 Cosmetology and Related Personal Grooming Arts, Other.Any instructional program in cosmetology and related personal grooming services not listed above. 12.05 Culinary Arts and Related Services.Instructional content for this group of programs is defined in codes 12.0500 - 12.0599. 12.0500 Cooking and Related Culinary Arts, General.A program that focuses on the general study of the cooking and related culinary arts, and that may prepare individuals for a variety of jobs within the food service industry. Includes instruction in food preparation, cooking techniques, equipment operation and maintenance, sanitation and safety, communication skills, applicable regulations, and principles of food service management.Examples: Cook 12.0501 Baking and Pastry Arts/Baker/Pastry Chef.A program that prepares individuals to serve as professional bakers and pastry specialists in restaurants or other commercial baking establishments. Includes instruction in bread and pastry making, bread and pastry handling and storage, cake and pastry decorating, baking industry operations, product packaging and marketing operations, and counter display and service. 12.0502 Bartending/Bartender.A program that prepares individuals to professionally prepare mixed alcoholic and non-alcoholic beverages and related products and manage bars, lounges, and beverage service operations in the hospitality industry. Includes instruction in mixology, oenology, accounting and cash management, inventory and cellar management, bar and lounge management, applicable laws and regulations, customer service, and labor/employment regulations. 12.0503 Culinary Arts/Chef Training.A program that prepares individuals to provide professional chef and related cooking services in restaurants and other commercial food establishments. Includes instruction in recipe and menu planning, preparing and cooking of foods, supervising and training kitchen assistants, the management of food supplies and kitchen resources, aesthetics of food presentation, and familiarity or mastery of a wide variety of cuisines and culinary techniques. 12.0504 Restaurant, Culinary, and Catering Management/Manager.A program that prepares individuals to plan, supervise, and manage food and beverage preparation and service operations, restaurant facilities, and catering services. Includes instruction in food/beverage industry operations, cost control, purchasing and storage, business administration, logistics, personnel management, culinary arts, restaurant and menu planning, executive chef functions, event planning and management, health and safety, insurance, and applicable law and regulations.See also: 52.0905 - Restaurant/Food Services Management. 12.0505 Food Preparation/Professional Cooking/Kitchen Assistant.A program that prepares individuals to serve under the supervision of chefs and other food service professionals as kitchen support staff and commercial food preparation workers. Includes instruction in kitchen organization and operations, sanitation and quality control, basic food preparation and cooking skills, kitchen and kitchen equipment maintenance, and quantity food measurement and monitoring. 12.0506 Meat Cutting/Meat Cutter.A program that prepares individuals to receive, cut, and package animal meat products in commercial establishments and to function as licensed meat cutters/butchers. Includes instruction in product recognition for beef, veal, lamb, pork, poultry, and fancy and smoked meats; retail and wholesale cutting and specialty cuts; packaging and counter display; shop safety; meat sanitation, storage and rotation; quality control; meat handling laws and regulations; and customer service. 12.0507 Food Service, Waiter/Waitress, and Dining Room Management/Manager.A program that prepares individuals to serve food to customers in formal or informal settings. Includes instruction in the nutritional, sensory, and functional properties of food and its ingredients; food services principles; table and counter services; dining room operations and procedures; service personnel supervision and management; communication skills; business math; safety; and sanitation. 12.0508 Institutional Food Workers.A program that prepares individuals in production and service used in governmental, commercial or independently owned institutional food establishments and related food industry occupations. Includes instruction in selecting, storing, preparing, and serving food and food products; basic nutrition; sanitation, and food safety; the use and care of commercial equipment; serving techniques; and the operation of institutional food establishments. 12.0509 Culinary Science/Culinology.A program that focuses on the blending of food science and the culinary arts and that prepares individuals to work as research chefs and related research and development positions in the food industry. Includes instruction in culinary arts, food chemistry, food safety and quality, food processing, nutrition, and business management.See also: 01.1001 - Food Science. 12.0510 Wine Steward/Sommelier.A program that prepares individuals to manage wine selection, purchasing, storage, sales, and service for a variety of establishments in the hospitality industry. Includes instruction in wine production, wine regions of the world, wine tasting, food and wine matching, service techniques, and wine program management. 12.0580 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 12.0599 Culinary Arts and Related Services, Other.Any instructional program in culinary arts and related services not listed above. 12.06 Casino Operations and Services. (New)Instructional content for this group of programs is defined in codes 12.0601 - 12.0699. 12.0601 Casino Operations and Services, General. (New)A program that focuses on casino operations and services. Includes instruction in casino operations, casino security and surveillance, casino dealing, principles of the gaming industry, ethics, and gaming law.See also: 52.0908 - Casino Management. 12.0602 Casino Dealing. (New)A program of study that prepares individuals to apply technical skills and knowledge to become table games dealers in casinos or other recreational settings. Includes instruction in dealing techniques for Baccarat, Blackjack, Carnival Games, Craps, Poker, and Roulette.See also: 52.0908 - Casino Management. 12.0699 Casino Operations and Services, Other. (New)Any instructional program in casino operations and services not listed above. 12.99 Culinary, Entertainment, and Personal Services, Other. CIP Title or Definition ChangedInstructional content is defined in code 12.9999. 12.9999 Culinary, Entertainment, and Personal Services, Other. CIP Title or Definition ChangedAny instructional program in culinary, entertainment, and personal services not listed above. 13 EDUCATIONInstructional programs that focus on the theory and practice of learning and teaching, and related research, administrative and support services. 13.01 Education, General.Instructional content is defined in code 13.0101. 13.0101 Education, General.A program that focuses on the general theory and practice of learning and teaching, the basic principles of educational psychology, the art of teaching, the planning and administration of educational activities, school safety and health issues, and the social foundations of education. 13.02 Bilingual, Multilingual, and Multicultural Education.Instructional content for this group of programs is defined in codes 13.0201 - 13.0299. 13.0201 Bilingual and Multilingual Education.A program that focuses on the design and provision of teaching and other educational services to bilingual/bicultural children or adults, and/or the design and implementation of educational programs having the goal of producing bilingual/bicultural individuals. Includes preparation to serve as teachers and administrators in bilingual/bicultural education programs.See also: 13.1401 - Teaching English as a Second or Foreign Language/ESL Language Instructor. 13.0202 Multicultural Education.A program that focuses on the design, and implementation of instructional and advising services for culturally diverse learning populations. Includes instruction in cultural diversity, at-risk populations, multilingual and ESL education, program and curriculum design, instructional technology, information resources, LEP and minority education strategies, counseling and communicating with multicultural populations, law and regulations, and applications to specific cultural groups, educational services, and research issues.See also: 13.1401 - Teaching English as a Second or Foreign Language/ESL Language Instructor. 13.0203 Indian/Native American Education.A program that focuses on the design and implementation of instructional and advising services for American Indian, Alaska Native, and Hawaiian Native students at various learning levels and that prepares individuals to perform teaching and administrative functions in Tribal/First Nation schools. Includes instruction in the cultural traditions and social patterns, history and politics, learning styles and issues, curriculum design, LEP and minority education strategies, counseling techniques and social issues, rural education services, distance education, adult education techniques, school administration, applicable laws and regulations, and research issues. 13.0299 Bilingual, Multilingual, and Multicultural Education, Other.Any instructional program in bilingual, multilingual, and multicultural Education not listed above. 13.03 Curriculum and Instruction.Instructional content is defined in code 13.0301. 13.0301 Curriculum and Instruction.A program that focuses on the curriculum and related instructional processes and tools, and that may prepare individuals to serve as professional curriculum specialists. Includes instruction in curriculum theory, curriculum design and planning, instructional material design and evaluation, curriculum evaluation, and applications to specific subject matter, programs or educational levels.Examples: Effective Teaching 13.04 Educational Administration and Supervision.Instructional content for this group of programs is defined in codes 13.0401 - 13.0499. 13.0401 Educational Leadership and Administration, General.A program that focuses on the general principles and techniques of administering a wide variety of schools and other educational organizations and facilities, supervising educational personnel at the school or staff level, and that may prepare individuals as general administrators and supervisors.Examples: Educational Leadership and Policy Educational Administration and Policy K-12 Educational Leadership K-12 Educational Administration School Business Management 13.0402 Administration of Special Education.A program that prepares individuals to plan, supervise, and manage programs for exceptional students and their parents. Includes instruction in special education theory and practice, special education program development, evaluation and assessment in special education, state and federal law and regulations, managing individual education plans, problems of low- and high- disability students, mainstreaming, special education curricula, staff management, parent education, communications and community relations, budgeting, and professional standards and ethics. 13.0403 Adult and Continuing Education Administration.A program that focuses on the principles and techniques of administering programs and facilities designed to serve the basic education needs of undereducated adults, or the continuing education needs of adults seeking further or specialized instruction, and that prepares individuals to serve as administrators of such programs. Includes instruction in adult education principles, program and facilities planning, personnel management, community and client relations, budgeting and administration, professional standards, and applicable laws and policies. 13.0404 Educational, Instructional, and Curriculum Supervision.A program that prepares individuals to supervise instructional and support personnel at the school building, facility or staff level. Includes instruction in the principles of staffing and organization, the supervision of learning activities, personnel relations, administrative duties related to departmental or unit management, and specific applications to various educational settings and curricula. 13.0406 Higher Education/Higher Education Administration.A program that focuses on the principles and practice of administration in four-year colleges, universities and higher education systems, the study of higher education as an object of applied research, and which may prepare individuals to function as administrators in such settings. Includes instruction in higher education economics and finance; policy and planning studies; curriculum; faculty and labor relations; higher education law; college student services; research on higher education; institutional research; marketing and promotion; and issues of evaluation, accountability and philosophy.Examples: Higher Education PolicySee also: 13.1102 - College Student Counseling and Personnel Services. 13.0407 Community College Administration. CIP Title or Definition ChangedA program that focuses on the principles and techniques of administering community and junior colleges and related postsecondary systems, the study of community and junior colleges as objects of applied research, and that may prepare individuals to function as administrators in such settings. Includes instruction in community and junior college finance; policy and planning studies; curriculum; faculty and labor relations; higher education law; student services; research on community and junior colleges; institutional research; marketing and promotion; and issues of evaluation, accountability and philosophy.Examples: Community College Leadership Community College Education 13.0408 Elementary and Middle School Administration/Principalship.A program that focuses on educational administration at the elementary and middle school (K-7) levels and prepares individuals to serve as principals and masters of elementary and middle schools. Includes instruction in elementary and/or middle school education, program and facilities planning, budgeting and administration, public relations, human resources management, childhood and pre-adolescent growth and development, counseling skills, applicable law and regulations, school safety, policy studies, and professional standards and ethics. 13.0409 Secondary School Administration/Principalship.A program that focuses on educational administration at the junior high, secondary, or senior high school (7-12) levels and prepares individuals to serve as principals and masters of secondary schools. Includes instruction in secondary school education, program and facilities planning, budgeting and administration, public relations, human resources management, adolescent growth and development, counseling skills, applicable law and regulations, school safety, policy studies, and professional standards and ethics. 13.0410 Urban Education and Leadership.A program that focuses on issues and problems specific to the educational needs of populations and communities located in metropolitan, inner city, and related areas and prepares individuals to provide educational services and administrative leadership in urban contexts. Includes instruction in multicultural education, at-risk studies, urban sociology, multilingual education, urban studies and planning, human services, health services and nutrition, cross-cultural communication, diversity studies, safety and security, and urban educational administration and leadership. 13.0411 Superintendency and Educational System Administration.A program that focuses on leading and managing multi-school educational systems and school districts and prepares individuals to serve as systems administrators and district superintendents. Includes instruction in educational administration; education of students at various levels; system planning and budgeting; educational policy; educational law and regulations; public relations; professional standards and ethics; and applications to specific issues, cultural context, and geographic locales. 13.0412 International School Administration/Leadership. (New)A program that focuses on the principles and practice of administration in international schools, the study of international education as an object of applied research, and which may prepare individuals to function as administrators in such settings. Includes instruction in culture in the classroom, educational leadership, globalization, instructional design and technology, international research methods, evaluation, and education policy. 13.0413 Education Entrepreneurship. (New)A program that prepares individuals to create, fund, and manage innovations in education. Includes instruction in philanthropy, business modeling, the design of learning environments, the economics of education, entrepreneurship, evaluation, finance, human-centered design, investing, resource management, project management, and marketing.Examples: Education InnovationSee also: 52.0704 - Social Entrepreneurship. 13.0414 Early Childhood Program Administration. (New)A program that focuses on early childhood educational program administration and prepares individuals to serve as a principal or director of an early childhood educational program. Includes instruction in early childhood education, program and facilities planning, budgeting and administration, public relations, human resources management, early childhood growth and development, counseling skills, applicable law and regulations, school safety, policy studies, and professional standards and ethics. 13.0499 Educational Administration and Supervision, Other.Any instructional program in education administration and supervision not listed above. 13.05 Educational/Instructional Media Design.Instructional content is defined in code 13.0501. 13.0501 Educational/Instructional Technology.A program that focuses on integrating technology into educational curricula. Includes instruction in foundations of educational technology, computer applications, utilizing technology for assessment, multimedia instruction, web-based instruction, distance education, and designing and producing educational software and materials.Examples: Advanced Learning Technologies 13.06 Educational Assessment, Evaluation, and Research.Instructional content for this group of programs is defined in codes 13.0601 - 13.0699. 13.0601 Educational Evaluation and Research.A program that focuses on the principles and procedures for generating information about educational programs, personnel and methods, and the analysis of such information for planning purposes. Includes instruction in evaluation theory, evaluation research design and planning, administering evaluations and related data collection activities, data reporting requirements, data analysis and interpretation, and related economic and policy issues. 13.0603 Educational Statistics and Research Methods.A program that focuses on the application of statistics to the analysis and solution of educational research problems, and the development of technical designs for research studies. Includes instruction in mathematical statistics, research design, computer applications, instrument design, research methodologies, and applications to research problems in specific education subjects.See also: 27.0501 - Statistics, General., 45.0102 - Research Methodology and Quantitative Methods. 13.0604 Educational Assessment, Testing, and Measurement.A program that focuses on the principles and procedures for designing, developing, implementing and evaluating tests and other mechanisms used to measure learning, evaluate student progress, and assess the performance of specific teaching tools, strategies and curricula. Includes instruction in psychometric measurement, instrument design, test implementation techniques, research evaluation, data reporting requirements, and data analysis and interpretation. 13.0607 Learning Sciences.A program that focuses on the multiple aspects of learning in different environments, including specific aspects of the content to be mastered, cognitive aspects of the student, the instructional environment and materials, the preparation and activities of the instructor, socio-cultural and linguistic components, and assessment outcomes. Includes instruction in the social, organizational, and cultural dynamics of learning; learning and cognition; learning strategies; educational psychology; educational testing and measurement; instructional design and technology; and statistical design of educational research.Examples: Learning Sciences Research Learning Sciences and Policy 13.0608 Institutional Research. (New)A program of study that prepares an individual to be an institutional researcher at a postsecondary educational institution. Includes instruction in data analysis, data-driven decision-making, data mining, higher education administration and organization, research methods, and statistics. 13.0699 Educational Assessment, Evaluation, and Research, Other.Any instructional program in educational evaluation, research and statistics not listed above. 13.07 International and Comparative Education.Instructional content is defined in code 13.0701. 13.0701 International and Comparative Education.A program that focuses on the educational phenomena, practices, and institutions within different societies and states in a comparative perspective, and the study of international educational issues. Includes instruction in comparative research methods, country- or area-specific studies, cross-national studies of learning and teaching styles, international educational policy and development, and analyses of educational migration patterns and experiences. 13.09 Social and Philosophical Foundations of Education.Instructional content is defined in code 13.0901. 13.0901 Social and Philosophical Foundations of Education.A program that focuses on the systematic study of education as a social and cultural institution, and the educational process as an object of humanistic inquiry. Includes instruction in such subjects as the philosophy of education, history of education, educational literature, educational anthropology, sociology of education, economics and politics of education, educational policy studies, and studies of education in relation to specific populations, issues, social phenomena, and types of work. 13.10 Special Education and Teaching.Instructional content for this group of programs is defined in codes 13.1001 - 13.1099. 13.1001 Special Education and Teaching, General. CIP Title or Definition ChangedA general program that focuses on the design and provision of teaching and other educational services to children or adults with special learning needs or disabilities, and that may prepare individuals to function as special education teachers in a collaborative or team environment. Includes instruction in diagnosing learning disabilities, developing individual education plans, teaching and supervising special education students, special education counseling, and applicable laws and policies.Examples: Special Education Collaborative Teacher/Teaching 13.1003 Education/Teaching of Individuals with Hearing Impairments Including Deafness.A program that focuses on the design of educational services for children or adults with hearing impairments including deafness which adversely affect their educational performance, and that may prepare individuals to teach such students. Includes instruction in identifying students with hearing impairments, including deafness, developing individual education plans, teaching and supervising hearing-impaired students, counseling, and applicable laws and policies. 13.1004 Education/Teaching of the Gifted and Talented.A program that focuses on the design of educational services for children or adults exhibiting exceptional intellectual, psychomotor or artistic talent or potential, or who exhibit exceptional maturity or social leadership talents, and that may prepare individuals to teach such students. Includes instruction in identifying gifted and talented students, developing individual education plans, teaching and supervising gifted and talented students, counseling, and applicable laws and policies. 13.1005 Education/Teaching of Individuals with Emotional Disturbances. CIP Title or Definition ChangedA program that focuses on the design of educational services for children or adults with emotional conditions which adversely affect their educational performance and that may prepare individuals to teach such students. Includes instruction in identifying students with emotional disturbances, developing individual education plans, teaching and supervising individuals with emotional disturbances, counseling, and applicable laws and policies. 13.1006 Education/Teaching of Individuals with Intellectual Disabilities. CIP Title or Definition ChangedA program that focuses on the design of educational services for children or adults with intellectual disabilities which adversely affect their educational performance and that may prepare individuals to teach such students. Includes instruction in identifying students with intellectual disabilities, developing individual education plans, teaching and supervising mentally handicapped students, counseling, and applicable laws and policies. 13.1007 Education/Teaching of Individuals with Multiple Disabilities.A program that focuses on the design of educational services for children or adults with multiple disabilities which adversely affect their educational performance and that may prepare individuals to teach such students. Includes instruction in identifying students with multiple disabilities, developing individual education plans, teaching and supervising students with multiple handicaps, counseling, and applicable laws and policies. 13.1008 Education/Teaching of Individuals with Orthopedic and Other Physical Health Impairments.A program that focuses on the design of educational services for children or adults with orthopedic and other health impairments which adversely affect their educational performance and that may prepare individuals to teach such students. Includes instruction in identifying physically disabled students, developing individual education plans, teaching and supervising students with orthopedic and other health impairments, counseling, and applicable laws and policies. 13.1009 Education/Teaching of Individuals with Vision Impairments Including Blindness.A program that focuses on the design of educational services for children or adults with visual disabilities which adversely affect their educational performance and that may prepare individuals to teach such students. Includes instruction in identifying students with visual impairments, developing individual education plans, teaching and supervising blind or visually handicapped students, counseling, and applicable laws and policies. 13.1011 Education/Teaching of Individuals with Specific Learning Disabilities.A program that focuses on the design of educational services for children or adults with specific learning disabilities which adversely affect their educational performance and that may prepare individuals to teach such students. Includes instruction in identifying students with specific learning disabilities, developing individual education plans, teaching and supervising students with specific learning disabilities, counseling, and applicable laws and policies. 13.1012 Education/Teaching of Individuals with Speech or Language Impairments.A program that focuses on the study and design of educational services for children or adults with speech and language impairments which adversely affect their educational performance and that may prepare individuals to teach such students. Includes instruction in identifying students with speech and language impairments, developing individual education plans, teaching and supervising students with speech disabilities, counseling, and applicable laws and policies.See also: 51.0816 - Speech-Language Pathology Assistant. 13.1013 Education/Teaching of Individuals with Autism.A program that focuses on the design of educational services for children or adults with autism, and that prepares individuals to teach such students. Includes instruction in identifying students with autism, developing individual education plans, teaching and supervising autistic students, counseling, and applicable laws and policies. 13.1014 Education/Teaching of Individuals Who are Developmentally Delayed.A program that focuses on the design of educational services for children or adults who exhibit slow social, physical, cognitive, or emotional growth patterns related to age, or a combination of such factors that affect learning, and that prepares individuals to teach such students. Includes instruction in identification of developmental delay patterns, developing individual education plans, teaching and supervising developmentally delayed students, counseling, and applicable laws and policies. 13.1015 Education/Teaching of Individuals in Early Childhood Special Education Programs.A program that focuses on the design and provision of teaching and other educational services to infant and pre-school age children with special learning needs or disabilities, and that prepares individuals to teach such students. Includes instruction in diagnosing learning disabilities, developing individual education plans, teaching and supervising special education students, special education counseling, and applicable laws and policies. 13.1016 Education/Teaching of Individuals with Traumatic Brain Injuries.A program that focuses on the design of educational services for children or adults who are surviving and recovering from brain and brain stem injuries affecting their cognitive, perceptive, and motor functions. Includes instruction in neurophysiology and neuropathology; speech, other sensory, and motor pathologies; emotional and cognitive disabilities; physical and occupational rehabilitation techniques; developing individual education plans, teaching and supervising brain-injured students, counseling, and applicable laws and policies. 13.1017 Education/Teaching of Individuals in Elementary Special Education Programs.A program that focuses on the design and provision of teaching and other educational services to children with special learning needs or disabilities who are in the elementary grades. Includes instruction in diagnosing learning disabilities; developing individual education plans; curriculum development, instructional strategies, and classroom management for elementary special education; and teaching elementary education subject matter. 13.1018 Education/Teaching of Individuals in Junior High/Middle School Special Education Programs.A program that focuses on the design and provision of teaching and other educational services to children with special learning needs or disabilities who are in junior high/middle school. Includes instruction in diagnosing learning disabilities; developing individual education plans; curriculum development, instructional strategies, and classroom management for middle school special education; and principles of middle school instruction in specific subjects. 13.1019 Education/Teaching of Individuals in Secondary Special Education Programs.A program that focuses on the design and provision of teaching and other educational services to children with special learning needs or disabilities who are in the secondary grades. Includes instruction in diagnosing learning disabilities; developing individual education plans; curriculum development, instructional strategies, and classroom management for secondary grades special education; content, methods, and modifications in specific subject areas; issues in vocational education; and promoting successful transitions to postsecondary settings. 13.1099 Special Education and Teaching, Other.Any instructional program in special education not listed above. 13.11 Student Counseling and Personnel Services.Instructional content for this group of programs is defined in codes 13.1101 - 13.1199. 13.1101 Counselor Education/School Counseling and Guidance Services.A program that prepares individuals to apply the theory and principles of guidance and counseling to the provision of support for the personal, social, educational, and vocational development of students, and the organizing of guidance services within elementary, middle and secondary educational institutions. Includes instruction in legal and professional requirements, therapeutic counselor intervention, vocational counseling, and related sociological and psychological foundations.See also: 42.2805 - School Psychology. 13.1102 College Student Counseling and Personnel Services.A program that focuses on the organization and provision of counseling, referral, assistance and administrative services to students in postsecondary educational institutions and adult education facilities, and that may prepare individuals to function as professional counselors in such settings. Includes instruction in applicable laws and policies, residential counseling and services, vocational counseling and placement services, remedial skills counseling, and therapeutic counselor intervention. 13.1199 Student Counseling and Personnel Services, Other.Any instructional program in student counseling and personnel services not listed above. 13.12 Teacher Education and Professional Development, Specific Levels and Methods.Instructional content for this group of programs is defined in codes 13.1201 - 13.1299. 13.1201 Adult and Continuing Education and Teaching.A program that prepares individuals to teach adult students in various settings, including basic and remedial education programs, continuing education programs, and programs designed to develop or upgrade specific employment-related knowledge and skills.Examples: Workforce Training and Development Instruction 13.1202 Elementary Education and Teaching.A program that prepares individuals to teach students in the elementary grades, which may include kindergarten through grade eight, depending on the school system or state regulations. Includes preparation to teach all elementary education subject matter. 13.1203 Junior High/Intermediate/Middle School Education and Teaching.A program that prepares individuals to teach students in the middle, intermediate or junior high grades, which may include grades four through nine by regulation. 13.1205 Secondary Education and Teaching.A program that prepares individuals to teach students in the secondary grades, which may include grades seven through twelve, depending on the school system or state regulations. May include preparation to teach a comprehensive curriculum or specific subject matter. 13.1206 Teacher Education, Multiple Levels.A program that prepares individuals to teach students at more than one educational level, such as a combined program in elementary/secondary, early childhood/elementary, elementary/middle school, or junior high/high school teacher education. 13.1207 Montessori Teacher Education.A program that prepares individuals to teach students at various grade levels according to the pedagogical principles and methods developed by Maria Montessori and her followers. 13.1208 Waldorf/Steiner Teacher Education.A program that prepares individuals to teach students at various grade levels according to the pedagogical principles and methods developed by Rudolf Steiner and his followers. 13.1209 Kindergarten/Preschool Education and Teaching.A program that prepares individuals to teach students in formal settings prior to beginning regular elementary school, usually ranging in age from three to six years (or grade one), depending on the school system or state regulations. Includes preparation to teach all relevant subject matter. 13.1210 Early Childhood Education and Teaching.A program that prepares individuals to teach students ranging in age from infancy through eight years (grade three), depending on the school system or state regulations. Includes preparation to teach all relevant subject matter.Examples: Early Childhood Education (AA) Early Childhood Education (BA) Early Childhood Education (MA) Early Childhood Education (PhD)See also: 13.1501 - Teacher Assistant/Aide. 13.1211 Online Educator/Online Teaching. (New)A program that prepares individuals to teach students at various academic levels through online instructional technologies. Includes instruction in andragogy, pedagogy, assessment, instructional design and technology, and learning science. 13.1212 International Teaching and Learning. (New)A program that prepares individuals to teach in schools that are implementing or proposing to implement the International Baccalaureate curriculum. Includes instruction in culturally-responsive classrooms, cross-cultural awareness, foundations of international education, human learning, human development, international teaching and learning, and pedagogy. 13.1213 Science, Technology, Engineering, and Mathematics (STEM) Educational Methods. (New)A program that prepares individuals to connect education practices with scientific, engineering, and mathematical principles for PreK-12 students. Includes instruction in critical thinking, curriculum and instruction, history of STEM education, integrating STEM across curricula, learning sciences and technology, STEM education methods, and teacher leadership in STEM education.Examples: Science, Technology, Engineering, the Arts, and Mathematics (STEAM) Educational Methods 13.1214 College/Postsecondary/University Teaching. (New)A program that prepares individuals to teach at a postsecondary institution. Includes instruction in andragogy, assessment, classroom motivation, instructional design and technology, learner-centered teaching, learning science, syllabus construction, and teaching critical thinking.Examples: University and College Teaching 13.1299 Teacher Education and Professional Development, Specific Levels and Methods, Other.Any instructional program in teacher education and professional development not listed above. 13.13 Teacher Education and Professional Development, Specific Subject Areas.Instructional content for this group of programs is defined in codes 13.1301 - 13.1399. 13.1301 Agricultural Teacher Education.A program that prepares individuals to teach vocational agricultural programs at various educational levels.See also: 01.0801 - Agricultural and Extension Education Services. 13.1302 Art Teacher Education.A program that prepares individuals to teach art and art appreciation programs at various educational levels. 13.1303 Business and Innovation/Entrepreneurship Teacher Education. CIP Title or Definition ChangedA program that prepares individuals to teach vocational business, innovation, and entrepreneurship programs at various educational levels. Includes instruction in business administration, business development, finance, idea generation, investing, logistics, management, and marketing.Examples: Innovation and Entrepreneurship Teacher Education 13.1304 Driver and Safety Teacher Education.A program that prepares individuals to teach driver and safety education programs at various educational levels. 13.1305 English/Language Arts Teacher Education.A program that prepares individuals to teach English grammar, composition and literature programs at various educational levels. 13.1306 Foreign Language Teacher Education.A program that prepares individuals to teach foreign languages programs at various educational levels, other than French, German or Spanish. 13.1307 Health Teacher Education.A program that prepares individuals to teach health education programs at various educational levels. 13.1308 Family and Consumer Sciences/Home Economics Teacher Education.A program that prepares individuals to teach vocational home economics programs at various educational levels.See also: 19.0101 - Family and Consumer Sciences/Human Sciences, General. 13.1309 Technology Teacher Education/Industrial Arts Teacher Education.A program that prepares individuals to teach technology education/industrial arts programs at various educational levels. 13.1310 Sales and Marketing Operations/Marketing and Distribution Teacher Education.A program that prepares individuals to teach vocational sales and marketing operations/marketing and distributive education programs at various educational levels. 13.1311 Mathematics Teacher Education.A program that prepares individuals to teach mathematics programs at various educational levels.Examples: Elementary Mathematics Teacher Education Middle School Mathematics Teacher Education Secondary Mathematics Teacher Education 13.1312 Music Teacher Education.A program that prepares individuals to teach music and music appreciation programs at various educational levels. 13.1314 Physical Education Teaching and Coaching.A program that prepares individuals to teach physical education programs and/or to coach sports at various educational levels. 13.1315 Reading Teacher Education.A program that prepares individuals to diagnose reading difficulties and to teach reading programs at various educational levels. 13.1316 Science Teacher Education/General Science Teacher Education.A program that prepares individuals to teach general science programs, or a combination of the biological and physical science subject matter areas, at various educational levels. 13.1317 Social Science Teacher Education.A program that prepares individuals to teach specific social science subjects and programs at various educational levels. 13.1318 Social Studies Teacher Education.A program that prepares individuals to teach general social studies programs at various educational levels. 13.1319 Technical Teacher Education.A program that prepares individuals to teach specific vocational technical education programs at various educational levels. 13.1320 Trade and Industrial Teacher Education.A program that prepares individuals to teach specific vocational trades and industries programs at various educational levels. 13.1321 Computer Teacher Education.A program that prepares individuals to teach computer education programs at various educational levels. 13.1322 Biology Teacher Education.A program that prepares individuals to teach biology programs at various educational levels. 13.1323 Chemistry Teacher Education.A program that prepares individuals to teach chemistry programs at various educational levels. 13.1324 Drama and Dance Teacher Education.A program that prepares individuals to teach drama and/or dance programs at various educational levels. 13.1325 French Language Teacher Education.A program that prepares individuals to teach French language programs at various educational levels. 13.1326 German Language Teacher Education.A program that prepares individuals to teach German language programs at various educational levels. 13.1327 Health Occupations Teacher Education.A program that prepares individuals to teach specific vocational health occupations programs at various educational levels. 13.1328 History Teacher Education.A program that prepares individuals to teach history programs at various educational levels. 13.1329 Physics Teacher Education.A program that prepares individuals to teach physics programs at various educational levels. 13.1330 Spanish Language Teacher Education.A program that prepares individuals to teach Spanish language programs at various educational levels. 13.1331 Speech Teacher Education.A program that prepares individuals to teach speech and language arts programs at various educational levels. 13.1332 Geography Teacher Education.A program that prepares individuals to teach geography at various grade levels. 13.1333 Latin Teacher Education.A program that prepares individuals to teach Latin at various grade levels. 13.1334 School Librarian/School Library Media Specialist.A program that prepares individuals to serve as librarians and media specialists in elementary and secondary schools as well as special instructional centers.See also: 25.0101 - Library and Information Science. 13.1335 Psychology Teacher Education.A program that prepares individuals to teach general psychology at the secondary school level. 13.1337 Earth Science Teacher Education.A program that prepares individuals to teach earth science programs at various educational levels.Examples: Geosciences Education 13.1338 Environmental Education.A program that prepares individuals to teach environmental education at various educational levels as a K-12 classroom educator. Includes instruction in foundations of environmental education, instructional methods, and related content knowledge.See also: 31.0601 - Outdoor Education. 13.1339 Communication Arts and Literature Teacher Education. (New)A program of study that prepares individuals to teach oral expression, literature, and writing to students at various education levels. Includes instruction in interpersonal communication, intercultural communication, language learning, listening instructional techniques, public speaking, reading instructional techniques, writing instructional techniques, and practical teaching experience. 13.1399 Teacher Education and Professional Development, Specific Subject Areas, Other.Any instructional program in teacher education, specific academic and vocational programs not listed above. 13.14 Teaching English or French as a Second or Foreign Language.Instructional content for this group of programs is defined in codes 13.1401 - 13.1499. 13.1401 Teaching English as a Second or Foreign Language/ESL Language Instructor.A program that focuses on the principles and practice of teaching English to students who are not proficient in English or who do not speak, read or write English, and that may prepare individuals to function as teachers and administrators in such programs. 13.1402 Teaching French as a Second or Foreign Language.A program that focuses on the principles and practice of teaching French to students who are not proficient in French or who do not speak, read, or write French, and prepares individuals to serve as teachers and administrators. 13.1499 Teaching English or French as a Second or Foreign Language, Other.Any program in teaching English or French as a second or foreign language not listed above. 13.15 Teaching Assistants/Aides.Instructional content for this group of programs is defined in codes 13.1501 - 13.1599. 13.1501 Teacher Assistant/Aide.A program that prepares individuals to assist a teacher in regular classroom settings or in providing instruction and supervision to special student populations, such as bilingual/bicultural students, special education students, adult learners, and students learning English. Includes instruction in techniques of general classroom supervision, maintaining order, assisting with lessons and carrying out related assignments.Examples: Early Childhood Education Teacher Assistant/Aide Elementary Education Teacher Assistant/Aide Special Education Teacher Assistant/Aide Paraprofessional EducatorSee also: 13.1210 - Early Childhood Education and Teaching. 13.1502 Adult Literacy Tutor/Instructor.A program that prepares individuals to serve as instructors and mentors for adults in basic or functional literacy programs in school, institutional, community, and private settings. 13.1599 Teaching Assistants/Aides, Other.Any teaching assistant/aide program not listed above. 13.99 Education, Other.Instructional content is defined in code 13.9999. 13.9999 Education, Other.Any instructional program in education not listed above. 14 ENGINEERINGInstructional programs that prepare individuals to apply mathematical and scientific principles to the solution of practical problems. 14.01 Engineering, General.Instructional content for this group of programs is defined in codes 14.0101 - 14.0103. 14.0101 Engineering, General.A program that generally prepares individuals to apply mathematical and scientific principles to solve a wide variety of practical problems in industry, social organization, public works, and commerce. Includes instruction in undifferentiated and individualized programs in engineering. 14.0102 Pre-Engineering.A program that prepares individuals for admission or transfer to a baccalaureate-level program in any of the fields of engineering.Examples: Pre-Engineering Transfer Program 14.0103 Applied Engineering. (New)A program that generally prepares individuals to apply mathematical and scientific principles inherent to engineering to the management and design of systems, execution of new product designs, improvement of manufacturing processes, and the management and direction of the physical or technical functions of an organization. Includes instruction in basic engineering principles, project management, industrial processes, production and operations management, systems integration and control, quality control, and statistics. 14.02 Aerospace, Aeronautical, and Astronautical/Space Engineering. CIP Title or Definition ChangedInstructional content for this group of programs is defined in codes 14.0201 - 14.0299. 14.0201 Aerospace, Aeronautical, and Astronautical/Space Engineering, General. CIP Title or Definition ChangedA program that prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of aircraft, missiles, space vehicles, and their systems; applied research on flight and orbital characteristics; and the development of systems and procedures for the launching, guidance, and control of air and space vehicles.Examples: Space Systems Engineering Space Facilities Engineering Missile Systems Engineering Air-Breathing Propulsion Aerospace Navigation Rocket Propulsion 14.0202 Astronautical Engineering. (New)A program that prepares individuals to apply mathematical and scientific principles to the design, development, and operational evaluation of aircraft and space vehicles. Includes instruction in control systems, fluid dynamics, electrical circuits systems, orbital mechanics, propulsion, remote sensing, satellites, spacecraft centers, spacecraft systems engineering, and space exploration. 14.0299 Aerospace, Aeronautical, and Astronautical/Space Engineering, Other. (New)Any program in aerospace, aeronautical, astronautical, or space engineering not listed above. 14.03 Agricultural Engineering.Instructional content is defined in code 14.0301. 14.0301 Agricultural Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of systems, equipment and facilities for production, processing, storage, handling, distribution and use of food, feed, and fiber. Includes applications to aquaculture, forestry, human and natural resources.Examples: Bioprocessing Engineering Food Engineering Soil Engineering 14.04 Architectural Engineering.Instructional content is defined in code 14.0401. 14.0401 Architectural Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of materials, systems, and methods used to construct and equip buildings intended for human habitation or other purposes.See also: 04.0201 - Architecture. 14.05 Biomedical/Medical Engineering.Instructional content is defined in code 14.0501. 14.0501 Bioengineering and Biomedical Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of biomedical and health systems and products such as integrated biomedical systems, instrumentation, medical information systems, artificial organs and prostheses, and health management and care delivery systems.Examples: Cell and Tissue Engineering Neural Engineering Biomaterials EngineeringSee also: 31.0505 - Exercise Science and Kinesiology., 26.0913 - Biomechanics. 14.06 Ceramic Sciences and Engineering.Instructional content is defined in code 14.0601. 14.0601 Ceramic Sciences and Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of inorganic non-metallic materials, such as porcelains, cements, industrial ceramics, ceramic superconductors, abrasive, and related materials and systems.See also: 50.0711 - Ceramic Arts and Ceramics. 14.07 Chemical Engineering.Instructional content for this group of programs is defined in codes 14.0701 - 14.0799. 14.0701 Chemical Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of systems employing chemical processes, such as chemical reactors, kinetic systems, electrochemical systems, energy conservation processes, heat and mass transfer systems, and separation processes; and the applied analysis of chemical problems such as corrosion, particle abrasion, energy loss, pollution, and fluid mechanics.See also: 40.0501 - Chemistry, General. 14.0702 Chemical and Biomolecular Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of systems at the interface of chemical engineering and biology, with an emphasis at the molecular level, such as biopharmaceutical processes, protein engineering, metabolic engineering, gene therapy, biomaterials, cell and tissue engineering, and drug delivery. Includes instruction in chemical engineering, thermodynamics, organic chemistry, biochemistry, momentum and heat transfer, cellular and molecular biotechnology, process design, and chemical reactor design. 14.0799 Chemical Engineering, Other.Any instructional program in chemical engineering not listed above. 14.08 Civil Engineering.Instructional content for this group of programs is defined in codes 14.0801 - 14.0899. 14.0801 Civil Engineering, General.A program that generally prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of structural, load-bearing, material moving, transportation, water resource, and material control systems; and environmental safety measures. 14.0802 Geotechnical and Geoenvironmental Engineering.A program that prepares individuals to apply geotechnical engineering methods, which deal with the analysis, design and construction of earth and earth supported structures, to the application of environmental problems, such as waste containment, waste disposal, construction of land fills, soil permeation, soil analysis, and soil improvement. Includes instruction in soil mechanics, soil dynamics, soil behavior, waste management and containment systems, geosynthetics, geochemistry, earth structures, geoenvironmental engineering, geotechnical engineering, earthquake engineering, and foundation engineeringExamples: Geotechnical Engineering Geoenvironmental Engineering Geotechnical and Geoenvironmental Engineering 14.0803 Structural Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of materials and systems used in building load-bearing structures for various purposes and in different environments, including buildings, roads, rail lines, bridges, dams, conduits, offshore platforms and work stations, and other structural shells; and the analysis of structural problems such as, failure, fabrication, safety, and natural hazards. 14.0804 Transportation and Highway Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of total systems for the physical movement of people, materials and information, including general network design and planning, facilities planning, site evaluation, transportation management systems, needs projections and analysis, and analysis of costs. 14.0805 Water Resources Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of systems for collecting, storing, moving, conserving and controlling surface- and groundwater, including water quality control, water cycle management, management of human and industrial water requirements, water delivery, and flood control.See also: 40.0605 - Hydrology and Water Resources Science., 03.0205 - Water, Wetlands, and Marine Resources Management. 14.0899 Civil Engineering, Other.Any instructional program in civil engineering not listed above. 14.09 Computer Engineering.Instructional content for this group of programs is defined in codes 14.0901 - 14.0999. 14.0901 Computer Engineering, General.A program that generally prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of computer hardware and software systems and related equipment and facilities; and the analysis of specific problems of computer applications to various tasks.Examples: Computer Systems EngineeringSee also: 11.0701 - Computer Science. 14.0902 Computer Hardware Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development, and evaluation of computer hardware and related peripheral equipment. Includes instruction in computer circuit and chip design, circuitry, computer systems design, computer equipment design, computer layout planning, testing procedures, and related computer theory and software topics. 14.0903 Computer Software Engineering.A program that prepares individuals to apply scientific and mathematical principles to the design, analysis, verification, validation, implementation, and maintenance of computer software systems using a variety of computer languages. Includes instruction in discrete mathematics, probability and statistics, computer science, managerial science, and applications to complex computer systems. 14.0999 Computer Engineering, Other.Any instructional program in computer engineering not listed above.Examples: Internet of Things 14.10 Electrical, Electronics, and Communications Engineering.Instructional content for this group of programs is defined in codes 14.1001 - 14.1099. 14.1001 Electrical and Electronics Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of electrical and electronic systems and their components, including electrical power generation systems; and the analysis of problems such as superconductor, wave propagation, energy storage and retrieval, and reception and amplification.Examples: Electrical Engineering Total Ship Systems Engineering Electrodynamic Engineering 14.1003 Laser and Optical Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of optical systems, lasers and related electronic devices. Includes instruction in wave theory and mechanics, electromagnetic applications, linear and non-linear optics, photon detecting, laser beam properties, directed energy, harmonic generation, optical systems, shielding and the design and implementation of related systems and equipment.Examples: Electro-Optic Engineering Optical EngineeringSee also: 40.0807 - Optics/Optical Sciences. 14.1004 Telecommunications Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development, and maintenance of telecommunications technology, networks, and systems. Includes instruction in telecommunications, computer networking, communications networks and systems, signals, circuits, fiber optics, and wireless systems and technology.Examples: Communications Systems Engineering 14.1099 Electrical, Electronics, and Communications Engineering, Other.Any instructional program in electrical, electronics, and communications engineering not listed above. 14.11 Engineering Mechanics.Instructional content is defined in code 14.1101. 14.1101 Engineering Mechanics.A program with a general focus on the application of the mathematical and scientific principles of classical mechanics to the analysis and evaluation of the behavior of structures, forces and materials in engineering problems. Includes instruction in statics, kinetics, dynamics, kinematics, celestial mechanics, stress and failure, and electromagnetism. 14.12 Engineering Physics.Instructional content is defined in code 14.1201. 14.1201 Engineering Physics/Applied Physics.A program focusing on the use of physics principles in the analysis and evaluation of engineering problems and other scientific applications. Includes instruction in high- and low-temperature phenomena, computational physics, superconductivity, applied thermodynamics, molecular and particle physics applications, and space science research.Examples: Applied Physics Directed Energy/Laser Physics Semiconductor PhysicsSee also: 40.0801 - Physics, General. 14.13 Engineering Science.Instructional content is defined in code 14.1301. 14.1301 Engineering Science. CIP Title or Definition ChangedA program with a general focus on the general application of various combinations of mathematical and scientific principles to the analysis and evaluation of engineering problems, including applied research in human behavior, statistics, biology, chemistry, the earth and planetary sciences, atmospherics and meteorology, and computer applications. 14.14 Environmental/Environmental Health Engineering.Instructional content is defined in code 14.1401. 14.1401 Environmental/Environmental Health Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of systems for controlling contained living environments and for monitoring and controlling factors in the external natural environment, including pollution control, waste and hazardous material disposal, health and safety protection, conservation, life support, and requirements for protection of special materials and related work environments.Examples: Environmental Engineering Environmental Management EngineeringSee also: 03.0103 - Environmental Studies., 03.0104 - Environmental Science. 14.18 Materials Engineering. CIP Title or Definition ChangedInstructional content is defined in code 14.1801. 14.1801 Materials Engineering.A program that prepares individuals to apply mathematical and materials science principles to the design, development and operational evaluation of materials and related processes used in manufacturing in a wide variety of settings; the synthesis of new industrial materials, including marrying and bonding composites; analysis of materials requirements and specifications; and related problems of system design dependent on materials factors.Examples: Materials Processing and Manufacturing Materials Science EngineeringSee also: 40.1001 - Materials Science., 40.1002 - Materials Chemistry. 14.19 Mechanical Engineering.Instructional content is defined in code 14.1901. 14.1901 Mechanical Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of physical systems used in manufacturing and end-product systems used for specific uses, including machine tools, jigs and other manufacturing equipment; stationary power units and appliances; engines; self-propelled vehicles; housings and containers; hydraulic and electric systems for controlling movement; and the integration of computers and remote control with operating systems. 14.20 Metallurgical Engineering.Instructional content is defined in code 14.2001. 14.2001 Metallurgical Engineering.A program that prepares individuals to apply mathematical and metallurgical principles to the design, development and operational evaluation of metal components of structural, load-bearing, power, transmission, and moving systems; and the analysis of engineering problems such as stress, creep, failure, alloy behavior, environmental fluctuations, stability, electromagnetic and thermodynamic characteristics, optimal manufacturing processes, and related design considerations. 14.21 Mining and Mineral Engineering.Instructional content is defined in code 14.2101. 14.2101 Mining and Mineral Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of mineral extraction, processing and refining systems, including open pit and shaft mines, prospecting and site analysis equipment and instruments, environmental and safety systems, mine equipment and facilities, mineral processing and refining methods and systems, and logistics and communications systems. 14.22 Naval Architecture and Marine Engineering.Instructional content is defined in code 14.2201. 14.2201 Naval Architecture and Marine Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of self-propelled, stationary, or towed vessels operating on or under the water, including inland, coastal and ocean environments; and the analysis of related engineering problems such as corrosion, power transfer, pressure, hull efficiency, stress factors, safety and life support, environmental hazards and factors, and specific use requirements. 14.23 Nuclear Engineering.Instructional content is defined in code 14.2301. 14.2301 Nuclear Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of systems for controlling and manipulating nuclear energy, including nuclear power plant design, fission reactor design, fusion reactor design, reactor control and safety systems design, power transfer systems, containment vessels and structures design; and the analysis of related engineering problems such as fission and fusion processes, human and environmental factors, construction, and operational considerations.Examples: Nuclear Reactor Engineering Nuclear Fuels Nuclear Power Engineering Nuclear Radiation and Shielding Nuclear Instrumentation and MeasurementSee also: 40.0806 - Nuclear Physics. 14.24 Ocean Engineering.Instructional content is defined in code 14.2401. 14.2401 Ocean Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of systems to monitor, control, manipulate and operate within coastal or ocean environments, such as underwater platforms, flood control systems, dikes, hydroelectric power systems, tide and current control and warning systems, and communications equipment; the planning and design of total systems for working and functioning in water or underwater environments; and the analysis of related engineering problems such as the action of water properties and behavior on physical systems and people, tidal forces, current movements, and wave motion. 14.25 Petroleum Engineering.Instructional content is defined in code 14.2501. 14.2501 Petroleum Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of systems for locating, extracting, processing and refining crude petroleum and natural gas, including prospecting instruments and equipment, mining and drilling systems, processing and refining systems and facilities, storage facilities, transportation systems, and related environmental and safety systems. 14.27 Systems Engineering.Instructional content is defined in code 14.2701. 14.2701 Systems Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of total systems solutions to a wide variety of engineering problems, including the integration of human, physical, energy, communications, management, and information requirements as needed, and the application of requisite analytical methods to specific situations.Examples: Product Development Engineering Logistics Engineering Systems Engineering Management Capability-Based Systems Decision Engineering Dynamical SystemsSee also: 11.0501 - Computer Systems Analysis/Analyst., 30.0601 - Systems Science and Theory. 14.28 Textile Sciences and Engineering.Instructional content is defined in code 14.2801. These CIP codes are not valid for IPEDS reporting. 14.2801 Textile Sciences and Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of systems to test and manufacture fibers and fiber products, both synthetic and natural; to develop new and improved fibers, textiles and their uses; and to the analysis of related engineering problems such as structural factors, molecular synthesis, chemical manufacturing, weaves, strength and stress, useful life, dyes, and applications to composite systems.See also: 19.0904 - Textile Science. 14.32 Polymer/Plastics Engineering.Instructional content is defined in code 14.3201. 14.3201 Polymer/Plastics Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of synthesized macromolecular compounds and their application to specific engineering uses, including the development of industrial materials with tailored properties, the design of lightweight structural components, the use of liquid or solid polymers, and the analysis and control of polymerization processes.See also: 40.0507 - Polymer Chemistry. 14.33 Construction Engineering.Instructional content is defined in code 14.3301. 14.3301 Construction Engineering.A program that prepares individuals to apply scientific, mathematical, and management principles to the planning, design, and building of facilities and structures. Includes instruction in civil engineering, structural principles, site analysis, computer-assisted design, geology, evaluation and testing, materials, contracting, project management, graphic communications, and applicable laws and regulations.Examples: Construction Engineering and Management 14.34 Forest Engineering.Instructional content is defined in code 14.3401. 14.3401 Forest Engineering.A program that prepares individuals to apply scientific, mathematical, and forestry principles to the design of mechanical devices and processes for efficient forest management, timber production and related forest logistics systems. Includes instruction in forest products processing, forest management, forest harvesting, timber structure design, production analysis, road and bridge construction, vehicle adaptation and design, and harvesting equipment design.See also: 03.0501 - Forestry, General. 14.35 Industrial Engineering.Instructional content is defined in code 14.3501. 14.3501 Industrial Engineering.A program that prepares individuals to apply scientific and mathematical principles to the design, improvement, and installation of integrated systems of people, material, information, and energy. Includes instruction in applied mathematics, physical sciences, the social sciences, engineering analysis, systems design, computer applications, and forecasting and evaluation methodology.Examples: Ergonomics Engineering Human Factors Engineering 14.36 Manufacturing Engineering.Instructional content is defined in code 14.3601. 14.3601 Manufacturing Engineering.A program that prepares individuals to apply scientific and mathematical principles to the design, development, and implementation of manufacturing systems. Includes instruction in materials science and engineering, manufacturing processes, process engineering, assembly and product engineering, manufacturing systems design, and manufacturing competitiveness. 14.37 Operations Research.Instructional content is defined in code 14.3701. 14.3701 Operations Research.A program that focuses on the development and application of complex mathematical or simulation models to solve problems involving operational systems, where the system concerned is subject to human intervention. Includes instruction in advanced multivariate analysis, application of judgment and statistical tests, optimization theory and techniques, resource allocation theory, mathematical modeling, control theory, statistical analysis, and applications to specific research problems.Examples: Decision Support Systems Decision Analysis Operations Analysis Operational Sciences 14.38 Surveying Engineering.Instructional content is defined in code 14.3801. 14.3801 Surveying Engineering.A program that prepares individuals to apply scientific and mathematical principles to the determination of the location, elevations, and alignment of natural and manmade topographic features. Includes instruction in property line location, surveying, surface measurement, aerial and terrestrial photogrammetry, remote sensing, satellite imagery, global positioning systems, computer applications, and photographic data processing. 14.39 Geological/Geophysical Engineering.Instructional content is defined in code 14.3901. 14.3901 Geological/Geophysical Engineering.A program that prepares individuals to apply mathematical and geological principles to the analysis and evaluation of engineering problems, including the geological evaluation of construction sites, the analysis of geological forces acting on structures and systems, the analysis of potential natural resource recovery sites, and applied research on geological phenomena.See also: 40.0601 - Geology/Earth Science, General. 14.40 Paper Science and Engineering.Instructional content is defined in code 14.4001. 14.4001 Paper Science and Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development, and manufacturing of pulp and paper products. Includes instruction in pulp and paper science, pulping and bleaching processes, paper structure and processes, pulp and paper manufacturing, coating technology, surface and colloid science, and fibers.Examples: Paper Science Paper Science Engineering Pulp and Paper Science Wood and Paper ScienceSee also: 03.0509 - Wood Science and Wood Products/Pulp and Paper Technology/Technician. 14.41 Electromechanical Engineering.Instructional content is defined in code 14.4101. 14.4101 Electromechanical Engineering.A program that prepares individuals to apply scientific and mathematical principles to the problems associated with combining electrical and mechanical components with special emphasis on manufacturing and automated processes. Includes instruction in applied mechanics, instrumentation and monitoring, machine design, automated control techniques, fluid and thermal dynamics, circuit analysis, and solid state electronics. 14.42 Mechatronics, Robotics, and Automation Engineering.Instructional content is defined in code 14.4201. 14.4201 Mechatronics, Robotics, and Automation Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of computer controlled electro-mechanical systems and products with embedded electronics, sensors, and actuators; and which includes, but is not limited to, automata, robots and automation systems. Includes instruction in mechanical engineering, electronic and electrical engineering, computer and software engineering, and control engineering.See also: 11.0102 - Artificial Intelligence. 14.43 Biochemical Engineering.Instructional content is defined in code 14.4301. 14.4301 Biochemical Engineering.A program that prepares individuals to apply mathematical and scientific principles to the study of biochemical processes in living organisms, properties of biological materials, and processes using biochemical agents such as cells, enzymes, and antibodies. Includes instruction in biology, chemistry, physics, biochemistry, thermodynamics, fluid dynamics, bioprocesses, and chemical engineering.Examples: Biochemical Engineering Chemical and Biochemical Engineering 14.44 Engineering Chemistry.Instructional content is defined in code 14.4401. 14.4401 Engineering Chemistry.A program that focuses on the general application of chemical principles to the analysis and evaluation of engineering problems, such as development of electronic materials, solid-state science and technology, polymers, ceramics, and biomaterials. Includes instruction in physical chemistry, organic chemistry, materials science, chemical processes and systems, chemical reaction engineering, biochemical engineering, engineering mathematics, classical and modern physics, and computer science. 14.45 Biological/Biosystems Engineering.Instructional content is defined in code 14.4501. 14.4501 Biological/Biosystems Engineering.A program that prepares individuals to apply mathematical and scientific principles to the design, development and management of biological systems; and includes applications to biology, biochemistry, ecology, and microbiology. Includes instruction in organic chemistry; microbiology; biochemistry; chemical, biological, biochemical, and process engineering; thermodynamics; process control; kinetics and reactor design; electric circuits; biosystem modeling; and bioelectronics and instrumentation.Examples: Biological Engineering Biosystems Engineering Biological Systems Engineering Biomass Engineering Biological/Biosystems Engineering 14.47 Electrical and Computer Engineering. (New)Instructional content is defined in code 14.4701. 14.4701 Electrical and Computer Engineering. (New)A program that prepares individuals to apply mathematical and scientific principles to the design and development of computer systems. Includes instruction in computer architecture, cybersecurity, electronic circuits, electromagnetism, electronic materials and design, micro-fabrication methods and techniques, signal and image processing, and wireless communication networks. 14.48 Energy Systems Engineering. (New)Instructional content for this group of programs is defined in codes 14.4801 - 14.4899. 14.4801 Energy Systems Engineering, General. (New)A program that prepares individuals to apply mathematical and scientific principles to the design, development and operational evaluation of energy generation, storage, conversion, and distribution systems. Includes instruction in conventional and alternative/renewable energy systems, electrical power systems, and electrical system design.Examples: Sustainable/Renewable Energy EngineeringSee also: 15.1701 - Energy Systems Technology/Technician., 03.0210 - Bioenergy. 14.4802 Power Plant Engineering. (New)A program that prepares individuals to plan electrical systems and modify existing electrical systems that generate and use large amounts of electricity required for distribution networks that are economical, safe, and functional. Includes instruction in alternative/renewable energy systems; calculus; circuit analysis; electrical power systems and industry practices; electrical system design; microprocessor architecture; motor control systems; power electronics operation, planning and protection; programmable logic controllers; and project management.See also: 15.1702 - Power Plant Technology/Technician. 14.4899 Energy Systems Engineering, Other. (New)Any instructional program in energy systems engineering not listed above. 14.99 Engineering, Other.Instructional content is defined in code 14.9999. 14.9999 Engineering, Other.Any instructional program in engineering not listed above. 15 ENGINEERING/ENGINEERING-RELATED TECHNOLOGIES/TECHNICIANS. CIP Title or Definition ChangedInstructional programs that prepare individuals to apply basic engineering principles and technical skills in support of engineering and related projects or to prepare for engineering-related fields. 15.00 Engineering Technologies/Technicians, General. CIP Title or Definition ChangedInstructional content for this group of programs is defined in codes 15.0000 - 15.0001. 15.0000 Engineering Technologies/Technicians, General. CIP Title or Definition ChangedA program that generally prepares individuals to apply basic engineering principles and technical skills in support of engineers engaged in a wide variety of projects. Includes instruction in various engineering support functions for research, production, and operations, and applications to specific engineering specialties. 15.0001 Applied Engineering Technologies/Technicians. (New)A program that generally prepares individuals to apply basic engineering principles and technical skills in support of engineers engaged in the management and design of systems, execution of new product designs, improvement of manufacturing processes, and the management and direction of the physical or technical functions of an organization. Includes instruction in basic engineering principles, project management, industrial processes, production and operations management, systems integration and control, quality control, and statistics.Examples: Applied Engineering 15.01 Architectural Engineering Technologies/Technicians. CIP Title or Definition ChangedInstructional content is defined in code 15.0101. 15.0101 Architectural Engineering Technologies/Technicians. CIP Title or Definition ChangedA program that prepares individuals to apply basic engineering principles and technical skills in support of architects, engineers and planners engaged in designing and developing buildings, urban complexes, and related systems. Includes instruction in design testing procedures, building site analysis, model building and computer graphics, engineering drawing, structural systems testing, analysis of prototype mechanical and interior systems, test equipment operation and maintenance, and report preparation. 15.02 Civil Engineering Technologies/Technicians. CIP Title or Definition ChangedInstructional content is defined in code 15.0201. 15.0201 Civil Engineering Technologies/Technicians. CIP Title or Definition ChangedA program that prepares individuals to apply basic engineering principles and technical skills in support of civil engineers engaged in designing and executing public works projects such as highways, dams, bridges, tunnels and other facilities. Includes instruction in site analysis, structural testing procedures, field and laboratory testing procedures, plan and specification preparation, test equipment operation and maintenance, and report preparation. 15.03 Electrical/Electronic Engineering Technologies/Technicians. CIP Title or Definition ChangedInstructional content for this group of programs is defined in codes 15.0303 - 15.0399. 15.0303 Electrical, Electronic, and Communications Engineering Technology/Technician. CIP Title or Definition ChangedA program that prepares individuals to apply basic engineering principles and technical skills in support of electrical, electronics and communication engineers. Includes instruction in electrical circuitry, prototype development and testing, systems analysis and testing, systems maintenance, instrument calibration, and report preparation.Examples: Electronics Technician Consumer Product Electronics TechnicianSee also: 46.0302 - Electrician. 15.0304 Laser and Optical Technology/Technician. CIP Title or Definition ChangedA program that prepares individuals to apply basic engineering principles and technical skills in support of engineers and other professionals engaged in developing and using lasers and other optical for commercial or research purposes. Includes instruction in laser and optical principles, testing and maintenance procedures, safety precautions, specific applications to various tasks, and report preparation.Examples: Photonics Engineering Technology 15.0305 Telecommunications Technology/Technician. CIP Title or Definition ChangedA program that prepares individuals to apply basic engineering principles and technical skills to help design and implement telecommunications systems. Includes instruction in communications protocol, data networking, digital compression algorithms, digital signal processing, Internet access, object-oriented and relational databases, and programming languages.Examples: Wireless Communications Technician Telecommunications Engineering Technology/Technician 15.0306 Integrated Circuit Design Technology/Technician. CIP Title or Definition ChangedA program that prepares individuals to apply basic engineering principles and technical skills to design circuits in microelectronics. Includes instruction in circuit design, circuit layout, circuit analysis, computer-aided drafting, and semi-conductor technologies.Examples: Integrated Circuit Design Integrated Circuit Design and Layout Microcircuit Mask Design 15.0307 Audio Engineering Technology/Technician. (New)A program of study that prepares individuals to apply mathematical and scientific principles to the mixing, recording, and production of music. Includes instruction in acoustics, audio mixing, audio production, audio recording, computer composition of music, music theory, digital devices, and sound technology. 15.0399 Electrical/Electronic Engineering Technologies/Technicians, Other. CIP Title or Definition ChangedAny instructional program in electrical and electronic engineering-related technologies not listed above.Examples: Microelectronics Technology 15.04 Electromechanical Technologies/Technicians. CIP Title or Definition ChangedInstructional content for this group of programs is defined in codes 15.0401 - 15.0499. 15.0401 Biomedical Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers engaged in developing biological or medical systems and products. Includes instruction in instrument calibration, design and installation testing, system safety and maintenance procedures, procurement and installation procedures, and report preparation.Examples: Bioengineering Technology 15.0403 Electromechanical/Electromechanical Engineering Technology/Technician. CIP Title or Definition ChangedA program that prepares individuals to apply basic engineering principles and technical skills in support of engineers engaged in developing and testing automated, servomechanical, and other electromechanical systems. Includes instruction in prototype testing, manufacturing and operational testing, systems analysis and maintenance procedures, and report preparation. 15.0404 Instrumentation Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers engaged in developing control and measurement systems and procedures. Includes instruction in instrumentation design and maintenance, calibration, design and production testing and scheduling, automated equipment functions, applications to specific industrial tasks, and report preparation.Examples: Industrial Instrument Mechanic Instrumentation and Control Technician 15.0405 Robotics Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers and other professionals engaged in developing and using robots. Includes instruction in the principles of robotics, design and operational testing, system maintenance and repair procedures, robot computer systems and control language, specific system types and applications to specific industrial tasks, and report preparation. 15.0406 Automation Engineer Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers and other professionals engaged in developing, installing, calibrating, modifying and maintaining automated systems. Includes instruction in computer systems; electronics and instrumentation; programmable logic controllers (PLCs); electric, hydraulic and pneumatic control systems; actuator and sensor systems; process control; robotics; applications to specific industrial tasks; and report preparation. 15.0407 Mechatronics, Robotics, and Automation Engineering Technology/Technician. (New)A program that prepares individuals to apply basic engineering principles and technical skills in the support of engineers to the design, development, and operational evaluation of autonomous, computer-controlled, electro-mechanical systems. Includes instruction in computer and software engineering, control engineering, electronic and electrical engineering, mechanical engineering, and robotics.See also: 14.4201 - Mechatronics, Robotics, and Automation Engineering. 15.0499 Electromechanical Technologies/Technicians, Other. CIP Title or Definition ChangedAny instructional program in electromechanical technologies not listed above. 15.05 Environmental Control Technologies/Technicians. CIP Title or Definition ChangedInstructional content for this group of programs is defined in codes 15.0501 - 15.0599. 15.0501 Heating, Ventilation, Air Conditioning and Refrigeration Engineering Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers and other professionals engaged in developing and using air conditioning, refrigeration, ventilation, and heating systems. Includes instruction in principles of heating and cooling technology, design and operational testing, inspection and maintenance procedures, installation and operation procedures, and report preparation.Examples: Air Conditioning and Heating (ACH) Air Conditioning and Refrigeration (ACR) Air Conditioning, Heating and Refrigeration (ACHR) Heating, Refrigeration and Air Conditioning (HRAC) Heating, Ventilation, and Air Conditioning (HVAC) Heating, Ventilation, Air Conditioning and Refrigeration (HVAC/R) Air Conditioning TechnologySee also: 47.0201 - Heating, Air Conditioning, Ventilation and Refrigeration Maintenance Technology/Technician. 15.0503 Energy Management and Systems Technology/Technician. (Moved from)Moved from 15.0503 to 15.1701 15.0505 Solar Energy Technology/Technician. (Moved from)Moved from 15.0505 to 15.1703 15.0506 Water Quality and Wastewater Treatment Management and Recycling Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers and other professionals engaged in developing and using water storage, waterpower, and wastewater treatment systems. Includes instruction in water storage, power and/or treatment systems and equipment; testing and inspection procedures; system maintenance procedures; and report preparation. 15.0507 Environmental/Environmental Engineering Technology/Technician. CIP Title or Definition ChangedA program that prepares individuals to apply basic engineering principles and technical skills in support of engineers and other professionals engaged in developing and using indoor and outdoor environmental pollution control systems. Includes instruction in environmental safety principles, testing and sampling procedures, laboratory techniques, instrumentation calibration, safety and protection procedures, equipment maintenance, and report preparation. 15.0508 Hazardous Materials Management and Waste Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers and other professionals engaged in identifying and disposing of hazardous materials. Includes instruction in environmental safety principles, biohazard identification, testing and sampling procedures, laboratory techniques, instrumentation calibration, hazardous waste disposal procedures and systems, safety and protection procedures, equipment maintenance, and report preparation. 15.0599 Environmental Control Technologies/Technicians, Other. CIP Title or Definition ChangedAny instructional program in environmental control technologies not listed above. 15.06 Industrial Production Technologies/Technicians.Instructional content for this group of programs is defined in codes 15.0607 - 15.0699. 15.0607 Plastics and Polymer Engineering Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers and other professionals engaged in developing and using industrial polymers. Includes instruction in the principles of macromolecular chemistry, polymerization and plastic manufacturing processes and equipment, design and operational testing procedures, equipment maintenance and repair procedures, safety procedures, applications to specific products, and report preparation. 15.0611 Metallurgical Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers and metallurgists engaged in developing and using industrial metals and manufacturing processes. Includes instruction in principles of metallurgy, related manufacturing systems, laboratory techniques, testing and inspection procedures, instrument calibration, system and equipment maintenance and repair, applications to specific processes, and report preparation. 15.0612 Industrial Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills in support of industrial engineers and managers. Includes instruction in optimization theory, human factors, organizational behavior, industrial processes, industrial planning procedures, computer applications, and report and presentation preparation. 15.0613 Manufacturing Engineering Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills to the identification and resolution of production problems in the manufacture of products. Includes instruction in machine operations, production line operations, engineering analysis, systems analysis, instrumentation, physical controls, automation, computer-aided manufacturing (CAM), manufacturing planning, quality control, and informational infrastructure. 15.0614 Welding Engineering Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills to the design and engineering of welding and joining systems and the implementation of welding processes. Includes instruction in materials science; computer-aided design; welding design; welding processes; welding metallurgy; automation and robotics; and codes, inspections, testing, and quality assurance.See also: 48.0508 - Welding Technology/Welder. 15.0615 Chemical Engineering Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers and other professionals engaged in the production and utilization of chemicals on an industrial scale. Includes instruction in organic chemistry, inorganic chemistry, analytical chemistry, biochemistry, thermodynamics, fluid mechanics, industrial processes, instrumental analysis, sampling and monitoring, and chemical and environmental safety. 15.0616 Semiconductor Manufacturing Technology/Technician. CIP Title or Definition ChangedA program that prepares individuals to apply basic engineering principles and technical skills to operate and monitor equipment for the fabrication of semiconductors or microchips from silicon wafers, and to troubleshoot, maintain, and repair the specialized equipment used in this process. Includes instruction in AC and DC circuits, digital fundamentals, solid state devices, manufacturing processes, vacuum principles and technology, industrial electronics, quality assurance, and semiconductor manufacturing technology. 15.0617 Composite Materials Technology/Technician. (New)A program of study that prepares individuals to apply basic engineering principles and technical skills in support of engineers and other professionals engaged in the development, manufacture, and use of composite materials in aircraft technology, automotive technology, boats, medical prostheses, and wind turbines. Includes instruction in computer-aided design and drafting, composite materials and processes, composite maintenance, composite manufacturing, composite repair, material science, and mold manufacturing and production. 15.0699 Industrial Production Technologies/Technicians, Other. CIP Title or Definition ChangedAny instructional program in industrial production technologies not listed above. 15.07 Quality Control and Safety Technologies/Technicians.Instructional content for this group of programs is defined in codes 15.0701 - 15.0799. 15.0701 Occupational Safety and Health Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers and other professionals engaged in maintaining job-related health and safety standards. Includes instruction in safety engineering principles, inspection and monitoring procedures, testing and sampling procedures, laboratory techniques, applications to specific work environments, and report preparation. 15.0702 Quality Control Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers and other professionals engaged in maintaining consistent manufacturing and construction standards. Includes instruction in quality control systems management principles, technical standards applicable to specific engineering and manufacturing projects, testing procedures, inspection procedures, related instrumentation and equipment operation and maintenance, and report preparation. 15.0703 Industrial Safety Technology/Technician. CIP Title or Definition ChangedA program that prepares individuals to apply basic engineering principles and technical skills to assist engineers and other professionals in implementing and enforcing industrial safety standards to mitigate damage, reduce risks, and prevent accidents. Includes instruction in industrial processes, industrial hygiene, injury prevention, toxicology, ergonomics, risk analysis, system and process safety, safety performance measurement, human factors, human behavior, and applicable law and regulations. 15.0704 Hazardous Materials Information Systems Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills to assist engineers and other professionals in implementing, monitoring, and enforcing hazardous materials management and removal. Includes instruction in environmental science, environmental health, human behavior, economics, management science, information systems and applications, and communication skills. 15.0705 Process Safety Technology/Technician. (New)A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers engaged in developing methods to mitigate damage, reduce risks, and prevent accidents. Includes instruction in design for injury prevention, engineering for process safety, environmental psychology, function-based risk analysis, fundamentals of industrial engineering, operations research, probability and statistics, risk assessment and reduction, and safety engineering. 15.0799 Quality Control and Safety Technologies/Technicians, Other.Any instructional program in quality control and safety technologies not listed above.Examples: Non-Destructive Testing Technology 15.08 Mechanical Engineering Related Technologies/Technicians.Instructional content for this group of programs is defined in codes 15.0801 - 15.0899. 15.0801 Aeronautical/Aerospace Engineering Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers and other professionals engaged in developing, manufacturing and testing aircraft, spacecraft and their systems. Includes instruction in aircraft/spacecraft systems technology, design and development testing, prototype and operational testing, inspection and maintenance procedures, instrument calibration, test equipment operation and maintenance, and report preparation.See also: 47.0609 - Avionics Maintenance Technology/Technician. 15.0803 Automotive Engineering Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers and other professionals engaged in developing, manufacturing and testing self-propelled ground vehicles and their systems. Includes instruction in vehicular systems technology, design and development testing, prototype and operational testing, inspection and maintenance procedures, instrument calibration, test equipment operation and maintenance, and report preparation.See also: 47.0604 - Automobile/Automotive Mechanics Technology/Technician. 15.0805 Mechanical/Mechanical Engineering Technology/Technician. CIP Title or Definition ChangedA program that prepares individuals to apply basic engineering principles and technical skills in support of engineers engaged in the design and development phases of a wide variety of projects involving mechanical systems. Includes instruction in principles of mechanics, applications to specific engineering systems, design testing procedures, prototype and operational testing and inspection procedures, manufacturing system-testing procedures, test equipment operation and maintenance, and report preparation. 15.0806 Marine Engineering Technology/Technician. (New)A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers and other professionals engaged in shipboard mechanical and electrical engineering and the maintenance and operation of marine engines, including gas, diesel, and steam engines. Includes instruction in automation, diesel-powered systems, electrical circuits and systems, engine performance, hydraulics, manufacturing, motor-powered systems, refrigeration and air-conditioning, steam-powered systems, and welding.See also: 48.0704 - Wooden Boatbuilding Technology/Technician. 15.0807 Motorsports Engineering Technology/Technician. (New)A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers and other professionals engaged in the design, construction, and repair of vehicles used in racing and motorsports. Includes instruction in aerodynamics, design, vehicle dynamics, performance engines, fluid mechanics, computer-aided design (CAD), mechanical engineering, and welding. 15.0899 Mechanical Engineering Related Technologies/Technicians, Other.Any instructional program in mechanical engineering-related technologies not listed above. 15.09 Mining and Petroleum Technologies/Technicians.Instructional content for this group of programs is defined in codes 15.0901 - 15.0999. 15.0901 Mining Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers and other professionals engaged in the development and operation of mines and related mineral processing facilities. Includes instruction in principles of mineral extraction and related geology, mineral field mapping and site analysis, testing and sampling methods, instrument calibration, assay analysis, test equipment operation and maintenance, mine environment and safety monitoring procedures, mine inspection procedures, and report preparation. 15.0903 Petroleum Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers and other professionals engaged in the development and operation of oil and natural gas extraction and processing facilities. Includes instruction in principles of petroleum extraction and related geology, petroleum field mapping and site analysis, testing and sampling methods, instrument calibration, laboratory analysis, test equipment operation and maintenance, environment and safety monitoring procedures for oil/gas fields and facilities, facility inspection procedures, and report preparation. 15.0999 Mining and Petroleum Technologies/Technicians, Other.Any instructional program in mining and petroleum engineering technologies not listed above. 15.10 Construction Engineering Technology/Technician. CIP Title or Definition ChangedInstructional content is defined in code 15.1001. 15.1001 Construction Engineering Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers, engineering contractors and other professionals engaged in the construction of buildings and related structures. Includes instruction in basic structural engineering principles and construction techniques, building site inspection, site supervision, construction personnel supervision, plan and specification interpretation, supply logistics and procurement, applicable building codes, and report preparation. 15.11 Engineering-Related Technologies/Technicians. CIP Title or Definition ChangedInstructional content for this group of programs is defined in codes 15.1102 - 15.1199. 15.1102 Surveying Technology/Surveying.A program that prepares individuals to apply mathematical and scientific principles to the delineation, determination, planning and positioning of land tracts, land and water boundaries, land contours and features; and the preparation of related maps, charts and reports. Includes instruction in applied geodesy, computer graphics, photointerpretation, plane and geodetic surveying, mensuration, traversing, survey equipment operation and maintenance, instrument calibration, and basic cartography. 15.1103 Hydraulics and Fluid Power Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers and other professionals engaged in developing and using fluid power and transportation systems. Includes instruction in fluid mechanics and hydraulics principles, fluid power systems, pipeline and pumping systems, design and operational testing, inspection and maintenance procedures, related instrumentation, and report preparation. 15.1199 Engineering-Related Technologies/Technicians, Other. CIP Title or Definition ChangedAny programs in engineering-related technologies and technicians not listed above. 15.12 Computer Engineering Technologies/Technicians.Instructional content for this group of programs is defined in codes 15.1201 - 15.1299. 15.1201 Computer Engineering Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills in support of computer engineers engaged in designing and developing computer systems and installations. Includes instruction in computer electronics and programming, prototype development and testing, systems installation and testing, solid state and microminiature circuitry, peripheral equipment, and report preparation. 15.1202 Computer/Computer Systems Technology/Technician. CIP Title or Definition ChangedA program that prepares individuals to apply basic engineering principles and technical skills in support of professionals who use computer systems. Includes instruction in basic computer design and architecture, programming, problems of specific computer applications, component and system maintenance and inspection procedures, hardware and software problem diagnosis and repair, and report preparation.See also: 47.0104 - Computer Installation and Repair Technology/Technician. 15.1203 Computer Hardware Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills to support engineers in designing computer hardware and peripheral systems. Includes instruction in computer systems design, computer architecture, computer electronics, processors, peripherals, testing equipment, and computer manufacturing processes. 15.1204 Computer Software Technology/Technician.A program that prepares individuals to apply basic engineering principles and technical skills to support engineers in developing, implementing, and evaluating computer software and program applications. Includes instruction in computer programming, programming languages, databases, user interfaces, networking and warehousing, encryption and security, software testing and evaluation, and customization. 15.1299 Computer Engineering Technologies/Technicians, Other.Any instructional program in computer engineering technologies not listed above. 15.13 Drafting/Design Engineering Technologies/Technicians.Instructional content for this group of programs is defined in codes 15.1301 - 15.1399. 15.1301 Drafting and Design Technology/Technician, General.A program that prepares individuals to generally apply technical skills to create working drawings and computer simulations for a variety of applications. Includes instruction in specification interpretation, dimensioning techniques, drafting calculations, material estimation, technical communications, computer applications, and interpersonal communications. 15.1302 CAD/CADD Drafting and/or Design Technology/Technician.A program that prepares individuals to apply technical skills and advanced computer software and hardware to the creation of graphic representations and simulations in support of engineering projects. Includes instruction in engineering graphics, two-dimensional and three-dimensional engineering design, solids modeling, engineering animation, computer-aided drafting (CAD), computer-aided design (CADD), and auto-CAD techniques.Examples: Engineering Graphics and Design Engineering Graphics Technology 15.1303 Architectural Drafting and Architectural CAD/CADD.A program that prepares individuals to apply technical knowledge and skills to develop working drawings and electronic simulations for architectural and related construction projects. Includes instruction in basic construction and structural design, architectural rendering, architectural-aided drafting (CAD), layout and designs, architectural blueprint interpretation, building materials, and basic structural wiring diagramming.See also: 04.0901 - Architectural Technology/Technician., 04.0201 - Architecture. 15.1304 Civil Drafting and Civil Engineering CAD/CADD.A program that prepares individuals to apply technical knowledge and skills to develop working drawing and electronic simulations in support of civil engineers, geological engineers, and related professionals. Includes instruction in basic civil engineering principles, geological and seismographic mapping, machine drafting, computer-aided drafting (CAD), pipe drafting, survey interpretation, and blueprint reading. 15.1305 Electrical/Electronics Drafting and Electrical/Electronics CAD/CADD.A program that prepares individuals to apply technical knowledge and skills to develop working schematics and representations in support of electrical/electronic engineers, computer engineers, and related professionals. Includes instruction in basic electronics, electrical systems and computer layouts; electrode-mechanical drafting; manufacturing circuitry; computer-aided drafting (CAD); and electrical systems specification interpretation. 15.1306 Mechanical Drafting and Mechanical Drafting CAD/CADD.A program that prepares individuals to apply technical knowledge and skills to develop working drawings and electronic simulations in support of mechanical and industrial engineers, and related professionals. Includes instruction in manufacturing materials and processes, mechanical drafting, electrode-mechanical drafting, basic metallurgy, geometric dimensioning and tolerancing, blueprint reading, and technical communication. 15.1307 3-D Modeling and Design Technology/Technician. (New)A program that prepares individuals to apply technical knowledge and skills in the use of three-dimensional (3-D) computer technology to create technical illustrations and models used in manufacturing, design, production, and construction. Includes instruction in 3-D computer-aided design (CAD), 3-D printing, 3-D model design and construction, and 3-D scanning. 15.1399 Drafting/Design Engineering Technologies/Technicians, Other.Any instructional program in drafting/design engineering technologies not listed above. 15.14 Nuclear Engineering Technology/Technician. CIP Title or Definition ChangedInstructional content is defined in code 15.1401. 15.1401 Nuclear Engineering Technology/Technician.A program that prepares individuals to apply basic engineering, knowledge and technical skills in support of engineer and other professionals operating nuclear facilities and engaged in nuclear applications and safety procedures. Includes instruction in physics, nuclear science, nuclear systems, nuclear plant and systems design, radiological safety, radiological applications, and applicable law and regulations. 15.15 Engineering-Related Fields.Instructional content for this group of programs is defined in codes 15.1501 - 15.1599. 15.1501 Engineering/Industrial Management.A program that focuses on the application of engineering principles to the planning and operational management of industrial and manufacturing operations, and prepares individuals to plan and manage such operations. Includes instruction in accounting, engineering economy, financial management, industrial and human resources management, industrial psychology, management information systems, mathematical modeling and optimization, quality control, operations research, safety and health issues, and environmental program management. 15.1502 Engineering Design.An instructional program that prepares individuals to apply mathematical and scientific principles to engineering problems involving marrying or coordinating multiple dissimilar systems to carry out single functions or achieve common purposes, organizing system components for maximum flexibility and utility, planning engineering projects involving multiple tasks and design solutions, planning design testing and evaluation procedures, resolving specification and requirement conflicts, and choosing among competing theoretical solutions. Note: this program was re-instated after being deleted from CIP 2000; previously, it was coded as 14.2901. 15.1503 Packaging Science.A program that focuses on the application of scientific, technological, design, and business principles to the development of packages and packaging materials, including raw material production, conversion of raw materials into usable forms, design, distribution, and post-use recycling and reuse. Includes instruction in principles of packaging, materials sciences, distribution and transportation, engineering and technology, graphic design, packaging regulations, and business and marketing. 15.1599 Engineering-Related Fields, Other.Any instructional program in engineering-related fields not listed above. 15.16 Nanotechnology.Instructional content is defined in code 15.1601. 15.1601 Nanotechnology.A program that prepares individuals to apply mathematical, scientific, and engineering principles and technical skills to manipulate matter at the atomic and molecular level (in the range of 1-100 nanometers) and to design, fabricate, and integrate nanoscale structures, devices, and systems. Includes instruction in materials science, thermodynamics, nanomaterials, nanoelectronics, and nano/micro device fabrication and testing.Examples: Nanofabrication Technology Nanoscience Technician 15.17 Energy Systems Technologies/Technicians. (New)Instructional content for this group of programs is defined in codes 15.1701 - 15.1799. 15.1701 Energy Systems Technology/Technician. (Moved to)CIP Title or Definition ChangedA program that prepares individuals to apply basic engineering principles and technical skills in support of engineers and other professionals engaged in developing energy-efficient systems or monitoring energy use. Includes instruction in principles of energy conservation, instrumentation calibration, monitoring systems and test procedures, energy loss inspection procedures, energy conservation techniques, and report preparation.Examples: Energy Management and Systems Technology/TechnicianSee also: 03.0209 - Energy and Environmental Policy., 03.0210 - Bioenergy., 14.4801 - Energy Systems Engineering, General., 47.0701 - Energy Systems Installation and Repair Technology/Technician. 15.1702 Power Plant Technology/Technician. (New)A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers engaged in the operation and maintenance of electricity generating power plants. Includes instruction in basic electricity, electrical power, generator operations, industrial controls, power plant instrumentation, power plant theory, pollution control, reactor theory, thermodynamics, turbines, and water chemistry.See also: 14.4802 - Power Plant Engineering. 15.1703 Solar Energy Technology/Technician. (Moved to)A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers and other professionals engaged in developing solar-powered energy systems. Includes instruction in solar energy principles, energy storage and transfer technologies, testing and inspection procedures, system maintenance procedures, and report preparation.See also: 47.0703 - Solar Energy System Installation and Repair Technology/Technician. 15.1704 Wind Energy Technology/Technician. (New)A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers and other professionals engaged in developing wind-powered energy systems. Includes instruction in wind energy principles, energy storage and transfer technologies, testing and inspection procedures, system maintenance procedures, and report preparation.Examples: Wind Turbine Technology/TechnicianSee also: 47.0704 - Wind Energy System Installation and Repair Technology/Technician. 15.1705 Hydroelectric Energy Technology/Technician. (New)A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers and other professionals engaged in developing hydroelectric energy systems. Includes instruction in hydroelectric energy principles, energy storage and transfer technologies, testing and inspection procedures, system maintenance procedures, and report preparation.See also: 47.0705 - Hydroelectric Energy System Installation and Repair Technology/Technician. 15.1706 Geothermal Energy Technology/Technician. (New)A program that prepares individuals to apply basic engineering principles and technical skills in support of engineers and other professionals engaged in developing geothermal energy systems. Includes instruction in geothermal energy principles, energy storage and transfer technologies, testing and inspection procedures, system maintenance procedures, and report preparation.See also: 47.0706 - Geothermal Energy System Installation and Repair Technology/Technician. 15.1799 Energy Systems Technologies/Technicians, Other. (New)Any instructional program in energy systems technologies not listed above.See also: 47.0799 - Energy Systems Maintenance and Repair Technologies/Technicians, Other. 15.99 Engineering/Engineering-Related Technologies/Technicians, Other. CIP Title or Definition ChangedInstructional content is defined in code 15.9999. 15.9999 Engineering/Engineering-Related Technologies/Technicians, Other. CIP Title or Definition ChangedAny instructional program in engineering technologies and engineering-related fields not listed above.Examples: Product Design Engineering Technology 16 FOREIGN LANGUAGES, LITERATURES, AND LINGUISTICSInstructional programs that focus on foreign languages and literatures, the humanistic and scientific study of linguistics, and the provision of professional interpretation and translation services. 16.01 Linguistic, Comparative, and Related Language Studies and Services.Instructional content for this group of programs is defined in codes 16.0101 - 16.0199. 16.0101 Foreign Languages and Literatures, General.A general program that focuses on one or more modern foreign languages that is not specific as to the name of the language(s) studied; that is otherwise undifferentiated; or that introduces students to language studies at the basic/elementary level.See also: 30.4001 - Economics and Foreign Language/Literature., 30.4501 - History and Language/Literature. 16.0102 Linguistics.A program that focuses on language, language development, and relationships among languages and language groups from a humanistic and/or scientific perspective. Includes instruction in subjects such as psycholinguistics, behavioral linguistics, language acquisition, sociolinguistics, mathematical and computational linguistics, grammatical theory and theoretical linguistics, philosophical linguistics, philology and historical linguistics, comparative linguistics, phonetics, phonemics, dialectology, semantics, functional grammar and linguistics, language typology, lexicography, morphology and syntax, orthography, stylistics, structuralism, rhetoric, and applications to artificial intelligence.See also: 16.1602 - Linguistics of ASL and Other Sign Languages., 30.4801 - Linguistics and Computer Science., 30.4701 - Linguistics and Anthropology. 16.0103 Language Interpretation and Translation.A program that prepares individuals to be professional interpreters and/or translators of documents and data files, either from English or (Canadian) French into another language or languages or vice versa. Includes intensive instruction in one or more foreign languages plus instruction in subjects such as single- and multiple-language interpretation, one- or two-way interpretation, simultaneous interpretation, general and literary translation, business translation, technical translation, and other specific applications of linguistic skills.See also: 16.1603 - Sign Language Interpretation and Translation. 16.0104 Comparative Literature.A program that focuses on two or more literary traditions in the original languages or in translation. Includes instruction in comparative linguistics; applicable foreign languages; English/French language and literature; literary criticism; and applications to genre, period, national, and textual studies as well as literary forms such as poetry, prose, and drama.See also: 23.1401 - General Literature., 30.2601 - Cultural Studies/Critical Theory and Analysis., 30.3601 - Cultural Studies and Comparative Literature. 16.0105 Applied Linguistics.A program that focuses on language-related concerns in the everyday world, including language education, acquisition of first and additional languages, discourse analysis, language assessment, literacy, and language policy and planning. Includes instruction in linguistic theory; language teaching and learning; discourse analysis; language and cognition; and language, culture, and identity. 16.0199 Linguistic, Comparative, and Related Language Studies and Services, Other.Any instructional program in linguistic, comparative, and related language studies and services not listed above. 16.02 African Languages, Literatures, and Linguistics.Instructional content is defined in code 16.0201. 16.0201 African Languages, Literatures, and Linguistics.A program that focuses on one or more of the languages native to the African continent, including, but not limited to, Bantu languages, Nilo-Saharan languages, Niger-Congo languages, Khoisan languages, and the Chadic and Ethiopic languages of the Hamito-Semitic language family. Includes instruction in philology, dialects, and oral and written literatures. 16.03 East Asian Languages, Literatures, and Linguistics.Instructional content for this group of programs is defined in codes 16.0300 - 16.0399. 16.0300 East Asian Languages, Literatures, and Linguistics, General.A general program that focuses on one or more of the languages of East Asia, including, but not limited to, the Sino-Tibetan, Japanese, and Korean languages. Includes instruction in philology; linguistics; dialects and pidgins; literature; and applications to business, science/technology, and other settings. 16.0301 Chinese Language and Literature.A program that focuses on the languages of China and associated dialects and literature. Includes instruction in philology; linguistics; dialects and pidgins; and applications to business, science/technology, and other settings. 16.0302 Japanese Language and Literature.A program that focuses on the Japanese language. Includes instruction in philology; Ancient, Medieval, and Modern Japanese; dialects; and applications to business, science/technology, and other settings. 16.0303 Korean Language and Literature.A program that focuses on the Korean language. Includes instruction in philology; dialects; and applications to business, science/technology, and other settings. 16.0304 Tibetan Language and Literature.A program that focuses on the Tibetan language. Includes instruction in philology; secular and religious Tibetan; dialects; and applications to business, science/technology, Buddhist studies, and other settings. 16.0399 East Asian Languages, Literatures, and Linguistics, Other.Any instructional program in East Asian languages, literatures, and linguistics not listed above. 16.04 Slavic, Baltic and Albanian Languages, Literatures, and Linguistics.Instructional content for this group of programs is defined in codes 16.0400 - 16.0499. 16.0400 Slavic Languages, Literatures, and Linguistics, General.A general program that focuses on one or more of the Slavic languages of Central and Eastern Europe. Includes instruction in philology; linguistics; dialects and pidgins; literature; and applications to business, science/technology, and other settings. 16.0401 Baltic Languages, Literatures, and Linguistics.A program that focuses on the languages of the Baltic peoples, including, but not limited to, the modern languages of Latvian and Lithuanian, and extinct languages such as Old Prussian and Curionian. Includes instruction in philology; literature; and applications to business, science/technology, and other settings. 16.0402 Russian Language and Literature.A program that focuses on the Russian language. Includes instruction in philology; dialects; literature; and applications to business, science/technology, and other settings. 16.0404 Albanian Language and Literature.A program that focuses on the Albanian language. Includes instruction in Albanian/Illyrian philology; Ghegg and Tosk dialects; and applications to business, science/technology, and other settings. 16.0405 Bulgarian Language and Literature.A program that focuses on the Bulgarian language. Includes instruction in philology; literature; and applications to business, science/technology, and other settings. 16.0406 Czech Language and Literature.A program that focuses on the Czech language. Includes instruction in philology; literature; and applications to business, science/technology, and other settings. 16.0407 Polish Language and Literature.A program that focuses on the Polish language. Includes instruction in philology; dialects; literature; and applications to business, science/technology, and other settings. 16.0408 Bosnian, Serbian, and Croatian Languages and Literatures.A program that focuses on the Bosnian, Serbian and/or Croatian languages. Includes instruction in philology; dialects; and applications to business, science/technology, and other settings. 16.0409 Slovak Language and Literature.A program that focuses on the Slovak language. Includes instruction in philology; dialects; literature; and applications to business, science/technology, and other settings. 16.0410 Ukrainian Language and Literature.A program that focuses on the Ukrainian language. Includes instruction in philology; dialects; literature; and applications to business, science/technology, and other settings. 16.0499 Slavic, Baltic, and Albanian Languages, Literatures, and Linguistics, Other.A program that focuses on Slavic languages, literatures, and linguistics not listed above. 16.05 Germanic Languages, Literatures, and Linguistics.Instructional content for this group of programs is defined in codes 16.0500 - 16.0599. 16.0500 Germanic Languages, Literatures, and Linguistics, General.A general program that focuses on one or more of the Germanic languages of Western, Central, and Northern Europe. Includes instruction in philology; linguistics; dialects and pidgins; literature; and applications to business, science/technology, and other settings. 16.0501 German Language and Literature.A program that focuses on the German language and related dialects. Includes instruction in philology; dialects; and applications to business, science/technology, and other settings. 16.0502 Scandinavian Languages, Literatures, and Linguistics.A program that focuses on one or more of the languages, literatures, and linguistics of the peoples of Scandinavia and associated Northern European island groups. Programs may involve multiple languages and language families, not be specific as to the name of the language(s) studied, or be otherwise undifferentiated. 16.0503 Danish Language and Literature.A program that focuses on the Danish language and related dialects. Includes instruction in philology; literature; and applications to business, science/technology, and other settings. 16.0504 Dutch/Flemish Language and Literature.A program that focuses on the Dutch language and related dialects. Includes instruction in philology; literature; Dutch Creoles; and applications to business, science/technology, and other settings. 16.0505 Norwegian Language and Literature.A program that focuses on the Norwegian language and related dialects. Includes instruction in philology; dialects; literature; and applications to business, science/technology, and other settings. 16.0506 Swedish Language and Literature.A program that focuses on the Swedish language and related dialects. Includes instruction in philology; literature; and applications to business, science/technology, and other settings. 16.0599 Germanic Languages, Literatures, and Linguistics, Other.Any instructional program in Germanic languages, literatures, and linguistics not listed above. 16.06 Modern Greek Language and Literature.Instructional content is defined in code 16.0601. 16.0601 Modern Greek Language and Literature.A program that focuses on the development and use of the Greek language in the period dating from the late 15th century to the present. Includes instruction in modern Greek literature, current Greek dialects, and applications to business, science/technology, and other settings. 16.07 South Asian Languages, Literatures, and Linguistics.Instructional content for this group of programs is defined in codes 16.0700 - 16.0799. 16.0700 South Asian Languages, Literatures, and Linguistics, General.A general program that focuses on one or more of the languages, literatures, and linguistics of the peoples of the Indian subcontinent and associated borderlands and island groups. 16.0701 Hindi Language and Literature.A program that focuses on the Hindi language, antecessors, and related dialects. Includes instruction in philology; Modern Hindi; Hindustani; related dialects; and applications in business, science/technology, and other settings. 16.0702 Sanskrit and Classical Indian Languages, Literatures, and Linguistics.A program that focuses on Sanskrit and related ancient and classical Indo-Aryan languages. Includes instruction in Vedic and Classical Sanskrit, Pali and other Prakrits, and the historical development of Indo-Aryan languages and their relation to Indo-European languages such as Greek, Latin and the Baltic languages. 16.0704 Bengali Language and Literature.A program that focuses on the Bengali language (Bangla) and related dialects. Includes instruction in philology; dialects; and applications in business, science/technology, and other settings. 16.0705 Punjabi Language and Literature.A program that focuses on the Punjabi language (Punjabi) and related dialects. Includes instruction in philology; dialects; and applications in business, science/technology, and other settings. 16.0706 Tamil Language and Literature.A program that focuses on the Tamil language and related dialects. Includes instruction in philology; Classical and Modern Tamil; dialects; and applications in business, science/technology, and other settings. 16.0707 Urdu Language and Literature.A program that focuses on the Urdu language and related dialects. Includes instruction in philology; Modern Urdu; dialects; and applications in business, science/technology, and other settings. 16.0799 South Asian Languages, Literatures, and Linguistics, Other.Any instructional program in South Asian languages, literatures, and linguistics not listed above. 16.08 Iranian/Persian Languages, Literatures, and Linguistics.Instructional content is defined in code 16.0801. 16.0801 Iranian Languages, Literatures, and Linguistics.A program that focuses on the languages used in ancient, medieval, and modern Iran and its border regions, including modern Persian, Avestan/Old Persian, and related modern and extinct languages. Includes instruction in applications of modern Persian and other languages in business, science/technology, and other settings. 16.09 Romance Languages, Literatures, and Linguistics.Instructional content for this group of programs is defined in codes 16.0900 - 16.0999. 16.0900 Romance Languages, Literatures, and Linguistics, General.A general program that focuses on one or more of the Romance languages of Western, Central, and Southern Europe. Includes instruction in philology; linguistics; dialects and pidgins; literature; and applications to business, science/technology, and other settings. 16.0901 French Language and Literature.A program that focuses on the French language and related dialects and creoles. Includes instruction in philology; Metropolitan French; Canadian French; African and Caribbean Creoles; dialects; and applications in business, science/technology, and other settings. 16.0902 Italian Language and Literature.A program that focuses on the Italian language and related dialects. Includes instruction in philology; dialects; and applications in business, science/technology, and other settings. 16.0904 Portuguese Language and Literature.A program that focuses on the Portuguese language and related dialects. Includes instruction in philology; Metropolitan Portuguese; Luso-Brazilian Portuguese; dialects; and applications in business, science/technology, and other settings. 16.0905 Spanish Language and Literature.A program that focuses on the Spanish language and related dialects. Includes instruction in philology; Modern Castillan; Latin American and regional Spanish dialects; and applications in business, science/technology, and other settings. 16.0906 Romanian Language and Literature.A program that focuses on the Romanian language and related dialects. Includes instruction in philology; dialects; and applications in business, science/technology, and other settings. 16.0907 Catalan Language and Literature.A program that focuses on the Catalan language and related dialects. Includes instruction in philology; dialects; and applications in business, science/technology, and other settings. 16.0908 Hispanic and Latin American Languages, Literatures, and Linguistics, General.A program that focuses on the languages and literatures of the Spanish- and Portuguese-speaking areas of the world, including the Iberian, Latin American, and Lusophone worlds. Includes instruction in Spanish and Portuguese language and linguistics; regional and Latin American dialects; and Spanish, Portuguese, Spanish American, Luso-Brazilian, and Chicano literature. 16.0999 Romance Languages, Literatures, and Linguistics, Other.Any instructional program in Romance languages, literatures, and linguistics not listed above. 16.10 American Indian/Native American Languages, Literatures, and Linguistics.Instructional content is defined in code 16.1001. 16.1001 American Indian/Native American Languages, Literatures, and Linguistics. CIP Title or Definition ChangedA program that focuses on one or more of the languages native to the Western Hemisphere, with an emphasis on American Indian languages, but including other Native American languages. Includes instruction in philology; oral and written literatures; Inuit and Aleut languages; North American language families, including, but not limited to, Algonkian, Athabascan, Siouan, Muskogean, Iroquoian, Kumeyaay, Yuman, Mayan, Zapotecan, and Uto-Aztecan; South American language families, including, but not limited to, Andean-Equatorial, Ge-Pano-Carib, and Macro-Chibchan; and other minor languages. 16.11 Middle/Near Eastern and Semitic Languages, Literatures, and Linguistics.Instructional content for this group of programs is defined in codes 16.1100 - 16.1199. 16.1100 Middle/Near Eastern and Semitic Languages, Literatures, and Linguistics, General.A general program that focuses on one or more of the Middle/Near Eastern and Semitic languages of the ancient and modern Middle/Near East, Western Asia, North Africa, and Europe. Includes instruction in philology; linguistics; dialects and pidgins; literature; and applications to business, science/technology, and other settings. 16.1101 Arabic Language and Literature.A program that focuses on the Arabic language. Includes instruction in philology; Classical Arabic; Modern Standard Arabic; dialects; and applications to business, science/technology, and other settings. 16.1102 Hebrew Language and Literature.A program that focuses on the Hebrew language. Includes instruction in philology; Biblical Hebrew (including Pre- and Post-Exilic scripts); Modern Hebrew; dialects; and applications to business, science/technology, and other settings. 16.1103 Ancient Near Eastern and Biblical Languages, Literatures, and Linguistics.A program that focuses on one or more of the extinct Semitic and/or Non-Semitic languages spoken in the ancient Near East, including those used to write historical Jewish and Christian religious texts. These languages include, but are not limited to, Egyptian/Coptic, Sumerian, Akkadian, Babylonian, Assyrian, Aramaic, Cannanite, Phonecian, Samarian, Ugaritic, Syriac, Mandean, Hattic, Elamite, Hurrian, Hittite, Urartian, Lydian, Luwian, Lycian, Palaic, Sabaean/South Arabian, and other associated languages. Includes instruction in philology, epigraphy, papyrology, numismatics, and textual studies. 16.1199 Middle/Near Eastern and Semitic Languages, Literatures, and Linguistics, Other.Any instructional program in Middle/Near Eastern and Semitic languages, literatures, and linguistics not listed above. 16.12 Classics and Classical Languages, Literatures, and Linguistics.Instructional content for this group of programs is defined in codes 16.1200 - 16.1299. 16.1200 Classics and Classical Languages, Literatures, and Linguistics, General.A general program that focuses on the literary culture of the ancient Graeco-Roman world and the Greek and Latin languages and literatures and their development prior to the fall of the Roman Empire. 16.1202 Ancient/Classical Greek Language and Literature.A program that focuses on the Greek language and literature from its origins through the fall of the Byzantine (Eastern Roman) Empire, as a secular and/or theological subject. Includes instruction in philology, Attic and Hellenistic dialects, Koine (Biblical) Greek, and Medieval or Byzantine Greek. 16.1203 Latin Language and Literature.A program that focuses on the Latin language and literature from its origins through its decline and its current ecclesiastical usage, as a secular and/or theological subject. Includes instruction in philology, related Italic dialects, Late Roman and Medieval Latin, and modern Church Latin. 16.1299 Classics and Classical Languages, Literatures, and Linguistics, Other.Any instructional program in classics and classical languages, literatures, and linguistics not listed above. 16.13 Celtic Languages, Literatures, and Linguistics.Instructional content is defined in code 16.1301. 16.1301 Celtic Languages, Literatures, and Linguistics.A program that focuses on the historical and modern languages spoken by the Celtic peoples of the British Isles, Continental Europe, and Asia Minor, including, but not limited to, modern languages such as Irish, Scots Gaelic, Welsh, and Breton; and extinct or revived languages such as Cornish, Manx, Galatian, and others. Includes instruction in philology; linguistics; dialects and pidgins; literature; and applications to business, science/technology, and other settings. 16.14 Southeast Asian and Australasian/Pacific Languages, Literatures, and Linguistics.Instructional content for this group of programs is defined in codes 16.1400 - 16.1499. 16.1400 Southeast Asian Languages, Literatures, and Linguistics, General.A general program that focuses on one or more of the modern languages spoken in mainland Southeast Asia and the Indonesian and Philippines Archipelagoes, including, but not limited to, members of the Thai, Tibeto-Burman, and Malayo-Polynesian language families. 16.1401 Australian/Oceanic/Pacific Languages, Literatures, and Linguistics.A program that focuses on the languages native to Papua/New Guinea, Australia, New Zealand, and the island groups of the Pacific Ocean, including, but not limited to, the Papuan languages, the Australian languages, the Micronesian languages, and the Polynesian languages. Includes instruction in philology; linguistics; dialects and pidgins; literature; and applications to business, science/technology, and other settings. 16.1402 Indonesian/Malay Languages and Literatures.A program that focuses on the Malay and Indonesian languages. Includes instruction in philology; dialects; and applications to business, science/technology, and other settings. 16.1403 Burmese Language and Literature.A program that focuses on the Burmese language. Includes instruction in philology; literature; and applications to business, science/technology, and other settings. 16.1404 Filipino/Tagalog Language and Literature.A program that focuses on the modern Filipino/Tagalog language as used in the Philippines. Includes instruction in philology; literature; and applications to business, science/technology, and other settings. 16.1405 Khmer/Cambodian Language and Literature.A program that focuses on the Khmer language as spoken in Cambodia. Includes instruction in philology; literature; and applications to business, science/technology, and other settings. 16.1406 Lao Language and Literature.A program that focuses on the Lao language. Includes instruction in philology; dialects; literature; and applications to business, science/technology, and other settings. 16.1407 Thai Language and Literature.A program that focuses on the Thai languages. Includes instruction in philology; dialects; literature; and applications to business, science/technology, and other settings. 16.1408 Vietnamese Language and Literature.A program that focuses on the Vietnamese language. Includes instruction in philology; dialects; literature; and applications to business, science/technology, and other settings. 16.1409 Hawaiian Language and Literature. (New)A program that focuses on the Hawaiian language and related dialects. Includes instruction in philology; dialects; and applications to business, science/technology, and other settings. 16.1499 Southeast Asian and Australasian/Pacific Languages, Literatures, and Linguistics, Other.Any instructional program in Southeast Asian and Australasian/Pacific languages, literatures, and linguistics not listed above. 16.15 Turkic, Uralic-Altaic, Caucasian, and Central Asian Languages, Literatures, and Linguistics.Instructional content for this group of programs is defined in codes 16.1501 - 16.1599. 16.1501 Turkish Language and Literature.A program that focuses on the Turkish language in either or both of its pre-modern and modern variants. Includes instruction in philology; Ottoman Turkish; Modern Turkish; dialects; and applications to business, science/technology, and other settings. 16.1502 Uralic Languages, Literatures, and Linguistics.A program that focuses on Uralic languages, including, but not limited to, Finnish, Estonian, Karelian, and Sami. Includes instruction in philology; oral and written literatures; and applications to business, science/technology, and other settings. 16.1503 Hungarian/Magyar Language and Literature.A program that focuses on the Hungarian language. Includes instruction in philology; literature; and applications to business, science/technology, and other settings. 16.1504 Mongolian Language and Literature.A program that focuses on the Mongolian language. Includes instruction in philology; dialects; oral and written literature; and applications to business, science/technology, and other settings. 16.1599 Turkic, Uralic-Altaic, Caucasian, and Central Asian Languages, Literatures, and Linguistics, Other.Any instructional program in the Turkic, Uralic-Altaic, Caucasian, and Central Asian languages, literatures, and linguistics not listed above. 16.16 American Sign Language.Instructional content for this group of programs is defined in codes 16.1601 - 16.1699. 16.1601 American Sign Language (ASL).A program that focuses on American Sign Language as a visual and motor medium of communication and discourse for deaf individuals and deaf culture. Includes instruction in the development of ASL, ASL morphology and syntax, signing technique, English translation of ASL, formal and colloquial ASL, and ASL transcription.See also: 05.0211 - Deaf Studies. 16.1602 Linguistics of ASL and Other Sign Languages.A program that focuses on the scientific and scholarly study of the development, structure, and use of American Sign Language (ASL) and other visual signed languages, both as vehicles for communication within the deaf community and in relation to spoken and written languages. Includes instruction in cognitive linguistics; ASL and sign language phonology, syntax, and morphology; sociolinguistics of the deaf community; comparative linguistics; and studies of specific sign languages, including, but not limited to, ASL, Auslan (Australian Sign Language), LSF (French Sign Language), Shuwa jiten (Japanese Sign Language), HamNoSys (German Sign Language), and Gestuno. 16.1603 Sign Language Interpretation and Translation.A program that prepares individuals to function as simultaneous interpreters of American Sign Language 16.1699 American Sign Language, Other.Any instructional program that focuses on American Sign Language as a communication medium or language skill that is not listed above. 16.17 Second Language Learning. (New)Instructional content for this group of programs is defined in codes 16.1701 - 16.1799. 16.1701 English as a Second Language. (New)A program that focuses on the development of proficiency in reading, writing, and speaking English for those for whom English is not their mother tongue. Includes instruction in the use of basic communication skills to develop and transmit ideas and thoughts in English as well as specialized programs that focus on the development of proficiency in English sufficient to meet specific occupational or academic demands. Note: These programs are for academic credit towards a postsecondary credential. For second language programs that are not for academic credit towards a postsecondary credential, see 32.0109.See also: 32.0109 - Second Language Learning., 23.0101 - English Language and Literature, General. 16.1702 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 16.1799 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 16.18 Armenian Languages, Literatures, and Linguistics. (New)Instructional content is defined in code 16.1801. 16.1801 Armenian Language and Literature. (New)A program that focuses on the historical and modern languages spoken by Armenians. Includes instruction in philology; linguistics; dialects and pidgins; literature; and applications to business, science/technology, and other settings. 16.99 Foreign Languages, Literatures, and Linguistics, Other.Instructional content is defined in code 16.9999. 16.9999 Foreign Languages, Literatures, and Linguistics, Other.Any instructional program in foreign languages, literatures, and linguistics not listed above. 19 FAMILY AND CONSUMER SCIENCES/HUMAN SCIENCESInstructional programs that focus on the human interface with the physical, social, emotional, and intellectual environments and the developmental stages and needs of individuals in the interrelated spheres of family, workplace, and community. 19.00 Work and Family Studies. (Moved from)Moved from 19.00 to 19.10 19.0000 Work and Family Studies. (Moved from)Moved from 19.0000 to 19.1001 19.01 Family and Consumer Sciences/Human Sciences, General.Instructional content is defined in code 19.0101. 19.0101 Family and Consumer Sciences/Human Sciences, General.A general program that focuses on family and consumer sciences, including how individuals develop and function in family, work, and community settings and how they relate to their physical, social, emotional, and intellectual environments.See also: 13.1308 - Family and Consumer Sciences/Home Economics Teacher Education. 19.02 Family and Consumer Sciences/Human Sciences Business Services.Instructional content for this group of programs is defined in codes 19.0201 - 19.0299. 19.0201 Business Family and Consumer Sciences/Human Sciences.A program that focuses on the relationship between the economy and the consuming individual and family. Includes instruction in consumption theory and practice, the production and distribution of retail goods and services, and the management of business enterprises. 19.0202 Family and Consumer Sciences/Human Sciences Communication.A program that focuses on communication of human sciences subject matter and related consumer information to a variety of audiences through print and non-print media. 19.0203 Consumer Merchandising/Retailing Management.A program that focuses on product and service promotion from the perspective of individual and family consumers and that prepares individuals to function as consumer management and marketing consultants in for-profit and non-profit enterprises. Includes instruction in applied market research, consumer behavior, product sourcing and distribution, profitability, customer feedback and evaluation methods, promotion and retailing campaign development, and applications to specific domestic and international consumer markets. 19.0299 Family and Consumer Sciences/Human Sciences Business Services, Other.Any instructional program in family and consumer sciences/human sciences business services not listed above. 19.04 Family and Consumer Economics and Related Studies.Instructional content for this group of programs is defined in codes 19.0401 - 19.0499. 19.0401 Family Resource Management Studies, General.A general program that focuses on the design and implementation of policies and processes contributing to successful individual and family resource management. Includes instruction in financial goal-setting and strategies; household income, assets, and debt management; preventing and resolving financial difficulties; and the use of relevant public resources.See also: 52.0804 - Financial Planning and Services. 19.0402 Consumer Economics.A program that focuses on the application of micro- and macro-economic theory to consumer behavior and individual and family consumption of goods and services. Includes instruction in modeling, economic forecasting, indexing, price theory, and analysis of individual commodities and services and/or groups of related commodities and services. 19.0403 Consumer Services and Advocacy.A program that focuses on providing end-use advice and representational services to individuals and groups within a variety of settings, and the analytical and research techniques needed to protect consumers from unsafe, unreliable, and/or unhealthy products and services. Includes instruction in consumer advocacy, family management systems, ecological impacts of consumption practices, and analyzing and testing product quality and safety. 19.0499 Family and Consumer Economics and Related Services, Other.Any instructional program in family and consumer economics and related services not listed above. 19.05 Foods, Nutrition, and Related Services.Instructional content for this group of programs is defined in codes 19.0501 - 19.0599. 19.0501 Foods, Nutrition, and Wellness Studies, General.A general program that focuses on the role of foods and nutrition in human health and wellness. Includes instruction in nutritional care and education, the planning and provision of food services, the development of consumable food products, life-span nutrition and wellness, the principles of nutritional assessment, and food safety and food composition.See also: 01.1001 - Food Science. 19.0504 Human Nutrition.A program that focuses on the relationships between food consumption and human development and health. Includes instruction in the cellular and molecular processes of food processing in the human body, related metabolic processes, the relationship of food and nutrition to disease, and nutritional needs across the life span.See also: 51.3102 - Clinical Nutrition/Nutritionist., 30.1901 - Nutrition Sciences. 19.0505 Foodservice Systems Administration/Management.A program that focuses on the principles and practices relating to the administration of food service systems in institutional settings, and that prepares individuals to manage such operations in public and private facilities. Includes instruction in human nutrition, food safety, the design and organization of food service systems, purchasing, personnel management, and related business practices. 19.0599 Foods, Nutrition, and Related Services, Other.Any instructional program in foods, nutrition, and related services not listed above.See also: 12.0509 - Culinary Science/Culinology. 19.06 Housing and Human Environments.Instructional content for this group of programs is defined in codes 19.0601 - 19.0699. 19.0601 Housing and Human Environments, General.A general program that focuses on the behavioral, social, economic, functional, and aesthetic aspects of housing, interiors, and other built environments. Includes instruction in analyzing, planning, designing, furnishing, and equipping residential, work, and leisure spaces to meet user needs and the study of related public policies.See also: 04.0401 - Environmental Design/Architecture., 50.0408 - Interior Design. 19.0604 Facilities Planning and Management.A program that focuses on strategic workplace and facility planning and that prepares individuals to function as facility and event managers and workplace consultants. Includes instruction in the principles of aesthetic and functional design, environmental psychology and organizational behavior, real estate planning, principles of occupational health and safety, event planning and management, operations management, and applicable regulatory and policy issues.See also: 52.0907 - Meeting and Event Planning. 19.0605 Home Furnishings and Equipment Installers.A program that prepares individuals to assist in home furnishings and decorations. Includes instruction in selecting, purchasing, and designing home furnishings, decorations, and equipment; floral design; accessory construction; textiles; and upholstery. 19.0699 Housing and Human Environments, Other.Any instructional program in housing and human environments not listed above. 19.07 Human Development, Family Studies, and Related Services.Instructional content for this group of programs is defined in codes 19.0701 - 19.0799. 19.0701 Human Development and Family Studies, General.A general program that focuses on basic human developmental and behavioral characteristics of the individual within the context of the family. Includes instruction in the conditions that influence human growth and development; strategies that promote growth and development across the life span; and the study of family systems. 19.0702 Adult Development and Aging.A program that focuses on the characteristics of aging populations and the needs of older individuals in family and institutional settings. Includes instruction in the biological and psychological stages of aging; the provision of dependent care; serving the social, economic, and psychological needs of aging adults; related public policy issues; and adult community resources.See also: 42.2809 - Geropsychology., 30.1101 - Gerontology. 19.0704 Family Systems.A program that focuses on the family as a social unit in its developmental, dynamic, comparative, and structural aspects, and the significance of the family as a system that impacts individuals and society. Includes instruction in related principles of sociology, psychology, behavioral sciences, and the humanities.See also: 42.2811 - Family Psychology., 51.1505 - Marriage and Family Therapy/Counseling. 19.0706 Child Development.A program that focuses on the intellectual, social, emotional, and biological development of children and the planning and design of related human services. Includes instruction in parent-child relations, parenting practices, special needs of children, parental and environmental influences on child development, external support services, and related public policy issues.See also: 42.2703 - Developmental and Child Psychology., 42.2710 - Developmental and Adolescent Psychology. 19.0707 Family and Community Services.A program that focuses on the development and implementation of public, private, and voluntary support services for individuals, families, and localities and that prepares individuals to function in a variety of occupations promoting family life, and family/community development. Includes instruction in family systems, human development, social services, community social and economic development, social policy, voluntary sector activities, and outreach and community education. 19.0708 Child Care and Support Services Management.A program that focuses on the provision and management of child care services and that prepares individuals to plan, design, and manage child care facilities and programs that meet children’s developmental needs and interests and that provide safe and healthy environments. Includes instruction in child development and psychology; home- and institution-based child care; identification of diseases, injuries, and psychological trauma and applicable referrals; parent relations; personnel and business management principles; and related laws and policies. 19.0709 Child Care Provider/Assistant.A program that prepares individuals to be primary providers of home, family, residential, or institutional-based child care services. Includes instruction in child growth and development, nutrition, recreation, planning and supervision of play and learning activities, child abuse and neglect prevention, parent-child relationships, and applicable legal and administrative requirements. 19.0710 Developmental Services Worker.A program that prepares individuals to apply practical knowledge and skills to support individuals with a variety of physical, mental or developmental disabilities in a family or community setting. Includes instruction in health care, basic nutrition, pharmacology, nursing, autism, mental health, psychology, sociology, behavioral analysis, communication, intervention, counseling and community services, and developmental services, such as literacy and life skills training. 19.0711 Early Childhood and Family Studies. (New)A program of study that focuses on the development and learning of children from birth to six years old within the context of the family. Includes instruction in child abuse and neglect, child and infant growth and development, early childhood education, early childhood language and literacy, early childhood math and science, early childhood special education, family literacy, family sociology, family and marriage relations, assessment and measurement, psychology, and psychopathology.See also: 13.1210 - Early Childhood Education and Teaching., 42.2811 - Family Psychology. 19.0712 Parent Education Services. (New)A program that prepares individuals to plan, coordinate, and teach parent education programs and services that address the cultural, emotional, intellectual, physical and social needs of children and parents. Includes instruction in child development, cultural diversity in schools, child behavior, family development, family-community partnerships, family dynamics, interpersonal relationships, parent-child relationships, and social services.Examples: Parent Education 19.0799 Human Development, Family Studies, and Related Services, Other.Any instructional program in human development, family studies, and related services not listed above. 19.09 Apparel and Textiles.Instructional content for this group of programs is defined in codes 19.0901 - 19.0999. 19.0901 Apparel and Textiles, General.A general program that focuses on the development of textile products and their distribution and use in terms of the psychological, social, economic, and physical needs of consumers. Includes instruction in the production, distribution, marketing, and end use of various apparel and textile products. 19.0902 Apparel and Textile Manufacture.A program that focuses on the design, development, and production of textile products and related processes and systems. Includes instruction in functional and aesthetic design, human factors research, production planning, manufacturing processes, quality assessment, and distribution systems.See also: 50.0407 - Fashion/Apparel Design., 50.0712 - Fiber, Textile and Weaving Arts. 19.0904 Textile Science.A program that focuses on the properties and processing of fibers, yarns, whole fabrics, dyes, and finishes, both natural and synthetic. Includes instruction in the chemical and physical properties of textile materials; end-use analysis; interior furnishing applications; and industrial applications.See also: 14.2801 - Textile Sciences and Engineering. 19.0905 Apparel and Textile Marketing Management.A program that focuses on marketing research and management as applied to the products and services of the apparel and textile industries. Includes instruction in applicable principles of textile and apparel design and manufacturing, sales and distribution systems, domestic and international market research, profitability, consumer research, and the design and implementation of marketing campaigns.See also: 52.1902 - Fashion Merchandising. 19.0906 Fashion and Fabric Consultant.A program that prepares individuals to assist in apparel and fashion selection, style coordination, customer sales and consulting, fabric selection, clothing specifications, and contract buying activities. Includes instruction in supplying regular clothing needs or acting as a consultant for special events such as weddings. 19.0999 Apparel and Textiles, Other.Any instructional program in apparel and textiles not listed above. 19.10 Work and Family Studies. (Moved to)Instructional content is defined in code 19.1001. 19.1001 Work and Family Studies. (Moved to)An introductory program that focuses on family and consumer science concepts and principles at the basic and vocational levels, and the various potential career paths open to interested students. Includes instruction in career, community, and family connections; family and family/consumer resources; human development; interpersonal relationships; nutrition and wellness; parenting; and career possibilities in various related areas. 19.99 Family and Consumer Sciences/Human Sciences, Other.Instructional content is defined in code 19.9999. 19.9999 Family and Consumer Sciences/Human Sciences, Other.Any instructional program in family and consumer sciences/human sciences not listed above. 21 RESERVED. (New)Reserved for use by Statistics Canada. These CIP codes are not valid for IPEDS reporting. 21.01 Reserved. (New)Instructional content is defined in code 21.0101. 21.0101 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 22 LEGAL PROFESSIONS AND STUDIESInstructional programs that prepare individuals for the legal profession, for related support professions and professional legal research, and focus on the study of legal issues in non-professional programs. 22.00 Non-Professional Legal Studies. CIP Title or Definition ChangedInstructional content for this group of programs is defined in codes 22.0000 - 22.0099. 22.0000 Legal Studies. CIP Title or Definition ChangedA program of study that focuses on law and legal issues from the perspective of the social sciences and humanities.Examples: Juris Master (J.M.) Degree Master of Legal Studies 22.0001 Pre-Law Studies.A program that prepares individuals for the professional study of law at the post-baccalaureate level. 22.0099 Non-Professional Legal Studies, Other. (New)Any program in non-professional legal studies not listed above. 22.01 Law.Instructional content is defined in code 22.0101. 22.0101 Law.A program that prepares individuals for the independent professional practice of law, for taking state and national bar examinations, and for advanced research in jurisprudence. Includes instruction in the theory and practice of the legal system, including the statutory, administrative, and judicial components of civil and criminal law.Examples: Law (LL.B.) Law (J.D.) 22.02 Legal Research and Advanced Professional Studies.Instructional content for this group of programs is defined in codes 22.0201 - 22.0299. 22.0201 Advanced Legal Research/Studies, General.An integrated or undifferentiated program in one or more of the legal research or advanced practice fields.Examples: Advanced Legal Research/Studies, General (LL.M., M.C.L., M.L.I., M.S.L.) Advanced Legal Research/Studies, General (J.S.D./S.J.D.) 22.0202 Programs for Foreign Lawyers.A program that prepares lawyers educated outside the United States to understand U. S. or Canadian law and jurisprudence.Examples: Programs for Foreign Lawyers (LL.M., M.C.L.) 22.0203 American/U.S. Law/Legal Studies/Jurisprudence.An advanced, professional program of the U.S. legal system, Constitution law, and jurisprudence. Includes instruction in legal history, legal sociology, philosophy of law, Constitutional law, legal procedure, and related topics.Examples: American/U.S. Law/Legal Studies/Jurisprudence (LL.M., M.C.J.) American/U.S. Law/Legal Studies/Jurisprudence (J.S.D./S.J.D.) 22.0204 Canadian Law/Legal Studies/Jurisprudence.An advanced, professional study of the Canadian legal system, Constitution law, and jurisprudence. Includes instruction in legal history, legal sociology, philosophy of law, Constitutional law, Commonwealth law, legal procedure, and related topics.Examples: Canadian Law/Legal Studies/Jurisprudence (LL.M., M.C.J.) Canadian Law/Legal Studies/Jurisprudence (J.S.D./S.J.D.) 22.0205 Banking, Corporate, Finance, and Securities Law.An advanced, professional study of the law and process related to the regulation of businesses and the financial services industry. Includes instruction in corporate law, antitrust law, securities law and regulation, negotiation, incorporation, partnerships, trusts, and related topicsExamples: Banking, Corporate, Finance, and Securities Law (LL.M.) Banking, Corporate, Finance, and Securities Law (J.S.D./S.J.D.) Estate Planning Law 22.0206 Comparative Law.An advanced, professional study of legal systems and philosophies in comparative perspective.Examples: Comparative Law (LL.M., M.C.L.) Comparative Law (J.S.D./S.J.D.) 22.0207 Energy, Environment, and Natural Resources Law.An advanced, professional study of the law, policies, and regulations governing the energy industry, environmental protection, natural resources and land use, and related topics.Examples: Energy, Environment, and Natural Resources Law (LL.M., M.S.) Energy, Environment, and Natural Resources Law (J.S.D./S.J.D.) 22.0208 Health Law.An advanced, professional study of the law, policies and regulations affecting the health care industry, health professions, health services and insurance industries, and patients.Examples: Health Law (LL.M., M.J.) Health Law (J.S.D./S.J.D.) Healthcare Compliance Law Mental Disability Law 22.0209 International Law and Legal Studies.An advanced, professional study of the law affecting relations between nations, the behavior of international organizations, and the international activities of private citizens and organizations.Examples: International Law and Legal Studies (LL.M.) International Law and Legal Studies (J.S.D./S.J.D.) 22.0210 International Business, Trade, and Tax Law.An advanced, professional study of the law, policies, and regulations governing transnational business and commercial practices, including the specialized tax law related to international financial transactions.Examples: International Business, Trade, and Tax Law (LL.M.) International Business, Trade, and Tax Law (J.S.D./S.J.D.) 22.0211 Tax Law/Taxation.An advanced, professional study of tax law and taxation procedures in U.S. or Canadian jurisdictions affecting individuals and corporations.Examples: Tax Law/Taxation (LL.M.) Tax Law/Taxation (J.S.D./S.J.D.) 22.0212 Intellectual Property Law.An advanced, professional study of the law, policies, and regulations related to copyrights, patents, trademarks, trade secrets, and related issues. Includes instruction in patent law, copyright law, trademark law, intellectual property licensing and litigation, and applications such as art and entertainment law, communications law, information technology law, sports law, and chemical and biotech patent law.Examples: Intellectual Property Law ( LL.M.) Intellectual Property Law (J.S.D./S.J.D.) 22.0213 Patent Law. (New)An advanced, professional study of the law, policies, and regulations affecting patents.Examples: Patent Law Patent Prosecution 22.0214 Agriculture Law. (New)An advanced, professional study of the law, policies, and regulations for lawyers and non-legal professionals in food and agriculture.Examples: Agriculture and Food Law Global Food Law 22.0215 Arts and Entertainment Law. (New)An advanced, professional study of the law, policies, and regulations affecting the sports, fashion, entertainment, arts, and media industries.Examples: Entertainment, Arts, and Sports Law Fashion Law Gaming Law and Regulation Sports Law Title IX Compliance 22.0216 Compliance Law. (New)An advanced, professional study of the law, policies, and regulations for lawyers and non-legal professionals in compliance, ethics, internal monitoring, regulatory affairs, and related areas.Examples: Corporate Compliance Enterprise Risk Management and Compliance Law 22.0217 Criminal Law and Procedure. (New)An advanced, professional study of the law, policies, and regulations affecting criminal law and trial procedures.Examples: Federal Criminal Practice and Procedure 22.0218 Entrepreneurship Law. (New)An advanced, professional study of the law, policies, and regulations affecting entrepreneurship and innovation. 22.0219 Family/Child/Elder Law. (New)An advanced, professional study of the law, policies, and regulations affecting domestic relations across the lifespan. 22.0220 Human Resources Law. (New)An advanced, professional study of the law, policies, and regulations affecting human resources.Examples: Employee Benefits Law Labor and Employment Law 22.0221 Insurance Law. (New)An advanced, professional study of the law, policies, and regulations affecting insurance. 22.0222 Real Estate and Land Development Law. (New)An advanced, professional study of the law, policies, and regulations affecting real estate and land development. 22.0223 Transportation Law. (New)An advanced, professional study of the law, policies, and regulations affecting land, sea, air, and space transportation.Examples: Admiralty Law Marine Affairs Law Aviation Law Ocean and Coastal Law Air and Space Law Logistics and Transportation Law Space and Telecommunications Law 22.0224 Tribal/Indigenous Law. (New)An advanced, professional study of the law, policies, and regulations affecting federal Indian law, tribal law and policy, and Indigenous peoples’ human rights.Examples: Tribal Policy, Law, and Government Indigenous Law Indigenous and Federal Aboriginal Law 22.0299 Legal Research and Advanced Professional Studies, Other.Any program in legal research and advanced professional studies not listed above.Examples: Animal Law Biotechnology and Genomics Law Cannabis Law Communications Law Cybersecurity and Information Privacy Law Economic Law Education Law 22.03 Legal Support Services.Instructional content for this group of programs is defined in codes 22.0301 - 22.0399. 22.0301 Legal Administrative Assistant/Secretary.A program that prepares individuals to serve as legal office managers, special assistants, and legal secretaries. Includes instruction in office management, secretarial science, principles of U.S. or Canadian law, legal terminology and documentation, legal research, legal software applications, law office procedures, record-keeping, billing, applicable policies and regulations, and professional standards and ethics. 22.0302 Legal Assistant/Paralegal.A program that prepares individuals to perform research, drafting, investigatory, record-keeping and related administrative functions under the supervision of an attorney or court. Includes instruction in legal research, drafting legal documents, appraising, pleading, courthouse procedures, and legal specializations. 22.0303 Court Reporting and Captioning/Court Reporter. CIP Title or Definition ChangedA program that prepares individuals to record and transcribe examinations, testimony, judicial orders and instructions, legal opinions, and other formal proceedings via print or electronic methods. Includes instruction in legal terminology, legal transcription, shorthand, verbatim recording, equipment operation and procedures, applicable regulations, and professional standards and ethics.See also: 51.0708 - Medical Transcription/Transcriptionist., 10.0204 - Voice Writing Technology/Technician. 22.0304 Court Interpreter. (New)A program of study that prepares individuals to provide accurate translation and interpretation between two or more languages for parties involved in a legal proceeding. Includes instruction in courtroom standards and procedures, court interpreting, legal terminology, consecutive interpretation, simultaneous interpretation, and sight translation. 22.0305 Scopist. (New)An instructional program that prepares individuals to perform editing and word processing on a court reporter transcript to ensure the accuracy of the transcripts. Includes instruction in legal terminology, legal transcriptioning, machine shorthand, and computer-aided transcription software.Examples: Court Reporter Transcript Editor 22.0399 Legal Support Services, Other.Any program in legal support services not listed above. 22.99 Legal Professions and Studies, Other.Instructional content is defined in code 22.9999. 22.9999 Legal Professions and Studies, Other.Any program in law, legal services, and legal studies not listed above. 23 ENGLISH LANGUAGE AND LITERATURE/LETTERSInstructional programs that focus on the structure and use of the English language and dialects, speech, writing, and various aspects of the literatures and cultures of the English-speaking peoples. 23.01 English Language and Literature, General.Instructional content is defined in code 23.0101. 23.0101 English Language and Literature, General.A general program that focuses on the English language, including its history, structure and related communications skills; and the literature and culture of English-speaking peoples.See also: 16.1701 - English as a Second Language. 23.13 Rhetoric and Composition/Writing Studies.Instructional content for this group of programs is defined in codes 23.1301 - 23.1399. 23.1301 Writing, General.A program that focuses on writing for applied and liberal arts purposes. Includes instruction in writing and document design in multiple genres, modes, and media; writing technologies; research, evaluation, and use of information; editing and publishing; theories and processes of composing; rhetorical theories, traditions, and analysis; communication across audiences, contexts, and cultures; and practical applications for professional, technical, organizational, academic, and public settings.Examples: English Composition Writing 23.1302 Creative Writing.A program that focuses on the process and techniques of original composition in various literary forms such as the short story, poetry, the novel, and others. Includes instruction in technical and editorial skills, criticism, and the marketing of finished manuscripts.See also: 50.0504 - Playwriting and Screenwriting. 23.1303 Professional, Technical, Business, and Scientific Writing.A program that focuses on professional, technical, business, and scientific writing; and that prepares individuals for academic positions or for professional careers as writers, editors, researchers, and related careers in business, government, non-profits, and the professions. Includes instruction in theories of rhetoric, writing, and digital literacy; document design, production, and management; visual rhetoric and multimedia composition; documentation development; usability testing; web writing; and publishing in print and electronic media.Examples: Biomedical Writing Medical Writing Professional, Technical, and Scientific Writing/CommunicationSee also: 09.0908 - Technical and Scientific Communication. 23.1304 Rhetoric and Composition.A program that focuses on the humanistic and scientific study of rhetoric, composition, literacy, and language/linguistic theories and their practical and pedagogical applications. Includes instruction in historical and contemporary rhetoric/composition theories; composition and criticism of written, visual, and mixed-media texts; analysis of literacy practices in cultural and cross-cultural contexts; and writing program administration.Examples: Rhetoric and Writing Rhetoric and Writing Studies Rhetoric and CompositionSee also: 09.0101 - Speech Communication and Rhetoric. 23.1399 Rhetoric and Composition/Writing Studies, Other.Any instructional program in rhetoric and composition/writing studies not listed above. 23.14 Literature.Instructional content for this group of programs is defined in codes 23.1401 - 23.1499. 23.1401 General Literature.A program that focuses on literature from one or more genres, cultures or traditions. Includes instruction in period and genre studies, author studies, literary criticism, and studies of various types of literary text.Examples: Literary StudiesSee also: 16.0104 - Comparative Literature. 23.1402 American Literature (United States).A program that focuses on the literature and literary development, both formal and folkloric, of the United States from the Colonial Era to the present. Includes instruction in period and genre studies, author studies, literary criticism, and regional and oral traditions. 23.1403 American Literature (Canadian).A program that focuses on the literature and literary development, both formal and folkloric, of Canada from its origins to the present. Includes instruction in period and genre studies, author studies, literary criticism, and regional and oral traditions. 23.1404 English Literature (British and Commonwealth).A program that focuses on the literatures and literary developments of the English-speaking peoples of the British Isles and the British Commonwealth, from the origins of the English language to the present. Includes instruction in period and genre studies, author studies, country and regional specializations, literary criticism, and the study of folkloric traditions. 23.1405 Children’s and Adolescent Literature.A program that focuses on the scholarly study of children’s and adolescent literature and that may enhance the professional work of teachers, librarians, publishers, booksellers, and creative writers. Includes instruction in period and genre studies, author studies, literary criticism, studies of various types of literary text, book artists, and children’s films.Examples: Literature for Children and Young AdultsSee also: 25.0102 - Children and Youth Library Services. 23.1499 Literature, Other.Any instructional program in English language literature not listed above.See also: 16.0104 - Comparative Literature. 23.99 English Language and Literature/Letters, Other.Instructional content is defined in code 23.9999. 23.9999 English Language and Literature/Letters, Other.Any instructional program in English language and literature not listed above.Examples: Writing and Literature 24 LIBERAL ARTS AND SCIENCES, GENERAL STUDIES AND HUMANITIESGeneral instructional programs and independent or individualized studies in the liberal arts subjects, the humanities disciplines and the general curriculum. 24.01 Liberal Arts and Sciences, General Studies and Humanities.Instructional content for this group of programs is defined in codes 24.0101 - 24.0199. 24.0101 Liberal Arts and Sciences/Liberal Studies.A program that is a structured combination of the arts, biological and physical sciences, social sciences, and humanities, emphasizing breadth of study. Includes instruction in independently designed, individualized, or regular programs. 24.0102 General Studies.An undifferentiated program that includes instruction in the general arts, general science, or unstructured studies.Examples: Undeclared Major Undecided 24.0103 Humanities/Humanistic Studies.A program that focuses on combined studies and research in the humanities subjects as distinguished from the social and physical sciences, emphasizing languages, literatures, art, music, philosophy and religion. 24.0199 Liberal Arts and Sciences, General Studies and Humanities, Other.Any single instructional program in liberal arts and sciences, general studies and humanities not listed above. 25 LIBRARY SCIENCEInstructional programs that focus on the knowledge and skills required for managing and/or maintaining libraries and related information and record systems, collections and facilities for research and general use. 25.01 Library Science and Administration.Instructional content for this group of programs is defined in codes 25.0101 - 25.0199. 25.0101 Library and Information Science.A program that focuses on the knowledge and skills required to develop, organize, store, retrieve, administer, and facilitate the use of local, remote, and networked collections of information in print, audiovisual, and electronic formats and that prepares individuals for professional service as librarians and information consultants.Examples: Library ManagementSee also: 13.1334 - School Librarian/School Library Media Specialist., 11.0401 - Information Science/Studies. 25.0102 Children and Youth Library Services.A program that prepares individuals to provide library and information services and programming for children and young adults. Includes instruction in information needs of children and young adults, resources and services for children and young adults, literature for youth, storytelling, multi-ethnic materials, library management, and information technology for librarians.Examples: Children’s Library Services Youth Library Services Young Adult Library ServicesSee also: 23.1405 - Children’s and Adolescent Literature. 25.0103 Archives/Archival Administration.A program that prepares individuals to identify, manage, preserve, and make available records with long-term value for documentation, legal, research, and other purposes. Includes instruction in appraisal and collection development, information and records management, archival preservation, access systems, management of electronic records, archival outreach, and legal and ethical issues.Examples: Archival Administration and Records Management Archival Studies Records ManagementSee also: 54.0105 - Public/Applied History. 25.0199 Library Science and Administration, Other.Any instructional program in library science and administration not listed above. 25.03 Library and Archives Assisting.Instructional content is defined in code 25.0301. 25.0301 Library and Archives Assisting.A program that prepares individuals to assist professional librarians and archivists. Includes instruction in principles, systems, processes, and procedures of library and archive operation; library resources and services; processes of acquisition, cataloging, storage, and display systems; discovery and retrieval of requested materials; and management of books, periodicals, and other documents and records.Examples: Library Assistant Library Technician Archives Assistant Archives Technician 25.99 Library Science, Other.Instructional content is defined in code 25.9999. 25.9999 Library Science, Other.Any instructional program in library science not listed above. 26 BIOLOGICAL AND BIOMEDICAL SCIENCESInstructional programs that focus on the biological sciences and the non-clinical biomedical sciences, and that prepare individuals for research and professional careers as biologists and biomedical scientists. 26.01 Biology, General.Instructional content for this group of programs is defined in codes 26.0101 - 26.0102. 26.0101 Biology/Biological Sciences, General.A general program of biology at the introductory, basic level or a program in biology or the biological sciences that is undifferentiated as to title or content. Includes instruction in general biology and programs covering a variety of biological specializations. 26.0102 Biomedical Sciences, General.A general, program that focuses on the integrative scientific study of biological issues related to health and medicine, or a program in one or more of the biomedical sciences that is undifferentiated as to title. Includes instruction in any of the basic medical sciences at the research level; biological science research in biomedical faculties; and general studies encompassing a variety of the biomedical disciplines. 26.02 Biochemistry, Biophysics and Molecular Biology.Instructional content for this group of programs is defined in codes 26.0202 - 26.0299. 26.0202 Biochemistry.A program that focuses on the scientific study of the chemistry of living systems, their fundamental chemical substances and reactions, and their chemical pathways and information transfer systems, with particular reference to carbohydrates, proteins, lipids, and nucleic acids. Includes instruction in bio-organic chemistry, protein chemistry, bioanalytical chemistry, bioseparations, regulatory biochemistry, enzymology, hormonal chemistry, calorimetry, and research methods and equipment operation. 26.0203 Biophysics.A program that focuses on the application of physics principles to the scientific study of the mechanisms of biological processes and assemblies at all levels of complexity. Includes instruction in research methods and equipment operation and applications to subjects such as bioenergetics, biophysical theory and modeling, electrophysics, membrane biology, channels, receptors and transporters, contractility and muscle function, protein shaping and folding, molecular and supramolecular structures and assemblies, and computational science.See also: 51.2205 - Health/Medical Physics. 26.0204 Molecular Biology.A program that focuses on the scientific study of the structure and function of biological macromolecules and the role of molecular constituents and mechanisms in supramolecular assemblies and cells. Includes instruction in such topics as molecular signaling and transduction, regulation of cell growth, enzyme substrates and mechanisms of enzyme action, DNA-protein interaction, and applications to fields such as biotechnology, genetics, cell biology, and physiology. 26.0205 Molecular Biochemistry.A program that focuses on the scientific relationship of physiological function to the structure and actions of macromolecules and supramolecular assemblies such as multienzyme complexes, membranes, and viruses. Includes instruction in the chemical mechanisms of regulation and catalysis, protein synthesis and other syntheses, and biomolecular chemical reactions. 26.0206 Molecular Biophysics.A scientific program that focuses on the dynamics and interactions of macromolecules and other three-dimensional ultrastructures, the architecture of supramolecular structures, and energy transfer in biomolecular systems. Includes instruction in energy transduction, structural dynamics, mechanisms of electron and proton transfer in biological systems, bioinformatics, automated analysis, and specialized research techniques. 26.0207 Structural Biology.A program that focuses on the scientific study of submolecular and molecular components and assemblies of living systems and how they are organized into functional units such as cells and anatomic tissues. Includes instruction in glycoprotein, carbohydrate, protein, and nucleic acid structures and chemistry; cytoskeletal structure; nuclear and intracellular structures; molecular recognition; molecular chaperones; transcription and folding; multicellular organization; microtubules and microfilaments; cell differentiation; immunophysics; and DNA sequencing. 26.0208 Photobiology.A program that focuses on the scientific study of the effects of light energy on living organisms, the manufacture and processing of luminescence by organisms, and the uses of light in biological research. Includes instruction in bioluminescence, chronobiology, photomedicine, environmental photobiology, organic photochemistry, photomorphogenesis, photoreceptors and photosensitization, molecular mechanics of photosynthesis, phototechnology, vision, ultraviolet radiation, radiation physics, and spectral research methods. 26.0209 Radiation Biology/Radiobiology.A program that focuses on the effects of radiation on organisms and biological systems. Includes instruction in particle physics, ionization, and biophysics of radiation perturbations, cellular and organismic repair systems, genetic and pathological effects of radiation, and the measurement of radiation dosages. 26.0210 Biochemistry and Molecular Biology.A program of study that combines the biological sub-disciplines of biochemistry and molecular biology. Includes instruction in general biology, general and organic chemistry, physics, biochemistry, molecular biology, immunology, microbiology, genetics, and cellular biology.See also: 26.0204 - Molecular Biology., 26.0202 - Biochemistry. 26.0299 Biochemistry, Biophysics and Molecular Biology, Other.Any instructional program in biochemistry, biophysics and molecular biology not listed above.Examples: Comparative Biochemistry 26.03 Botany/Plant Biology.Instructional content for this group of programs is defined in codes 26.0301 - 26.0399. 26.0301 Botany/Plant Biology.A program that focuses on the scientific study of plants, related microbial organisms, and plant habitats and ecosystem relations. Includes instruction in plant anatomy and structure, phytochemistry, cytology, plant genetics, plant morphology and physiology, plant ecology, plant taxonomy and systematics, paleobotany, and applications of biophysics and molecular biology.See also: 01.1101 - Plant Sciences, General. 26.0305 Plant Pathology/Phytopathology.A program that focuses on the scientific study of plant diseases and plant health, and the development of disease control mechanisms. Includes instruction in plant anatomy and physiology, pathogenesis, molecular plant virology, molecular genetics, bacterial epidemiology, causal agent identification, host/agent interactions, disease resistance and response mechanisms, developing plant disease treatments, disease prevention, and disease physiology and control.See also: 01.1101 - Plant Sciences, General. 26.0307 Plant Physiology.A program that focuses on the scientific study of plant internal dynamics and systems, plant-environment interaction, and plant life cycles and processes. Includes instruction in cell and molecular biology; plant nutrition; plant respiration; plant growth, behavior, and reproduction; photosynthesis; plant systemics; and ecology.See also: 01.1101 - Plant Sciences, General. 26.0308 Plant Molecular Biology.A program that focuses on the application of molecular biology, biochemistry, and biophysics to the study of biomolecular structures, functions, and processes specific to plants and plant substances. Includes instruction in the biochemistry of plant cells, nuclear-cytoplasmic interactions, molecular cytostructures, photosynthesis, plant molecular genetics, and the molecular biology of plant diseases.See also: 01.1101 - Plant Sciences, General. 26.0399 Botany/Plant Biology, Other.Any instructional program in botany/plant biology not listed above.Examples: Phycology 26.04 Cell/Cellular Biology and Anatomical Sciences.Instructional content for this group of programs is defined in codes 26.0401 - 26.0499. 26.0401 Cell/Cellular Biology and Histology.A program that focuses on the scientific study of the structure, function, and regulation of cells as individual units and as components of larger systems. Includes instruction in cell chemistry, cellular dynamics, cellular replication and reproduction, cell anatomy, membrane function, organelles, cell adhesion and extracellular matrices, cell dynamics and motility, meiosis and mytosis, signal transduction, regulation, recognition and defense mechanisms, the cell cycle, cell metabolism and respiration, gene expression, and studies of cell types and characteristics. 26.0403 Anatomy.A program that focuses on the scientific study of organ systems, tissue structures, and whole bodies together with their cellular and structural components and dynamics. Includes instruction in cell biology and histology, structural biology, molecular mechanics, regional and gross anatomy, embryology, neuroanatomy, endocrinology and secretory dynamics, and applications to such topics as aging and disease conditions. 26.0404 Developmental Biology and Embryology.A program that focuses on the scientific study of embryology, development, and growth of animals and human beings. Includes instruction in fertilization, oogenesis, histogenesis, gastrulation, and cell differentiation; embryological development including organ and pattern formation, morphogenesis, gene regulation, cell lineage, and fate maps; disease and defect studies; transgenic and evolutionary models of growth and development; and applications to specific organisms and phyla. 26.0406 Cell/Cellular and Molecular Biology.An integrated, combined program that focuses on the scientific study of cells, cellular systems, and the molecular basis of cell structure and function. Includes instruction in cell biology, cell chemistry, molecular biology, biophysics, and structural biology. 26.0407 Cell Biology and Anatomy.An integrated, combined program that focuses on the scientific study of cell structure, function, and dynamics within the context of organismic, regional, and gross anatomical systems. Includes instruction in molecular biology, cell biology and histology, structural biology, anatomy, embryology, endocrinology, and applications to specific systems, diseases, defects, and processes. 26.0499 Cell/Cellular Biology and Anatomical Sciences, Other.Any instructional program in cell/cellular biology and anatomical sciences not listed above.Examples: Cell and Developmental Biology 26.05 Microbiological Sciences and Immunology.Instructional content for this group of programs is defined in codes 26.0502 - 26.0599. 26.0502 Microbiology, General.A program that focuses on the scientific study of unicellular organisms and colonies, and subcellular genetic matter and their ecological interactions with human beings and other life. Includes instruction in microbial genetics, cell biology, cell physiology, virology, pathogenic microbiology, environmental microbiology, immunology, biostatistics, bioinformatics, and laboratory methods including microscopy. 26.0503 Medical Microbiology and Bacteriology.A program that focuses on the scientific study of pathogenic bacteria that are significant factors in causing or facilitating human disease. Includes instruction in the pathogenesis of bacterial diseases, bacterial genetics and physiology, bacterial anatomy and structure, antigens, bacterial reproduction, bacterial adhesion, phagocytes, and the identification of new or mutated bacteria and bacterial agents. 26.0504 Virology.A program that focuses on the scientific study of subcellular pieces of genetic material, called viruses, that inhabit living cells in parasitical relationships and their role in disease. Includes instruction in virus taxonomy and systematics, viral structures, viral genetics, prions, virus/host cell interaction, viral pathogenesis, and applications to specific topics such as cancer biology. 26.0505 Parasitology.A program that focuses on the scientific study of biological organisms living in ecologically exploitative and competitive relationships with host organisms, and the role of parasites in causing injury, disease, and environmental damage. Includes instruction in vector biology, immunoparasitology, medical parasitology, molecular biology of parasitical associations, veterinary and comparative parasitology, chemotherapeutics, and ecological and systematic parasitology. 26.0506 Mycology.A program that focuses on the scientific study of fungi, lichenous plants, eukaryotic microorganisms, myxomycetes, and plasmodiophorales and their relationship to diseases in higher plants, animals, and human beings as well as to pharmacologically useful products. Includes instruction in cell and molecular biology; histopathology; fungal growth and behavior; environmental mycology; antifungal sensitivity; mycoses; pathogens and pathogenesis; pharmacological properties; and computer and laboratory research methods. 26.0507 Immunology.A program that focuses on scientific study of the biological mechanisms involved in the pathogenesis of disease, host-pathogen interactions, and host response to disease. Includes instruction in antigen and antibody structure and function, effector mechanisms, receptors, histocompatibility, host-pathogen recognition, disease modeling, autoimmune systems, antibody formation, cytotoxic responses, regulation of immune response, virulence determinants, intercellular signaling, immunosuppression, immunotherapy, immunogenetics, disease markers, transplantation, antibody humanization, and microbial pathogenesis. 26.0508 Microbiology and Immunology.A program that focuses on the scientific study of the microorganisms that cause disease and the host immune response to them. Includes instruction in microbiology, microbial genetics, molecular virology, pathogenic bacteriology, disease mechanisms, immunology, immunogenetics, autoimmunity, and bioinformatics.Examples: Medical Microbiology and ImmunologySee also: 26.0502 - Microbiology, General., 26.0507 - Immunology. 26.0509 Infectious Disease and Global Health. (New)A program that focuses on the biological, social, and behavioral factors contributing to the cause and spread of infectious diseases. Includes instruction in research design and evaluation, infectious disease epidemiology, international health policy and management, microbiology, microbial genetics, molecular virology, disease mechanisms, antimicrobial resistance, immunology, and bioterrorism.See also: 51.2210 - International Public Health/International Health. 26.0599 Microbiological Sciences and Immunology, Other.Any instructional program in the microbiological sciences and immunology not listed above. 26.07 Zoology/Animal Biology.Instructional content for this group of programs is defined in codes 26.0701 - 26.0799. 26.0701 Zoology/Animal Biology.A general program that focuses on the scientific study of the biology of animal species and phyla, with reference to their molecular and cellular systems, anatomy, physiology, and behavior. Includes instruction in molecular and cell biology, microbiology, anatomy and physiology, ecology and behavior, evolutionary biology, and applications to specific species and phyla.See also: 01.0901 - Animal Sciences, General. 26.0702 Entomology.A program that focuses on the scientific study of insect species and populations in respect of their life cycles, morphology, genetics, physiology, ecology, taxonomy, population dynamics, and environmental and economic impacts. Includes instruction in applicable biological and physical sciences as well as insect toxicology and the biochemical control of insect populations.See also: 01.1105 - Plant Protection and Integrated Pest Management. 26.0707 Animal Physiology.A program that focuses on the scientific study of function, morphology, regulation, and intercellular communications and dynamics within vertebrate and invertebrate in animal species, with comparative applications to homo sapiens and its relatives and antecedents. Includes instruction in reproduction, growth, lactation, digestion, performance, behavioral adaptation, sensory perception, motor action, phylogenetics, biotic and abiotic function, membrane biology, and related aspects of biochemistry and biophysics. 26.0708 Animal Behavior and Ethology.A program that focuses on the scientific study of the psychological and neurological bases of animal sensation, perception, cognition, behavior, and behavioral interactions within and outside the species. Includes instruction in ethology, behavioral neuroscience, neurobiology, behavioral evolution, cognition and sensory perception, motivators, learning and instinct, hormonal controls, reproductive and developmental biology, community ecology, functional behavior, and applications to specific behaviors and patterns as well as to specific phyla and species. 26.0709 Wildlife Biology.A program that focuses on the application of biological principles to the study of vertebrate wildlife, wildlife habitats, and related ecosystems in remote and urban areas. Includes instruction in animal ecology; adaptational biology; urban ecosystems; natural and artificial habitat management; limnology; wildlife pathology; and vertebrate zoological specializations such as mammalogy, herpetology, ichthyology, ornithology, and others.Examples: Wildlife and Conservation BiologySee also: 03.0601 - Wildlife, Fish and Wildlands Science and Management. 26.0799 Zoology/Animal Biology, Other.Any instructional program in zoology/animal biology not listed above. 26.08 Genetics.Instructional content for this group of programs is defined in codes 26.0801 - 26.0899. 26.0801 Genetics, General.A general program that focuses on the scientific study of the organization, recombination, function, regulation, and transmission of heritable information in biological organisms at all levels of complexity. Includes instruction in Mendelian genetics, mechanisms of gene regulation, chromosome structure and replication, epigenetic phenomena, DNA repair and recombination, sex determination, genetic interactions between genomes, and molecular evolution. 26.0802 Molecular Genetics.A program that focuses on the scientific study of genetic structures and mechanisms of organisms, including bacteria, phages, and viruses. Includes instruction in the replication, expression, transfer, structure, maintenance, and stability of heritable information in DNA, RNA, and proteins; the regulation of these processes; and neurogenetics.Examples: Neurogenetics Proteomics Protein Expression 26.0803 Microbial and Eukaryotic Genetics.A program that focuses on the scientific study of the genetics of viruses, infectious agents, organelles, nuclear genomes, eubacteria, archaebacteria, and eukaryotic organisms. Includes instruction in molecular genetics and evolution, parasitic and symbiotic interaction at the genetic level, epigenetic phenomena, microbial interactions, and genomics. 26.0804 Animal Genetics.A program that focuses on the scientific study of the genetics of multicellular animal life forms from the experimental, comparative, and clinical (veterinary and medical) viewpoints. Includes instruction in molecular genetics, gene expression, gene regulation, genomics, epigenetic phenomena, DNA recombination and repair, genetic interactions at the microbial and higher levels, and molecular evolution.See also: 01.0902 - Agricultural Animal Breeding. 26.0805 Plant Genetics.A program that focuses on the scientific study of the genetics of multicellular plants and fungi as related to botanical research as well as to applications in comparative genetics, ecology and evolutionary studies, clinical studies, and industrial research. Includes instruction in molecular genetics, gene expression, gene regulation, genomics, epigenetic phenomena, DNA recombination and repair, genetic interactions at the microbial and higher levels, and molecular evolution.See also: 01.1104 - Agricultural and Horticultural Plant Breeding. 26.0806 Human/Medical Genetics.A program that focuses on the scientific study of human genetics from the standpoint of medical applications such as clinical diagnosis, genetic engineering and therapy, transplantation, and the study of genetic diseases and disabilities and their defense. Includes instruction in human molecular genetics; genetic factors causing disease; changes in gene expression during development, differentiation, and pathogenesis; recombinant DNA; gene therapy; clinical genetics; genetic epidemiology; immunogenetics; cytogenetics; and genetics of specific disorders and diseases.See also: 51.0914 - Gene/Genetic Therapy., 51.1010 - Cytogenetics/Genetics/Clinical Genetics Technology/Technologist., 51.1509 - Genetic Counseling/Counselor. 26.0807 Genome Sciences/Genomics.A program that focuses on the scientific study of whole genome sequences and patterns of gene expression. Includes instruction in molecular and cellular biology, genetics, protein technologies, genomic sciences and techniques, bioinformatics, and scientific and research ethics. 26.0899 Genetics, Other.Any instructional program in genetics not listed above. 26.09 Physiology, Pathology and Related Sciences.Instructional content for this group of programs is defined in codes 26.0901 - 26.0999. 26.0901 Physiology, General.A general program that focuses on the scientific study of the functional dynamics, morphology, and biochemical and biophysical communications within organisms and between living systems at all levels of complexity and integration. Includes instruction in reproduction, growth, hormonal action, vascular function, respiration, digestion, sensory perception and processing, sensorimotor integration, signal encoding and conveyance, homeostasis, physical function and malfunction, evolutionary physiology, and disease processes. 26.0902 Molecular Physiology.A program that focuses on the scientific study of dynamic interactive processes and biochemical communications at the subcellular level. Includes instruction in ion channels and transporters, molecular signaling pathways, endocrine control and regulation, genetic information transfer, homeostasis and molecular control systems, electrophysiology and sensory mechanisms, protein synthesis, and applicable research methods and technologies. 26.0903 Cell Physiology.A program that focuses on the scientific study of physiological processes operating within and among cells, and intracellular communication and behavior, in the context of larger systems and whole organisms. Includes instruction in cell and molecular biology, molecular physiology, cell cycle control, signal transduction, protein structure, membrane biochemistry and structure, ion channel physics, cell respiration and digestion, secretory functions, cell adhesion and communication, information encoding and decoding, and the relation of cell physiology to tissue, organ, and organismic functioning. 26.0904 Endocrinology.A program that focuses on the scientific study of the composition, manufacture, and secretion of protein compounds by cells and glands and the role of endocrine substances in bodily processes. Includes instruction in protein chemistry, protein secretion, membrane biogenesis and transfer methods, cellular communication, gene and cell regulation, cytochemistry, fractionation, radioautography, and applications such as neuroendocrinology. 26.0905 Reproductive Biology.A program that focuses on the scientific study of reproductive processes and biogenesis in animals and human beings. Includes instruction in reproductive ecology and behavior, reproductive system physiology, endocrinology, developmental biology, neuroendocrinology, evolution and types of reproductive systems, reproductive genetics, physiopathology of reproductive processes, and applications of molecular biology and biophysics to the study of reproductive physiology. 26.0907 Cardiovascular Science.A program that focuses on the scientific study of the structure and functioning of the heart, vascular system, and blood in animals and human beings and the disorders and diseases associated with the cardiovascular system. Includes instruction in cardiovascular physiology, blood physiology, vasculature, vascular metabolism, neural control of cardiovascular function, microvascular permeability and membrane transport, cardiac contraction mechanisms, homeostasis, and applications to topics such as arteriosclerosis, heart disease, diabetes, vascular remodeling, transplantation, transfusion, and pacemakers and artificial organs. 26.0908 Exercise Physiology and Kinesiology. CIP Title or Definition ChangedA program that focuses on the scientific study of the physiological processes involved in physical or motor activity, including sensorimotor interactions, response mechanisms, and the effects of injury, disease, and disability. Includes instruction in muscular and skeletal anatomy; molecular and cellular basis of muscle contraction; fuel utilization; neurophysiology of motor mechanics; systemic physiological responses (respiration, blood flow, endocrine secretions, and others); fatigue and exhaustion; muscle and body training; physiology of specific exercises and activities; physiology of injury; and the effects of disabilities and disease.See also: 51.0913 - Athletic Training/Trainer., 31.0505 - Exercise Science and Kinesiology. 26.0909 Vision Science/Physiological Optics.A program that focuses on the scientific study of vision, visual processes, and related phenomena and clinical research and treatment modalities. Includes instruction in ocular anatomy and physiology, microbiology of the eye, electrophysiology, neurophysiology, corneal physiology, photochemistry, psychophysics, visual biophysics and motor systems, sensory mechanisms and photoreception, eye circulation and metabolism, geometric and physical optics, ocular development across the life span, visual stimuli and perception, color vision, eye motility, biometrics and measurement techniques, visual pathology, and environmental issues. 26.0910 Pathology/Experimental Pathology.A program that focuses on the scientific study of the expression, initiation, maintenance and progression of tissue injury and disease, including death, and the relationship of pathogenesis to fundamental molecular and cellular mechanisms. Includes instruction in immunology, microbiology, gene expression, inflammation, cell injury, apoptosis, immunopathology, molecular markers of disease and toxins, neoplasia, growth regulation, and organ- and system-specific investigations. 26.0911 Oncology and Cancer Biology.A program that focuses on the scientific study of carcinogens; the onset of malignancy in cells, tissues, blood, and organs; the genetics of cancer; the anatomy and physiology of cancer cells; and the study of cancer behaviors and treatments. Includes instruction in gene expression; oncogenes and tumor suppressor genes; viral genes and cancer proliferation; regulation of signal transduction; cancer proteins; hormonal and growth factors in cancer cells; tumor promotion, progression, and metastasis; carcinogen receptors and metabolism; carcinogen ecology; immunological targeting; and studies of genetic, chemical, radiologic and other treatment therapies. 26.0912 Aerospace Physiology and Medicine.A program that focuses on the scientific study of the physiological processes involved in low and high-altitude flight and living in space and related low-pressure and low-gravity environments, including sensorimotor interactions, response mechanisms, and the effects of injury, disease, and disability. Includes instruction in anatomy, molecular and cellular basis of muscle contraction, fuel utilization, neurophysiology of motor mechanics, systemic physiological responses (respiration, blood flow, endocrine secretions, and others), fatigue and exhaustion, systemic environmental pathologies, muscle and body training, physiology of specific exercises and activities, physiology of injury, and the effects of disabilities and disease. 26.0913 Biomechanics. (New)A program of study that focuses on the biological, anatomical, and mechanical structure and function of the mechanical aspects of biological systems. Includes courses in anatomy, physiology, kinesiology, mechanics, measurement and instrumentation, and research methods.See also: 14.0501 - Bioengineering and Biomedical Engineering., 31.0505 - Exercise Science and Kinesiology. 26.0999 Physiology, Pathology, and Related Sciences, Other.Any instructional program in physiology, pathology, and related sciences not listed above. 26.10 Pharmacology and Toxicology.Instructional content for this group of programs is defined in codes 26.1001 - 26.1099. 26.1001 Pharmacology.A program that focuses on the scientific study of drug interactions on biological systems and organisms and the sources, chemical properties, biological effects, and therapeutic uses of drugs. Includes instruction in pharmacodynamics, pharmacokinetics, toxicology, drug therapeutics, drug action, bodily responses to drug events, biochemical proliferation and differentiation, apoptosis, cell biology, medicinal chemistry, and studies of specific drugs and drug interactions.See also: 51.2003 - Pharmaceutics and Drug Design., 51.2010 - Pharmaceutical Sciences. 26.1002 Molecular Pharmacology.A program that focuses on the scientific study of the biochemical and biophysical characteristics of drugs at the molecular level and their interaction with, and effects on, biological macromolecules and cellular structures and processes. Includes instruction in molecular biology and biophysics; pharmacology of signal transduction, transmitters, and protein synthesis and release; receptors, protein interaction and binding; drug discovery and recognition; molecular toxicology; drug design; pharmacodynamics; developmental genetics; and studies of therapeutic strategies. 26.1003 Neuropharmacology.A program that focuses on the scientific study of drugs that modify the function of the brain and central nervous system, the effects of such drugs on health, disease, perception, motor action, and behavior; and the development of countermeasures and treatment therapies. Includes instruction in neuroanatomy, neurophysiology, behavioral neuroscience, neurobiochemistry, neuropathology, the mechanisms of brain function, medicinal chemistry, pharmaceutics, and studies of specific drugs and drug therapies. 26.1004 Toxicology.A program that focuses on the scientific study of poisons and other biohazards; their interactions with organisms and their food and respiratory systems; and their prevention, management, and counteraction. Includes instruction in toxicological biochemistry, toxic agents and transporters, toxin fate, toxicokinetics and metabolism, toxin classification, molecular toxic mechanisms, extracellular matrices and cell function, bacterial pathogenesis and mutagenesis, pathophysiology and apoptosis, cell stress and injury, studies of specific toxins, and studies of specific organ systems and physiological functions in relation to toxicological problems. 26.1005 Molecular Toxicology.A program that focuses on the scientific study of the genetic determinants of susceptibility to external pollutants and poisons; the interaction of toxic agents with biological systems at the molecular and cellular levels; and the development of countermeasures and treatments. Includes instruction in pharmacogenetics, biomolecular structure, gene expression and regulation, transgenic modeling, toxic events signaling, transcriptional activation, mutagenesis and carcinogenesis, pulmonary toxicology, xenobiotic metabolism, oxidative stress, risk assessment, molecular dosimetry, and studies of specific toxins and treatment therapies. 26.1006 Environmental Toxicology.A program that focuses on the scientific study of the health effects associated with exposure to toxic chemicals and systems occurring in the natural, work, and living environments; the management of environmental toxins and toxicity; and the development of protections for humans, animals, and plants. Includes instruction in applied ecology; microbiology; toxin transport, fate, and degradation; dermal toxicology; reproductive and genetic toxicology; atmospheric and environmental chemistry; metals toxicology; environmental mutagens and biotransformation; nutrient interaction; chemical sensitivity, disorders, and disease; risk assessment; animal waste management; environmental health; and hazardous materials management. 26.1007 Pharmacology and Toxicology.A program with an integrated, combined approach to the study of pharmacological and toxicological issues in biology and the biomedical sciences. Includes instruction in topics such as solvents, xenobiotic metabolism, chemical toxicity, neurotoxicology, immunopharmacology, biotransformation, tissue culture and in vitro studies, biomolecular analysis, bioactivation and inactivation, enzyme regulation, chemoprevention and chemotherapy, industrial and chemical studies, radiation health, and bioinformatics.See also: 26.1001 - Pharmacology., 26.1004 - Toxicology. 26.1099 Pharmacology and Toxicology, Other.Any instructional program in pharmacology and toxicology not listed above. 26.11 Biomathematics, Bioinformatics, and Computational Biology.Instructional content for this group of programs is defined in codes 26.1101 - 26.1199. 26.1101 Biometry/Biometrics.A program that focuses on the application of statistics and other computational methods to the study of problems in the biological sciences and related fields in agriculture and natural resources. Includes instruction in computational biology, mathematical statistics, matrix algebra, applied calculus, experimental design, linear modeling, sampling theory, stochastic processes, spatial and temporal analysis, longitudinal analysis, sparse/unbalanced data and complex error, and applications to such topics as population genetics, animal breeding, forest genetics, population dynamics, wildlife biometry, ecology, and agricultural and natural resource management.See also: 27.0306 - Mathematical Biology. 26.1102 Biostatistics.A program that focuses on the application of descriptive and inferential statistics to biomedical research and clinical, public health, and industrial issues related to human populations. Includes instruction in mathematical statistics, modeling, clinical trials methodology, disease and survival analysis, longitudinal analysis, missing data analysis, spatial analysis, computer tomography, biostatistics consulting, and applications to such topics as genetics, oncology, pharmacokinetics, physiology, neurobiology, and biophysics.See also: 27.0501 - Statistics, General. 26.1103 Bioinformatics.A program that focuses on the application of computer-based technologies and services to biological, biomedical, and biotechnology research. Includes instruction in algorithms, network architecture, principles of software design, human interface design, usability studies, search strategies, database management and data mining, digital image processing, computer graphics and animation, CAD, computer programming, and applications to experimental design and analysis and to specific quantitative, modeling, and analytical studies in the various biological specializations.See also: 51.2706 - Medical Informatics., 11.0104 - Informatics. 26.1104 Computational Biology.A program that focuses on computational theoretical approaches to understanding biological systems, including computational models of biological processes, computational management of large-scale projects, database development and data-algorithm development, and high-performance computing, as well as statistical and mathematical analyses.Examples: Computational and Systems Biology 26.1199 Biomathematics, Bioinformatics, and Computational Biology, Other.Any instructional program in biomathematics, bioinformatics, and computational biology not listed above.Examples: Biomathematics 26.12 Biotechnology.Instructional content is defined in code 26.1201. 26.1201 Biotechnology.A program that focuses on the application of the biological sciences, biochemistry, and genetics to the preparation of new and enhanced agricultural, environmental, clinical, and industrial products, including the commercial exploitation of microbes, plants, and animals. Includes instruction in bioinformatics, gene identification, phylogenetics and comparative genomics, bioinorganic chemistry, immunoassaying, DNA sequencing, xenotransplantation, genetic engineering, industrial microbiology, drug and biologic development, enzyme-based production processes, patent law, biotechnology management and marketing, applicable regulations, and biotechnology ethics. 26.13 Ecology, Evolution, Systematics, and Population Biology.Instructional content for this group of programs is defined in codes 26.1301 - 26.1399. 26.1301 Ecology.A program that focuses on the scientific study of the relationships and interactions of small-scale biological systems, such as organisms, to each other, to complex and whole systems, and to the physical and other non-biological aspects of their environments. Includes instruction in biogeochemistry; landscape and/or marine/aquatic dynamics; decomposition; global and regional elemental budgets; biotic and abiotic regulation of nutrient cycles; ecophysiology; ecosystem resilience, disturbance, and succession; community and habitat dynamics; organismal interactions (co-evolution, competition, predation); paleoecology; and evolutionary ecology.Examples: Ecosystem Science 26.1302 Marine Biology and Biological Oceanography.A program that focuses on the scientific study of the ecology and behavior of microbes, plants, and animals inhabiting oceans, coastal waters, and saltwater wetlands and their interactions with the physical environment. Includes instruction in chemical, physical, and geological oceanography; molecular, cellular, and biochemical studies; marine microbiology; marine botany; ichthyology; mammalogy; marine population dynamics and biodiversity; reproductive biology; studies of specific species, phyla, habitats, and ecosystems; marine paleocology and palentology; and applications to fields such as fisheries science and biotechnology.See also: 40.0607 - Oceanography, Chemical and Physical., 03.0301 - Fishing and Fisheries Sciences and Management., 30.3201 - Marine Sciences. 26.1303 Evolutionary Biology.A program that focuses on the scientific study of the genetic, developmental, functional, and morphological patterns and processes, and theoretical principles; and the emergence and mutation of organisms over time. Includes instruction in molecular and morphological systematics; genetics and development; evolutionary transformation; paleobiology and paleontology; morphogenesis; mutation; locomotor, biomechanical and craniodental form and function; evolutionary theory; and systematic biology. 26.1304 Aquatic Biology/Limnology.A program that focuses on the scientific study of the ecology and behavior of microbes, plants, and animals inhabiting inland fresh waters such as lakes, ponds, rivers, creeks, estuaries, and wetlands. Includes instruction in geology and hydrology; aquatic ecosystems; microbiology; mycology; botany; ichthyology; mammalogy; population biology and biodiversity; studies of specific species, phyla, and habitats; and applications to fields such as natural resources conservation, fisheries science, and biotechnology.Examples: Aquatic EcologySee also: 03.0205 - Water, Wetlands, and Marine Resources Management. 26.1305 Environmental Biology.A program that focuses on the scientific study of the origins, functions, relationships, interactions, and natural history of living populations, communities, species, and ecosystems in relation to dynamic environmental processes. Includes instruction in biodiversity, molecular genetic and genomic evolution, mesoscale ecology, computational biology and modeling, conservation biology, local and global environmental change, and restoration ecology.Examples: Environmental MicrobiologySee also: 03.0104 - Environmental Science. 26.1306 Population Biology.A program that focuses on the scientific study of the natural history, life cycle behavior, and ecosystem dynamics of single species and multi-species communities, and the patterns and causes of diversity within and among such populations. Includes instruction in biostatistics, population dynamics, population and quantitative genetics, RNA and DNA sequences, genomics, evolutionary ecology, natural adaptation and hybridization, geographic differentiation, life history and life cycle studies, and animal and plant demography. 26.1307 Conservation Biology.A program that focuses on the application of the biological sciences to the specific problems of biodiversity, species preservation, ecological sustainability, and habitat fragmentation in the face of advancing human social, economic, and industrial pressures. Includes instruction in ecology, environmental science, biological systems, extinction theory, human-animal and human-plant interaction, ecosystem science and management, wetland conservation, field biology, forest and wildlife biology, and natural history.See also: 03.0101 - Natural Resources/Conservation, General., 03.0104 - Environmental Science. 26.1308 Systematic Biology/Biological Systematics.A program that focuses on the theoretical and empirical study of the principles and processes underlying the origin and maintenance of biological taxonomic diversity; related biogeographical and evolutionary patterns; and studies of the origin, diversification, distribution, and extinction of species and lineages. Includes instruction in phylogenetic analysis, structural development and molecular evolution, classification and taxonomic theory, biological nomenclature, taxonomic assignment, evolutionary theory, biological surveys and inventories, computer modeling, and database building. 26.1309 Epidemiology.A program that focuses on the scientific study of disease, disability, and trauma patterns within and across populations and the development of health management mechanisms to prevent and control disease outbreaks and injurious behaviors. Includes instruction in biostatistics, biochemistry, molecular biology, immunology, disease and injury determinants, genetic disease and disability factors, behavioral studies, health services research, environmental disease and injury factors, and population studies.See also: 51.2201 - Public Health, General. 26.1310 Ecology and Evolutionary Biology.A program that focuses on the scientific study of the relationships and interactions across levels of biological organization–genes and genomes, organisms, species, and ecosystems–and how these change over time, including the origins and history of species, the processes by which biodiversity has evolved, and the ecological context in which this evolution takes place. Includes instruction in animal, plant, population, functional, evolutionary, and ecosystem ecology; ecological and evolutionary genetics; molecular evolution; population and conservation biology; animal and plant diversity; biometry; and scientific and research ethics.See also: 26.1301 - Ecology., 26.1303 - Evolutionary Biology. 26.1311 Epidemiology and Biostatistics. (New)A program with a general synthesis of epidemiology and biostatistics or a specialization which draws from epidemiology and biostatistics. Includes instruction in biostatistics, disease and injury determinants, epidemiology, health services research, pathology, spatial analysis, and statistics. 26.1399 Ecology, Evolution, Systematics and Population Biology, Other.Any instructional program in ecology, evolution, and systematics not listed above. 26.14 Molecular Medicine.Instructional content is defined in code 26.1401. 26.1401 Molecular Medicine.A program that focuses on the scientific study of the molecular and cellular basis of disease, and the application of this knowledge to the development of new clinical and diagnostic tools, medications, and therapies. Includes instruction in cell biology, molecular biology, physiology, pharmacology, biochemistry, genetics, pathology, molecular immunology, research and quantitative methods, and biomedical research computing. 26.15 Neurobiology and Neurosciences.Instructional content for this group of programs is defined in codes 26.1501 - 26.1599. 26.1501 Neuroscience.A program that focuses on the interdisciplinary scientific study of the molecular, structural, physiologic, cognitive, and behavioral aspects of the brain and nervous system. Includes instruction in molecular and cellular neuroscience, brain science, anatomy and physiology of the central nervous system, molecular and biochemical bases of information processing, behavioral neuroscience, biology of neuropsychiatric disorders, and applications to the clinical sciences and biomedical engineering.Examples: Behavioral Neuroscience Cognitive Neuroscience Computational Neuroscience Developmental Neuroscience Molecular and Cellular Neuroscience Systems Neuroscience 26.1502 Neuroanatomy.A program that focuses on the scientific study of the structure of the central and peripheral nervous system in vertebrates or the nervous system of invertebrates. Includes instruction in cellular and circuit anatomy, mapping of neuronal pathways, anatomical distribution and mapping of neuronal signaling molecules and their receptors, and the anatomical basis of central nervous system diseases and disorders. 26.1503 Neurobiology and Anatomy.A program that focuses on the scientific study of the structure and function of the central and peripheral nervous system in vertebrates and invertebrates. Includes instruction in molecular and cellular studies of neuronal and glial cells and circuits, neural transmitters and receptors, neuronal signaling processes, membrane and synapse structure and communication, autonomic function, nervous system circuitry and mapping, and anatomical and functional basis of central nervous system diseases and disorders.Examples: Neurobiology and Neurophysiology 26.1504 Neurobiology and Behavior.A program that focuses on the scientific study of the structure and function of the central and peripheral nervous system in vertebrates and invertebrates as it relates to control of behavior. Includes instruction in neuronal systems and circuits, higher level studies of behavior and cognition, computational neurobiology, and behavioral manifestations of central nervous system diseases and disorders.See also: 30.1701 - Behavioral Sciences., 30.1001 - Biopsychology., 42.2706 - Behavioral Neuroscience. 26.1599 Neurobiology and Neurosciences, Other.Any instructional program in neurobiology and neurosciences not listed above.Examples: Medical Neurobiology Computational Neurobiology 26.99 Biological and Biomedical Sciences, Other.Instructional content is defined in code 26.9999. 26.9999 Biological and Biomedical Sciences, Other.Any instructional program in the biological and biomedical sciences not listed above. 27 MATHEMATICS AND STATISTICSInstructional programs that focus on the systematic study of logical symbolic language and its applications. 27.01 Mathematics.Instructional content for this group of programs is defined in codes 27.0101 - 27.0199. 27.0101 Mathematics, General.A general program that focuses on the analysis of quantities, magnitudes, forms, and their relationships, using symbolic logic and language. Includes instruction in algebra, calculus, functional analysis, geometry, number theory, logic, topology and other mathematical specializations. 27.0102 Algebra and Number Theory.A program that focuses on the expression of quantities and their relationships by means of symbols, vectors, matrices, and equations, and the properties of integers. Includes instruction in algebraic structures, quadratic and automorphic forms, combinatorics, linear algebra, and algebraic geometry. 27.0103 Analysis and Functional Analysis.A program that focuses on the properties and behavior of equations, multivariate solutions, functions, and dynamic systems. Includes instruction in differential equations, variation, approximations, complex variables, integrals, harmonic analysis and wavelet theory, dynamic systems, and applications to mathematical physics. 27.0104 Geometry/Geometric Analysis.A program that focuses on the properties, measurements, and relationships pertaining to points, lines, angles, surfaces, and solids. Includes instruction in global analysis, differential geometry, Euclidian and Non-Euclidian geometry, set theory, manifolds, integral geometry, and applications to algebra and other topics. 27.0105 Topology and Foundations.A program that focuses on the properties of unaltered geometric configurations under conditions of continuous, multi-directional transformations. Includes instruction in mathematical logic, proof theory, model theory, set theory, combinatorics, continua, homotopy, homology, links, and transformation actions. 27.0199 Mathematics, Other.Any program in mathematics not listed above. 27.03 Applied Mathematics.Instructional content for this group of programs is defined in codes 27.0301 - 27.0399. 27.0301 Applied Mathematics, General. CIP Title or Definition ChangedA program that focuses on the application of mathematics to the solution of functional problems in fields such as engineering and the applied sciences. Includes instruction in natural phenomena modeling continuum mechanics, reaction-diffusion, wave propagation, dynamic systems, numerical analysis, controlled theory, asymptotic methods, variation, optimization theory, inverse problems, and applications to specific scientific and industrial topics.Examples: Fundamental Analysis and Real Variables Mathematical Analysis Numerical Analysis/Methods/Computation 27.0303 Computational Mathematics.A program that focuses on the application of mathematics to the theory, architecture, and design of computers, computational techniques, and algorithms. Includes instruction in computer theory, cybernetics, numerical analysis, algorithm development, binary structures, combinatorics, advanced statistics, and related topics. 27.0304 Computational and Applied Mathematics.A program that focuses on the application of a broad range of mathematical and computational methods to modeling, analysis, algorithm development, and simulation for the solution of complex scientific and engineering problems. Includes instruction in numerical analysis, discrete mathematics, operations research, optimization, differential equations, statistics, scientific computation, and applications to specific scientific and industrial topics.See also: 27.0303 - Computational Mathematics., 27.0301 - Applied Mathematics, General. 27.0305 Financial Mathematics.A program that focuses on the application of mathematics and statistics to the finance industry, including the development, critique, and use of various financial models. Includes instruction in probability theory, statistical analysis, numerical methods, computation and simulation methods, stochastic processes, economics, and financial markets and applications.Examples: Mathematical Finance Quantitative Finance Quantitative and Computational Finance 27.0306 Mathematical Biology.A program that focuses on the application of mathematics to genomics, molecular modeling, structural biology, ecology, evolutionary biology and systems of analysis of neurobiology, physiology, and metabolism. Includes instruction in computational mathematics, chaos and nonlinear systems, perturbation methods, evolutionary biology, molecular biology, bioinformatics, and neurobiology.See also: 26.1101 - Biometry/Biometrics. 27.0399 Applied Mathematics, Other.Any instructional program in applied mathematics not listed above.Examples: Combinatorics and Optimization 27.05 Statistics.Instructional content for this group of programs is defined in codes 27.0501 - 27.0599. 27.0501 Statistics, General.A general program that focuses on the relationships between groups of measurements, and similarities and differences, using probability theory and techniques derived from it. Includes instruction in the principles in probability theory, binomial distribution, regression analysis, standard deviation, stochastic processes, Monte Carlo method, Bayesian statistics, non-parametric statistics, sampling theory, and statistical techniques.See also: 26.1102 - Biostatistics., 13.0603 - Educational Statistics and Research Methods., 45.0102 - Research Methodology and Quantitative Methods., 30.7102 - Business Analytics. 27.0502 Mathematical Statistics and Probability.A program that focuses on the mathematical theory underlying statistical methods and their use. Includes instruction in probability theory parametric and non-parametric inference, sequential analysis, multivariate analysis, Bayesian analysis, experimental design, time series analysis, resampling, robust statistics, limit theory, infinite particle systems, stochastic processes, martingales, Markov processes, and Banach spaces. 27.0503 Mathematics and Statistics.A program with a general synthesis of mathematics and statistics or a specialization which draws from mathematics and statistics. Includes instruction in calculus, linear algebra, numerical analysis and partial differential equations, discrete mathematics, probability theory, statistics, computing, and other related topics.See also: 27.0101 - Mathematics, General., 27.0501 - Statistics, General. 27.0599 Statistics, Other.Any instructional program in statistics not listed above. 27.06 Applied Statistics. (New)Instructional content is defined in code 27.0601. 27.0601 Applied Statistics, General. (New)A program that focuses on the application of statistics to the solution of functional problems in fields such as business, engineering, medicine, and the applied sciences. Includes instruction in the principles in inference, probability theory, regression analysis, descriptive statistics, stochastic processes, Monte Carlo method, Bayesian statistics, non-parametric statistics, sampling theory, statistical computing, and statistical techniques. 27.99 Mathematics and Statistics, Other.Instructional content is defined in code 27.9999. 27.9999 Mathematics and Statistics, Other.Any instructional program in mathematics and statistics not listed above. 28 MILITARY SCIENCE, LEADERSHIP AND OPERATIONAL ARTInstructional programs that provide professional education and training of military officers in leadership, military science and operational studies, security policy and strategy, military economics and management, and pre-officer training. These CIP codes are not valid for IPEDS reporting. 28.01 Air Force ROTC, Air Science and Operations.Instructional content for this group of programs is defined in codes 28.0101 - 28.0199. These CIP codes are not valid for IPEDS reporting. 28.0101 Air Force JROTC/ROTC.A program that introduces students to the theory and practice of air science, life in the U.S. Air Force, and prepares them for cadet status (Junior ROTC or JROTC) or for service as commissioned reserve or active duty officers (senior AFROTC or ROTC). Programs are offered as adjuncts to regular high school or college instructional programs. This CIP code is not valid for IPEDS reporting. 28.0199 Air Force ROTC, Air Science and Operations, Other.Any instructional program in Air Force ROTC, air science and operations not listed above. This CIP code is not valid for IPEDS reporting. 28.03 Army ROTC, Military Science and Operations.Instructional content for this group of programs is defined in codes 28.0301 - 28.0399. These CIP codes are not valid for IPEDS reporting. 28.0301 Army JROTC/ROTC.A program that introduces students to the theory and practice of military science, life in the U.S. Army, and prepares them for cadet status (Junior ROTC or JROTC) or for service as commissioned reserve or active duty officers (senior AROTC or ROTC). Programs are offered as adjuncts to regular high school or college instructional programs. This CIP code is not valid for IPEDS reporting. 28.0399 Army ROTC, Military Science and Operations, Other.Any instructional program in Army ROTC, military science and operations not listed above. This CIP code is not valid for IPEDS reporting. 28.04 Navy/Marine ROTC, Naval Science and Operations.Instructional content for this group of programs is defined in codes 28.0401 - 28.0499. These CIP codes are not valid for IPEDS reporting. 28.0401 Navy/Marine Corps JROTC/ROTC.A program that introduces students to the theory and practice of naval science, life in the U.S. Navy and/or Marine Corps, and prepares them for cadet status (Junior ROTC or JROTC) or for service as commissioned reserve or active duty officers (senior NROTC or ROTC). Programs are offered as adjuncts to regular high school or college instructional programs. This CIP code is not valid for IPEDS reporting. 28.0499 Navy/Marine Corps ROTC, Naval Science and Operations, Other.Any instructional program in Navy/Marine Corps ROTC, naval science and operations not listed above. This CIP code is not valid for IPEDS reporting. 28.05 Military Science and Operational Studies.Instructional content for this group of programs is defined in codes 28.0501 - 28.0599. These CIP codes are not valid for IPEDS reporting. 28.0501 Air Science/Airpower Studies.A program that focuses on the theory, doctrine and principles of airpower in the tactical and strategic contexts, as well as in conjunction with other armed forces. Includes instruction in air warfighting, leadership and ethics, national security decisionmaking, strategic studies, global security, joint and coalition operations, and applicable regional or cultural studies and research methods. This CIP code is not valid for IPEDS reporting.Examples: Strategic Airpower Studies 28.0502 Air and Space Operational Art and Science.A program that focuses on the principles and art of leading, managing, and conducting air force operations on the ground, in the air, and in space. Includes instruction in leadership, staff operations, principles of command, air and space warfare, expeditionary operations, campaign planning, tactics and strategy. This CIP code is not valid for IPEDS reporting. 28.0503 Military Operational Art and Science/Studies.A program that focuses on the study of military operational issues and the preparation of field officers for warfighting, leadership, and related capabilities in land and joint operations. Includes instruction in leadership studies, military culture, national security policy, joint campaign planning, strategic estimation, strategic logistics, tactical and strategic doctrine, force capabilities, command and control, intelligence, movement, firepower, attack and defense, multinational issues, space operations, and applications to specific regional and operational issues. This CIP code is not valid for IPEDS reporting. 28.0504 Advanced Military and Operational Studies.A program that focuses on military operational issues at the theatre and general strategic level, emphasizing both land force operations and joint operations related to peacekeeping, war, and other emergencies. Includes instruction in military theory, military history, national and military strategy, campaign design and planning, senior leadership, theatre operational technologies and communications, civil-military relations, and applications to the study of specific world regions and types of operations. This CIP code is not valid for IPEDS reporting. 28.0505 Naval Science and Operational Studies.A program that focuses on in-depth professional study of naval warfare and related combined/joint operations at the tactical, operational and strategic levels. Includes instruction in maritime security, naval warfighting, naval tactics, naval strategy, operational art, planning and conducting joint operations, command and control, civil-military relations, information networking, leadership, ocean and nearshore operations, and related subjects. This CIP code is not valid for IPEDS reporting. 28.0506 Special, Irregular and Counterterrorist Operations.A program that focuses on the role and use of special operations forces in the context of low-intensity warfare such as asymmetric warfare and counterterrorism as well as irregular operations in conventional warfare. Includes instruction in special operations doctrine, equipment, support and strategy; the role of civilian leadership and the joint staffs; mission selection and employment; integration with regular forces; civil relations and psychological warfare. This CIP code is not valid for IPEDS reporting.Examples: Special Operations Low-Intensity Warfare Irregular and Guerilla Warfare Terrorism and Counterterorrism 28.0599 Military Science and Operational Studies, Other.Any instructional program in military science and operational studies not listed above. This CIP code is not valid for IPEDS reporting. 28.06 Security Policy and Strategy.Instructional content for this group of programs is defined in codes 28.0601 - 28.0699. These CIP codes are not valid for IPEDS reporting. 28.0601 Strategic Studies, General.A program that focuses on coercion theory, defense strategy, warfighting, and strategic operations in the context of joint or combined operations, coalitions, and overall national security. May be offered at the advanced level and in the context of one or more armed forces, and may focus on various scenarios including campaign, theatre, joint, global and advanced strategy. This CIP code is not valid for IPEDS reporting.See also: 45.0902 - National Security Policy Studies. 28.0602 Military and Strategic Leadership.A program that focuses on the analysis and systematic study of the intersection between leadership and operational art at the tactical and/or strategic levels. Includes instruction in leadership case studies, the dynamics of battle and associated responsibilities, the use of opportunities and resources, the human and physical dimensions of warfare, the effects of technology and logistics, doctrine, logistics, stress and the legal authority of command. This CIP code is not valid for IPEDS reporting. 28.0603 Military and International Operational Law.A program that focuses on the international and domestic law applicable to the armed forces, in war and peace. Includes instruction in the Uniform Code of Military Justice, case law and legislation, international law and treaties, warfighting doctrine, leadership and ethics, peacekeeping, and related issues affecting combatants, prisoners, and noncombatants. This CIP code is not valid for IPEDS reporting. 28.0604 Joint Operations Planning and Strategy.A program that focuses on the principles, operational methods and strategy of planning and conducting joint military operations. Includes instruction in civil-military affairs, effects-based operations, interservice doctrine, force integration and force multipliers, multinational forces, and applications specific to air, army, military, special forces and asymmetric contexts. This CIP code is not valid for IPEDS reporting.Examples: Force Doctrine 28.0605 Weapons of Mass Destruction.A program that focuses on the scientific principles, technology, policy issues and operational art required to prevent the spread and combat the effects of weapons of mass destruction, defined as chemical, biological and nuclear devices as well as some conventional weapons. Includes instruction in the scientific foundations of such weaponry, production, weaponization, effects protection and mitigation, state and terrorist threat analysis, and applications to specific weapon types and scenarios. This CIP code is not valid for IPEDS reporting.Examples: Nuclear Weapons and Counterproliferation Combating Weapons of Mass Destruction 28.0699 National Security Policy and Strategy, Other.Any instructional program in national security policy and strategy not listed above. This CIP code is not valid for IPEDS reporting. 28.07 Military Economics and Management.Instructional content for this group of programs is defined in codes 28.0701 - 28.0799. These CIP codes are not valid for IPEDS reporting. 28.0701 National Resource Strategy and Policy.A program that focuses on the application of economics, policy analysis, management and leadership studies to the formulation of national strategy and security policy in the context of the international economy. Includes instruction in military strategy and logistics, strategic leadership, national and international economic policy, national security policy, acquisition and procurement, industry economics and studies of specific regions, industries or issues. This CIP code is not valid for IPEDS reporting. 28.0702 Industry Studies.A program that focuses on the study of specific industries and economic sectors from domestic and comparative perspectives in order to assess strength, weakness and relationship to national security needs. Includes instruction in resource economics, finance and monetary policy, industrial economics, econometrics and forecasting, labor and organizational studies, technology policy, national security policy, military strategy, acquisition needs assessment, crisis management, international economics and development studies. This CIP code is not valid for IPEDS reporting. 28.0703 Military Installation Management.A program that focuses on the planning, acquisition and management of military bases, housing, installations and other facilities plus their associated buildings, systems, equipment, staffing and maintenance. Includes instruction in operations management, acquisitions planning, contracts management, building construction, real estate, facilities management, hospitality management, administrative budgeting and finance, personnel supervision and leadership, related regulations and policies, and applications to specific service requirements, operational needs, and types of facilities. This CIP code is not valid for IPEDS reporting. 28.0799 Military Economics and Management, Other.Any instructional program in military economics and management not listed above. This CIP code is not valid for IPEDS reporting. 28.08 Reserved. (New)Instructional content is defined in code 28.0801. These CIP codes are not valid for IPEDS reporting. 28.0801 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 28.99 Military Science, Leadership and Operational Art, Other.Instructional content is defined in code 28.9999. These CIP codes are not valid for IPEDS reporting. 28.9999 Military Science, Leadership and Operational Art, Other.Any instructional program in military science, leadership and operational art not listed above. This CIP code is not valid for IPEDS reporting. 29 MILITARY TECHNOLOGIES AND APPLIED SCIENCESInstructional programs that prepare individuals in specialized and advanced subject matter for the armed services and related national security organizations, including intelligence operations, military applied sciences, and military technologies. 29.02 Intelligence, Command Control and Information Operations.Instructional content for this group of programs is defined in codes 29.0201 - 29.0299. 29.0201 Intelligence, General.A program that focuses on the principles and techniques of intelligence acquisition, analysis and exploitation. Includes instruction in intelligence organizations, the intelligence cycle, intelligence operations planning, intelligence analysis and reporting, intelligence methods, electronic and signals intelligence, operations and communications security, human intelligence management, intelligence chain of command, information exploitation and psychological warfare, and the relationship to national security policy and strategy. 29.0202 Strategic Intelligence.A program that focuses on the management, analysis and use of national-level, theatre-level, and international intelligence and related policy issues. Includes instruction in intelligence organization and management, strategic uses of intelligence, management of intelligence systems and assets, command and control, joint intelligence operations, electronic and signals intelligence, threat assessment and estimation, intelligence analysis and reporting, counterintelligence, and studies of specific regions and situations. 29.0203 Signal/Geospatial Intelligence.A program that focuses on the theory, technology and operational aspects of collecting, processing and exploiting remote-sensed, radar, acoustic and other forms of signals intelligence. Includes instruction in applied physics, wave propagation and capture, radar systems, acoustics and underwater systems, infrared systems, synthetic aperture systems, collection and processing systems, signal phenomenology, signal analysis and exploitation, and applications to specific intelligence problems.Examples: Advanced Geospatial Intelligence 29.0204 Command &amp; Control (C3, C4I) Systems and Operations.A program that focuses on the theory, technology and operational use of information and decision systems in support of battlefield, theatre, and global strategic operations. Includes instruction in applied mathematics and statistics, computer systems, real-time analysis and decision systems, surveillance and navigation systems, information and communications technology, information security, situational awareness, system integration, joint operations and applications to specific command problems and services. 29.0205 Information Operations/Joint Information Operations.A program that focuses on the strategic and operational use of information relative to the support of military and strategic policy and objectives. Includes instruction in information technology, decision theory and applications, military operations, command and control technology, network operations, network systems integration, computer network defense, space communications technology, and applications to specific military operational tasks. 29.0206 Information/Psychological Warfare and Military Media Relations.A program that focuses on the support of military and strategic operations and policy via the use of information as a tool of statecraft and warfighting. Includes instruction in information technology and systems, information security, command and control, satellite communications, global information dissemination, communications and media management, intelligence, psychological warfare, strategic planning, security policy and doctrine, and applications to specific operations, services, and scenarios. 29.0207 Cyber/Electronic Operations and Warfare.A program that focuses on the technological and operation aspects of information warfare, including cyber attack and cyber defense. Includes instruction in computer and network security, cryptography, computer forensics, systems security engineering, software applications, threat and vulnerability assessment, wireless networks and satellite communications, tactical and strategic planning, legal and ethical issues, and cyber warfare systems development and acquisition.Examples: Cyberspace Operations Electronic Warfare Information Warfare 29.0299 Intelligence, Command Control and Information Operations, Other.Any instructional program in intelligence, command control and information operations not listed above. 29.03 Military Applied Sciences.Instructional content for this group of programs is defined in codes 29.0301 - 29.0399. 29.0301 Combat Systems Engineering.A program that focuses on the application of systems engineering and system architecture to the design and construction of modern combat systems and their integration with each other, with host platforms and with other forces into network-centric warfighting systems. Includes instruction in systems engineering, computer programming, chemical systems, biological systems, material systems, human factors, combat environments, sensor systems, threat and system risk assessment, conventional and unconventional weapons, combat simulation, reliability and maintenance, testing, engineering project management, strategic planning and applications to aerospace, ground, and naval combat systems. 29.0302 Directed Energy Systems.A program that focuses on the study of lasers and other directed energy phenomena and their application to the creation of energy beam weapons systems. Includes instruction in photonics, electro-optics, microwave phenomena, laser chemistry, spectroscopy, chemical lasers, fibre lasers, imaging and optics, laser propagation and control, laser communication, infrared remote sensing, modeling and simulation, and related technologies. 29.0303 Engineering Acoustics.A program that focuses on the application of acoustics and signals processing to undersea and antisubmarine warfare. Includes instruction in acoustics; electrical engineering; the generation, propagation and reception of underwater sound waves; military applications of underwater sound; and acoustic signal processing. 29.0304 Low-Observables and Stealth Technology.A program that focuses on the application of electromagnetic field theory, electro-optics and materials science to the reduction of radar, optical and acoustic signatures of weapons systems. Includes instruction in computational electromagnetics, electro-optics, acoustics, guided wave theory, radiation capture, antenna applications in layered environments, material characterization, radar cross-section analysis, sonar signature analysis, non-destructive testing, remote sensing, and applications to specific weapons systems and operational environments. 29.0305 Space Systems Operations.A program that focuses on the design, development, and operation of missiles, satellites and other space-based systems for military purposes. Includes instruction in the military applications of space, space technology, aerospace engineering, systems architecture, orbital mechanics, launch and retrieval systems, ground support systems, satellite communications, and space-based sensor systems. 29.0306 Operational Oceanography.A program that focuses on the study of physical oceanography as applied to the naval tactical and strategic environment and the support of military operations. Includes instruction in atmospheric thermodynamics and radiation propagation, air-ocean fluid dynamics, ocean waves, nearshore environments and processes, ocean acoustics, ocean analysis, tactical oceanography, prediction, and related quantitative and experimental methods. 29.0307 Undersea Warfare.A program that focuses on the principles, engineering design and military concepts that govern the operational employment of underwater sensors and weapons systems. Includes instruction in acoustics, electrical, and mechanical engineering; mathematics; meteorology; oceanography; physics; operations analysis; human factors; computer science; and robotics. 29.0399 Military Applied Sciences, Other.Any instructional program in military applied sciences not listed above. 29.04 Military Systems and Maintenance Technology.Instructional content for this group of programs is defined in codes 29.0401 - 29.0499. 29.0401 Aerospace Ground Equipment Technology.A program that focuses on the principles, technology, and maintenance of ground-based systems and equipments used to support aviation flight operations and space operations. Includes instruction in computer science, electronics, basic sciences and quantitative methods, air conditioning and refrigeration, corrosion control, fluid power, hazardous materials, industrial safety, maintenance management, vehicle and equipment operation, and applications to specific ground support systems. 29.0402 Air and Space Operations Technology.A program that focuses on the principles, technology and maintenance of systems and equipment used in aerospace operations. Includes instruction in astronomy and astronautics, solid state theory, air and space operations, electronics, computer science, aviation and space flight safety, life support systems, flight operations management systems, programming, propulsion systems, weaponry, maintenance management and applications to specific systems and operations. 29.0403 Aircraft Armament Systems Technology.A program that focuses on the principles, technology and maintenance of aircraft weapons systems and associated peripherals. Includes instruction in basic science and quantitative methods, computer science, electronics, engineering graphics, fluid power, heavy equipment operation, armament systems, weapon materials and processes, weapon safety, corrosion control, aircraft systems maintenance, and maintenance management. 29.0404 Explosive Ordinance/Bomb Disposal.A program that focuses on the identification, containment, analysis and neutralization of explosive devices. Includes instruction in nuclear science, computer science, ordinance and bomb systems, electronics, computer science, industrial radiography, non-destructive testing, equipment operation, inventory management, investigative techniques, forensics, schematic interpretation, safety procedures, site containment and emergency medicine. 29.0405 Joint Command/Task Force (C3, C4I) Systems.A program that focuses on the principles, technology and operational use of command and control (C3, C4I) systems as applied to joint and combined military operations involving unified commands. Includes instruction in information technology, communications systems, network systems and architecture, systems engineering, C3 and C4I doctrine and policy, C3 and C4I systems management, intelligence, operational and strategic planning, interagency operations, operational security and deception. 29.0406 Military Information Systems Technology.A program that focuses on the principles, design and application of computer and networking technology to the military environment. Includes instruction in planning; program development; graphical user interfaces; rapid prototyping; program construction; data types, operations; control flow; arrays; records; file I/O; database access; event-driven OOP structures; and enabling global-networked communications, including databases, systems analysis and design, decision support systems, and network security. 29.0407 Missile and Space Systems Technology.A program that focuses on the principles, technology and maintenance of rocket systems, guided missiles, and space vehicles as well as related systems. Includes instruction in engineering mechanics, engineering graphics, materials and processes, electronics, propellant and guidance systems, control systems, fluid power, nuclear and conventional weapons systems, hazardous materials, non-destructive inspection and testing, quality assurance, safety procedures and maintenance management. 29.0408 Munitions Systems/Ordinance Technology.A program that focuses on the principles, technology and maintenance of ground or sea-based weapons systems, ordinance and munitions. Includes instruction in basic sciences, electronics, systems technology, fluid power, computer science, conventional weapons systems, nuclear weapons systems, munitions systems, storage and safety, equipment operation, guidance and control systems, hazardous materials, corrosion control, nondestructive testing and quality control, and maintenance management. 29.0409 Radar Communications and Systems Technology.A program that focuses on the principles, technology and maintenance of air, sea and ground-based radar systems. Includes instruction in electronic principles and digital techniques, transistors and solid-state component theory, radar systems; maintenance technology, data processing systems, wiring and circuit schematics, maintenance management, safety procedures, and applications to specific systems and services. 29.0499 Military Systems and Maintenance Technology, Other.Any instructional program in military systems and maintenance technology not listed above. 29.05 Reserved. (New)Instructional content is defined in code 29.0501. 29.0501 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 29.06 Military Technology and Applied Sciences Management. (New)Instructional content is defined in code 29.0601. 29.0601 Military Technology and Applied Sciences Management. (New)A program that focuses on applied military science, military operations, intelligence gathering, military technology, and national security. Includes instruction in computer science, engineering, ethics, field training, leadership, military strategy, logistics, management skills, and politics. 29.99 Military Technologies and Applied Sciences, Other.Instructional content is defined in code 29.9999. 29.9999 Military Technologies and Applied Sciences, Other.Any instructional program in military technologies and applied sciences not listed above. 30 MULTI/INTERDISCIPLINARY STUDIESInstructional programs that derive from two or more distinct programs to provide a cross-cutting focus on a subject concentration that is not subsumed under a single discipline or occupational field. 30.00 Multi-/Interdisciplinary Studies, General.Instructional content for this group of programs is defined in codes 30.0000 - 30.0001. 30.0000 Multi-/Interdisciplinary Studies, General.A program that derives from two or more distinct programs and that is integrated around a unifying theme or topic that cannot be subsumed under a single discipline or occupational field.Examples: Student-Designed Major 30.0001 Comprehensive Transition and Postsecondary (CTP) Program. (New)A comprehensive transition and postsecondary (CTP) program that provides students with intellectual disabilities with academic enrichment, socialization, independent living skills, self-advocacy skills, and integrated work experiences and career skills that lead to gainful employment. 30.01 Biological and Physical Sciences.Instructional content is defined in code 30.0101. 30.0101 Biological and Physical Sciences.A program that is either a general synthesis of one or more of the biological and physical sciences, or a specialization which draws from the biological and physical sciences.Examples: AstrobiologySee also: 26.0101 - Biology/Biological Sciences, General., 40.0101 - Physical Sciences, General. 30.05 Peace Studies and Conflict Resolution.Instructional content is defined in code 30.0501. 30.0501 Peace Studies and Conflict Resolution.A program that focuses on the origins, resolution and prevention of international and inter-group conflicts. Includes instruction in peace research methods and related social scientific and psychological knowledge bases.See also: 30.2801 - Dispute Resolution. 30.06 Systems Science and Theory.Instructional content is defined in code 30.0601. 30.0601 Systems Science and Theory.A program with a multidisciplinary approach to the analysis and solution of complex problems, requiring a combined approach using data and models from the natural, social, technological, behavioral and life sciences, and other specialized fields.See also: 14.2701 - Systems Engineering. 30.08 Mathematics and Computer Science.Instructional content is defined in code 30.0801. 30.0801 Mathematics and Computer Science.A program with a general synthesis of mathematics and computer science or a specialization which draws from mathematics and computer science.See also: 11.0701 - Computer Science., 27.0101 - Mathematics, General. 30.10 Biopsychology.Instructional content is defined in code 30.1001. 30.1001 Biopsychology.A program that focuses on biological and psychological linkages, especially the linkages between biochemical and biophysical activity and the functioning of the central nervous system.See also: 42.2706 - Behavioral Neuroscience. 30.11 Gerontology.Instructional content is defined in code 30.1101. 30.1101 Gerontology.A program that focuses on the human aging process and aged human populations, using the knowledge and methodologies of the social sciences, psychology and the biological and health sciences.See also: 19.0702 - Adult Development and Aging., 42.2809 - Geropsychology. 30.12 Historic Preservation and Conservation.Instructional content for this group of programs is defined in codes 30.1201 - 30.1299. 30.1201 Historic Preservation and Conservation, General. CIP Title or Definition ChangedA program that focuses on the design and implementation of plans to restore and maintain historic buildings, districts, and landscapes in a way that balances conservation and preservation with commercial and development interests. Includes instruction in architectural history, building conservation, cultural resource management, economics, historical documentation and preservation, land-use and zoning codes, public policy, public relations, real estate law, and taxation.See also: 04.0802 - Architectural Conservation. 30.1202 Cultural Resource Management and Policy Analysis.A program that focuses on the application of cultural studies, public policy analysis, and management skills to planning, promoting, and implementing programs to preserve and protect cultural heritage sites and artifacts. Includes instruction in historical preservation and conservation, business management, policy analysis, applied economics, public relations, applied history, historical archaeology, and environmental impact studies.See also: 54.0105 - Public/Applied History. 30.1299 Historic Preservation and Conservation, Other.Any instructional program that focuses on architectural design and building techniques for historic and restored structures not listed above. 30.13 Medieval and Renaissance Studies.Instructional content is defined in code 30.1301. 30.1301 Medieval and Renaissance Studies.A program that focuses on the study of the Medieval and/or Renaissance periods in European and circum-Mediterranean history from the perspective of various disciplines in the humanities and social sciences, including history and archeology, as well as studies of period art and music.Examples: Medieval Studies Renaissance Studies 30.14 Museology/Museum Studies.Instructional content is defined in code 30.1401. 30.1401 Museology/Museum Studies.A program that focuses on the attitudes, knowledge, and skills required to develop, prepare, organize, administer, conserve, store and retrieve artifacts, exhibits and entire collections in museums and galleries, and that prepares individuals to assume curatorial, technical and managerial positions in museums. Includes instruction in institutional management, acquisition, exhibit design, conservation, packing techniques, and public relations.See also: 50.1002 - Fine and Studio Arts Management. 30.15 Science, Technology and Society.Instructional content is defined in code 30.1501. 30.1501 Science, Technology and Society.A program that focuses on the contemporary social and public policy ramifications of science and technology, the interrelationship of science and engineering with the public policy process, and the social and ethical dimensions of scientific and technological enterprises.Examples: Social Studies of ScienceSee also: 54.0104 - History and Philosophy of Science and Technology., 51.3205 - History of Medicine. 30.16 Accounting and Computer Science.Instructional content is defined in code 30.1601. 30.1601 Accounting and Computer Science.A program that combines accounting with computer science and/or computer studies.See also: 11.0701 - Computer Science., 52.0301 - Accounting. 30.17 Behavioral Sciences.Instructional content is defined in code 30.1701. 30.1701 Behavioral Sciences.A program with a combined or undifferentiated focus on the social sciences, psychology, and biomedical sciences to study complex problems of human individual and social growth and behavior.See also: 42.0101 - Psychology, General. 30.18 Natural Sciences.Instructional content is defined in code 30.1801. 30.1801 Natural Sciences.A program with a combined or undifferentiated focus on one or more of the physical and biological sciences. 30.19 Nutrition Sciences.Instructional content is defined in code 30.1901. 30.1901 Nutrition Sciences.A scientific program that focuses on the utilization of food for human growth and metabolism, in both normal and dysfunctional states, from the interdisciplinary perspective of the agricultural, human, biological, and biomedical sciences. Includes instruction in food science, biochemistry, physiology, dietetics, food and nutrition studies, biotechnology, biophysics, and the clinical sciences.See also: 19.0504 - Human Nutrition., 51.3102 - Clinical Nutrition/Nutritionist. 30.20 International/Globalization Studies. CIP Title or Definition ChangedInstructional content is defined in code 30.2001. 30.2001 International/Globalization Studies. CIP Title or Definition ChangedA program that focuses on global and international issues from the perspective of the social sciences, social services, and related fields.Examples: Global StudiesSee also: 45.0901 - International Relations and Affairs. 30.21 Holocaust and Related Studies.Instructional content is defined in code 30.2101. 30.2101 Holocaust and Related Studies.A program that focuses on genocide in human history with particular reference to Twentieth Century genocides such as that of the Ottoman Armenians during World War I and the Nazi Holocaust during World War II. Programs also focus on topics such as survivor studies and counseling, war crimes research and prevention, reconciliation and compensation, ethical and spiritual issues, holocaust art and literature, and legacy and effect in relation to subsequent generations.See also: 38.0206 - Jewish/Judaic Studies. 30.22 Classical and Ancient Studies.Instructional content for this group of programs is defined in codes 30.2201 - 30.2299. 30.2201 Ancient Studies/Civilization.A program that focuses on Western and Non-Western cultures and related topics in the periods of Pre-history and Antiquity. Includes such disciplines as ancient languages, archeology, history, art history, geography, population studies, environmental studies, religious studies, and the social sciences. 30.2202 Classical, Ancient Mediterranean, and Near Eastern Studies and Archaeology. CIP Title or Definition ChangedA program that focuses on the study of the classical ancient civilizations of the ancient Near East, Europe, and the Mediterranean Sea, such as Athens, Anatolia, Egypt, Greece, Israel, Mesopotamia, North Africa, and Rome. Includes instruction in ancient languages, ancient history, archaeology, anthropology, Greek and Roman mythology, philosophy, and religion.Examples: Ancient Mediterranean StudiesSee also: 05.0108 - Near and Middle Eastern Studies. 30.2299 Classical and Ancient Studies, Other. (New)Any program in classical and ancient studies not listed above. 30.23 Intercultural/Multicultural and Diversity Studies.Instructional content is defined in code 30.2301. 30.2301 Intercultural/Multicultural and Diversity Studies.A program that focuses on the dynamic social relations between and among majority and minority groups and different minority groups, and ways to promote mutual tolerance, inter-group cooperation, and the leadership and management of diverse groups and diversity issues in family, educational, recreational, and work settings. Includes instruction in ethnic and cultural studies, group psychology, sociology, anthropology, conflict resolution, human services and resources, and applications to various functional environments.See also: 05.0200 - Ethnic Studies., 09.0907 - International and Intercultural Communication. 30.25 Cognitive Science.Instructional content for this group of programs is defined in codes 30.2501 - 30.2599. 30.2501 Cognitive Science, General. CIP Title or Definition ChangedA program that focuses on the study of the mind and the nature of intelligence from the interdisciplinary perspectives of computer science, philosophy, mathematics, psychology, neuroscience, and other disciplines. Includes instruction in mathematics and logic, cognitive process modeling, dynamic systems, learning theories, brain and cognition, neural networking, programming, and applications to topics such as language acquisition, computer systems, and perception and behavior.See also: 42.2701 - Cognitive Psychology and Psycholinguistics. 30.2502 Contemplative Studies/Inquiry. (New)A program that focuses on the philosophical, psychological, and scientific bases of human contemplative experience. Includes instruction in cognitive science, meditation, mindfulness, neuroscience, philosophy, psychology, and religion. 30.2599 Cognitive Science, Other. (New)Any instructional program in cognitive science not listed above. 30.26 Cultural Studies/Critical Theory and Analysis.Instructional content is defined in code 30.2601. 30.2601 Cultural Studies/Critical Theory and Analysis.An interdisciplinary program that focuses on the analysis and critique of culture in its varied forms, including values, ideas, belief systems, and expressive acts, and the relationship between cultural forms, everyday life, and structures of power. Includes instruction in anthropology, communications, history, literary studies, philosophy, political economy, and sociology, as well as recent theories and methodologies such as semiotics, deconstruction, postcolonial studies, gender theory, and ethnography.Examples: Cultural Studies Critical Theory and AnalysisSee also: 16.0104 - Comparative Literature., 30.3601 - Cultural Studies and Comparative Literature., 05.0212 - Comparative Group Studies. 30.27 Human Biology.Instructional content is defined in code 30.2701. 30.2701 Human Biology.An interdisciplinary program that focuses on understanding the human being from the biological, social science, and humanities perspectives and that addresses contemporary issues related to biology and society, such as global health and disease, environmental policy, bioethics, and biotechnology.Examples: Biology and Society 30.28 Dispute Resolution.Instructional content is defined in code 30.2801. These CIP codes are not valid for IPEDS reporting. 30.2801 Dispute Resolution.A program that provides individuals with skills in negotiation, mediation, and arbitration, that can be applied to resolve disputes in a variety of settings, including business, legal, domestic, and labor relations.Examples: Dispute Resolution Dispute and Conflict Resolution Negotiation and Dispute Resolution Alternative Dispute ResolutionSee also: 30.0501 - Peace Studies and Conflict Resolution. 30.29 Maritime Studies.Instructional content is defined in code 30.2901. 30.2901 Maritime Studies.A program that focuses on the history, science, policy issues, and literature of the ocean. Includes instruction in maritime history, maritime law, maritime literature, oceanography, maritime security, and maritime politics. 30.30 Computational Science.Instructional content is defined in code 30.3001. 30.3001 Computational Science.A program that focuses on the study of scientific computing and its application. Includes instruction in scientific visualization, multi-scale analysis, grid generation, data analysis, applied mathematics, numerical algorithms, high performance parallel computing, and numerical modeling and simulation with applications in science, engineering and other disciplines in which computation plays an integral role.Examples: Scientific ComputingSee also: 27.0303 - Computational Mathematics., 26.1104 - Computational Biology. 30.31 Human Computer Interaction.Instructional content is defined in code 30.3101. 30.3101 Human Computer Interaction. CIP Title or Definition ChangedAn interdisciplinary program that focuses on the study of the interaction between people and technology and how that technology impacts society, and combines disciplines within the fields of computing and information science (information systems, software engineering, artificial intelligence and design), engineering, and the behavior sciences (cognitive science, cognitive psychology, sociology, organizational psychology, and social psychology). Includes instruction in information technology, cognitive and behavioral sciences, and systems design.Examples: Human Factors PsychologySee also: 42.2813 - Applied Psychology., 11.0105 - Human-Centered Technology Design. 30.32 Marine Sciences.Instructional content is defined in code 30.3201. 30.3201 Marine Sciences.A program that focuses on the study of biology, chemistry, geology and physics applied to marine, estuarine and coastal environments. Includes instruction in marine biogeochemistry, atmosphere and ocean dynamics, coastal ecology, coastal ocean processes, microbial ecology, marine ecosystem modeling, and polar microbiology.See also: 26.1302 - Marine Biology and Biological Oceanography. 30.33 Sustainability Studies.Instructional content is defined in code 30.3301. 30.3301 Sustainability Studies.A program that focuses on the concept of sustainability from an interdisciplinary perspective. Includes instruction in sustainable development, environmental policies, ethics, ecology, landscape architecture, city and regional planning, economics, natural resources, sociology, and anthropology.Examples: Sustainability Sustainable Living Organizational and Environmental Sustainability Sustainability StudiesSee also: 01.0308 - Agroecology and Sustainable Agriculture. 30.34 Anthrozoology. (New)Instructional content is defined in code 30.3401. 30.3401 Anthrozoology. (New)A program of study that combines anthropology and zoology in order to examine the relationship between animals and humans. Includes instruction in animal behavior and communication, animal welfare, animal conservation, animal training, animal-assisted therapy techniques, biology, ethics, and education. 30.35 Climate Science. (New)Instructional content is defined in code 30.3501. 30.3501 Climate Science. (New)A program that focuses on the scientific study of the climate system of the earth with emphasis on the physical, dynamical, and chemical interactions of the atmosphere, ocean, land, ice, and the terrestrial and marine biospheres. Includes instruction in biology, chemistry, climate analysis, climate change adaptation/mitigation, climate policy, ecology, energy development, environmental impacts, marine chemistry, meteorology, and oceanography. 30.36 Cultural Studies and Comparative Literature. (New)Instructional content is defined in code 30.3601. 30.3601 Cultural Studies and Comparative Literature. (New)A program with a general synthesis of cultural studies and comparative literature or a specialization which draws from cultural studies and comparative literature. Includes instruction in anthropology, comparative linguistics, cultural studies, history, literary criticism, literary studies, philosophy, political economy, sociology, and textual studies.See also: 16.0104 - Comparative Literature., 05.0200 - Ethnic Studies., 30.2601 - Cultural Studies/Critical Theory and Analysis. 30.37 Design for Human Health. (New)Instructional content is defined in code 30.3701. 30.3701 Design for Human Health. (New)A program that focuses on the impact of design and architecture on the health of individuals and larger populations, and how to create settings that promote health, healing, and well-being. Includes instruction in architecture, interior design, human health services, communication studies, medical and clinical innovations, behavioral and engineering sciences, hospitals and health systems, and environmental conditions that influence health.See also: 04.0402 - Healthcare Environment Design/Architecture. 30.38 Earth Systems Science. (New)Instructional content is defined in code 30.3801. 30.3801 Earth Systems Science. (New)A program that focuses on the interaction of the Earth’s oceanographic, atmospheric, and terrestrial systems. Includes instruction in biogeochemistry, climate dynamics, geographical information science (GIS), geophysics, hydrology, landscape ecology, meteorology, and satellite remote sensing analysis. 30.39 Economics and Computer Science. (New)Instructional content is defined in code 30.3901. 30.3901 Economics and Computer Science. (New)A program of study that focuses on the theoretical and practical connections between computer science and economics. Includes instruction in data analysis, database design, data mining, computer algorithms, economics, econometrics, computer programing, mathematics, and statistics. 30.40 Economics and Foreign Language/Literature. (New)Instructional content is defined in code 30.4001. 30.4001 Economics and Foreign Language/Literature. (New)A program with a general synthesis of economics and the language and literature of one or more countries or regions or a specialization which draws from economics and the language and literature of one or more countries or regions. Includes instruction in comparative economic systems, econometrics, economic theory, money and banking systems, international economics, international trade, linguistics, philology, and translation.See also: 16.0101 - Foreign Languages and Literatures, General., 45.0605 - International Economics. 30.41 Environmental Geosciences. (New)Instructional content is defined in code 30.4101. 30.4101 Environmental Geosciences. (New)A program that focuses on the scientific study of the environmental implications of geological processes and human activities on Earth. Includes instruction in environmental/natural resource management, geographic information systems (GIS), geology, hydrology, regulatory agency compliance, hazard identification and mitigation, environmental law, environmental policy, and sustainability studies. 30.42 Geoarcheaology. (New)Instructional content is defined in code 30.4201. 30.4201 Geoarcheaology. (New)A program that focuses on the application of analytical techniques, concepts, and field methods from the earth sciences to solve archaeological questions related to human settlement, artifacts, site taphonomy, and paleoenvironments. Includes instruction in anthropology, ancient civilizations, archeology, geology, paleoclimatic reconstruction, sedimentology, and site taphonomic research. 30.43 Geobiology. (New)Instructional content is defined in code 30.4301. 30.4301 Geobiology. (New)A program that focuses on the scientific study of how living things interact with geological systems. Includes instruction in evolution of Earth systems, geochemistry, geology, geomicrobiology, marine chemistry, paleobiology, paleoecology, paleontology, and petrology. 30.44 Geography and Environmental Studies. (New)Instructional content is defined in code 30.4401. 30.4401 Geography and Environmental Studies. (New)A program that focuses on interactions between people and the natural and built environments. Includes instruction in climate science, sustainability, environmental science and policy, research methods, geographic information systems (GIS), human geography, physical geography, remote sensing, and public policy.See also: 45.0701 - Geography., 03.0103 - Environmental Studies. 30.45 History and Language/Literature. (New)Instructional content is defined in code 30.4501. 30.4501 History and Language/Literature. (New)A program with a general synthesis of history and the language and literature of one or more countries or regions or a specialization which draws from history and the language and literature of one or more countries or regions. Includes instruction in historiography; historical research methods; linguistics; literature, philology; and studies of specific periods, issues and cultures.See also: 54.0101 - History, General., 16.0101 - Foreign Languages and Literatures, General. 30.46 History and Political Science. (New)Instructional content is defined in code 30.4601. 30.4601 History and Political Science. (New)A program with a general synthesis of history and political science or a specialization which draws from history and political science. Includes instruction in comparative government and politics, historiography, historical research methods, political science, political theory, records administration, and systematic study of political institutions and behavior.See also: 54.0101 - History, General., 45.1001 - Political Science and Government, General. 30.47 Linguistics and Anthropology. (New)Instructional content is defined in code 30.4701. 30.4701 Linguistics and Anthropology. (New)A program that focuses on the study of the anthropological, historical, and sociological context of language with a particular emphasis on language use and its role in shaping cultural and social diversity. Includes instruction in applied linguistics, data management, field methods, language heritage, socialization, structure, linguistic analysis, linguistic theory, and multilingualism.See also: 16.0102 - Linguistics., 45.0201 - Anthropology, General. 30.48 Linguistics and Computer Science. (New)Instructional content is defined in code 30.4801. 30.4801 Linguistics and Computer Science. (New)A program that focuses on the relationship between computer and human language and computational techniques applied to natural language. Includes instruction in computer programming, human languages, linguistic analysis, logic, natural language processing, semantics, machine learning, psycholinguistics, software engineering, and syntax.See also: 11.0101 - Computer and Information Sciences, General., 16.0102 - Linguistics. 30.49 Mathematical Economics. (New)Instructional content is defined in code 30.4901. 30.4901 Mathematical Economics. (New)A program that focuses on the application of mathematical methods to the development of economic theory, models, and quantitative analysis. Includes instruction in data analysis, applied business economics, calculus, econometrics, linear algebra, microeconomic theory, probability, and statistical methods.Examples: Math Economics Mathematics and Economics Economics and MathematicsSee also: 45.0603 - Econometrics and Quantitative Economics. 30.50 Mathematics and Atmospheric/Oceanic Science. (New)Instructional content is defined in code 30.5001. 30.5001 Mathematics and Atmospheric/Oceanic Science. (New)A program that focuses on the application of mathematics to atmospheric and oceanic problems. Includes instruction in chemistry, physics, atmospheric/ocean dynamics, climatology, weather simulation, climate modeling, mathematics, oceanography, and atmospheric science. 30.51 Philosophy, Politics, and Economics. (New)Instructional content is defined in code 30.5101. 30.5101 Philosophy, Politics, and Economics. (New)A program that focuses on philosophical foundations, political institutions, collective behavior, economic theory, and economic influences. Includes instruction in econometrics, logic, metaphysics, moral responsibility, philosophy of language, philosophy of perception, philosophy through history, reasoning and persuasion, and social epistemology.See also: 38.0101 - Philosophy., 45.0601 - Economics, General., 45.1001 - Political Science and Government, General. 30.52 Digital Humanities and Textual Studies. (New)Instructional content for this group of programs is defined in codes 30.5201 - 30.5299. 30.5201 Digital Humanities and Textual Studies, General. (New)A program that focuses on digital textual editing, archiving, and publishing, and on the study of new media and computing platforms from the perspectives of the humanities and computer science. Includes instruction in archiving, computer programming, cultural studies, and textual criticism. 30.5202 Digital Humanities. (New)A program that focuses on the use of new technologies, advanced computing, and public engagement to investigate and analyze questions in the humanities. Includes instruction in anthropology, art, data mining and machine learning, design, digital archives, geospatial technologies, history, human-computer interface design, literature, markup languages, social media technologies, and software development. 30.5203 Textual Studies. (New)A program that focuses on the interconnected histories of digital or print texts and manuscripts for cultural and literary study. Includes instruction in archiving texts, bibliography, book and literary history, cultural studies, codicology, paleography, stemmatology, and textual criticism. 30.5299 Digital Humanities and Textual Studies, Other. (New)Any instructional program in digital humanities and textual studies not listed above. 30.53 Thanatology. (New)Instructional content is defined in code 30.5301. 30.5301 Thanatology. (New)A program of study that focuses on the biological, philosophical, psychological, sociological, and theological aspects of death, dying, and bereavement. Includes instruction in counseling, ethics, grief, palliative and hospice care, philosophy, thanatology, and theology. 30.70 Data Science. (New)Instructional content for this group of programs is defined in codes 30.7001 - 30.7099. 30.7001 Data Science, General. (New)A program that focuses on the analysis of large scale data sources from the interdisciplinary perspectives of applied statistics, computer science, data storage, data representation, data modeling, mathematics, and statistics. Includes instruction in computer algorithms, computer programming, data management, data mining, information policy, information retrieval, mathematical modeling, quantitative analysis, statistics, trend spotting, and visual analytics. 30.7099 Data Science, Other. (New)Any instructional program in data science not listed above. 30.71 Data Analytics. (New)Instructional content for this group of programs is defined in codes 30.7101 - 30.7199. 30.7101 Data Analytics, General. (New)A program that prepares individuals to apply data science to generate insights from data and identify and predict trends. Includes instruction in computer databases, computer programming, inference, machine learning, optimization, probability and stochastic models, statistics, strategy, uncertainty quantification, and visual analytics. 30.7102 Business Analytics. (New)A program that prepares individuals to apply data science to solve business challenges. Includes instruction in machine learning, optimization methods, computer algorithms, probability and stochastic models, information economics, logistics, strategy, consumer behavior, marketing, and visual analytics.Examples: Business Forecasting and Trend SpottingSee also: 52.1302 - Business Statistics. 30.7103 Data Visualization. (New)A program that prepares individuals to organize and derive meaning from data by using visual presentation tools and techniques. Includes instruction in cognitive science, computer programming, data management, data visualization theory, graphic design, infographics, perceptual psychology, statistics, and visual design.Examples: Infographics and Data Visualization Design 30.7104 Financial Analytics. (New)A program that focuses on financial big data modeling from algorithms to cloud-based data-driven financial technologies. Includes instruction in financial analytics, financial data processing, knowledge management, data visualization, effective decision communication, machine learning for finance, statistical inference and dynamic modeling on financial data, and project management. 30.7199 Data Analytics, Other. (New)Any instructional program in data analytics not listed above.Examples: Social Media Trend Spotting 30.99 Multi/Interdisciplinary Studies, Other.Instructional content is defined in code 30.9999. 30.9999 Multi-/Interdisciplinary Studies, Other.Any instructional program in multi/interdisciplinary studies not listed above. 31 PARKS, RECREATION, LEISURE, FITNESS, AND KINESIOLOGY. CIP Title or Definition ChangedInstructional programs that focus on the principles and practices of managing parks and other recreational and fitness facilities; providing recreational, leisure and fitness services; and the study of human kinesiology and fitness. 31.01 Parks, Recreation, and Leisure Studies.Instructional content is defined in code 31.0101. 31.0101 Parks, Recreation, and Leisure Studies.A program that focuses on the principles underlying recreational and leisure activities, and the practices involved in providing indoor and outdoor recreational facilities and services for the general public. 31.03 Parks, Recreation, and Leisure Facilities Management.Instructional content for this group of programs is defined in codes 31.0301 - 31.0399. 31.0301 Parks, Recreation, and Leisure Facilities Management, General.A program that prepares individuals to develop and manage park facilities and other indoor and outdoor recreation and leisure facilities. Includes instruction in supervising support personnel, health and safety standards, public relations, and basic business and marketing principles.See also: 03.0207 - Environmental/Natural Resource Recreation and Tourism., 03.0206 - Land Use Planning and Management/Development. 31.0302 Golf Course Operation and Grounds Management.A program that prepares individuals to manage the operation of golf courses. Includes instruction in turf grass science and management, golf course design and construction, grounds equipment and operation, pest control, and grounds management. 31.0399 Parks, Recreation, and Leisure Facilities Management, Other.Any instructional program in parks, recreation, and leisure facilities management not listed above. 31.05 Sports, Kinesiology, and Physical Education/Fitness. CIP Title or Definition ChangedInstructional content for this group of programs is defined in codes 31.0501 - 31.0599. 31.0501 Sports, Kinesiology, and Physical Education/Fitness, General. CIP Title or Definition ChangedA general program that focuses on activities and principles that promote physical fitness, achieve and maintain athletic prowess, and accomplish related research and service goals. Includes instruction in human movement studies, motivation studies, rules and practice of specific sports, exercise and fitness principles and techniques, basic athletic injury prevention and treatment, and organizing and leading fitness and sports programs.Examples: CoachingSee also: 13.1314 - Physical Education Teaching and Coaching., 51.0001 - Health and Wellness, General. 31.0504 Sport and Fitness Administration/Management.A program that prepares individuals to apply business, coaching and physical education principles to the organization, administration and management of athletic programs and teams, fitness/rehabilitation facilities and health clubs, sport recreation services, and related services. Includes instruction in program planning and development; business and financial management principles; sales, marketing and recruitment; event promotion, scheduling and management; facilities management; public relations; legal aspects of sports; and applicable health and safety standards.See also: 31.0508 - Sports Studies., 09.0906 - Sports Communication. 31.0505 Exercise Science and Kinesiology. CIP Title or Definition ChangedA scientific program that focuses on the anatomy, physiology, biochemistry, and biophysics of human movement, and applications to exercise and therapeutic rehabilitation. Includes instruction in biomechanics, motor behavior, motor development and coordination, motor neurophysiology, performance research, rehabilitative therapies, the development of diagnostic and rehabilitative methods and equipment, and related analytical methods and procedures in applied exercise and therapeutic rehabilitation.See also: 26.0908 - Exercise Physiology and Kinesiology., 51.2311 - Kinesiotherapy/Kinesiotherapist., 51.0913 - Athletic Training/Trainer., 13.1314 - Physical Education Teaching and Coaching., 26.0913 - Biomechanics. 31.0507 Physical Fitness Technician.A program that prepares individuals for employment in health and fitness clubs, wellness centers, public and private recreation facilities, hospitals and corporate fitness programs where they will perform a variety of instructional and administrative duties. Includes instruction in human anatomy and physiology, fitness techniques, exercise science, personal training, nutrition, and customer service.Examples: Fitness Technician Fitness Trainer Personal TrainerSee also: 51.0913 - Athletic Training/Trainer. 31.0508 Sports Studies.A program that focuses on the psychological, sociological, and historical aspects of sport and physical activity. Includes instruction in theory of sport, sport psychology, sport in American society, gender and race/ethnicity and sport, and sports history.Examples: Psychosocial Aspects of SportSee also: 31.0504 - Sport and Fitness Administration/Management., 09.0906 - Sports Communication., 42.2815 - Performance and Sport Psychology. 31.0599 Sports, Kinesiology, and Physical Education/Fitness, Other. CIP Title or Definition ChangedAny instructional program in sports, kinesiology, and physical education/fitness not listed above. 31.06 Outdoor Education.Instructional content is defined in code 31.0601. 31.0601 Outdoor Education.A program that prepares individuals to work as an educator, instructor or facilitator in parks, recreational facilities, camps and other outdoor settings. Includes instruction in leadership skills, wilderness survival skills, first aid, group processes, counseling techniques, environmental studies and instruction in recreational activities such as rock climbing, ropes courses, backpacking, kayaking and canoeing.See also: 13.1338 - Environmental Education. 31.99 Parks, Recreation, Leisure, Fitness, and Kinesiology, Other. CIP Title or Definition ChangedInstructional content is defined in code 31.9999. 31.9999 Parks, Recreation, Leisure, Fitness, and Kinesiology, Other. CIP Title or Definition ChangedAny instructional program in parks, recreation, leisure, fitness, and kinesiology not listed above. 32 BASIC SKILLS AND DEVELOPMENTAL/REMEDIAL EDUCATIONInstructional programs that focus on the fundamental knowledge and skills that individuals need to function productively in society. These CIP codes are not valid for IPEDS reporting. 32.01 Basic Skills and Developmental/Remedial Education.Instructional content for this group of programs is defined in codes 32.0101 - 32.0199. These CIP codes are not valid for IPEDS reporting. 32.0101 Basic Skills and Developmental/Remedial Education, General.A general program that focuses on the fundamental knowledge and skills that individuals need to function productively in society. This CIP code is not valid for IPEDS reporting.Examples: Adult Developmental Education Basic Skills, General Developmental Education, General Remedial Education, General 32.0104 Developmental/Remedial Mathematics.A program that focuses on the development of computing and other mathematical reasoning abilities and skills. This CIP code is not valid for IPEDS reporting.Examples: Numeracy and Computational Skills Adult Developmental Mathematics 32.0105 Job-Seeking/Changing Skills.A program that focuses on the development of skills related to job searches and self-marketing. Includes instruction in assessing one’s own capabilities and skills; filling out an application; and handling an interview. This CIP code is not valid for IPEDS reporting. 32.0107 Career Exploration/Awareness Skills.A program that focuses on the linkage between individual capabilities and needs and the job market. Includes instruction in the variety and scope of available employment, how to access job information, and techniques of self-analysis. This CIP code is not valid for IPEDS reporting. 32.0108 Developmental/Remedial English.A program that focuses on the fundamental knowledge and skills in reading, writing and speaking that individuals need to function productively in society. This CIP code is not valid for IPEDS reporting.Examples: Developmental/Remedial Reading and Writing Developmental/Remedial Literacy Skills Literacy and Communication Skills 32.0109 Second Language Learning.A program that focuses on the development of proficiency in reading, writing, and speaking a language or languages, other than the mother tongue, that are needed to perform day-to-day tasks. Includes instruction in the use of basic communication skills to develop and transmit ideas and thoughts. This CIP code is not valid for IPEDS reporting.Examples: English as a Second Language 32.0110 Basic Computer Skills.A program that focuses on the knowledge and skills needed to operate a computer, including computer concepts, keyboarding and mouse skills, using computer hardware and software, and basic troubleshooting. This CIP code is not valid for IPEDS reporting.Examples: Basic Computer Application 32.0111 Workforce Development and Training.A program that focuses on learning or upgrading basic skills in order to enhance job performance, promote career development, or train for a new job. This CIP code is not valid for IPEDS reporting. 32.0112 Accent Reduction/Modification. (New)A program that focuses on accent modification and effective pronunciation in order to assist individuals in changing their accents/dialects to Standard American English. Includes instruction in changing speech patterns, intonation, phonology, pronunciation, rhythm, semantics, syntax, vocabulary, voice production, and word order. This CIP code is not valid for IPEDS reporting. 32.0199 Basic Skills and Developmental/Remedial Education, Other.Any instructional program in basic skills not listed above. This CIP code is not valid for IPEDS reporting. 32.02 General Exam Preparation and Test-Taking Skills. (New)Instructional content for this group of programs is defined in codes 32.0201 - 32.0299. These CIP codes are not valid for IPEDS reporting. 32.0201 Exam Preparation and Test-Taking Skills, General. (New)A program of study that focuses on general study and exam-taking skills. This CIP code is not valid for IPEDS reporting. 32.0202 High School Equivalent Exam Preparation. (New)A program of study that focuses on general study and exam-taking skills associated with preparation for the high school equivalency examinations. This CIP code is not valid for IPEDS reporting.Examples: General Educational Development (GED) Exam High School Equivalency Certificate Exam Certificate of School Completion ExamSee also: 53.0201 - High School Equivalence Certificate Program. 32.0203 Undergraduate Entrance/Placement Examination Preparation. (New)A program of study that focuses on general study and exam-taking skills associated with preparation for undergraduate college/university entrance or placement examinations. This CIP code is not valid for IPEDS reporting.Examples: Scholastic Assessment Test (SAT) SAT Subject Tests The ACT Test Texas Higher Education Assessment Postsecondary Education Readiness Test (PERT) 32.0204 Graduate/Professional School Entrance Examination Preparation. (New)A program of study that focuses on general study and exam-taking skills associated with preparation for graduate and professional school entrance examinations. This CIP code is not valid for IPEDS reporting.Examples: Graduate Management Admission Test (GMAT) Law School Admissions Test (LSAT) Optometry Admission Test (OAT) HESI Admission Assessment Exam Dental Admission Test (DAT) Pharmacy College Admission Test (PCAT) Medical College Admissions Test (MCAT) Graduate Record Examination (GRE) General Test Veterinary College Admission Test (VCAT) Miller Analogies Test (MAT) 32.0205 Professional Certification/Licensure Examination Preparation. (New)A program of study that focuses on general study and exam-taking skills associated with preparation for professional certification and licensure examinations. This CIP code is not valid for IPEDS reporting.Examples: National Council Licensure Examination (NCLEX) Praxis Test Comprehensive Osteopathic Medical Licensing Examination (COMLEX) United States Medical Licensing Examination (USMLE) Physician Assistant National Certifying Exam (PANCE) Professional Surveyor (P.S.) Exam National Registry of Emergency Medical Technicians (NREMT) Exam Certified Information Systems Auditor (CISA) Examination Certified Public Accountant (CPA) Examination Chartered Financial Analyst (CFA) Examination Professional Engineer (P.E.) Examination Project Management Professional (PMP) Examination North American Pharmacist Licensure Examination (NAPLEX) 32.0299 General Exam Preparation and Test-Taking Skills, Other. (New)Any instructional program in general exam preparation and test-taking skills not listed above. 33 CITIZENSHIP ACTIVITIESInstructional programs that prepare individuals for citizenship, and provide instruction in how citizens may engage in civic activities. These CIP codes are not valid for IPEDS reporting. 33.01 Citizenship Activities.Instructional content for this group of programs is defined in codes 33.0101 - 33.0199. These CIP codes are not valid for IPEDS reporting. 33.0101 Citizenship Activities, General.A program that generally prepares individuals for citizenship, and focuses on how citizens may engage in civic activities. This CIP code is not valid for IPEDS reporting. 33.0102 American Citizenship Education.A program that prepares individuals to take the oath of United States citizenship and to exercise the attendant rights and responsibilities of citizenship. This CIP code is not valid for IPEDS reporting. 33.0103 Community Awareness.A program that focuses on local government and history, current issues, and focuses on how individuals can keep abreast of important issues that may affect them. This CIP code is not valid for IPEDS reporting. 33.0104 Community Involvement.A program that focuses on how individuals may become actively involved in the social, economic and political issues and events affecting them; and the roles and methods that are available to influence community life and public policy. This CIP code is not valid for IPEDS reporting. 33.0105 Canadian Citizenship Education.A program that prepares individuals to take the oath of Canadian citizenship and to exercise the attendant rights and responsibilities of citizenship. This CIP code is not valid for IPEDS reporting. 33.0106 Personal Emergency Preparedness. (New)A program of study that focuses on the leadership and management skills needed to prepare and respond to critical threats such as natural disasters, hazardous spills, and security threats. Includes instruction in communication, community preparedness, decision-making, disaster management, disaster recovery, disaster preparation, emergency planning and preparation, resource planning, and risk and hazard impact. This CIP code is not valid for IPEDS reporting. 33.0199 Citizenship Activities, Other.Any instructional program in citizenship activities not listed above. This CIP code is not valid for IPEDS reporting. 34 HEALTH-RELATED KNOWLEDGE AND SKILLS. CIP Title or Definition ChangedInstructional programs that focus on the promotion of personal and family health. These CIP codes are not valid for IPEDS reporting. 34.01 Health-Related Knowledge and Skills.Instructional content for this group of programs is defined in codes 34.0102 - 34.0199. These CIP codes are not valid for IPEDS reporting. 34.0102 Birthing and Parenting Knowledge and Skills.A program that focuses on all facets of the mother’s and father’s roles in family planning, prenatal preparation and care, the birthing experience, post-natal care and the raising of children. This CIP code is not valid for IPEDS reporting. 34.0103 Personal Health Improvement and Maintenance.A program that focuses on the principles, techniques, and methods by which individuals can maintain or improve their overall physical and emotional well-being, as well as work on specific areas of personal health. This CIP code is not valid for IPEDS reporting. 34.0104 Addiction Prevention and Treatment.A program that focuses on how individuals can avoid addictive substances and behaviors; the methods by which individuals can be treated for various addictions and related behavior problems; and the knowledge and coping skills needed by relatives and associates of addicted individuals. This CIP code is not valid for IPEDS reporting. 34.0105 Meditation/Mind-Body Wellness. (New)A program that focuses on meditation and mindfulness training, and how these techniques can enhance brain function, regulate emotions, reduce stress, and increase compassion. Includes instruction in alternative medicine, innovative and ancient healing practices, inspired creativity and the arts, meditation, mindfulness, neuroscience, religious belief systems, spiritual psychology, therapeutic movement, and visualization meditation. This CIP code is not valid for IPEDS reporting. 34.0199 Health-Related Knowledge and Skills, Other.Any instructional program in health-related knowledge and skills not listed above. This CIP code is not valid for IPEDS reporting.Examples: First Aid CPR 35 INTERPERSONAL AND SOCIAL SKILLSPrograms that focus on the development of methods and skills for effective interactions with others in a variety of settings (private, social, and business settings). These CIP codes are not valid for IPEDS reporting. 35.01 Interpersonal and Social Skills.Instructional content for this group of programs is defined in codes 35.0101 - 35.0199. These CIP codes are not valid for IPEDS reporting. 35.0101 Interpersonal and Social Skills, General.A general program that focuses on how to effectively interact with others in private, social and business settings. This CIP code is not valid for IPEDS reporting. 35.0102 Interpersonal Relationships Skills.A program that focuses on how to increase one’s ability to establish and maintain mutually satisfactory ties with other human beings. This CIP code is not valid for IPEDS reporting. 35.0103 Business and Social Skills.A program that focuses on how to increase one’s ability to function effectively in social and business settings where interpersonal communication is required. This CIP code is not valid for IPEDS reporting. 35.0105 Life Coaching. (New)A program that focuses on assisting individuals in achieving personal goals such as life transitions, relationships, physical well-being, emotional well-being, and career choices. Includes instruction in career and vocational development, coaching methodologies, coaching research techniques, group coaching, leadership techniques, and personal coaching. This CIP code is not valid for IPEDS reporting. 35.0199 Interpersonal Social Skills, Other.Any instructional program in interpersonal social skills not listed above. This CIP code is not valid for IPEDS reporting. 36 LEISURE AND RECREATIONAL ACTIVITIESPrograms that focus on the development of an appreciation for and competency in recreational and leisure-related activities. These CIP codes are not valid for IPEDS reporting. 36.01 Leisure and Recreational Activities.Instructional content for this group of programs is defined in codes 36.0101 - 36.0199. These CIP codes are not valid for IPEDS reporting. 36.0101 Leisure and Recreational Activities, General.A general program that focuses on the development of an appreciation for and competency in recreational and leisure-related activities. This CIP code is not valid for IPEDS reporting. 36.0102 Handicrafts and Model-Making.A program that focuses on the fashioning of objects of decoration, utility or representation from various materials, including related matters of research, tool use and appreciation. This CIP code is not valid for IPEDS reporting. 36.0103 Board, Card and Role-Playing Games.A program that focuses on the rules and techniques of participation and skill-building in competitive activities of skill or chance, such as board games, card games or role-playing activities. This CIP code is not valid for IPEDS reporting. 36.0105 Home Maintenance and Improvement.A program that focuses on the knowledge and skills associated with maintaining living space and related equipment and furnishings, as well as do-it-yourself repairs and improvement projects of varying complexity. This CIP code is not valid for IPEDS reporting. 36.0106 Nature Appreciation.A program that focuses on how to increase one’s understanding and knowledge of the natural environment in which we live, as well as techniques of wildlife observation and management. This CIP code is not valid for IPEDS reporting. 36.0107 Pet Ownership and Care.A program that focuses on how to increase one’s ability to care for domesticated animals kept for pleasure or work. This CIP code is not valid for IPEDS reporting. 36.0108 Sports and Exercise.A program that focuses on the rules and techniques of participation and skill building in competitive physical activities, as well as non-competitive physical fitness programs. This CIP code is not valid for IPEDS reporting. 36.0109 Travel and Exploration.A program that focuses on particular geographic areas or phenomena, and provides opportunities for organized trips or tours, including related knowledge and skills. This CIP code is not valid for IPEDS reporting. 36.0110 Art.A program that focuses on the techniques and methods of creative self-expression in visual or plastic media, such as painting or sculpture. This CIP code is not valid for IPEDS reporting. 36.0111 Collecting.A program that focuses on the knowledge and techniques necessary for acquiring and maintaining personal collections of objects, such as autographs, stamps, models, specimens, vehicles and antiques. This CIP code is not valid for IPEDS reporting. 36.0112 Cooking and Other Domestic Skills.A program that focuses on the knowledge and skills related to food buying and preparation, home decoration, sewing and other domestic activities, either as hobbies or as routine tasks. This CIP code is not valid for IPEDS reporting. 36.0113 Computer Games and Programming Skills.A program that focuses on the knowledge and skills associated with creating and maintaining computer programs, as well as playing computer-based games. This CIP code is not valid for IPEDS reporting. 36.0114 Dancing.A program that focuses on the knowledge and skills related to recreational dance, such as square dancing, ballroom dancing, classical or modern dance. This CIP code is not valid for IPEDS reporting. 36.0115 Music.A program that focuses on the knowledge and skills associated with personal music appreciation, the playing of a musical instrument, singing or recreational composition. This CIP code is not valid for IPEDS reporting. 36.0116 Reading.A program that focuses on the activity of reading for pleasure, either alone or as part of a group experience. This CIP code is not valid for IPEDS reporting. 36.0117 Theatre/Theater.A program that focuses on the knowledge and skills associated with participation in amateur theatrical productions, drama appreciation, and writing amateur plays. This CIP code is not valid for IPEDS reporting. 36.0118 Writing.A program that focuses on the knowledge and skills related to creative writing and poetry composition for pleasure or profit, including methods of publication. This CIP code is not valid for IPEDS reporting. 36.0119 Aircraft Pilot (Private). (Moved from)Moved from 36.0119 to 36.0202 36.0120 Beekeeping. (New)A program that focuses on keeping bees for personal enjoyment, pollination of plants and vegetables, and domestic honey and other bee product production. Includes instruction in bee behavior, hive equipment, beekeeping supplies, bee pests and parasites, handling bees, hive set up and care, honey production, and seasonal management practices. This CIP code is not valid for IPEDS reporting.See also: 01.0310 - Apiculture. 36.0121 Firearms Training/Safety. (New)A program that focuses on the fundamentals of gun operation, shooting techniques, and firearm safety. Includes instruction in ammunition, firearm cleaning, firearms law, firearm operation, and shooting techniques. This CIP code is not valid for IPEDS reporting. 36.0122 Floral Design/Arrangement. (New)A program that focuses on the techniques of floral design based on color palette, theme, season, and flower selection. Includes instruction in botanical terminology, flower handling and identification, foliage and plants, traditional and contemporary floral design, and use of seasonal, dry, silk, or exotic plant materials. This CIP code is not valid for IPEDS reporting. 36.0123 Master Gardener/Gardening. (New)A program that prepares individuals to educate the public on science-based, environmentally-sound practices in sustainable gardening and horticulture. Includes instruction in vegetables, houseplants, composting, flowers, fruits, turf grass, woody plants, plant propagation, pollination, soils, wildlife management, integrated pest management, plant pathology, and entomology. This CIP code is not valid for IPEDS reporting.See also: 01.0801 - Agricultural and Extension Education Services., 01.0609 - Public Horticulture. 36.0199 Leisure and Recreational Activities, Other.Any instructional program in leisure and recreational activities not listed above. This CIP code is not valid for IPEDS reporting. 36.02 Noncommercial Vehicle Operation. (New)Instructional content for this group of programs is defined in codes 36.0202 - 36.0299. These CIP codes are not valid for IPEDS reporting. 36.0202 Aircraft Pilot (Private). (Moved to)A program that prepares individuals to fly aircraft for personal use, and qualifies individuals to sit for the FAA pilot’s license examination. Includes instruction in principles of aircraft design and performance; aircraft flight systems and controls; flight crew operations and procedures; radio communications and navigation procedures and systems; airways safety and traffic regulations; and governmental rules and regulations pertaining to piloting aircraft. This CIP code is not valid for IPEDS reporting. 36.0203 Automobile Driver Education. (New)A program that prepares individuals to drive automobiles for personal use and qualifies them to sit for a driver’s license examination. Includes instruction in automobile operation, driving skills, safety, and traffic rules. This CIP code is not valid for IPEDS reporting. 36.0204 Helicopter Pilot (Private). (New)A program that prepares individuals to fly helicopters for personal use, and qualifies individuals to sit for the FAA Private Pilot - Helicopter (PRH) examination. Includes instruction in principles of helicopter design and performance; helicopter flight systems and controls; flight crew operations and procedures; radio communications and navigation procedures and systems; airways safety and traffic regulations; and governmental rules and regulations pertaining to piloting helicopters. This CIP code is not valid for IPEDS reporting. 36.0205 Motorcycle Rider Education. (New)A program that prepares individuals to ride motorcycles for personal use and qualifies them to sit for a motorcycle license examination. Includes instruction in motorcycle operation, riding skills, safety, and traffic rules. This CIP code is not valid for IPEDS reporting. 36.0206 Personal Watercraft/Boating Education. (New)A program that prepares individuals to operate boats and other watercraft for personal use and qualifies them to sit for a boating license examination. Includes instruction in boat and watercraft operation, safety, and applicable laws and rules. This CIP code is not valid for IPEDS reporting.Examples: Boating Safety Education Boater Education Certificate 36.0207 Remote Aircraft Pilot (Personal). (New)A program that prepares individuals to fly an unmanned aircraft system (UAS) for personal use, and qualifies individuals to sit for the FAA Remote Pilot Certificate with small unmanned aircraft systems (sUAS) rating knowledge examination. Includes instruction in principles of unmanned aircraft system design and performance; aircraft flight systems and controls; airway safety and traffic regulations; and governmental rules and regulations pertaining to piloting unmanned aircraft. This CIP code is not valid for IPEDS reporting.See also: 49.0109 - Remote Aircraft Pilot. 36.0299 Noncommercial Vehicle Operation, Other. (New)Any instructional program in noncommercial vehicle operation not listed above. 37 PERSONAL AWARENESS AND SELF-IMPROVEMENTPrograms that focus on the development of improved self-awareness, avoidance of stressful behavior, and improved decision-making skills. These CIP codes are not valid for IPEDS reporting. 37.01 Personal Awareness and Self-Improvement.Instructional content for this group of programs is defined in codes 37.0101 - 37.0199. These CIP codes are not valid for IPEDS reporting. 37.0101 Self-Awareness and Personal Assessment.A program that focuses on the knowledge and skills useful in becoming aware of one’s feelings, using methods of assessing one’s personal attributes, and being aware of how one is perceived by others. This CIP code is not valid for IPEDS reporting. 37.0102 Stress Management and Coping Skills.A program that focuses on the knowledge and skills useful in avoiding stressful situations and managing them when they occur, including dealing with complex and long-term stressful relationships. This CIP code is not valid for IPEDS reporting. 37.0103 Personal Decision-Making Skills.A program that focuses on how to develop individuals’ abilities to assess decisions affecting their lives and to make life choices consistent with needs and beliefs. This CIP code is not valid for IPEDS reporting. 37.0104 Self-Esteem and Values Clarification.A program that focuses on the development of personal philosophies and ideas of positive self-concept and self-worth, and applying these knowledge and skills in everyday circumstances. This CIP code is not valid for IPEDS reporting. 37.0106 Investing/Wealth Management/Retirement Planning. (New)A program that prepares individuals to evaluate their personal financial health, establish financial planning strategies, and solve financial problems, based on their short term and long term financial goals. Includes instruction in asset management, estate planning, college savings, investment theory, insurance, real estate, retirement planning, and taxation. This CIP code is not valid for IPEDS reporting. 37.0107 Self-Defense. (New)A program that focuses on defensive concepts and techniques against various types of assault. Includes instruction in basic principles of defense, continuum of survival, date rape, defensive mindset, weapons and strategies, offensive and defensive postures, recognizing vulnerable locations, risk reduction strategies, and using personal weapons. This CIP code is not valid for IPEDS reporting. 37.0199 Personal Awareness and Self-Improvement, Other.Any instructional program in personnel awareness and self-improvement not listed above. This CIP code is not valid for IPEDS reporting. 38 PHILOSOPHY AND RELIGIOUS STUDIESInstructional programs that focus on logical inquiry, philosophical analysis, and the academic study of organized systems of belief and religious practices. 38.00 Philosophy and Religious Studies, General.Instructional content is defined in code 38.0001. 38.0001 Philosophy and Religious Studies, General.A general program that combines the study of philosophy and religious studies. Includes instruction in logic; ethics; epistemology; symbolism; phenomenology; the sociology, psychology, philosophy, anthropology, literature, and art of religion; and world religions.See also: 38.0101 - Philosophy., 38.0201 - Religion/Religious Studies. 38.01 Philosophy.Instructional content for this group of programs is defined in codes 38.0101 - 38.0199. 38.0101 Philosophy.A program that focuses on ideas and their logical structure, including arguments and investigations about abstract and real phenomena. Includes instruction in logic, ethics, aesthetics, epistemology, metaphysics, symbolism, and history of philosophy, and applications to the theoretical foundations and methods of other disciplines. 38.0102 Logic.A program that focuses on the systematic study of valid inference, argument, and sound reasoning. Includes instruction in Classical logic, properties of argument, validity, proof, fallacies, formal and material logic, symbolic and mathematical logic, analysis, specific schools of logic, and applications to problems in other academic disciplines and professional fields. 38.0103 Ethics.A program that focuses on the systematic study of the theory of moral good and its application to various theoretical and practical problems. Includes instruction in ethical theory, history of ethics, belief and value systems, ethical constructs, and applications to specific topics, issues and problems. 38.0104 Applied and Professional Ethics.A program that focuses on the systematic study of ethical issues in the workplace and public life, and the application of ethical decision-making to the practical problems of society and the professions. Includes instruction in ethical theory; history of ethics; contemporary social dilemmas; methods in applied ethics; and applications including medical ethics, legal ethics, business ethics, environmental ethics, and criminal justice ethics.Examples: Applied Ethics Professional Ethics Engineering EthicsSee also: 51.3201 - Bioethics/Medical Ethics. 38.0199 Philosophy, Other.Any instructional program in Philosophy not listed above.See also: 30.5101 - Philosophy, Politics, and Economics. 38.02 Religion/Religious Studies.Instructional content for this group of programs is defined in codes 38.0201 - 38.0299. 38.0201 Religion/Religious Studies.A program that focuses on the nature of religious belief and specific religious and quasi-religious systems. Includes instruction in phenomenology; the sociology, psychology, philosophy, anthropology, literature and art of religion; mythology; scriptural and textual studies; religious history and politics; and specific studies of particular faith communities and their behavior. 38.0202 Buddhist Studies.A program that focuses on the philosophy preached by Siddartha Gautama, the Buddha, in ancient India and subsequently interpreted by his disciples and apostles; together with the intellectual, cultural, social, and ritual developments of the faith and its branches. Includes instruction in Buddhist sacred literature (Tripitaka, etc.) and study of one or more of the main branches including Early Buddhism, Hinayana, Theravada, Madhyamaka, Yogacara, Pure Land, Shingon, Tendai, Nichiren Shu, Zen, Tibetan, Chinese, Korean, Vietnamese, and others. 38.0203 Christian Studies.A program that focuses on the philosophy and teachings of Jesus Christ and his apostles, and the subsequent intellectual and cultural movements and institutions based on Christianity. Includes instruction in Christian sacred scripture, Christian literature and philosophy, and studies of one or more of the main branches of the faith and their cultural context including Orthodoxy, Roman Catholicism, Protestantism, Evangelicalism, and others.See also: 39.0201 - Bible/Biblical Studies. 38.0204 Hindu Studies.A program that focuses on the group of South Asian theologies and philosophies collectively known as Hinduism; together with the religious history and cultural and social manifestations of the faith. Includes instruction in Hindu theology and philosophy (dharma); literature (Vedas, Upanishads, Epics, and commentaries); the Hindu Pantheon, sects, and movements; schools and disciplines; and related arts and sciences. 38.0205 Islamic Studies.A program that focuses on Islam as preached by the Prophet Muhammad in 6th century Arabia and subsequently interpreted and elaborated by Islamic scholars and others; together with the cultural and social milieu related to the faith in various periods, localities, and branches. Includes instruction in Islamic scripture and related written authorities and commentaries 38.0206 Jewish/Judaic Studies.A program that focuses on the history, culture, and religion of the Jewish people. Includes instruction in Jewish religious heritage, sacred texts, and law; Jewish philosophy and intellectual history; Jewish life and culture, both in Israel and the Jewish Diaspora; historical Jewish minority cultures such as the Yiddish, Sephardic, and other; anti-Semitism, gentile relations and Shoa; Zionism; and modern developments within Judaism.See also: 30.2101 - Holocaust and Related Studies., 39.0605 - Rabbinical Studies., 38.0207 - Talmudic Studies., 39.0201 - Bible/Biblical Studies. 38.0207 Talmudic Studies. (Moved to)CIP Title or Definition ChangedA program focused on intense study of the Talmud that fosters values, critical thinking, and scholarship skills; prepares students for entry into a broad spectrum of graduate and professional schools; and prepares students for entry into a variety of careers including the Rabbinate. Includes instruction in Jewish law, Jewish jurisprudence, ethics, philosophy, and related disciplines. 38.0208 Catholic Studies. (New)A program that focuses on Catholic thought, culture, and how Catholic tradition informs theology, culture, institutions, and identity. Includes instruction in Biblical Greek, Biblical Hebrew, Catholic bioethics, Catholic social thought, church history, Latin, philosophy, and theology. 38.0209 Mormon Studies. (New)A program that focuses on beliefs, practices, culture, and history of the Church of Jesus Christ of Latter-day Saints (Mormon). Includes instruction in Mormon culture, history, literature, philosophy, sociology, and theology. 38.0299 Religion/Religious Studies, Other.Any instructional program in religion/religious studies not listed above. 38.99 Philosophy and Religious Studies, Other.Instructional content is defined in code 38.9999. 38.9999 Philosophy and Religious Studies, Other.Any instructional program in philosophy and religion not listed above. 39 THEOLOGY AND RELIGIOUS VOCATIONSInstructional programs that focus on the intramural study of theology and that prepare individuals for the professional practice of religious vocations. 39.02 Bible/Biblical Studies.Instructional content is defined in code 39.0201. 39.0201 Bible/Biblical Studies.A program that focuses on the Christian and/or Jewish Bible and related literature, with an emphasis on understanding and interpreting the theological, doctrinal, and ethical messages contained therein. May include preparation for applying these studies in various religious vocations.See also: 38.0203 - Christian Studies., 38.0206 - Jewish/Judaic Studies. 39.03 Missions/Missionary Studies and Missiology.Instructional content for this group of programs is defined in codes 39.0301 - 39.0399. 39.0301 Missions/Missionary Studies. CIP Title or Definition ChangedA program that focuses on the theory and practice of religious outreach, social service and proselytization, and that prepares individuals for mission vocations. Includes instruction in theology, evangelism, preaching, medical and social mission work, missionary education, missionary aviation, emergency services, legal and political aspects of working in other countries, and preparation for ordination as missionaries. 39.0302 Church Planting. (New)A program of study that prepares individuals to establish congregations of Christians in new locations. Includes instruction in models of church planting, church multiplication strategies, church leadership, evangelism, missiology, Christian ethics, and mission-oriented theology. 39.0399 Missions/Missionary Studies and Missiology, Other. (New)Any instructional program in missions, missionary studies, and missiology not listed above. 39.04 Religious Education.Instructional content is defined in code 39.0401. 39.0401 Religious Education.A program that focuses on the theory and practice of providing educational services to members of faith communities, within the context of a particular religion, and that prepares individuals to serve as religious educators. Includes instruction in planning and teaching lessons, organizing and supervising instructional activities, designing and developing instructional materials, and administering religious education programs and facilities. 39.05 Religious Music and Worship. CIP Title or Definition ChangedInstructional content for this group of programs is defined in codes 39.0501 - 39.0599. 39.0501 Religious/Sacred Music.A program that focuses on the history, theory, composition, and performance of music for religious or sacred purposes, and that prepares individuals for religious musical vocations such as choir directors, cantors, organists, and chanters. 39.0502 Worship Ministry. (New)A program of study that focuses on the use of musical and theatrical arts in Christian worship. Includes instruction in digital media, electronic hardware design and installation, music, theater, and worship theology. 39.0599 Religious Music and Worship, Other. (New)Any instructional program in religious music and worship not listed above. 39.06 Theological and Ministerial Studies.Instructional content for this group of programs is defined in codes 39.0601 - 39.0699. 39.0601 Theology/Theological Studies.A program that focuses on the beliefs and doctrine of a particular religious faith from the intramural point of view of that faith. Includes instruction in systematic theology, historical theology, moral theology, doctrinal studies, dogmatics, apologetics, and applications to specific questions of ecclesiastical polity and religious life. 39.0602 Divinity/Ministry.A program that prepares individuals for ordination as ministers or priests in any of the Christian religious traditions. Includes instruction in the theology and polity of a particular church, church law, liturgy and ritual, principles of pastoral ministry, homiletics, evangelism, church/parish organization and management, Christian ethics, church history, and related studies.Examples: Divinity/Ministry (BD) Divinity/Ministry (MDiv) 39.0604 Pre-Theology/Pre-Ministerial Studies.A program that prepares individuals to enter a seminary or other program leading to religious ordination, or a related religious vocation. 39.0605 Rabbinical Studies.A program that prepares individuals for ordination as Rabbis. Includes instruction in Talmud, Halacha, Liturgy and Rituals, Rabbinical Thought, Jewish Ethics, Jewish Education, Pastoral Counseling and Homiletics.Examples: Rabbinical Studies (M.H.L./Rav)See also: 38.0207 - Talmudic Studies., 38.0206 - Jewish/Judaic Studies. 39.0606 Talmudic Studies. (Moved from)Moved from 39.0606 to 38.0207 39.0699 Theological and Ministerial Studies, Other.Any instructional program in theological and ministerial studies not listed above, including preparation for religious vocations in faiths other than Christianity and Judaism. 39.07 Pastoral Counseling and Specialized Ministries.Instructional content for this group of programs is defined in codes 39.0701 - 39.0799. 39.0701 Pastoral Studies/Counseling.A program that focuses on the theory and principles of pastoral care and prepares ordained clergy to provide non-clinical pastoral counseling to individuals and groups. Includes instruction in pastoral leadership, counseling psychology; crisis intervention; individual and group procedures; theological and spiritual counseling; pastoral care; and applications to specific types of ministry.Examples: Christian CounselingSee also: 51.1506 - Clinical Pastoral Counseling/Patient Counseling. 39.0702 Youth Ministry.A program that prepares the ordained clergy and other religious professionals to provide spiritual, counseling, and leadership services to children, adolescents, and young adults. Includes instruction in child and adolescent psychology, human growth and development, family studies, communication skills, religious education, youth counseling, small group leadership, planning and organizing youth activities, volunteer supervision, and youth evangelism and worship.Examples: Youth and Family Ministries 39.0703 Urban Ministry.A program that prepares the ordained clergy and other religious professionals to provide spiritual, counseling, and leadership services to individuals and groups in urban communities. Includes instruction in bible study and theology, pastoral leadership and care, urban structure and context, inner city ministry, counseling ministries, family studies, homiletics, social ethics, and community organizing. 39.0704 Women’s Ministry.A program that prepares non-ordained women to provide spiritual, counseling, and leadership services to other women in local churches, parachurch organizations, and other settings. Includes instruction in foundations of women’s ministry, women’s ministry in the local church, spiritual formation, women’s evangelism and discipleship, bible study and theology, homiletics, lay counseling, women’s issues, and leadership training. 39.0705 Lay Ministry.A program that prepares non-ordained individuals to serve as lay pastors, religious educators, youth leaders, and other professional positions open to the laity in local churches and other settings. Includes instruction in bible studies, theology, spirituality, pastoral counseling, foundations of ministry, effective communication, and church leadership. 39.0706 Chaplain/Chaplaincy Studies. (New)A program that prepares individuals to provide caregiver, pastoral, and spiritual support in an institutional, hospice, military, or sports setting. Includes instruction in global, healthcare, prison, and sports chaplaincy; addiction, crisis, disaster, family, marriage, grief, and loss counseling; ethics; leadership; multi-cultural, multi-faith contexts; and worship. 39.0799 Pastoral Counseling and Specialized Ministries, Other.Any instructional program in pastoral counseling and specialized ministries not listed above. 39.08 Religious Institution Administration and Law. (New)Instructional content for this group of programs is defined in codes 39.0801 - 39.0899. 39.0801 Religious Institution Administration and Management. (New)A program that prepares individuals to manage the business affairs and administration of religious institutions. Includes instruction in business management, principles of accounting and financial management, human resources management, taxation of religious institutions, and business law as applied to religious institutions.Examples: Church AdministrationSee also: 52.0206 - Non-Profit/Public/Organizational Management. 39.0802 Religious/Canon Law. (New)A program of study that focuses on the history, theology, and philosophy of religious, church, and ecclesiastical law and that prepares individuals to serve as professional canonists. 39.0899 Religious Institution Administration and Law, Other. (New)Any instructional program in religious institution administration and law not listed above. 39.99 Theology and Religious Vocations, Other.Instructional content is defined in code 39.9999. 39.9999 Theology and Religious Vocations, Other.Any instructional program in theological studies and religious vocations not listed above.Examples: Sacred Scripture Studies 40 PHYSICAL SCIENCESInstructional programs that focus on the scientific study of inanimate objects, processes of matter and energy, and associated phenomena. 40.01 Physical Sciences, General. CIP Title or Definition ChangedInstructional content is defined in code 40.0101. 40.0101 Physical Sciences, General. CIP Title or Definition ChangedA program that focuses on the major topics, concepts, processes, and interrelationships of physical phenomena as studied in any combination of physical science disciplines. 40.02 Astronomy and Astrophysics.Instructional content for this group of programs is defined in codes 40.0201 - 40.0299. 40.0201 Astronomy.A general program that focuses on the planetary, galactic, and stellar phenomena occurring in outer space. Includes instruction in celestial mechanics, cosmology, stellar physics, galactic evolution, quasars, stellar distribution and motion, interstellar medium, atomic and molecular constituents of astronomical phenomena, planetary science, solar system evolution, and specific methodologies such as optical astronomy, radioastronomy, and theoretical astronomy. 40.0202 Astrophysics.A program that focuses on the theoretical and observational study of the structure, properties, and behavior of stars, star systems and clusters, stellar life cycles, and related phenomena. Includes instruction in cosmology, plasma kinetics, stellar physics, convolution and non-equilibrium radiation transfer theory, non-Euclidean geometries, mathematical modeling, galactic structure theory, and relativistic astronomy.See also: 40.1101 - Physics and Astronomy. 40.0203 Planetary Astronomy and Science.A program that focuses on the scientific study of planets, small objects, and related gravitational systems. Includes instruction in the structure and composition of planetary surfaces and interiors, planetary atmospheres, satellites, orbital mechanics, asteroids and comets, solar system evolution and dynamics, planetary evolution, gravitational physics, and radiation physics. 40.0299 Astronomy and Astrophysics, Other.Any instructional program in astronomy and astrophysics not listed above. 40.04 Atmospheric Sciences and Meteorology.Instructional content for this group of programs is defined in codes 40.0401 - 40.0499. 40.0401 Atmospheric Sciences and Meteorology, General.A general program that focuses on the scientific study of the composition and behavior of the atmospheric envelopes surrounding the earth, the effect of earth’s atmosphere on terrestrial weather, and related problems of environment and climate. Includes instruction in atmospheric chemistry and physics, atmospheric dynamics, climatology and climate change, weather simulation, weather forecasting, climate modeling and mathematical theory; and studies of specific phenomena such as clouds, weather systems, storms, and precipitation patterns.Examples: Atmospheric Sciences 40.0402 Atmospheric Chemistry and Climatology.A program that focuses on the scientific study of atmospheric constituents, reactions, measurement techniques, and processes in predictive, current, and historical contexts. Includes instruction in climate modeling, gases and aerosols, trace gases, aqueous phase chemistry, sinks, transport mechanisms, computer measurement, climate variability, paleoclimatology, climate diagnosis, numerical modeling and data analysis, ionization, recombination, photoemission, and plasma chemistry. 40.0403 Atmospheric Physics and Dynamics.A program that focuses on the scientific study of the processes governing the interactions, movement, and behavior of atmospheric phenomena and related terrestrial and solar phenomena. Includes instruction in cloud and precipitation physics, solar radiation transfer, active and passive remote sensing, atmospheric electricity and acoustics, atmospheric wave phenomena, turbulence and boundary layers, solar wind, geomagnetic storms, coupling, natural plasma, and energization.Examples: Magnetospheric Physics Aeronomy Ionospheric Environment 40.0404 Meteorology.A program that focuses on the scientific study of the prediction of atmospheric motion and climate change. Includes instruction in general circulation patterns, weather phenomena, atmospheric predictability, parameterization, numerical and statistical analysis, large- and mesoscale phenomena, kinematic structures, precipitation processes, and forecasting techniques. 40.0499 Atmospheric Sciences and Meteorology, Other.Any instructional program in atmospheric sciences and meteorology not listed above. 40.05 Chemistry.Instructional content for this group of programs is defined in codes 40.0501 - 40.0599. 40.0501 Chemistry, General.A general program that focuses on the scientific study of the composition and behavior of matter, including its micro- and macro-structure, the processes of chemical change, and the theoretical description and laboratory simulation of these phenomena.See also: 14.0701 - Chemical Engineering. 40.0502 Analytical Chemistry.A program that focuses on the scientific study of techniques for analyzing and describing matter, including its precise composition and the interrelationships of constituent elements and compounds. Includes instruction in spectroscopy, chromatography, atomic absorption, photometry, chemical modeling, mathematical analysis, laboratory analysis procedures and equipment maintenance, and applications to specific research, industrial and health problems. 40.0503 Inorganic Chemistry.A program that focuses on the scientific study of the elements and their compounds, other than the hydrocarbons and their derivatives. Includes instruction in the characterization and synthesis of non-carbon molecules, including their structure and their bonding, conductivity, and reactive properties; research techniques such as spectroscopy, X-ray diffraction, and photoelectron analysis; and the study of specific compounds, such as transition metals, and compounds composed of inorganic and organic molecules. 40.0504 Organic Chemistry.A program that focuses on the scientific study of the properties and behavior of hydrocarbon compounds and their derivatives. Includes instruction in molecular conversion and synthesis, molecular synthesis and design, the molecular structure of living cells and systems, the mutual reactivity of organic and inorganic compounds in combination, the spectroscopic analysis of hydrocarbon compounds, and applications to specific problems in research, industry, and health. 40.0506 Physical Chemistry.A program that focuses on the scientific study of understanding and predicting the behavior of chemical systems ranging from nuclear particles to atoms, molecules, clusters, biological materials and macroscopic assemblies. Includes instruction in quantum mechanics, spectroscopy, thermodynamics, statistical mechanics, reaction dynamics, group theory, collision theory, and polymer science. 40.0507 Polymer Chemistry.A program that focuses on the scientific study of synthesized macromolecules and their interactions with other substances. Includes instruction in molecular bonding theory, polymerization, properties and behavior of unstable compounds, the development of tailored polymers, transition phenomena, and applications to specific industrial problems and technologies.See also: 14.3201 - Polymer/Plastics Engineering. 40.0508 Chemical Physics.A program that focuses on the scientific study of structural phenomena combining the disciplines of physical chemistry and atomic/molecular physics. Includes instruction in heterogeneous structures, alignment and surface phenomena, quantum theory, mathematical physics, statistical and classical mechanics, chemical kinetics, and laser physics. 40.0509 Environmental Chemistry.A program that focuses on the scientific study of natural systems (air, water, and soil) through the use of chemical techniques and instrumentation, with an emphasis on the movement and fate of pollutants and chemical aspects of contaminant remediation. Includes instruction in analytical, inorganic, organic, and physical chemistry; aquatic, soil, and atmospheric chemistry; environmental engineering; environmental toxicology; and analytical methods. 40.0510 Forensic Chemistry.A program that focuses on the application of chemical techniques and instrumentation to the analysis and evaluation of physical evidence to aid in criminal investigations. Includes instruction in analytical, inorganic, organic, and physical chemistry; biochemistry; forensic toxicology; instrumental analysis; crime scene processing; criminal investigation; forensic laboratory technology; and applicable law.See also: 43.0406 - Forensic Science and Technology. 40.0511 Theoretical Chemistry.A program that focuses on the study of mathematical and computational methods and fundamental laws of physics to describe chemical phenomena and to develop empirical models of molecules and their interactions. Includes instruction in properties of small, isolated molecules; dynamics of elementary chemical processes; reaction pathways of organic molecules; hydrogen bonding patterns in liquids; reaction rates of biological pathways; and advanced computational techniques.See also: 40.0512 - Cheminformatics/Chemistry Informatics. 40.0512 Cheminformatics/Chemistry Informatics. (New)A program that focuses on applying computer science approaches in the representation, analysis, design, and modeling of chemical structures and associated metadata, such as biological activity endpoints and physicochemical properties. Includes instruction in chemical information technology, computational chemistry, computer science, database design, molecular modeling, scientific computing, and statistics.Examples: Computational Chemistry 40.0599 Chemistry, Other.Any instructional program in chemistry not listed above. 40.06 Geological and Earth Sciences/Geosciences.Instructional content for this group of programs is defined in codes 40.0601 - 40.0699. 40.0601 Geology/Earth Science, General.A program that focuses on the scientific study of the earth; the forces acting upon it; and the behavior of the solids, liquids and gases comprising it. Includes instruction in historical geology, geomorphology, and sedimentology, the chemistry of rocks and soils, stratigraphy, mineralogy, petrology, geostatistics, volcanology, glaciology, geophysical principles, and applications to research and industrial problems.See also: 14.3901 - Geological/Geophysical Engineering. 40.0602 Geochemistry.A program that focuses on the scientific study of the chemical properties and behavior of the silicates and other substances forming, and formed by geomorphological processes of the earth and other planets. Includes instruction in chemical thermodynamics, equilibrium in silicate systems, atomic bonding, isotopic fractionation, geochemical modeling, specimen analysis, and studies of specific organic and inorganic substances. 40.0603 Geophysics and Seismology.A program that focuses on the scientific study of the physics of solids and its application to the study of the earth and other planets. Includes instruction in gravimetric, seismology, earthquake forecasting, magnetrometry, electrical properties of solid bodies, plate tectonics, active deformation, thermodynamics, remote sensing, geodesy, and laboratory simulations of geological processes. 40.0604 Paleontology.A program that focuses on the scientific study of extinct life forms and associated fossil remains, and the reconstruction and analysis of ancient life forms, ecosystems, and geologic processes. Includes instruction in sedimentation and fossilization processes, fossil chemistry, evolutionary biology, paleoecology, paleoclimatology, trace fossils, micropaleontology, invertebrate paleontology, vertebrate paleontology, paleobotany, field research methods, and laboratory research and conservation methods. 40.0605 Hydrology and Water Resources Science.A program that focuses on the scientific study of the occurrence, circulation, distribution, chemical and physical properties, and environmental interaction of surface and subsurface waters, including groundwater. Includes instruction in geophysics, thermodynamics, fluid mechanics, chemical physics, geomorphology, mathematical modeling, hydrologic analysis, continental water processes, global water balance, and environmental science.Examples: HydrogeologySee also: 14.0805 - Water Resources Engineering., 03.0205 - Water, Wetlands, and Marine Resources Management. 40.0606 Geochemistry and Petrology.A program that focuses on the scientific study of the igneous, metamorphic, and hydrothermal processes within the earth and the mineral, fluid, rock, and ore deposits resulting from them. Includes instruction in mineralogy, crystallography, petrology, volcanology, economic geology, meteoritics, geochemical reactions, deposition, compound transformation, core studies, theoretical geochemistry, computer applications, and laboratory studies. 40.0607 Oceanography, Chemical and Physical.A program that focuses on the scientific study of the chemical components, mechanisms, structure, and movement of ocean waters and their interaction with terrestrial and atmospheric phenomena. Includes instruction in material inputs and outputs, chemical and biochemical transformations in marine systems, equilibria studies, inorganic and organic ocean chemistry, oceanographic processes, sediment transport, zone processes, circulation, mixing, tidal movements, wave properties, and seawater properties.See also: 26.1302 - Marine Biology and Biological Oceanography. 40.0699 Geological and Earth Sciences/Geosciences, Other.Any instructional program in geological and related sciences not listed above.Examples: Geodetics Geodesy 40.08 Physics.Instructional content for this group of programs is defined in codes 40.0801 - 40.0899. 40.0801 Physics, General.A general program that focuses on the scientific study of matter and energy, and the formulation and testing of the laws governing the behavior of the matter-energy continuum. Includes instruction in classical and modern physics, electricity and magnetism, thermodynamics, mechanics, wave properties, nuclear processes, relativity and quantum theory, quantitative methods, and laboratory methods.See also: 14.1201 - Engineering Physics/Applied Physics. 40.0802 Atomic/Molecular Physics.A program that focuses on the scientific study of the behavior of matter-energy phenomena at the level of atoms and molecules. Includes instruction in chemical physics, atomic forces and structure, molecular orbital theory, magnetic resonance, molecular bonding, phase equilibria, quantum theory of solids, and applications to the study of specific elements and higher compounds. 40.0804 Elementary Particle Physics.A program that focuses on the scientific study of the basic constituents of sub-atomic matter and energy, and the forces governing fundamental processes. Includes instruction in quantum theory, field theory, single-particle systems, perturbation and scattering theory, matter-radiation interaction, symmetry, quarks, capture, Schroedinger mechanics, methods for detecting particle emission and absorption, and research equipment operation and maintenance. 40.0805 Plasma and High-Temperature Physics.A program that focuses on the scientific study of properties and behavior of matter at high temperatures, such that molecular and atomic structures are in a disassociated ionic or electronic state. Includes instruction in magnetohydrodynamics, free electron phenomena, fusion theory, electromagnetic fields and dynamics, plasma and non-linear wave theory, instability theory, plasma shock phenomena, quantitative modeling, and research equipment operation and maintenance. 40.0806 Nuclear Physics.A program that focuses on the scientific study of the properties and behavior of atomic nuclei. Includes instruction in nuclear reaction theory, quantum mechanics, energy conservation, nuclear fission and fusion, strong and weak forces, nuclear modeling, nuclear decay, nucleon scattering, pairing, photon and electron reactions, the physics of nuclear effects, statistical methods, and research equipment operation and maintenance.Examples: Nuclear EffectsSee also: 14.2301 - Nuclear Engineering. 40.0807 Optics/Optical Sciences.A program that focuses on the scientific study of light energy, including its structure, properties and behavior under different conditions. Includes instruction in wave theory, wave mechanics, electromagnetic theory, physical optics, geometric optics, quantum theory of light, photon detecting, laser theory, wall and beam properties, chaotic light, non-linear optics, harmonic generation, optical systems theory, and applications to engineering problems.Examples: Electro-Optics Atmospheric and Space OpticsSee also: 14.1003 - Laser and Optical Engineering. 40.0808 Condensed Matter and Materials Physics.A program that focuses on the scientific study of macroscopic physical phenomena and properties that arise from basic microscopic interactions. Includes instruction in low-temperature and solid-state physics, x-ray physics, liquids and soft materials, including the study of semiconductors, metals, superliquids, magnets, superconductors, glasses, gels, polymers, colloids, neural networks, and macromolecules. 40.0809 Acoustics.A program that focuses on the scientific study of sound, and the properties and behavior of acoustic wave phenomena under different conditions. Includes instruction in wave theory, the acoustic wave equation, energy transformation, vibration phenomena, sound reflection and transmission, scattering and surface wave phenomena, singularity expansion theory, ducting, and applications to specific research problems such as underwater acoustics, crystallography, and health diagnostics. 40.0810 Theoretical and Mathematical Physics.A program that focuses on the scientific and mathematical formulation and evaluation of the physical laws governing, and models describing, matter-energy phenomena, and the analysis of related experimental designs and results. Includes instruction in classical and quantum theory, relativity theory, field theory, mathematics of infinite series, vector and coordinate analysis, wave and particle theory, advanced applied calculus and geometry, analyses of continuum, cosmology, and statistical theory and analysis. 40.0899 Physics, Other.Any instructional program in physics not listed above.Examples: Electrodynamics 40.10 Materials Sciences.Instructional content for this group of programs is defined in codes 40.1001 - 40.1099. 40.1001 Materials Science.A program that focuses on the general application of mathematical and scientific principles to the analysis and evaluation of the characteristics and behavior of solids, including internal structure, chemical properties, transport and energy flow properties, thermodynamics of solids, stress and failure factors, chemical transformation states and processes, compound materials, and research on industrial applications of specific materials.Examples: Mechanical Properties of Materials Structural Materials Electronic and Optical Materials Biomaterials Materials Theory Surface TechnologySee also: 14.1801 - Materials Engineering., 40.1002 - Materials Chemistry. 40.1002 Materials Chemistry.A program that focuses on the synthesis and study of organic or inorganic materials and their electronic, magnetic, optical or mechanical properties. Includes instruction in advanced materials for photonics, lasers, chemical sensors and arrays or nanochemistry; semiconductor nanowires; and molecular electronics.See also: 14.1801 - Materials Engineering., 40.1001 - Materials Science. 40.1099 Materials Sciences, Other.Any instructional program in materials sciences not listed above. 40.11 Physics and Astronomy. (New)Instructional content is defined in code 40.1101. 40.1101 Physics and Astronomy. (New)A program that focuses on the scientific study of the theories that explain the fundamental structure of our world and the universe and which draws from physics and astronomy. Includes instruction in astronomy, calculus, cosmology, differential equations, electricity, magnetism, data analysis, physics, quantum mechanics, space science, spectroscopy, and thermal physics.See also: 40.0202 - Astrophysics. 40.99 Physical Sciences, Other.Instructional content is defined in code 40.9999. 40.9999 Physical Sciences, Other.Any instructional program in physical sciences not listed above. 41 SCIENCE TECHNOLOGIES/TECHNICIANSInstructional programs that prepare individuals to apply scientific principles and technical skills in support of scientific research and development. 41.00 Science Technologies/Technicians, General.Instructional content is defined in code 41.0000. 41.0000 Science Technologies/Technicians, General.A general program that prepares individuals to apply scientific principles and technical skills in support of scientific research and development. Includes instruction in standard laboratory practices and procedures; techniques for analysis, testing and inspection; laboratory instrumentation and equipment operation and maintenance; laboratory and materials handling safety; and computer applications.Examples: Science Laboratory Technology 41.01 Biology/Biotechnology Technologies/Technicians. CIP Title or Definition ChangedInstructional content is defined in code 41.0101. 41.0101 Biology/Biotechnology Technology/Technician. CIP Title or Definition ChangedA program that prepares individuals to apply scientific principles and technical skills in support of biologists and biotechnologists in research, industrial, and government settings. Includes instruction in fermentation technology, cell culturing, protein purification, biologic synthesis, assaying and testing, quality control, industrial microbiology, bioprocessing, chromatography and bioseparation, genetic technology, laboratory and hazardous materials safety, and computer applications.Examples: Biotechnology Laboratory Technician Biology Laboratory TechnicianSee also: 51.1004 - Clinical/Medical Laboratory Technician. 41.02 Nuclear and Industrial Radiologic Technologies/Technicians.Instructional content for this group of programs is defined in codes 41.0204 - 41.0299. 41.0204 Industrial Radiologic Technology/Technician.A program that prepares individuals to apply scientific principles and technical skills to the operation of industrial and research testing equipment using radioisotopes. Includes instruction in x-ray analysis of materials, nondestructive testing and inspection of materials, and continuous measurement of paper or metal thickness. 41.0205 Nuclear/Nuclear Power Technology/Technician.A program that prepares individuals to apply scientific principles and technical skills in support of research scientists and operating engineers engaged in the running of nuclear reactors, and in nuclear materials processing and disposal. Includes instruction in basic nuclear physics and nuclear engineering, monitoring and safety procedures, radioactive materials handling and disposal, equipment maintenance and operation, and record keeping. 41.0299 Nuclear and Industrial Radiologic Technologies/Technicians, Other.Any instructional program in nuclear and industrial radiologic technologies not listed above. 41.03 Physical Science Technologies/Technicians.Instructional content for this group of programs is defined in codes 41.0301 - 41.0399. 41.0301 Chemical Technology/Technician.A program that prepares individuals to apply scientific principles and technical skills in support of chemical and biochemical research and industrial operations. Includes instruction in principles of chemistry and biochemistry, technical mathematics, computer applications, radiochemistry, industrial biochemistry, chemical instrumentation, physical chemistry, laboratory research methods, industrial processing methods and equipment, and test equipment operation and maintenance. 41.0303 Chemical Process Technology.A program that prepares individuals to apply scientific principles and technical skills to the operation of chemical processing equipment in industries such as chemical manufacturing, petroleum refining, pharmaceutical manufacturing, and waste water treatment. Includes instruction in mathematics, chemistry, and physics; computer applications; chemical and refinery plant operations, processes, and equipment; safety, health, and environment; instrumentation; troubleshooting; and applications to specific industries.Examples: Chemical Process Technology 41.0399 Physical Science Technologies/Technicians, Other.Any instructional program in physical science technologies not listed above. 41.99 Science Technologies/Technicians, Other.Instructional content is defined in code 41.9999. 41.9999 Science Technologies/Technicians, Other.Any instructional program in science technologies not listed above. 42 PSYCHOLOGYInstructional programs that focus on the scientific study of the behavior of individuals, independently or collectively, and the physical and environmental bases of mental, emotional, and neurological activity. 42.01 Psychology, General. (No substantive changes)Instructional content is defined in code 42.0101. 42.0101 Psychology, General.A general program that focuses on the scientific study of individual and collective behavior, the physical and environmental bases of behavior, and the analysis and treatment of behavior problems and disorders. Includes instruction in the principles of the various subfields of psychology, research methods, and psychological assessment and testing methods.See also: 30.1701 - Behavioral Sciences. 42.27 Research and Experimental Psychology.Instructional content for this group of programs is defined in codes 42.2701 - 42.2799. 42.2701 Cognitive Psychology and Psycholinguistics.A program that focuses on the scientific study of the mechanisms and processes of learning and thinking, and associated information encoding, decoding, processing and transmitting systems. Includes instruction in theories of cognition and intelligence; studies of cognitive processes such as memory, sensation, perception, pattern recognition, problem solving, and conceptual thinking; cybernetics; psycholinguistics; and the study of biological and social communications mechanisms and processes. 42.2702 Comparative Psychology.A program that focuses on the behavior of members of particular species or groups and the relationship of the behaviors of the species or group to their evolutionary origins. Includes instruction in differential psychology, experimental and physiological psychology, psychopharmacology, psychology of individual differences, reinforcement theory, and neurophysiology. 42.2703 Developmental and Child Psychology. CIP Title or Definition ChangedA program that focuses on the scientific study of the unique stages of psychological growth and development of individuals from infancy through childhood. Includes instruction in cognitive and perceptual development, emotional development, personality development, the effects of biological maturation on behavior, theories of cognitive growth and related research methods, testing and assessment methods for different age levels, research on child and adolescent behavior therapy, and the psychology of aging.Examples: Child Psychology Lifespan DevelopmentSee also: 19.0706 - Child Development. 42.2704 Experimental Psychology.A program that focuses on the scientific study of behavior under experimental conditions and the analysis of controlled behavioral responses. Includes instruction in learning theory, research design and experimental methods, psychological measurement, statistical design and methods, analysis of cognitive and behavioral variables, and the conduct of specialized and large-scale studies. 42.2705 Personality Psychology.A program that focuses on the unique organization of fairly permanent characteristics that set the individual apart from other individuals and, at the same time, determine how others respond to that individual. Includes instruction in Freudian, Skinnerian, Rogerian, and Ellisonian psychology; neo-Freudian psychology; psychological systems, neurophysiology, and psychopharmacology. 42.2706 Behavioral Neuroscience. CIP Title or Definition ChangedA program that focuses on the scientific study of the biological bases of behavior and psychological functioning, and their application to experimental and therapeutic research problems. Includes instruction in functional neuroanatomy, neural system development, biochemical neural regulatory mechanisms, neurological biophysics, memory storage and retrieval, physiology of cognition and perception, physiological bases of psychopathology and behavioral disorders, psychopharmacology, comparative psychobiology, molecular and cellular neuroscience, brain science, anatomy and physiology of the central nervous system, and specialized experimental design and research methods.Examples: Physiological Psychology PsychobiologySee also: 30.1701 - Behavioral Sciences., 26.1501 - Neuroscience., 30.1001 - Biopsychology., 26.1504 - Neurobiology and Behavior. 42.2707 Social Psychology.A program that focuses on the scientific study of individual behavior in group contexts, group behavior, and associated phenomena. Includes instruction in social learning theory, group theory and dynamics, sex roles, social cognition and inference, attribution theory, attitude formation, criminal behavior and other social pathologies, altruistic behavior, social development, and social ecology. 42.2708 Psychometrics and Quantitative Psychology.A program that focuses on the mathematical and statistical procedures used in psychological test construction and validation; the general problems of the measurement of behavior; and the application of quantitative methods to research design and other methodological topics. 42.2709 Psychopharmacology.A program that focuses on the study of the behavioral effects of medications, drugs, nutrients, and chemicals (including natural and artificial toxins) in laboratory and clinical settings. Includes instruction in pharmacology, behavioral toxicology and pharmacology, neuroscience, physiology, clinical psychopharmacology, substance abuse treatments and antidotes, neurochemical mechanisms, epidemiology of chemicals and substances, biochemical interactions, and psychoactive drugs. 42.2710 Developmental and Adolescent Psychology. (New)A program that focuses on the scientific study of the unique stages of psychological growth and development of individuals from adolescence to adulthood. Includes instruction in cognitive and perceptual development, emotional development, personality development, the effects of biological maturation on behavior, theories of cognitive growth and related research methods, testing and assessment methods for different age levels, research on child and adolescent behavior therapy, and the psychology of aging.Examples: Adolescent Development 42.2799 Research and Experimental Psychology, Other.Any instructional program in research and experimental psychology not listed above. 42.28 Clinical, Counseling and Applied Psychology.Instructional content for this group of programs is defined in codes 42.2801 - 42.2899. These CIP codes are not valid for IPEDS reporting. 42.2801 Clinical Psychology.A program that prepares individuals for the independent professional practice of clinical psychology, involving the analysis, diagnosis, and clinical treatment of psychological disorders and behavioral pathologies. Includes instruction in clinical assessment and diagnosis, personality appraisal, psychopathology, clinical psychopharmacology, behavior modification, therapeutic intervention skills, patient interviewing, personalized and group therapy, child and adolescent therapy, cognitive and behavioral therapy, supervised clinical practice, ethical standards, and applicable regulations. 42.2802 Community Psychology.A program that prepares individuals to apply psychological principles to the analysis of social problems, and the implementation of intervention strategies for addressing these problems. Includes instruction in social ecology, primary and secondary prevention of social pathologies, social intervention strategies and tactics, large group counseling, social services systems behavior, creating settings, cultural stress, and the dynamics of social change. 42.2803 Counseling Psychology.A program that prepares individuals for the independent professional practice of psychological counseling, involving the rendering of therapeutic services to individuals and groups experiencing psychological problems and exhibiting distress symptoms. Includes instruction in counseling theory, therapeutic intervention strategies, patient/counselor relationships, testing and assessment methods and procedures, group therapy, marital and family therapy, child and adolescent therapy, supervised counseling practice, ethical standards, and applicable regulations.See also: 51.1508 - Mental Health Counseling/Counselor. 42.2804 Industrial and Organizational Psychology.A program that focuses on the scientific study of individual and group behavior in institutional settings, applications to related problems of organization and industry, and that may prepare individuals to apply such principles in industrial and organizational settings. Includes instruction in group behavior theory, organizational theory, reward/punishment structures, human-machine and human-computer interactions, motivation dynamics, human stress studies, environmental and organizational influences on behavior, alienation and satisfaction, and job testing and assessment.See also: 52.1003 - Organizational Behavior Studies. 42.2805 School Psychology.A program that prepares individuals to apply clinical and counseling psychology principles to the diagnosis and treatment of student behavioral problems. Includes instruction in child and/or adolescent development; learning theory; testing, observation and other procedures for assessing educational, personality, intelligence and motor skill development; therapeutic intervention strategies for students and families; identification and classification of disabilities and disorders affecting learning; school psychological services planning; supervised counseling practice; ethical standards; and applicable regulations.See also: 13.1101 - Counselor Education/School Counseling and Guidance Services. 42.2806 Educational Psychology.A program that focuses on the application of psychology to the study of the behavior of individuals in the roles of teacher and learner, the nature and effects of learning environments, and the psychological effects of methods, resources, organization and non-school experience on the educational process. Includes instruction in learning theory, human growth and development, research methods, and psychological evaluation. 42.2807 Clinical Child Psychology.A program that focuses on the developmental processes of children and associated disorders and that prepares individuals for the independent professional practice of clinical child psychology. Includes instruction in developmental neuropsychology, child psychopathology, testing of children and adolescents, pediatric psychology, psychosocial variables in child development, clinical skills, family therapy, behavioral assessment and intervention, clinical skills, consultation, professional standards and ethics, and applications to topics such as infancy, childhood, and adolescence. 42.2808 Environmental Psychology.A program that focuses on the study of behavioral interactions between human beings and the environment in individual and group contexts, and ways to improve them. Includes instruction in contextual theory; statistics; physiological, social, and psychological responses to natural and technological hazards and disease; environmental perception and cognition; loneliness and stress; and psychological aspects of environmental design and planning. 42.2809 Geropsychology.A program that focuses on the psychology of aging and of elderly individuals and populations, with reference to growth and decline across the life span. Includes instruction in gerontology, developmental and adult psychology, age-related development and decline of cognitive processes, age-related psychological and neurological disorders, social and personality development in aging populations and individuals, and applications to the clinical treatment and care of older adults.See also: 19.0702 - Adult Development and Aging., 30.1101 - Gerontology. 42.2810 Health/Medical Psychology.A program that focuses on the psychological study of health and illness, and recovery, from the perspective that these phenomena arise from a combination of physical, behavioral, and social conditions. Includes instruction in abnormal and social psychology, psychophysiology, psychopharmacology, learning processes, clinical and behavioral therapies, biopsychosocial modeling, clinical procedures and assessment, preventive education, psychotherapy, rehabilitation processes, and research methods. 42.2811 Family Psychology.A program that prepares individuals to provide therapeutic, evaluative, and research services to families and individuals in the family unit context. Includes instruction in natural and family systems theory, family and group rituals, family evaluation and assessment, marital and couples therapy, sex therapy, parenting, interviewing techniques, genogram construction, family sculpting, diversity issues, family violence, family law, and professional standards and ethics.See also: 51.1505 - Marriage and Family Therapy/Counseling., 19.0704 - Family Systems. 42.2812 Forensic Psychology.A program that prepares individuals to apply clinical, counseling, school, and neuropsychology skills to the provision of psychological services within the criminal justice and civil legal systems, including consultation, assessment, and interventions. Includes instruction in the epidemiology of mental/behavioral disorders, risk factors for violence and criminality, profiling and patterning, psychological testing, prediction and intervention measurement, forensic assessment, criminal and civil law and procedures, secure environments, forensic treatment and intervention skills, and professional standards and ethics. 42.2813 Applied Psychology.A program that focuses on the application of psychological theories and methods to real-world settings and problems, such as business and industry, government, education, military, and community settings. Includes instruction in applications of psychology, industrial/organizational psychology, developmental psychology, social psychology, cognitive psychology, counseling, human factors, research methods and statistics, and program evaluation.See also: 30.3101 - Human Computer Interaction. 42.2814 Applied Behavior Analysis.A program that focuses on the application of principles of learning and behavior to enhance the development, abilities, and choices of children and adults; and that prepares individuals to address the behavioral needs of individuals, especially those with developmental disabilities and autism. Includes instruction in behavior analysis and learning, behavioral and functional assessment, developmental psychology, applied behavioral analysis in developmental disabilities and autism, applied behavioral analysis in mental health and aging, research methods, evaluation of interventions, and professional and ethical issues. 42.2815 Performance and Sport Psychology. (New)A program that focuses on the motor, physiological, and psychosocial aspects of sport behavior. Includes instruction in applied sport psychology, clinical mental health counseling, coaching, exercise physiology, ethical performance enhancement; human development, leadership and team building, mind-body practices, neuroscience, and personality and health.Examples: Sport and Exercise PsychologySee also: 31.0508 - Sports Studies. 42.2816 Somatic Psychology. (New)A program that focuses on a holistic approach to solving interpersonal issues and psychological problems. Includes instruction in authentic movement, body-mind balance and integration, contact improvisation, dance, Pilates, Tai Chi, relaxation techniques, and Yoga. 42.2817 Transpersonal/Spiritual Psychology. (New)A program that prepares individuals to pursue spiritual and psychological practices for counseling. Includes instruction in emotional intelligence, expressive movement, healing practices and rituals, human consciousness, movement and meditation, psychosomatic connection, spiritual systems and wellness, transpersonal counseling, and therapeutic trance. 42.2899 Clinical, Counseling and Applied Psychology, Other.Any instructional program in clinical, counseling and applied psychology not listed above. 42.99 Psychology, Other.Instructional content is defined in code 42.9999. 42.9999 Psychology, Other.Any instructional program in psychology not listed above.Examples: Neuropsychology 43 HOMELAND SECURITY, LAW ENFORCEMENT, FIREFIGHTING AND RELATED PROTECTIVE SERVICESInstructional programs that focus on the principles and procedures for providing homeland security, police, fire, and other safety services and managing penal institutions. Note: this series is titled “Security and Protective Services” in the Canadian CIP. 43.01 Criminal Justice and Corrections.Instructional content for this group of programs is defined in codes 43.0100 - 43.0199. 43.0100 Criminal Justice and Corrections, General. (New)A program of study that focuses on the general study of criminal justice and corrections. Includes instruction in criminology, criminal justice, correctional science, forensic science, law enforcement, psychology, and ethics. 43.0102 Corrections.A program that prepares individuals to study the theories and principles, of correctional science and to function as professional corrections officers and other workers in public and/or private incarceration facilities. 43.0103 Criminal Justice/Law Enforcement Administration.A program that prepares individuals to apply theories and practices of organization management and criminal justice to the administration of public law enforcement agencies and operations. Includes instruction in law enforcement history and theory, operational command leadership, administration of public police organizations, labor relations, incident response strategies, legal and regulatory responsibilities, budgeting, public relations, and organizational leadership. 43.0104 Criminal Justice/Safety Studies.A program that focuses on the criminal justice system, its organizational components and processes, and its legal and public policy contexts. Includes instruction in criminal law and policy, police and correctional systems organization, the administration of justice and the judiciary, and public attitudes regarding criminal justice issues.See also: 45.0401 - Criminology. 43.0106 Forensic Science and Technology. (Moved from)Moved from 43.0106 to 43.0406 43.0107 Criminal Justice/Police Science.A program that prepares individuals to perform the duties of police and public security officers, including patrol and investigative activities, traffic control, crowd control and public relations, witness interviewing, evidence collection and management, basic crime prevention methods, weapon and equipment operation and maintenance, report preparation and other routine law enforcement responsibilities. 43.0109 Security and Loss Prevention Services.A program that prepares individuals to perform routine inspection, patrol and crime prevention services for private clients. Includes instruction in the provision of personal protection as well as property security. 43.0110 Juvenile Corrections.A program that prepares individuals to specialize in the provision of correction services to underage minor populations. Includes instruction in corrections, juvenile delinquency, juvenile development and psychology, juvenile law and justice administration, social services, record-keeping procedures, and communication skills. 43.0111 Criminalistics and Criminal Science. (Moved from)Moved from 43.0111 to 43.0402 43.0112 Securities Services Administration/Management.A program that prepares individuals to plan, manage, and supervise services providing private security protection for people and property and related investigative and consulting functions. Includes instruction in security and loss prevention services, private security and investigation techniques, security technologies, personnel management, business operations, marketing, applicable law and regulations, and client relations.Examples: Business and Organizational Security Management 43.0113 Corrections Administration.A program that prepares individuals to plan and manage institutional facilities and programs for housing and rehabilitating prisoners in the public and/or private sectors. Includes instruction in the principles and practice of correction, facilities planning and management, safety and security, social and health services, staff and inmate management, budgeting, communication skills, correctional psychology, and applications to specific types of correctional facilities approaches. 43.0114 Law Enforcement Investigation and Interviewing.A program focusing on the principles, procedures, techniques, legal concerns, and problems associated with a criminal investigation. Includes instruction in administrative law and procedures, courtroom evidence management and preparation, case presentation and court testimony, description and identification, state and federal criminal law and procedures, informant and suspect rights, officer liability, informant and witness management, victim awareness, tactical interviewing, psychology, criminal investigation methods and procedures, report writing and documentation, investigative techniques, and case management. 43.0115 Law Enforcement Record-Keeping and Evidence Management.A program focusing on the principles and procedures for managing records in police or other security offices, including storing and retrieving evidence and related data. Includes instruction in administrative law and procedures, office management, report preparation, organizational software, database software, physical and digital evidence properties, controlled storage and retrieval, investigative file inventories, case management, security systems, and communications skills. 43.0116 Cyber/Computer Forensics and Counterterrorism. (Moved from)Moved from 43.0116 to 43.0403 43.0117 Financial Forensics and Fraud Investigation. (Moved from)Moved from 43.0117 to 43.0405 43.0118 Law Enforcement Intelligence Analysis. (Moved from)Moved from 43.0118 to 43.0408 43.0119 Critical Incident Response/Special Police Operations.A program focusing on the principles and techniques for dealing with police emergencies such as hostage situations, bomb threats, barricades and terrorist incidents. Includes instruction in crisis management, command procedures, incident containment, information collection and debriefing, first responder negotiation, victim and criminal psychology, site survey and surveillance, special weapons and tactics, interagency communications and joint operations, pre-confrontation and contingency planning, assault and rescue operations, security and crowd control, media relations, and post-operation procedures. 43.0120 Protective Services Operations.A program focusing on the principles and techniques of providing physical security protection to clients in various environments and situations. Includes instruction in security intelligence and information resources, operations planning and surveying, operations security, weapons and explosives, defense and offense techniques, security and surveillance systems, communications systems, perimeter and access control, weapons of mass destruction, contingency planning, crowd control, cover and evacuation, combat and vehicle techniques, and applicable legal and administrative responsibilities.Examples: Land Transportation Security Physical Security Protective Operations Evasive and Defensive Driving 43.0121 Suspension and Debarment Investigation.A program focusing on the principles and techniques for investigating criminal behavior among government contractors and grantees at different levels. Includes instruction in financial fraud and money-laundering, auditing, computer investigations, legal concepts and applications, procurement law, non-procurement debarment, jurisdiction and lead agency, analytical methods, suspension, parallel proceedings, evidence protection, equitable considerations, investigative techniques, administrative and global solutions, case management and preparation. 43.0122 Maritime Law Enforcement.A program focusing on the application of law enforcement and security principles and procedures to the marine environment. Includes instruction in criminal and nautical law, nautical terminology, seamanship and vessel operation, vessel maintenance, navigation and navigation systems, meteorology, vessel and passenger safety, radar and remote sensing systems, communications systems, vessel pursuit and stop, boarding and arrest techniques, investigative and evidence techniques, weaponry and applications to specific situations such as piracy, drug trafficking and smuggling. 43.0123 Cultural/Archaelogical Resources Protection.A program focusing on the application of law enforcement principles and techniques to the protection of cultural resources and the investigation of related crimes. Includes instruction in cultural resources law, archaeological standards of value, site damage assessment, evidence collection, surveillance techniques, investigative techniques, case management and preparation. 43.0199 Corrections and Criminal Justice, Other.Any instructional program in corrections and criminal justice not listed above.See also: 03.0208 - Environmental/Natural Resources Law Enforcement and Protective Services. 43.02 Fire Protection.Instructional content for this group of programs is defined in codes 43.0201 - 43.0299. 43.0201 Fire Prevention and Safety Technology/Technician.A program focusing on the application of fire science and technology to problems of reducing fire risk, limiting loss, supervising substance removal, conducting safety inspections and investigations, and advising on matters of safety procedures and fire prevention policy. Includes instruction in fire behavior, fire simulation, structural risk assessment, materials analysis, detection and suppression systems, smoke management, supply and evacuation, public education, legal aspects of fire prevention, and related research and communications methods.Examples: Fire Prevention Education Fire Risk Prevention and Inspection 43.0202 Fire Services Administration.A program focusing on the principles, theory, and practices associated with the management of fire operations, firefighting services, and community fire issues. Includes instruction in fire protection history and theory, incident command leadership, administration of public fire organizations, labor relations, emergency medical services management, fire emergency response strategies and mitigation, legal and regulatory responsibilities, budgeting, public relations, and organizational leadership.Examples: Fire Administration Executive Fire Officer Fire Service and Management Information Systems 43.0203 Fire Science/Fire-fighting.A program focusing on the theory and practice of fires and fire-fighting. Includes instruction in fire chemistry and physics, combustible materials, computer science, building construction, fire codes and related laws, fire hydraulics, fire command, fire prevention/inspection, fire protection systems, fire suppression systems, fire/arson investigation, occupational safety, equipment operation, emergency medicine and communications.Examples: Firefighter Training 43.0204 Fire Systems Technology.A program focusing on the principles and practice of firefighting systems, building construction and related resources as applied to fire prevention, control, and mitigation. Includes instruction in fire hydraulics and dynamics, fire protection structures and systems design, fire behavior and combustion, fire protection hydraulics and water supply, fire protection equipment and systems, building construction for fire protection, and fire apparatus. 43.0205 Fire/Arson Investigation and Prevention.A program focusing on the theory and principles of fire combustion and behavior applied to the analysis of fires and their causes. Includes instruction in fire behavior and combustion, fire dynamics, hazardous materials chemistry, incendiary fire analysis, fire-related human behavior, forensic procedures, investigative techniques, case management and case preparation.Examples: Arson Prevention and Investigation Fire Investigation Fire Analysis 43.0206 Wildland/Forest Firefighting and Investigation.A program focusing on the application of fire science, firefighting and investigation to the prevention, control and mitigation of wildland fires and the analysis of causes. Includes instruction in fire science and behavior, wildland environments, meteorology, wildland fire hydraulics and dynamics, water and chemical supply systems, wildland firefighting operations, airborne firefighting, firebreak engineering, communications systems, wildland arson, forensic procedures, wildland fire prevention, investigation techniques, case management and preparation. 43.0299 Fire Protection, Other.Any instructional program in fire protection not listed above. 43.03 Homeland Security.Instructional content for this group of programs is defined in codes 43.0301 - 43.0399. 43.0301 Homeland Security.A program focusing on security policy, planning and operations dedicated to the protection of U.S. territory, assets, infrastructure, institutions and citizens from external threats. Includes instruction in national security policy, government relations, intelligence, law enforcement, security technology, communications and information technology, homeland security planning and operations, disaster planning and applications to specific threat scenarios. 43.0302 Crisis/Emergency/Disaster Management.A program focusing on the application of the incident command system model to formulating and implementing effective response to natural and man-made disasters. Includes instruction in contingency planning, hazard and risk assessment, joint operations, law and ethics, emergency response and recovery, event mitigation, emergency rescue and medical operations, incident command, terrorism and national security issues, law enforcement, relief administration, volunteer and citizen coordination, public relations and applications to specific types of incidents.Examples: Disaster Planning and Management Emergency and Disaster Mitigation Emergency Preparedness and Technology Incident Command Systems Emergency Training Disaster Operations and Recovery Integrated Emergency Management Disaster Medicine and Management Public Health Preparedness and Emergency Management 43.0303 Critical Infrastructure Protection.A program focusing on the design, planning and management of systems and procedures for protecting critical national physical and cyber infrastructure from external threats, including terrorism. Includes instruction in homeland security policy, critical infrastructure policy, information security, matrix vulnerability assessment, threat assessment, physical security, personnel security, operational security, contingency planning, case analyses of specific industries and systems, redundancy planning, emergency and disaster planning, security systems, and intelligence operations. 43.0304 Terrorism and Counterterrorism Operations.A program focusing on the study of terrorism as a global and national threat and the methods for analyzing and countering it. Includes instruction in psychology, cultural studies, terrorist history and organization, terrorist capabilities, terrorist finance and international money-laundering, threat assessment, intelligence operations, incident command systems, border security, emergency response, joint operations, surveillance and communications systems, cyberterrorism, weapons of mass destruction, counterterrorist operations, and applications to specific terrorist organizations and threats. 43.0399 Homeland Security, Other.Any instructional program in homeland security not listed above.Examples: Search and Rescue Technician Emergency Telecommunicator Emergency Services Communications Public Safety Communications 43.04 Security Science and Technology. (New)Instructional content for this group of programs is defined in codes 43.0401 - 43.0499. 43.0401 Security Science and Technology, General. (New)A program of study that focuses on the general application of science and technology to security. 43.0402 Criminalistics and Criminal Science. (Moved to)A program that focuses on the application of clinical and criminal laboratory science, investigative techniques, and criminology to the reconstruction of crimes and the analysis of physical evidence. Includes instruction in laboratory science, laboratory procedures, criminology and police science, evidentiary testing and analysis, computer applications, record-keeping, reconstruction techniques, evidence handling and storage, and applications to specific types of evidence and crimes. 43.0403 Cyber/Computer Forensics and Counterterrorism. (Moved to)A program focusing on the principles and techniques used to identify, search, seize and analyze digital media and to conduct cyber investigations against criminal and terrorist activity. Includes instruction in computer boot processes and drives, jumper setting, file access and reconstruction, hacking, network systems, cryptography, programming, investigative techniques, forensic imagery, web-based investigation methods, cyberterrorism, and applicable laws and administrative procedures.Examples: Internet InvestigationSee also: 11.1003 - Computer and Information Systems Security/Auditing/Information Assurance. 43.0404 Cybersecurity Defense Strategy/Policy. (New)A program that focuses on the study of strategy, policy, and standards regarding the security of and operations in cyberspace. Includes instruction in incident response, information assurance, recovery policies, vulnerability reduction, deterrence, threat reduction, and resiliency. 43.0405 Financial Forensics and Fraud Investigation. (Moved to)A program focusing on the principles and techniques of conducting investigations into financial crime, terrorist activity, and the analysis and use of accounting data as evidence. Includes instruction in the principles of accounting, investigative auditing, computer investigations, accounting system documents and software, business corruption, criminal and terrorist financial networks, international money markets and movement, net worth analysis, financial fraud, exposing concealed assets, records seizure, fraud and money laundering statutes, fraud case initiation, case management, and case presentation.Examples: Fraud and Money-Laundering International Banking and Money-Laundering Terrorist Finance Asset Forfeiture Economic Crime Investigation Investigative and Forensic Accounting 43.0406 Forensic Science and Technology. (Moved to)A program that focuses on the application of the physical, biomedical, and social sciences to the analysis and evaluation of physical evidence, human testimony and criminal suspects. Includes instruction in forensic medicine, forensic dentistry, anthropology, psychology, entomology, pathology, forensic laboratory technology and autopsy procedures, DNA and blood pattern analysis, crime scene analysis, crime scene photography, fingerprint technology, document analysis, witness and suspect examination procedures, applicable law and regulations, and professional standards and ethics.Examples: Crime Scene InvestigationSee also: 42.2812 - Forensic Psychology., 40.0510 - Forensic Chemistry., 44.0703 - Forensic Social Work., 45.0205 - Forensic Anthropology. 43.0407 Geospatial Intelligence. (New)A program that prepares individuals to analyze security and intelligence problems using a geographic perspective by relating human actions to cultural, political, economic, social, and physical landscapes. Includes instruction in aerial photography analysis, cartography, geographic information systems (GIS), physical geography, remote sensing, spatial programming, and quantitative methods in geographic research.See also: 45.0702 - Geographic Information Science and Cartography. 43.0408 Law Enforcement Intelligence Analysis. (Moved to)A program focusing on the preparation of law enforcement personnel to perform intelligence and surveillance operations and to analyze and use data collected via such operations. Includes instruction in the intelligence cycle, information sources, data retrieval, digital investigation, financial investigations, document analysis, external sources, geographic information systems, link analysis, operation planning and security, case management, applicable law and regulations, and case preparation.Examples: Electronic Surveillance 43.0499 Security Science and Technology, Other. (New)Any instructional program in security science and technology not listed above. 43.99 Homeland Security, Law Enforcement, Firefighting and Related Protective Services, Other.Instructional content is defined in code 43.9999. 43.9999 Homeland Security, Law Enforcement, Firefighting and Related Protective Services, Other.Any instructional program in homeland security, law enforcement, firefighting, and related protective services not listed above. 44 PUBLIC ADMINISTRATION AND SOCIAL SERVICE PROFESSIONSInstructional programs that prepare individuals to analyze, manage, and deliver public programs and services. 44.00 Human Services, General.Instructional content is defined in code 44.0000. 44.0000 Human Services, General.A program that focuses on the general study and provision of human and social services to individuals and communities and prepares individuals to work in public and private human services agencies and organizations. Includes instruction in the social sciences, psychology, principles of social service, human services policy, planning and evaluation, social services law and administration, and applications to particular issues, services, localities, and populations.Examples: Human Service Studies Human Services Studies 44.02 Community Organization and Advocacy.Instructional content is defined in code 44.0201. 44.0201 Community Organization and Advocacy. CIP Title or Definition ChangedA program that focuses on the theories, principles, and practice of organizing and providing services to communities. May prepare individuals to apply such knowledge and skills in community service positions. 44.04 Public Administration.Instructional content for this group of programs is defined in codes 44.0401 - 44.0499. 44.0401 Public Administration.A program that prepares individuals to serve as managers in the executive arm of local, state, and federal government and that focuses on the systematic study of executive organization and management. Includes instruction in the roles, development, and principles of public administration; the management of public policy; executive-legislative relations; public budgetary processes and financial management; administrative law; public personnel management; professional ethics; and research methods. 44.0402 Public Works Management. (New)A program of study that focuses on public works management skills and public works operation. Includes instruction in accountability, budget, conflict resolution strategies, ethics, finance, human resources, labor and employee relations, and operations management. 44.0403 Transportation and Infrastructure Planning/Studies. (New)A program that focuses on the economic, social, spatial, and environmental aspects of transportation and infrastructure planning. Includes instruction in economics, environmental analysis, geographic information systems (GIS), logistics, risk analysis, transportation economics, transportation evaluation, transportation planning, transportation policy, and urban transportation planning.See also: 52.0209 - Transportation/Mobility Management. 44.0499 Public Administration, Other. (New)Any program in public administration not listed above. 44.05 Public Policy Analysis.Instructional content for this group of programs is defined in codes 44.0501 - 44.0599. 44.0501 Public Policy Analysis, General.A program that focuses on the systematic analysis of public policy issues and decision processes. Includes instruction in the role of economic and political factors in public decision-making and policy formulation, microeconomic analysis of policy issues, resource allocation and decision modeling, cost/benefit analysis, statistical methods, and applications to specific public policy topics.Examples: Public Policy Analysis 44.0502 Education Policy Analysis.A program that focuses on the systematic analysis of public policy issues related to education and educational systems at the local, state, national, and international levels. Includes instruction in social and cultural issues in education, contemporary educational policies, history of education, economics of education, international and comparative education, education and social change, educational research and evaluation methods, and applications to specific public policy topics. 44.0503 Health Policy Analysis.A program that focuses on the systematic analysis of public policy issues related to domestic and international health and health care systems. Includes instruction in contemporary health issues and policies, politics and economics of health care delivery, epidemiology, public health, comparative and global health, medical law and ethics, statistical methods, and applications to specific public policy topics.See also: 51.2201 - Public Health, General. 44.0504 International Policy Analysis.A program that focuses on the systematic analysis of public policy issues related to relationships among nations and among governments and non-governmental entities. Includes instruction in international politics, governance, financial policy, and security affairs; globalization; economic and social policies of developing nations; and applications to specific public policy topics such as labor and employment, immigration, and human rights.See also: 51.2210 - International Public Health/International Health. 44.0580 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 44.0599 Public Policy Analysis, Other.Any instructional program in public policy analysis not listed above. 44.07 Social Work.Instructional content for this group of programs is defined in codes 44.0701 - 44.0799. 44.0701 Social Work.A program that prepares individuals for the professional practice of social welfare administration and counseling, and that focus on the study of organized means of providing basic support services for vulnerable individuals and groups. Includes instruction in social welfare policy; case work planning; social counseling and intervention strategies; administrative procedures and regulations; and specific applications in areas such as child welfare and family services, probation, employment services, and disability counseling.See also: 51.1503 - Clinical/Medical Social Work. 44.0702 Youth Services/Administration.A program that prepares individuals to plan, manage, and implement social services for children, youth, and families. Includes instruction in child development and psychology, adolescence, family studies, social work, social services administration, juvenile and family law, program and facilities planning, youth leadership, counseling, probation, casework, applicable procedures and regulations, and professional standards and ethics. 44.0703 Forensic Social Work. (New)A program that prepares individuals to serve as social workers in correctional facilities, mental health hospitals, the justice system, substance abuse treatment programs, and victim assistance. Includes instruction in forensic social work, criminal justice administration, domestic violence, ethics, juvenile justice systems, mental illness and crime, program evaluation, and research methods. 44.0799 Social Work, Other.Any program providing instruction in social work and related services not listed above.See also: 51.1503 - Clinical/Medical Social Work. 44.99 Public Administration and Social Service Professions, Other.Instructional content is defined in code 44.9999. 44.9999 Public Administration and Social Service Professions, Other.Any instructional program in public administration and services not listed above. 45 SOCIAL SCIENCESInstructional programs that focus on the systematic study of social systems, social institutions, and social behavior. 45.01 Social Sciences, General.Instructional content for this group of programs is defined in codes 45.0101 - 45.0199. 45.0101 Social Sciences, General.A program that focuses on the general study of human social behavior and social institutions using any of the methodologies common to the social sciences and/or history, or an undifferentiated program of study in the social sciences. 45.0102 Research Methodology and Quantitative Methods.A program that focuses on the design of research studies, measurement of variables, data analysis, and formulation of models. Includes instruction in experimental, quasi-experimental, and case study methods; historical research; participant observation; questionnaire design; sampling theory; and statistical methods.Examples: Methodology, Measurement, and StatisticsSee also: 13.0603 - Educational Statistics and Research Methods., 27.0501 - Statistics, General. 45.0103 Survey Research/Methodology. (New)A program that focuses on survey research design to gather data about behaviors, demographics, opinions, and data analysis to answer complex questions. Includes instruction in the analysis of survey data, cross-cultural and multi-population survey methodology, data collection methods, modes of survey analysis, quantitative analysis, questionnaire design, research design, sampling, survey error, and structural equation modeling.See also: 27.0601 - Applied Statistics, General. 45.0199 Social Sciences, Other. (New)Any program in general social sciences not listed above. 45.02 Anthropology.Instructional content for this group of programs is defined in codes 45.0201 - 45.0299. 45.0201 Anthropology, General. CIP Title or Definition ChangedA program that focuses on the systematic study of human beings, their antecedents and related primates, and their cultural behavior and institutions, in comparative perspective. Includes instruction in biological/physical anthropology, primatology, human paleontology and prehistoric archeology, hominid evolution, anthropological linguistics, ethnography, ethnology, ethnohistory, socio-cultural anthropology, psychological anthropology, research methods, and applications to areas such as medicine, forensic pathology, museum studies, and international affairs. 45.0202 Physical and Biological Anthropology.A program that focuses on the application of the biological sciences and anthropology to the study of the adaptations, variability, and the evolution of human beings and their living and fossil relatives. Includes instructions in anthropology, human and mammalian anatomy, cell biology, paleontology, human culture and behavior, neuroscience, forensic anthropology, anatomical reconstruction, comparative anatomy, and laboratory science and methods. 45.0203 Medical Anthropology.A program that focuses on biological, socio-cultural, psychological, and behavioral factors as they relate to health, illness, medical practices, and access to health care services. Includes instruction in ethno-medicine, urban health, international health, psychiatric and psychological anthropology, aging, and health and identity.See also: 51.3299 - Health Professions Education, Ethics, and Humanities, Other. 45.0204 Cultural Anthropology.A program that focuses on the study of culture and the relationship of culture to other aspects of social life. Includes instruction in cultural anthropology, anthropological theory, enthnography, linguistics, and quantitative and qualitative research methods.Examples: Cultural Anthropology Cultural and Social Anthropology Socio-Cultural Anthropology 45.0205 Forensic Anthropology. (New)A program that focuses on the application of the biological sciences and skeletal anthropology in medicolegal death investigations. Includes instruction in biological anthropology theory, crime scene investigation, forensic anthropology field methods, forensic anthropological techniques and procedures, human anatomy, methods of human identification, mortuary archaeology, osteology, and taphonomy.See also: 43.0406 - Forensic Science and Technology. 45.0299 Anthropology, Other.Any instructional program in Anthropology not listed above. 45.03 Archeology.Instructional content is defined in code 45.0301. 45.0301 Archeology.A program that focuses on the systematic study of extinct societies, and the past of living societies, via the excavation, analysis and interpretation of their artifactual, human, and associated remains. Includes instruction in archeological theory, field methods, dating methods, conservation and museum studies, cultural and physical evolution, and the study of specific selected past cultures.Examples: ArchaeometrySee also: 30.2201 - Ancient Studies/Civilization., 30.2202 - Classical, Ancient Mediterranean, and Near Eastern Studies and Archaeology., 30.4201 - Geoarcheaology. 45.04 Criminology.Instructional content is defined in code 45.0401. 45.0401 Criminology.A program that focuses on the systematic study of crime as a sociopathological phenomenon, the behavior of criminals, and the social institutions evolved to respond to crime. Includes instruction in the theory of crime, psychological and social bases of criminal behavior, social value systems and the theory of punishment, criminal law and criminal justice systems, penology, rehabilitation and recidivism, studies of specific types of crime, social attitudes and policy, and applications to specific issues in law enforcement administration and policy.See also: 43.0104 - Criminal Justice/Safety Studies. 45.05 Demography. CIP Title or Definition ChangedInstructional content for this group of programs is defined in codes 45.0501 - 45.0599. 45.0501 Demography and Population Studies.A program that focuses on the systematic study of population models and population phenomena, and related problems of social structure and behavior. Includes instruction in population growth, spatial distribution, mortality and fertility factors, migration, dynamic population modeling, population estimation and projection, mathematical and statistical analysis of population data, population policy studies, and applications to problems in economics and government planning. 45.0502 Applied Demography. (New)A program of study that focuses on the practical application of demographic methods and materials for decision-making in business, education, health, and government. Includes instruction in statistics, research methods, geographic information systems, and demographic methods and techniques. 45.0599 Demography, Other. (New)Any instructional program in demography not listed above. 45.06 Economics.Instructional content for this group of programs is defined in codes 45.0601 - 45.0699. 45.0601 Economics, General.A general program that focuses on the systematic study of the production, conservation and allocation of resources in conditions of scarcity, together with the organizational frameworks related to these processes. Includes instruction in economic theory, micro- and macroeconomics, comparative economic systems, money and banking systems, international economics, quantitative analytical methods, and applications to specific industries and public policy issues.See also: 01.0103 - Agricultural Economics., 19.0402 - Consumer Economics., 52.0601 - Business/Managerial Economics., 03.0204 - Environmental/Natural Resource Economics., 30.3901 - Economics and Computer Science., 30.4001 - Economics and Foreign Language/Literature. 45.0602 Applied Economics.A program that focuses on the application of economic principles and analytical techniques to the study of particular industries, activities, or the exploitation of particular resources. Includes instruction in economic theory; microeconomic analysis and modeling of specific industries, commodities; the economic consequences of resource allocation decisions; regulatory and consumer factors; and the technical aspects of specific subjects as they relate to economic analysis.Examples: Behavioral and Experimental EconomicsSee also: 01.0103 - Agricultural Economics., 19.0402 - Consumer Economics., 52.0601 - Business/Managerial Economics., 03.0204 - Environmental/Natural Resource Economics. 45.0603 Econometrics and Quantitative Economics.A program that focuses on the systematic study of mathematical and statistical analysis of economic phenomena and problems. Includes instruction in economic statistics, optimization theory, cost/benefit analysis, price theory, economic modeling, and economic forecasting and evaluation.Examples: Cost Analysis Economic ForecastingSee also: 30.4901 - Mathematical Economics. 45.0604 Development Economics and International Development.A program that focuses on the systematic study of the economic development process and its application to the problems of specific countries and regions. Includes instruction in economic development theory, industrialization, land reform, infrastructural development, investment policy, the role of governments and business in development, international development organizations, and the study of social, health, and environmental influences on economic development.See also: 01.0701 - International Agriculture. 45.0605 International Economics.A program that focuses on the systematic study and analysis of international commercial behavior and trade policy. Includes instruction in international trade theory, tariffs and quotas, commercial policy, trade factor flows, international finance and investment, currency regulation and trade exchange rates and markets, international trade negotiation, and international payments and accounting policy.See also: 52.0806 - International Finance., 52.1101 - International Business/Trade/Commerce., 52.1403 - International Marketing., 30.4001 - Economics and Foreign Language/Literature. 45.0699 Economics, Other.Any instructional program in economics not listed above.Examples: Game TheorySee also: 30.5101 - Philosophy, Politics, and Economics. 45.07 Geography and Cartography.Instructional content for this group of programs is defined in codes 45.0701 - 45.0799. 45.0701 Geography.A program that focuses on the systematic study of the spatial distribution and interrelationships of people, natural resources, plant and animal life. Includes instruction in historical and political geography, cultural geography, economic and physical geography, regional science, cartographic methods, remote sensing, spatial analysis, and applications to areas such as land-use planning, development studies, and analyses of specific countries, regions, and resources.Examples: Environmental Geography Physical Geography Social GeographySee also: 30.4401 - Geography and Environmental Studies. 45.0702 Geographic Information Science and Cartography.A program that focuses on the systematic study of map-making and the application of mathematical, computer, and other techniques to the analysis of large amounts of geographic data and the science of mapping geographic information. Includes instruction in cartographic theory and map projections, computer-assisted cartography, geographic information systems, map design and layout, photogrammetry, air photo interpretation, remote sensing, spatial analysis, geodesy, cartographic editing, and applications to specific industrial, commercial, research, and governmental mapping problems.Examples: Geographic Information Systems (GIS) Spatial Analysis Geomatics Remote SensingSee also: 43.0407 - Geospatial Intelligence. 45.0799 Geography, Other.Any instructional program in geography not listed above. 45.09 International Relations and National Security Studies.Instructional content for this group of programs is defined in codes 45.0901 - 45.0999. 45.0901 International Relations and Affairs.A program that focuses on the systematic study of international politics and institutions, and the conduct of diplomacy and foreign policy. Includes instruction in international relations theory, foreign policy analysis, international law and organization, the comparative study of specific countries and regions, and the theory and practice of diplomacy.Examples: International Relations International Affairs Foreign Policy and Diplomacy International Relations and Affairs-Economics International Relations and Affairs-History International Relations and Affairs-Political ScienceSee also: 30.2001 - International/Globalization Studies. 45.0902 National Security Policy Studies.A program that focuses on the theory and application of intelligence, diplomacy, military power, and related tools of statecraft to national defense policy formulation and power projection. Includes instruction in history, political theory, public policy analysis, civil-military relations, military and defense studies, homeland security, leadership, threat scenarios, regional and local issues, alliance and coalition issues, defense budgeting and economics, intelligence, and strategy.Examples: National Security Studies Strategic StudiesSee also: 28.0601 - Strategic Studies, General. 45.0999 International Relations and National Security Studies, Other.Any instructional program in international relations and national security studies not listed above. 45.10 Political Science and Government.Instructional content for this group of programs is defined in codes 45.1001 - 45.1099. 45.1001 Political Science and Government, General.A general program that focuses on the systematic study of political institutions and behavior. Includes instruction in political philosophy, political theory, comparative government and politics, political parties and interest groups, public opinion, political research methods, studies of the government and politics of specific countries, and studies of specific political institutions and processes. 45.1002 American Government and Politics (United States).A program that focuses on the systematic study of United States political institutions and behavior. Includes instruction in American political theory, political parties and interest groups, state and local governments, Constitutional law, federalism and national institutions, executive and legislative politics, judicial politics, popular attitudes and media influences, political research methods, and applications to the study of specific issues and institutions. 45.1003 Canadian Government and Politics.A program that focuses on the systematic study of Canadian political institutions and behavior. Includes instruction in British and North American political theory, political parties and interest groups, provincial and local governments, Constitutional law, federalism and national institutions, executive and legislative politics, judicial politics, popular attitudes and media influences, political research methods, and applications to the study of specific issues and institutions. 45.1004 Political Economy.A program that focuses on the interaction between politics and economics in the formation of public policy. Includes instruction in microeconomics; macroeconomics; political theory; American, comparative, and international political economy; and quantitative methods.Examples: International Political Economy Political Economy and Government 45.1099 Political Science and Government, Other.Any instructional program in political science and government not listed above.See also: 30.4601 - History and Political Science., 30.5101 - Philosophy, Politics, and Economics. 45.11 Sociology.Instructional content for this group of programs is defined in codes 45.1101 - 45.1199. 45.1101 Sociology, General. CIP Title or Definition ChangedA program that focuses on the systematic study of human social institutions and social relationships. Includes instruction in social theory, sociological research methods, social organization and structure, social stratification and hierarchies, dynamics of social change, family structures, social deviance and control, and applications to the study of specific social groups, social institutions, and social problems. 45.1102 Applied/Public Sociology. (New)A program that focuses on the application of sociological theory, methods, skills, and research to resolve particular issues in real-world settings. Includes instruction in data collection, group and organizational dynamics, participatory action research, program evaluation, sociological research methods, and sociological theory. 45.1103 Rural Sociology. (Moved to)A program that focuses on the structure and function of rural societies. Includes instruction in sociological theory, research methods, statistics, sociology of agriculture, community development, social and economic development, demography, rural poverty, gender roles in rural societies, and environmental sociology.Examples: Rural Development Studies 45.1199 Sociology, Other. (New)Any instructional program in sociology not listed above. 45.12 Urban Studies/Affairs.Instructional content is defined in code 45.1201. 45.1201 Urban Studies/Affairs.A program that focuses on the application of social science principles to the study of urban institutions and the forces influencing urban social and political life. Includes instruction in urban theory, the development and evolution of urban areas, urban sociology, principles of urban and social planning, and the politics and economics of urban government and services.Examples: Urban and Regional StudiesSee also: 04.0301 - City/Urban, Community, and Regional Planning. 45.13 Sociology and Anthropology.Instructional content is defined in code 45.1301. 45.1301 Sociology and Anthropology.A program that combines sociology and anthropology to study how society is organized, the origins and development of social institutions, social change, social organizations, race, class, gender and culture.See also: 45.0201 - Anthropology, General., 45.1101 - Sociology, General. 45.14 Rural Sociology. (Deleted)Deleted, Report under 45.1103 45.1401 Rural Sociology. (Moved from)Moved from 45.1401 to 45.1103 45.15 Geography and Anthropology. (New)Instructional content is defined in code 45.1501. 45.1501 Geography and Anthropology. (New)A program that focuses on human cultures and their adaptation to physical environments. Includes instruction in archaeology, biogeography, climatology, cultural anthropology, cultural geography, economic development, environmental geography, geomorphology, global environmental change, historical geography, mapping sciences, physical anthropology, political ecology, Quaternary studies, and urban geography. 45.99 Social Sciences, Other.Instructional content is defined in code 45.9999. 45.9999 Social Sciences, Other.Any instructional program in social sciences not listed above. 46 CONSTRUCTION TRADESInstructional programs that prepare individuals to apply technical knowledge and skills in the building, inspecting, and maintaining of structures and related properties. 46.00 Construction Trades, General.Instructional content is defined in code 46.0000. 46.0000 Construction Trades, General.A program that generally prepares individuals to apply technical knowledge and skills in the building, inspecting, and maintaining of structures and related properties. May include instruction in masonry, carpentry, electrical and power transmission installation, building/construction finishing, management, inspection and other construction-related applications.Examples: Construction Craft Worker 46.01 Mason/Masonry.Instructional content is defined in code 46.0101. 46.0101 Mason/Masonry.A program that prepares individuals to apply technical knowledge and skills in the laying and/or setting of exterior brick, concrete block, hard tile, marble and related materials, using trowels, levels, hammers, chisels, and other hand tools. Includes instruction in technical mathematics, blueprint reading, structural masonry, decorative masonry, foundations, reinforcement, mortar preparation, cutting and finishing, and applicable codes and standards.Examples: Bricklayer Brick and Stone Mason 46.02 Carpenters.Instructional content is defined in code 46.0201. 46.0201 Carpentry/Carpenter.A program that prepares individuals to apply technical knowledge and skills to lay out, cut, fabricate, erect, install, and repair wooden structures and fixtures, using hand and power tools. Includes instruction in technical mathematics, framing, construction materials and selection, job estimating, blueprint reading, foundations and roughing-in, finish carpentry techniques, and applicable codes and standards.Examples: General Carpenter 46.03 Electrical and Power Transmission Installers.Instructional content for this group of programs is defined in codes 46.0301 - 46.0399. 46.0301 Electrical and Power Transmission Installation/Installer, General.A program that generally prepares individuals to apply technical knowledge and skills to install indoor and outdoor residential, commercial, and industrial electrical systems, and associated power transmission lines. Includes instruction in electricity, safety procedures, wiring, insulation and grounding, schematic blueprint interpretation, equipment operation and maintenance, and applicable codes and standards. 46.0302 Electrician.A program that prepares individuals to apply technical knowledge and skills to install, operate, maintain, and repair electric apparatus and systems such as residential, commercial, and industrial electric-power wiring; and DC and AC motors, controls, and electrical distribution panels. Includes instruction in the principles of electronics and electrical systems, wiring, power transmission, safety, industrial and household appliances, job estimation, electrical testing and inspection, and applicable codes and standards.Examples: Construction Electrician Industrial ElectricianSee also: 15.0303 - Electrical, Electronic, and Communications Engineering Technology/Technician. 46.0303 Lineworker.A program that prepares individuals to apply technical knowledge and skills to install, operate, maintain and repair local, long-distance, and rural electric power cables and communication lines; erect and construct pole and tower lines; and install underground lines and cables. Includes instruction in cable installation and repair, fibre-optic technology, trenching, mobile equipment and crane operation, high-voltage installations, maintenance and inspection, safety, remote communications, and applicable codes and standards.Examples: Power Line Electrician Power Lineman Powerline Technician Powerline Technician (Operating) 46.0399 Electrical and Power Transmission Installers, Other.Any instructional program in electrical and power transmission installation not listed above. 46.04 Building/Construction Finishing, Management, and Inspection.Instructional content for this group of programs is defined in codes 46.0401 - 46.0499. 46.0401 Building/Property Maintenance.A program that prepares individuals to apply technical knowledge and skills to keep a building functioning, and to service a variety of structures including commercial and industrial buildings and mobile homes. Includes instruction in the basic maintenance and repair skills required to service building systems, such as air conditioning, heating, plumbing, electrical, major appliances, and other mechanical systems.Examples: Building Maintenance Property Maintenance Custodial Services 46.0402 Concrete Finishing/Concrete Finisher.A program that prepares individuals to prepare, construct, and finish buildings, components, and related structures using compound masonry mixtures of stone, gravel, sand, cement, and water. Includes instruction in site preparation, applied mathematics, mixing formulas and applications, job estimation, concrete design, finishing techniques, mold preparation, reinforcement installation, site safety, and equipment operation and maintenance. 46.0403 Building/Home/Construction Inspection/Inspector.A program that prepares individuals to apply industrial, labor, and governmental standards and laws to the oversight of construction projects and the maintenance of completed buildings and other structures. Includes instruction in construction processes and techniques, materials analysis, occupational safety and health, industry standards, building codes and specifications, blueprint interpretation, testing equipment and procedures, communication skills, accident investigation, and documentation. 46.0404 Drywall Installation/Drywaller.A program that prepares individuals to apply technical knowledge and skills to install, tape, and plaster drywall installations in interior and exterior construction jobs. Includes instruction in drywall handling and transport, cutting and mounting, taping and spackling, finishing, job analysis and estimation, site safety, tool operation and maintenance, blueprint and specification interpretation, and applicable codes and standards.Examples: Drywall, Acousting and Lathing Applicator Drywall and Acoustical Mechanic Lather (Interior Systems Mechanic) Interior Systems Installer Wall and Ceiling Installer 46.0406 Glazier.A program that prepares individuals to apply technical knowledge and skills to install and repair fixtures, sheets, windows, and skylights made of glass, plexiglass, and other transparent materials. Includes instruction in site measurement, job analysis and estimation, material cutting and trimming, window and door installation, site safety, equipment operation and maintenance, specification interpretation, and applicable codes and standards.Examples: Erector Mechanic (Glazier) Glassworker 46.0408 Painting/Painter and Wall Coverer.A program that prepares individuals to apply technical knowledge and skills to finish exterior and interior structural surfaces by applying protective or decorative coating materials, such as paint, lacquer, and wallpaper. Includes instruction in surface preparation; selecting, preparing, and applying paints and other coatings; hanging wallpaper; equipment operation and maintenance; finish selection; safety and clean-up; environmental effects on finishes; adhesion properties; and applicable codes and standards.Examples: Painting (Commercial) Painter and Decorator Painter and Decorator - Commercial and Residential 46.0410 Roofer.A program that prepares individuals to apply technical knowledge and skills to prepare, install, and maintain exterior roofing materials and roofs. Includes instruction in building materials, flashing, lag bolts, site safety, equipment operation and maintenance, layering, site preparation, basic internal structural design, finishing, waterproofing, and applicable codes and standards. 46.0411 Metal Building Assembly/Assembler.A program that prepares individuals to construct industrial, storage, and commercial metal structures using prefabricated framing and siding components. Includes instruction in sheet metal working, ironworking, assembly and fastening techniques, blueprint reading, site preparation, structural design principles, safety, and applicable codes and regulations. 46.0412 Building/Construction Site Management/Manager.A program that prepares individuals to supervise, manage, and inspect construction sites, buildings, and associated facilities. Includes instruction in site safety, personnel supervision, labor relations, diversity training, construction documentation, scheduling, resource and cost control, bid strategies, rework prevention, construction insurance and bonding, accident management and investigation, applicable law and regulations, and communication skills.See also: 52.2001 - Construction Management, General. 46.0413 Carpet, Floor, and Tile Worker.A program that prepares individuals to plan, prepare, install, and repair carpet; linoleum; vinyl; ceramic, marble, quarry, mosaic, and terazzo tiles; and wood materials on floors, walls, and stairs. Includes instruction in measuring, cutting, and installing materials; use of hand and power-operated equipment; estimation of material and labor costs; and safety training.Examples: Carpet, Flooring, and Tile Technician Floorcovering Installer Carpet, Linoleum, and Soft Tile Layer Carpet/Flooring and Hardwood Technician Tiling and Flooring Technician Tilesetter Terrazzo, Tile and Marble Setter 46.0414 Insulator.A program that prepares individuals to apply insulation materials to pipes, boilers, ducts, refrigeration systems, and related equipment to reduce the passage of heat, cold, sound, or fire. Includes instruction in insulation specifications, measuring and cutting insulating material, applying and securing insulation, installing vapor barriers, insulation system maintenance, asbestos removal and abatement, and safety training.Examples: Heat and Frost Insulator Asbestos Worker/Insulator Thermal Insulation Installer Boiler and Pipe Insulator Firestopping Insulator Sound Insulator 46.0415 Building Construction Technology/Technician. CIP Title or Definition ChangedA program that prepares individuals to apply technical knowledge and skills to residential and commercial building construction and remodeling. Includes instruction in construction equipment and safety; site preparation and layout; construction estimating; blueprint reading; building codes; framing; masonry; heating, ventilation, and air conditioning; electrical and mechanical systems; interior and exterior finishing; and plumbing.Examples: Construction Technology 46.0499 Building/Construction Finishing, Management, and Inspection, Other.Any instructional program in building/construction finishing, management, and inspection not listed above. 46.05 Plumbing and Related Water Supply Services.Instructional content for this group of programs is defined in codes 46.0502 - 46.0599. 46.0502 Pipefitting/Pipefitter and Sprinkler Fitter.A program that prepares individuals to design, install, and test industrial and commercial piping systems and automatic fire and exposure protection systems. Includes instruction in water systems, steam systems, heating and cooling systems, lubricating systems, piping materials, installation tools operation and maintenance, valve installation and repair, technical mathematics, blueprint interpretation, and applicable codes and standards.Examples: Sprinkler and Fire Protection Installer Sprinkler System Installer Steamfitter/Pipefitter 46.0503 Plumbing Technology/Plumber.A program that prepares individuals to practice as licensed plumbers by applying technical knowledge and skills to lay out, assemble, install, and maintain piping fixtures and systems for steam, natural gas, oil, hot water, heating, cooling, drainage, lubricating, sprinkling, and industrial processing systems in home and business environments. Includes instruction in source determination, water distribution, waster removal, pressure adjustment, basic physics, technical mathematics, blueprint reading, pipe installation, pumps, welding and soldering, plumbing inspection, and applicable codes and standards.Examples: Pipefitter - Plumber Specialty 46.0504 Well Drilling/Driller.A program that prepares individuals to apply technical knowledge and skills to set up, maintain, repair, and operate well drilling equipment; locate, drill, construct, and develop water, gas, and oil wells; and test and monitor wells to ensure adequate flow. Includes applications to home, business, and industrial uses.Examples: Rig Technician Derrickhand Motorhand 46.0505 Blasting/Blaster.A program that prepares individuals to apply technical knowledge and skills in using a variety of explosive materials to aid in the construction process. Includes instruction in safety procedures for storing, handling, placement, charge power determination, drilling, pounding, building demolition, preparing rocky surfaces for building foundations and demolition of explosives. 46.0599 Plumbing and Related Water Supply Services, Other.Any instructional program in plumbing and related water supply services not listed above. 46.99 Construction Trades, Other.Instructional content is defined in code 46.9999. 46.9999 Construction Trades, Other.Any instructional program in construction trades not listed above.Examples: Elevator Constructor Manlift Technician 47 MECHANIC AND REPAIR TECHNOLOGIES/TECHNICIANSInstructional programs that prepare individuals to apply technical knowledge and skills in the adjustment, maintenance, part replacement, and repair of tools, equipment, and machines. 47.00 Mechanics and Repairers, General.Instructional content is defined in code 47.0000. 47.0000 Mechanics and Repairers, General.A program that generally prepares individuals to apply technical knowledge and skills in the adjustment, maintenance, part replacement, and repair of tools, equipment, and machines. 47.01 Electrical/Electronics Maintenance and Repair Technologies/Technicians. CIP Title or Definition ChangedInstructional content for this group of programs is defined in codes 47.0101 - 47.0199. 47.0101 Electrical/Electronics Equipment Installation and Repair Technology/Technician, General. CIP Title or Definition ChangedA program that generally prepares individuals to apply technical knowledge and skills to operate, maintain, and repair electrical and electronic equipment. Includes instruction in electrical circuitry, simple gearing, linkages and lubrication of machines and appliances, and the use of testing equipment.Examples: Electric Motor System Technician Electric Motor Winder Electrical Rewind Mechanic Winder Electrician 47.0102 Business Machine Repair.A program that prepares individuals to apply technical knowledge and skills to maintain and repair a variety of office machines, such as typewriters, word processing and dictation machines, calculators, data processing equipment, duplicating machines, and mailing machines. Includes instruction in diagnostic techniques, the use of testing equipment, and the principles of mechanics, electricity, and electronics as they relate to the repair of business machines. 47.0103 Communications Systems Installation and Repair Technology/Technician. CIP Title or Definition ChangedA program that prepares individuals to apply technical knowledge and skills to assemble, install, operate, maintain, and repair one- and two- way communications equipment and systems, including television cable systems and mobile or stationary communication devices. Includes instruction in diagnostic techniques, the use of testing equipment and the principles of mechanics, electricity, and electronics as they relate to the repair of communications systems. 47.0104 Computer Installation and Repair Technology/Technician.A program that prepares individuals to apply technical knowledge and skills to assemble, install, operate, maintain, and repair computers and related instruments. Includes instruction in power supplies, number systems, memory structure, buffers and registers, microprocessor design, peripheral equipment, programming, and networking.See also: 15.1202 - Computer/Computer Systems Technology/Technician. 47.0105 Industrial Electronics Technology/Technician.A program that prepares individuals to apply technical knowledge and skills to assemble, install, operate, maintain, and repair electrical/electronic equipment used in industry and manufacturing. Includes instruction in installing, maintaining and testing various types of equipment. 47.0106 Appliance Installation and Repair Technology/Technician.A program that prepares individuals to apply technical knowledge and skills to repair, install, and service major gas, electric, and microwave consumer appliances such as stoves, refrigerators, dryers, water heaters, washers, dishwashers, and commercial units such as ice makers and coffee makers.Examples: Appliance Service Technician 47.0110 Security System Installation, Repair, and Inspection Technology/Technician.A program that prepares individuals to apply technical knowledge and skills to install and repair household, business, and industrial security alarms, sensors, video and sound recording devices, identification systems, protective barriers, and related technologies. 47.0199 Electrical/Electronics Maintenance and Repair Technologies/Technicians, Other. CIP Title or Definition ChangedAny instructional program in electrical and electronics equipment installation and repair technologies not listed above. 47.02 Heating, Air Conditioning, Ventilation and Refrigeration Maintenance Technology/Technician (HAC, HACR, HVAC, HVACR).Instructional content is defined in code 47.0201. 47.0201 Heating, Air Conditioning, Ventilation and Refrigeration Maintenance Technology/Technician.A program that prepares individuals to apply technical knowledge and skills to repair, install, service and maintain the operating condition of heating, air conditioning, and refrigeration systems. Includes instruction in diagnostic techniques, the use of testing equipment and the principles of mechanics, electricity, and electronics as they relate to the repair of heating, air conditioning and refrigeration systems.Examples: Heating and Air Conditioning Maintenance Technology/Technician (HAC) Heating, Air Conditioning, and Refrigeration Maintenance Technology/Technician (HACR) Heating, Ventilation, and Air Conditioning Maintenance Technology/Technician (HVAC) Heating, Air Conditioning, Ventilation, and Refrigeration Maintenance Technology/Technician (HVACR) Oil Burner Mechanic Refrigeration Mechanic Refrigeration and Air Conditioning Mechanic Refrigeration and Air Conditioning Systems MechanicSee also: 15.0501 - Heating, Ventilation, Air Conditioning and Refrigeration Engineering Technology/Technician. 47.03 Heavy/Industrial Equipment Maintenance Technologies/Technicians. CIP Title or Definition ChangedInstructional content for this group of programs is defined in codes 47.0302 - 47.0399. 47.0302 Heavy Equipment Maintenance Technology/Technician.A program that prepares individuals to apply technical knowledge and skills in the field maintenance and repair of heavy equipment, and in the general maintenance and overhaul of such equipment. Includes instruction in inspection, maintenance, and repair of tracks, wheels, brakes, operating controls, pneumatic and hydraulic systems, electrical circuitry, engines and in techniques of welding and brazing.Examples: Heavy Duty Equipment Mechanic Heavy Duty Equipment Technician Heavy Duty Equipment Technician (Off Road) Heavy Equipment Service Technician 47.0303 Industrial Mechanics and Maintenance Technology/Technician. CIP Title or Definition ChangedA program that prepares individuals to apply technical knowledge and skills to repair and maintain industrial machinery and equipment such as cranes, pumps, engines and motors, pneumatic tools, conveyor systems, production machinery, marine deck machinery, and steam propulsion, refinery, and pipeline-distribution systems.Examples: Industrial Plant Technician Industrial Equipment Technology Industrial Mechanic Millwright 47.0399 Heavy/Industrial Equipment Maintenance Technologies/Technicians, Other. CIP Title or Definition ChangedAny instructional program in heavy or industrial equipment maintenance technologies not listed above. 47.04 Precision Systems Maintenance and Repair Technologies/Technicians. CIP Title or Definition ChangedInstructional content for this group of programs is defined in codes 47.0402 - 47.0499. 47.0402 Gunsmithing/Gunsmith.A program that prepares individuals to apply technical knowledge and skills to make, repair, maintain, and modify firearms according to blueprints or customer specifications, using specialized hand tools and machines. 47.0403 Locksmithing and Safe Repair.A program that prepares individuals to apply technical knowledge and skills to make, repair, maintain, modify, and open locks; to make keys; to enter and change lock and safe combinations; and install and repair safes. 47.0404 Musical Instrument Fabrication and Repair.A program that prepares individuals to apply technical knowledge and skills to make, repair, maintain, and tune acoustic and electric musical instruments. Includes instruction in methods and equipment for making musical instruments, electronic instrument amplification systems, techniques of cleaning, and methods of tuning musical instruments. 47.0408 Watchmaking and Jewelrymaking.A program that prepares individuals to apply technical knowledge and skills to make repairs, and maintain timepieces, time-measuring devices, and jewelry items. Includes instruction in mechanical timekeeping systems, digital timekeeping systems, timesetting, casting, engraving, polishing, stonesetting, soldering, fine microscopic work, equipment and tool maintenance, redesign and restyling techniques, and customer relations. 47.0409 Parts and Warehousing Operations and Maintenance Technology/Technician.A program that prepares individuals to apply technical knowledge and skills to maintain inventory control, care for inventory, and make minor repairs to warehouse equipment.Examples: Automotive Partsperson Parts Technician Partsperson 47.0499 Precision Systems Maintenance and Repair Technologies/Technicians, Other. CIP Title or Definition ChangedAny instructional program in precision systems maintenance and repair not listed above.Examples: Sports Equipment Fabrication and Repair Technician 47.06 Vehicle Maintenance and Repair Technologies/Technicians. CIP Title or Definition ChangedInstructional content for this group of programs is defined in codes 47.0600 - 47.0699. 47.0600 Vehicle Maintenance and Repair Technology/Technician, General. CIP Title or Definition ChangedA program that generally prepares individuals to apply technical knowledge and skills in the adjustment, maintenance, part replacement, and repair of vehicles and mobile equipment. 47.0603 Autobody/Collision and Repair Technology/Technician.A program that prepares individuals to apply technical knowledge and skills to repair, reconstruct and finish automobile bodies, fenders, and external features. Includes instruction in structure analysis, damage repair, non-structural analysis, mechanical and electrical components, plastics and adhesives, painting and refinishing techniques, and damage analysis and estimating.Examples: Auto Body Refinisher Auto Body Technician Automotive Collision Repair Technician Automotive Painter Automotive Refinishing Technician Motor Vehicle Body Painter Motor Vehicle Body Refinisher Motor Vehicle Body Refinisher Sub-Trade Painting (autobody) 47.0604 Automobile/Automotive Mechanics Technology/Technician.A program that prepares individuals to apply technical knowledge and skills to repair, service, and maintain all types of automobiles. Includes instruction in brake systems, electrical systems, engine performance, engine repair, suspension and steering, automatic and manual transmissions and drive trains, and heating and air condition systems.Examples: Automotive Service Technician Motor Vehicle MechanicSee also: 15.0803 - Automotive Engineering Technology/Technician. 47.0605 Diesel Mechanics Technology/Technician.A program that prepares individuals to apply technical knowledge and skills to repair, service, and maintain diesel engines in vehicles such as automobiles, buses, ships, trucks, railroad locomotives, and construction equipment; as well as stationary diesel engines in electrical generators and related equipment. 47.0606 Small Engine Mechanics and Repair Technology/Technician.A program that prepares individuals to apply technical knowledge and skills to repair, service, and maintain small internal-combustion engines used on portable power equipment such as lawnmowers, chain saws, rotary tillers, and snowmobiles. 47.0607 Airframe Mechanics and Aircraft Maintenance Technology/Technician.A program that prepares individuals to apply technical knowledge and skills to repair, service, and maintain all aircraft components other than engines, propellers, avionics, and instruments. Includes instruction in layout and fabrication of sheet metal, fabric, wood, and other materials into structural members, parts, and fittings, and replacement of damaged or worn parts such as control cables and hydraulic units. 47.0608 Aircraft Powerplant Technology/Technician.A program that prepares individuals to apply technical knowledge and skills to repair, service, and maintain all types of aircraft powerplant and related systems. Instruction includes engine inspection and maintenance, lubrication and cooling, electrical and ignition systems, carburetion, fuels and fuel systems, propeller and fan assemblies. 47.0609 Avionics Maintenance Technology/Technician.A program that prepares individuals to apply technical knowledge and skills to repair, service, and maintain all types of aircraft operating, control, and electronic systems. Includes instruction in flight instrumentation, aircraft communications and homing systems, radar and other sensory systems, navigation aids, and specialized systems for various types of civilian and military aircraft.See also: 15.0801 - Aeronautical/Aerospace Engineering Technology/Technician. 47.0610 Bicycle Mechanics and Repair Technology/Technician.A program that prepares individuals to apply technical knowledge and skills to repair, service, and maintain bicycles and other human-powered vehicles. Includes instruction in lubrication, adjustments of moving parts, and wheel building. 47.0611 Motorcycle Maintenance and Repair Technology/Technician.A program that prepares individuals to apply technical knowledge and skills to repair, service, and maintain motorcycles and other similar powered vehicles. Includes instruction in lubrication and cooling systems, electrical and ignition systems, carburetion, fuel systems and adjustments of moving parts.Examples: Motorcycle Mechanic 47.0612 Vehicle Emissions Inspection and Maintenance Technology/Technician.A program that prepares individuals to apply technical knowledge and skills to test, repair, service, and maintain vehicle emission systems in accordance with relevant laws and regulations. 47.0613 Medium/Heavy Vehicle and Truck Technology/Technician.A program that prepares individuals to apply technical knowledge and skills to the specialized maintenance and repair of trucks, buses, and other commercial and industrial vehicles. Includes instruction in diesel engine mechanics, suspension and steering, brake systems, electrical and electronic systems, preventive maintenance inspections, drive trains, gasoline engine mechanics, HVAC systems, and auxiliary equipment installation and repair.Examples: Commercial Trailer Mechanic Transport Trailer Technician Truck and Coach Technician Truck and Transport Mechanic Truck-Trailer Service Technician Commercial Transport Vehicle Mechanic 47.0614 Alternative Fuel Vehicle Technology/Technician.A program that prepares individuals to apply technical knowledge and skills to the maintenance of alternative fuel vehicles and the conversion of standard vehicles to AFV status. Includes instruction in electrical vehicles, liquefied petroleum gas (LPG) vehicles, compressed natural gas (CNG) vehicles, hybrid fuel technology, electrical and electronic systems, engine performance, diagnosis and repair, and conversion/installation. 47.0615 Engine Machinist.A program that prepares individuals to apply technical knowledge and skills to the building and reconstruction of automotive and commercial vehicle engines. Includes instruction in cylinder head and block, crack repair, crankshaft inspection and repair, connecting rods and pistons, balancing, block preparation, disassembly and repair, engine assembly, gas and diesel technology, and inspection and machining. 47.0616 Marine Maintenance/Fitter and Ship Repair Technology/Technician.A program that prepares individuals to apply technical knowledge and skills to repair outboard and inboard engines; test, maintain, and repair steering devices and electrical systems; repair metal, wood, and fiberglass hulls and vessel components; fabricate and maintain sails; and repair and balance propellers and drive shafts. 47.0617 High Performance and Custom Engine Technician/Mechanic.A program that prepares individuals to apply technical knowledge and skills to increase the power of diesel and automotive engines; enhance the performance of automobiles; and repair, service, and maintain high performance vehicles. Includes instruction in adding performance accessories; modifying powertrains; tuning custom engines, suspension, and exhaust systems; and using dynamometers and other diagnostic equipment.Examples: High Performance Powertrain Technician/Mechanic Automotive High Performance Technician/Mechanic 47.0618 Recreation Vehicle (RV) Service Technician.A program that prepares individuals to apply technical knowledge and skills to build, test, inspect, repair, service and maintain recreational vehicles, systems, and interior and exterior components. Includes instruction in brake, hydraulic, and towing systems; electrical systems; propane systems and propane and electric appliances; carpentry; plumbing; welding; and structural frames.Examples: Recreation Vehicle (RV) Mechanic Recreation Vehicle (RV) Service Technician Recreation Vehicle (RV) Technician 47.0699 Vehicle Maintenance and Repair Technologies/Technicians, Other. CIP Title or Definition ChangedAny instructional program in vehicle maintenance and repair technologies not listed above. 47.07 Energy Systems Maintenance and Repair Technologies/Technicians. (New)Instructional content for this group of programs is defined in codes 47.0701 - 47.0799. 47.0701 Energy Systems Installation and Repair Technology/Technician. (New)A program that prepares individuals to apply technical knowledge and skills to assemble, install, operate, maintain, and repair energy systems. Includes instruction in installing, maintaining and testing various types of equipment.See also: 15.1701 - Energy Systems Technology/Technician. 47.0703 Solar Energy System Installation and Repair Technology/Technician. (New)A program that prepares individuals to apply technical knowledge and skills to assemble, install, operate, maintain, and repair solar energy systems. Includes instruction in installing, maintaining and testing various types of equipment.Examples: Solar Photovoltaic InstallationSee also: 15.1703 - Solar Energy Technology/Technician. 47.0704 Wind Energy System Installation and Repair Technology/Technician. (New)A program that prepares individuals to apply technical knowledge and skills to assemble, install, operate, maintain, and repair wind energy systems. Includes instruction in installing, maintaining and testing various types of equipment.See also: 15.1704 - Wind Energy Technology/Technician. 47.0705 Hydroelectric Energy System Installation and Repair Technology/Technician. (New)A program that prepares individuals to apply technical knowledge and skills to assemble, install, operate, maintain, and repair hydroelectric energy systems. Includes instruction in installing, maintaining and testing various types of equipment.See also: 15.1705 - Hydroelectric Energy Technology/Technician. 47.0706 Geothermal Energy System Installation and Repair Technology/Technician. (New)A program that prepares individuals to apply technical knowledge and skills to assemble, install, operate, maintain, and repair geothermal energy systems. Includes instruction in installing, maintaining and testing various types of equipment.See also: 15.1706 - Geothermal Energy Technology/Technician. 47.0799 Energy Systems Maintenance and Repair Technologies/Technicians, Other. (New)Any instructional program in energy systems maintenance and repair technologies not listed above.See also: 15.1799 - Energy Systems Technologies/Technicians, Other. 47.99 Mechanic and Repair Technologies/Technicians, Other.Instructional content is defined in code 47.9999. 47.9999 Mechanic and Repair Technologies/Technicians, Other.Any instructional program in mechanic and repair technologies not listed above. 48 PRECISION PRODUCTIONInstructional programs that prepare individuals to apply technical knowledge and skills to create products using techniques of precision craftsmanship or technical illustration. 48.00 Precision Production Trades, General.Instructional content is defined in code 48.0000. 48.0000 Precision Production Trades, General.A program that generally prepares individuals to apply technical knowledge and skills in creating products using precision crafting and technical illustration. 48.03 Leatherworking and Upholstery.Instructional content for this group of programs is defined in codes 48.0303 - 48.0399. 48.0303 Upholstery/Upholsterer.A program that prepares individuals to apply technical knowledge and skills to install springs, filling, padding, covering and finishing on items such as furniture, automobile seats, caskets, mattresses, and bedsprings. 48.0304 Shoe, Boot and Leather Repair.A program that prepares individuals to apply technical knowledge and skills to repair all types of footwear, including replacement and mending of worn parts, repairing orthopedic footwear, refinishing and dyeing leather, and repairing other leather goods such as handbags, belts, and luggage. 48.0399 Leatherworking and Upholstery, Other.Any instructional program in leatherworking and upholstering not listed above. 48.05 Precision Metal Working.Instructional content for this group of programs is defined in codes 48.0501 - 48.0599. 48.0501 Machine Tool Technology/Machinist.A program that prepares individuals to apply technical knowledge and skills to plan, manufacture, assemble, test, and repair parts, mechanisms, machines, and structures in which materials are cast, formed, shaped, molded, heat treated, cut, twisted, pressed, fused, stamped or worked.Examples: General Machinist Machinist 48.0503 Machine Shop Technology/Assistant.A program that prepares individuals to apply technical knowledge and skills to fabricate and modify metal parts in support of other manufacturing, repair or design activities, or as an independent business. 48.0506 Sheet Metal Technology/Sheetworking.A program that prepares individuals to apply technical knowledge and skills to form, shape, bend and fold extruded metals, including the creation of new products, using hand tools and machines such as cornice brakes, forming rolls, and squaring shears.Examples: Sheet Metal Worker 48.0507 Tool and Die Technology/Technician.A program that prepares individuals to apply technical knowledge and skills to operate machine tools used in the forming of metal components, as well as the fabrication of special tools, dies, jigs and fixtures used in cutting, working and finishing metal components.Examples: Tool and Die Maker 48.0508 Welding Technology/Welder.A program that prepares individuals to apply technical knowledge and skills to join or cut metal surfaces. Includes instruction in arc welding, resistance welding, brazing and soldering, cutting, high-energy beam welding and cutting, solid state welding, ferrous and non-ferrous materials, oxidation-reduction reactions, welding metallurgy, welding processes and heat treating, structural design, safety, and applicable codes and standards.Examples: Arc Welding Flux-Core Arc Welding Gas Metal Arc Welding Gas Tungsten Arc Welding Shielded Metal Arc Welding Structural Steel Welding Tungsten Inert Gas (TIG) Welding Pipe Welding Wire Welding Industrial Welder Welder Metal Inert Gas (MIG) WeldingSee also: 15.0614 - Welding Engineering Technology/Technician. 48.0509 Ironworking/Ironworker.A program that prepares individuals to make and install structural, ornamental, and reinforcing metal structures and supports. Includes instruction in drafting, technical mathematics, blueprint interpretation, welding, riveting, beam placement, ornamental design, structural reinforcement, crane operation, safety, and applicable codes and standards.Examples: Ironworker (Generalist) Ironworker (Reinforcing) Ironworker (Structural/Ornamental) Ironworker Reinforcing Rebar Ironworker Rodworker 48.0510 Computer Numerically Controlled (CNC) Machinist Technology/CNC Machinist.A program that prepares individuals to apply technical knowledge and skills to operate computer numerically controlled (CNC) machine tools, such as lathes, mills, precision measuring tools, and related attachments and accessories, to perform machining functions, such as cutting, drilling, shaping, and finishing products and component parts. Includes instruction in CNC terminology, setup, programming, operations, and troubleshooting; blueprint reading; machining; lathe and mill operations; technical mathematics; computer literacy; CAD/CAM systems; shop and safety practices; equipment capabilities; and regulations and laws. 48.0511 Metal Fabricator.A program that prepares individuals to apply technical knowledge and skills to further process ferrous and/or non-ferrous metal plates or shapes, and to manufacture and/or install products as interpreted through technical drawings. Includes instruction in trade tools, shop equipment, reading and interpreting blueprints, material handling, welding, thermal cutting, metallurgy, template pattern development, plate and structural fabrication, destructive and non-destructive testing, inspection, shipment preparation and fabrication installation.Examples: Metal Fabricator Steel Fabricator Steel Fabricator (Fitter) Structural Steel and Plate Fitter 48.0599 Precision Metal Working, Other.Any instructional program in precision metal work not listed above. 48.07 Woodworking.Instructional content for this group of programs is defined in codes 48.0701 - 48.0799. 48.0701 Woodworking, General.A program that generally prepares individuals to apply technical knowledge and skills to lay out and shape stock; assemble wooden articles or subassemblies; mark, bind, saw, carve, and sand wooden products; repair wooden articles, and use a variety of hand and power tools.See also: 46.0201 - Carpentry/Carpenter. 48.0702 Furniture Design and Manufacturing.A program that prepares individuals to apply technical knowledge and skills to prepare and execute furniture design projects, assemble and finish furniture articles or subassemblies, repair furniture, and use a variety of hand and power tools. 48.0703 Cabinetmaking and Millwork.A program that prepares individuals to apply technical knowledge and skills to set up, operate and repair industrial woodworking machinery, and to use such machinery to design and fabricate wooden components and complete articles.Examples: Cabinetmaker Joiner 48.0704 Wooden Boatbuilding Technology/Technician. (New)A program that prepares individuals to apply technical knowledge and skills to construct and repair traditional and modern wooden boats. Includes instruction in budgeting, drafting, fairing, lofting, joinery, planking, spars and rigging, and woodworking.See also: 15.0806 - Marine Engineering Technology/Technician. 48.0799 Woodworking, Other.Any instructional program in woodworking not listed above. 48.08 Boilermaking/Boilermaker.Instructional content is defined in code 48.0801. 48.0801 Boilermaking/Boilermaker.A program that prepares individuals to apply technical knowledge and skills to fabricate and repair steam boiler components. Includes instruction in principles of steam power, material selection, welding, riveting, sealing materials, pressure testing, pipefitting, and applicable codes and standards.Examples: Construction Boilermaker 48.99 Precision Production, Other.Instructional content is defined in code 48.9999. 48.9999 Precision Production, Other.Any instructional program in precision production not listed above.Examples: Diamond Cutting Diamond Polishing Diamond Cutting and Polishing 49 TRANSPORTATION AND MATERIALS MOVINGInstructional programs that prepare individuals to apply technical knowledge and skills to perform tasks and services that facilitate the movement of people or materials. 49.01 Air Transportation.Instructional content for this group of programs is defined in codes 49.0101 - 49.0199. 49.0101 Aeronautics/Aviation/Aerospace Science and Technology, General.A program that focuses on the general study of aviation and the aviation industry, including in-flight and ground support operations. Includes instruction in the technical, business, and general aspects of air transportation systems. 49.0102 Airline/Commercial/Professional Pilot and Flight Crew.A program that prepares individuals to apply technical knowledge and skills to the flying and/or navigation of commercial passenger and cargo, agricultural, public service, corporate and rescue fixed wing aircraft. Includes instruction in principles of aircraft design and performance, aircraft flight systems and controls, flight crew operations and procedures, radio communications, navigation procedures and systems, airways safety and traffic regulations, and governmental rules and regulations pertaining to piloting aircraft. Programs may qualify individuals to sit for the FAA commercial and airline aircrew examinations. 49.0104 Aviation/Airway Management and Operations.A program that prepares individuals to apply technical knowledge and skills to the management of aviation industry operations and services. Includes instruction in airport operations, ground traffic direction, ground support and flightline operations, passenger and cargo operations, flight safety and security operations, aviation industry regulation, and related business aspects of managing aviation enterprises. 49.0105 Air Traffic Controller.A program that prepares individuals to apply technical knowledge and skills to air-traffic management and control, usually with additional training at the FAA Flight Control Center in a cooperative education program. Includes instruction in flight control, the use of radar and electronic scanning devices, plotting of flights, radio communication, interpretation of weather conditions affecting flights, flight instrumentation used by pilots, and maintenance of flight-control center or control-tower log books. 49.0106 Airline Flight Attendant.A program that prepares individuals to apply technical knowledge and skills to the performance of a variety of personal services conducive to the safety and comfort of airline passengers during flight, including verifying tickets, explaining the use of safety equipment, providing passenger services, and responding to in-flight emergencies. 49.0108 Flight Instructor.A program that prepares individuals to apply technical knowledge and skills to the training of pilots or navigators, to prepare them to fly and/or navigate commercial passenger and cargo, agricultural, public service, corporate and rescue aircraft, and fixed or rotary wing aircraft. Includes instruction in principles of aircraft design and performance, aircraft flight systems and controls, flight crew operations and procedures, radio communications and navigation procedures and systems, airways safety and traffic regulations, and governmental rules and regulations pertaining to piloting aircraft. Programs may qualify individuals to administer the FAA commercial air crew examinations. 49.0109 Remote Aircraft Pilot. (New)A program that prepares individuals to apply technical knowledge and skills to fly unmanned aircraft system (UAS) for commercial, professional, or personal use, and qualifies individuals to sit for the FAA Remote Pilot Certificate with small unmanned aircraft systems (sUAS) rating knowledge examination. Includes instruction in principles of unmanned aircraft system design and performance; aircraft flight systems and controls; airway safety and traffic regulations; and governmental rules and regulations pertaining to piloting unmanned aircraft.Examples: Unmanned Aircraft Systems (UAS)See also: 36.0207 - Remote Aircraft Pilot (Personal). 49.0199 Air Transportation, Other.Any instructional program in aviation and air transportation services not listed above. 49.02 Ground Transportation.Instructional content for this group of programs is defined in codes 49.0202 - 49.0299. 49.0202 Construction/Heavy Equipment/Earthmoving Equipment Operation.A program that prepares individuals to apply technical knowledge and skills to operate and maintain a variety of heavy equipment, such as a crawler tractors, motor graders and scrapers, shovels, rigging devices, hoists, and jacks. Includes instruction in digging, ditching, sloping, stripping, grading, and backfiling, clearing and excavating.See also: 01.0204 - Agricultural Power Machinery Operation. 49.0205 Truck and Bus Driver/Commercial Vehicle Operator and Instructor.A program that prepares individuals to apply technical knowledge and skills to drive trucks and buses, delivery vehicles, for-hire vehicles and other commercial vehicles, or to instruct commerical vehicle operators. Includes instruction in operating gas, diesel, or electrically-powered vehicles; loading and unloading cargo or passengers; reporting delays or accidents on the road; verifying load against shipping papers; arranging transportation for personnel; and keeping records of receipts and fares. 49.0206 Mobil Crane Operator/Operation. CIP Title or Definition ChangedA program that prepares individuals to hoist and swing loads via complex rotating machinery that is driver operated. Includes instruction in crane operational characteristics, load and capacity chart usage, emergency control skills, safety, specific types of mobile cranes and loading devices, applicable codes and standards, and applications to particular types of jobs and loads.Examples: Crane and Hoist Operator Crane and Hoisting Equipment Operator Crane Operator Mobile Crane Operator 49.0207 Flagging and Traffic Control.A program that prepares individuals to control the movement of traffic through construction and maintenance zones and to protect the safety of work crews, drivers, and pedestrians. Includes instruction in flagging duties and responsibilities, the traffic control zone, flagging signals, pavement markers, freeway flagging, utility flagging, emergency response flagging, and night traffic control. 49.0208 Railroad and Railway Transportation.A program that prepares individuals to apply technical knowledge and skills to the operation of railroads and other aspects of the railway industry, including railroad and railyard service. Includes instruction in railway culture, operating skills, General Code of Operation rules, conductor service, signal systems, switching, transportation of hazardous materials, safety, and railway telecommunications systems.Examples: Railway Operations Railroad Conductor Locomotive Engineer Brakeman/Brakewoman Railway Dispatcher Yardmaster Railroad Maintenance of Way Welding 49.0209 Forklift Operation/Operator. (New)A program that prepares individuals to operate forklifts in a variety of work environments. Includes instruction in accident prevention, forklift operation, materials handling, and worksite safety. 49.0299 Ground Transportation, Other.Any instructional program in vehicle and equipment operation not listed above. 49.03 Marine Transportation.Instructional content for this group of programs is defined in codes 49.0303 - 49.0399. 49.0303 Commercial Fishing.A program that prepares individuals to apply technical knowledge and skills to function as commercial fishermen, fishing operations supervisors or in related fishing industry operations. Includes instruction in fishing vessel operation; fishing equipment operation and maintenance; equipment repair; catch identification, sorting, and storage; safety procedures; record keeping; and applicable legal regulations.See also: 03.0301 - Fishing and Fisheries Sciences and Management. 49.0304 Diver, Professional and Instructor.A program that prepares individuals to apply technical knowledge and skills to function as professional deep-water or scuba divers, diving instructors, or diving support personnel. Includes instruction in the use of diving equipment and related specialized gear; diving safety procedures; operation and maintenance of underwater life-support systems; underwater communication systems; decompression systems; underwater salvage; exploration, rescue, and photography; and installation and fitting of underwater mechanical systems and their maintenance, repair or demolition. 49.0309 Marine Science/Merchant Marine Officer.A program that prepares individuals to serve as captains, executive officers, engineers and ranking mates on commercially licensed inland, coastal and ocean-going vessels. Includes instruction in maritime traditions and law, maritime policy, economics and management of commercial marine operations, basic naval architecture and engineering, shipboard power systems engineering, crew supervision, and administrative procedures. 49.0399 Marine Transportation, Other.Any instructional program in water transportation not listed above. 49.99 Transportation and Materials Moving, Other.Instructional content is defined in code 49.9999. 49.9999 Transportation and Materials Moving, Other.Any instructional program in transportation and materials moving not listed above. 50 VISUAL AND PERFORMING ARTSInstructional programs that focus on the creation and interpretation of works and performances that use auditory, kinesthetic, and visual phenomena to express ideas and emotions in various forms, subject to aesthetic criteria. 50.01 Visual and Performing Arts, General.Instructional content for this group of programs is defined in codes 50.0101 - 50.0102. 50.0101 Visual and Performing Arts, General.A general, undifferentiated program that focuses on the visual and performing arts and that may prepare individuals in any of the visual artistic media or performing disciplines. 50.0102 Digital Arts.A general, undifferentiated program that focuses on the use of computerized digital images as the primary medium of expression in the visual and performing arts, and that may prepare individuals for a wide variety of careers using new media, including graphic design, digital animation, motion graphics, 3D visualization, game and interactive media design, music and sound design, video production, web design, photography, and other fields.Examples: Digital ArtSee also: 09.0702 - Digital Communication and Media/Multimedia. 50.02 Crafts/Craft Design, Folk Art and Artisanry.Instructional content is defined in code 50.0201. 50.0201 Crafts/Craft Design, Folk Art and Artisanry.A program that focuses on the aesthetics, techniques, and creative processes for designing and fashioning objects in one or more of the handcraft or folk art traditions, and that prepares individuals to create in any of these media. 50.03 Dance.Instructional content for this group of programs is defined in codes 50.0301 - 50.0399. 50.0301 Dance, General.A general program that prepares individuals to express ideas, feelings, and/or inner visions through the performance of one or more of the dance disciplines, including but not limited to ballet, modern, jazz, ethnic, and folk dance, and that focuses on the study and analysis of dance as a cultural phenomenon. Includes instruction in technique, choreography, Laban notation, dance history and criticism, and dance production.Examples: Dance Movement Studies 50.0302 Ballet.A program that prepares individuals to express ideals and feelings through interpretation of classical dance choreography. Includes instruction in ballet exercise, solo and ensemble dance, history of ballet, ballet choreography, Laban notation, ballet technique, and interpretations of specific styles and schools. 50.0399 Dance, Other.Any instructional program in dance not listed above. 50.04 Design and Applied Arts.Instructional content for this group of programs is defined in codes 50.0401 - 50.0499. 50.0401 Design and Visual Communications, General.A program in the applied visual arts that focuses on the general principles and techniques for effectively communicating ideas and information, and packaging products, in digital and other formats to business and consumer audiences, and that may prepare individuals in any of the applied art media. 50.0402 Commercial and Advertising Art.A program in the applied visual arts that prepares individuals to use artistic techniques to effectively communicate ideas and information to business and consumer audiences via illustrations and other forms of digital or printed media. Includes instruction in concept design, layout, paste-up, and techniques such as engraving, etching, silkscreen, lithography, offset, drawing and cartooning, painting, collage, and computer graphics.Examples: Sign Painting Commercial Art PaintingSee also: 09.0903 - Advertising. 50.0404 Industrial and Product Design.A program in the applied visual arts that prepares individuals to use artistic techniques to effectively communicate ideas and information to business and consumer audiences via the creation of effective forms, shapes, and packaging for manufactured products. Includes instruction in designing in a wide variety of plastic and digital media, prototype construction, design development and refinement, principles of cost saving, and product structure and performance criteria relevant to aesthetic design parameters. 50.0406 Commercial Photography.A program in the applied visual arts that prepares individuals to use artistic techniques to effectively communicate ideas and information to business and consumer audiences, and recording events and people, via digital, film, still and video photography. Includes instruction in specialized camera and equipment operation and maintenance, applications to commercial and industrial needs, and photography business operations. 50.0407 Fashion/Apparel Design.A program that prepares individuals to apply artistic principles and techniques to the professional design of commercial fashions, apparel, and accessories, and the management of fashion development projects. Includes instruction in apparel design; accessory design; the design of men’s’, women’s’, and children’s’ wear; flat pattern design; computer-assisted design and manufacturing; concept planning; designing in specific materials; labor and cost analysis; history of fashion; fabric art and printing; and the principles of management and operations in the fashion industry.See also: 19.0902 - Apparel and Textile Manufacture. 50.0408 Interior Design.A program in the applied visual arts that prepares individuals to apply artistic principles and techniques to the professional planning, designing, equipping, and furnishing of residential and commercial interior spaces. Includes instruction in computer applications, drafting, and graphic techniques; principles of interior lighting, acoustics, systems integration, and color coordination; furniture and furnishings; textiles and their finishing; the history of interior design and period styles; basic structural design; building codes and inspection regulations; and applications to office, hotel, factory, restaurant and housing design.See also: 04.0501 - Interior Architecture., 19.0601 - Housing and Human Environments, General. 50.0409 Graphic Design.A program that prepares individuals to apply artistic and computer techniques to the interpretation of technical and commercial concepts. Includes instruction in computer-assisted art and design, printmaking, concepts sketching, technical drawing, color theory, imaging, studio technique, still and life modeling, multimedia applications, communication skills and commercial art business operations.See also: 10.0301 - Graphic Communications, General. 50.0410 Illustration.A program that prepares individuals to use artistic techniques to develop and execute interpretations of the concepts of authors and designers to specifications. Includes instruction in book illustration, fashion illustration, map illustration, rendering, exhibit preparation, textual layout, cartooning, and the use of various artistic techniques as requested by clients.See also: 51.2703 - Medical Illustration/Medical Illustrator. 50.0411 Game and Interactive Media Design.A program that focuses on the design, development, and programming of interactive media entertainment, including computer and video games, virtual environments, Internet applications, and other interactive media. Includes instruction in theory of games, turn-based games, real-time games, visual and interactive design, story development, animation, simulation, and programming.Examples: Game Design Game DevelopmentSee also: 11.0804 - Modeling, Virtual Environments and Simulation., 11.0204 - Computer Game Programming. 50.0499 Design and Applied Arts, Other.Any instructional program in design and applied arts not listed above. 50.05 Drama/Theatre Arts and Stagecraft.Instructional content for this group of programs is defined in codes 50.0501 - 50.0599. 50.0501 Drama and Dramatics/Theatre Arts, General.A program that focuses on the general study of dramatic works and their performance. Includes instruction in major works of dramatic literature, dramatic styles and types, and the principles of organizing and producing full live or filmed productions. 50.0502 Technical Theatre/Theatre Design and Technology.A program that prepares individuals to apply artistic, technical and dramatic principles and techniques to the communication of dramatic information, ideas, moods, and feelings through technical theatre methods. Includes instruction in set design, lighting design, sound effects, theatre acoustics, scene painting, property management, costume design, and technical direction and production and use of computer applications to support these functions.Examples: Scene Painting 50.0504 Playwriting and Screenwriting.A program that focuses on the principles and techniques for communicating dramatic information, ideas, moods, and feelings through the composition of creative written works for the theatre, film, and/or television. Includes instruction in creative writing craft, scene writing, script development, stage and/or camera instructions, line and moment analysis, script reading, script editing, and the creation of full productions.Examples: Dramatic Writing Writing for Screen and Television 50.0505 Theatre Literature, History and Criticism.A program that focuses on the study of the history, literature, theory, and analysis of written plays, theatrical productions, and theatre methods and organization. Includes instruction in historical method; critical theory; literary analysis; the study of themes and archetypes in dramatic literature; the history of acting, directing, and technical theatre; and the study of specific historical and cultural styles and traditions. 50.0506 Acting.A program that prepares individuals to communicate dramatic information, ideas, moods, and feelings through the achievement of naturalistic and believable behavior in imaginary circumstances. Includes instruction in voice and acting speech, stage dialects, movement, improvisation, acting styles, theatre history, script interpretation, and actor coaching. 50.0507 Directing and Theatrical Production.A program that prepares individuals to manage the planning, design, preparation, and production of plays and other theatrical entertainment programs. Includes instruction in theatrical design, program management, dramatic production, rehearsal management, personnel management and casting, actor coaching, directing concepts and techniques, theater history, scene work, script interpretation, business management, marketing, public relations, and communications skills. 50.0509 Musical Theatre.A program that focuses on the principles and techniques for integrating theatre, music, and dance into a unified production. Includes instruction in acting, dance, voice, technical theater, musical genres, piano, and history of musical theater. 50.0510 Costume Design.A program that prepares individuals to design and select costumes for characters in theatre and the performing arts and to serve as part of a production team. Includes instruction in costume design, script analysis, theory and criticism, period styles, history of costume, stage makeup, rendering, and costume construction. 50.0511 Comedy Writing and Performance. (New)A program that focuses on the historical, cultural, and theoretical dimensions of comedy as an art form, and the writing, performance, and production of comedy. Includes instruction in comedic storytelling, comedy production, comedy writing, history of comedy, improvisation, and sketch writing.Examples: Comedic Arts Comedy Studies 50.0512 Theatre and Dance. (New)A program of study that focuses on integrating the studies of dance and theatre arts to provide perspectives in all facets of production, performance, and critical engagement. Includes instruction in acting, aesthetics, choreography, costume design, criticism, dance, improvisation, music analysis, playwriting, theatre performance history, scene design, stage lighting, and technical theatre. 50.0599 Dramatic/Theatre Arts and Stagecraft, Other.Any instructional program in dramatic/theatre arts and stagecraft not listed above.See also: 51.2315 - Drama Therapy/Therapist. 50.06 Film/Video and Photographic Arts.Instructional content for this group of programs is defined in codes 50.0601 - 50.0699. 50.0601 Film/Cinema/Media Studies. CIP Title or Definition ChangedA program in the visual arts that focuses on the study of the history, development, theory, and criticism of the film/media arts, as well as the basic principles of filmmaking and film production.Examples: Video Studies 50.0602 Cinematography and Film/Video Production.A program that prepares individuals to communicate dramatic information, ideas, moods, and feelings through the making and producing of films and videos. Includes instruction in theory of film, film technology and equipment operation, film production, film directing, film editing, cinematographic art, film audio, techniques for making specific types of films and/or videos, media technologies, computer image making, multi-media production, and the planning and management of film/video operations.Examples: Cinema Production 50.0605 Photography.A program that focuses on the principles and techniques of communicating information, ideas, moods, and feelings through the creation of images on photographic film, plates, and digital images and that may prepare individuals to be professional photographic artists. Includes instruction in camera and equipment operation and maintenance, film and plate developing, light and composition, films and printing media, color and special effects, photographic art, photographic history, use of computer applications to record or enhance images and applications to the photography of various subjects.See also: 09.0404 - Photojournalism. 50.0607 Documentary Production.A program that prepares individuals to produce nonfiction film and video. Includes instruction in film and video writing, directing, and production; film studies; history of the documentary; research techniques; videography; editing; and business aspects of film production. 50.0699 Film/Video and Photographic Arts, Other.Any instructional program in film/video and photographic arts not listed above. 50.07 Fine and Studio Arts.Instructional content for this group of programs is defined in codes 50.0701 - 50.0799. 50.0701 Art/Art Studies, General.A general program that focuses on the introductory study and appreciation of the visual arts. Includes instruction in art, photography, and other visual communications media. 50.0702 Fine/Studio Arts, General.A program that prepares individuals to generally function as creative artists in the visual and plastic media. Includes instruction in the traditional fine arts media (drawing, painting, sculpture, printmaking, CAD/CAM) and/or modern media (ceramics, textiles, intermedia, photography, digital images), theory of art, color theory, composition and perspective, anatomy, the techniques and procedures for maintaining equipment and managing a studio, and art portfolio marketing. 50.0703 Art History, Criticism and Conservation.A program that focuses on the study of the historical development of art as social and intellectual phenomenon, the analysis of works of art, and art conservation. Includes instruction in the theory of art, art history research methods, connoisseurship, the preservation and conservation of works of art, and the study of specific periods, cultures, styles, and themes. 50.0705 Drawing.A program that prepares individuals creatively and technically to express emotions, ideas, or inner visions through representation by lines made on a surface. Includes instruction in eye-hand coordination; line, value, shape, and perspective; figure and still life drawing; the use of media such as pen and ink, pencil, charcoal, pastel, and brush; and personal style development. 50.0706 Intermedia/Multimedia.A program that prepares individuals creatively and technically to express emotions, ideas, or inner visions in either two or three dimensions, through simultaneous use of a variety of materials and media. 50.0708 Painting.A program that prepares individuals creatively and technically to express emotions, ideas, or inner visions by the application of paints and related chemical color substances to canvases or other materials. Includes instruction in color and color mixing, surface preparation, composition, oil and acrylic media, watercolor media, painting techniques, and personal style development.Examples: Painting (Fine Art) 50.0709 Sculpture.A program that prepares individuals creatively and technically to express emotions, ideas, or inner visions by creating three-dimensional art works. Includes instruction in the analysis of form in space; round and relief concepts; sculptural composition; modern and experimental methods; different media such as clay, plaster, wood, stone, and metal; techniques such as carving, molding, welding, casting, and modeling; and personal style development. 50.0710 Printmaking.A program that prepares individuals creatively and technically to express emotions, ideas, or inner visions by rendering art concepts onto surfaces and transferring images, via ink or dyes, onto paper or fabric. Includes instruction in monochrome and color printing; tonality; chemistry; equipment set-up and maintenance; techniques such as serigraphy, lithography, intaglio, woodcut, block, stencil, relief, etching, and composite; and personal style development. 50.0711 Ceramic Arts and Ceramics.A program that prepares individuals creatively and technically to express emotions, ideas, or inner visions by producing art works out of clay and similar materials. Includes instruction in handbuilt and wheelthrown techniques; molding; slips and glazes; trimming and decorating; firing and kiln operation; oxidation; mixed media; ceramic murals; and personal style development.See also: 14.0601 - Ceramic Sciences and Engineering. 50.0712 Fiber, Textile and Weaving Arts.A program that prepares individuals creatively and technically to express emotions, ideas, or inner visions by constructing art works from woven or non-woven fabrics and fibrous materials. Includes instruction in weaving techniques and loom operation; non-woven techniques such as knitting, coiling, netting, and crocheting; quilting; dyeing and pigmentation; printing and other finishing techniques; pattern design; tapestry; and personal style development.See also: 19.0902 - Apparel and Textile Manufacture. 50.0713 Jewelry Arts. CIP Title or Definition ChangedA program that prepares individuals creatively and technically to express emotions, ideas, or inner visions by fashioning jewelry from gems, other stones, and precious metals. Includes instruction in design concepts, electroforming, enameling, gemology, lapidary technique and art, metal and non-metal casting and molding, metal coloring, metalsmithing and finishing, personal style development, photo etching, and stone cutting and polishing. 50.0714 Metal Arts. (New)A program that focuses on the development of individual artistic expression and technical skills necessary for fabricating refined metal works. Includes instruction in aesthetics, anodizing, art history, casting, design, electroforming, enameling, metalsmithing, sculpture, two and three-dimensional design, wax carving, and welding. 50.0799 Fine Arts and Art Studies, Other.Any instructional program in fine arts and art studies not listed above.Examples: Glass Making 50.09 Music.Instructional content for this group of programs is defined in codes 50.0901 - 50.0999. 50.0901 Music, General.A general program that focuses on the introductory study and appreciation of music and the performing arts. Includes instruction in music, dance, and other performing arts media. 50.0902 Music History, Literature, and Theory.A program that focuses on the study of the historical evolution of music as a social and intellectual phenomenon, the development of musical instruments and techniques, and the analysis and criticism of musical literature. Includes instruction in music history research methods, aesthetic analysis of musical compositions, history of musical writing and notation, the development of musical instruments, the development of music theory, and the study of specific periods, cultural traditions, styles, and themes. 50.0903 Music Performance, General.A program that generally prepares individuals to master musical instruments and performing art as solo and/or ensemble performers. Includes instruction on one or more specific instruments from various instrumental groupings. 50.0904 Music Theory and Composition.A program that focuses on the study of the principles of sound manipulation as applied to the creation of music, and the techniques of creating and arranging music. Includes instruction in aural theory, melody, counterpoint, complex harmony, modulation, chromatics, improvisation, progressions, musical writing, instrumentation, orchestration, electronic and computer applications, studies of specific musical styles, and development of original creative ability. 50.0905 Musicology and Ethnomusicology.A program that focuses on the systematic study of the forms and methods of music art, and the functions of music, in Western and non-Western societies and cultures. Includes instruction in music theory, musicological research methods, and studies of specific cultural styles such as jazz, folk music, rock, ethnic musical traditions, and the music of non-Western cultures. 50.0906 Conducting.A program that prepares individuals to master the art of leading bands, choirs, orchestras and other ensembles in performance, and related music leadership. Includes instruction in score analysis and arranging, rehearsal and performance leadership, music coaching, arrangement and performance planning, ensemble operations management, and applications to specific school or professional ensembles. 50.0907 Keyboard Instruments.A program that prepares individuals to master the piano, organ, or related keyboard instruments and performing art as solo, ensemble, and/or accompanist performers. Includes instruction in piano and keyboard pedagogy, ensemble playing, accompanying, service playing, repertoire, keyboard and pedal skills, recital, and personal style development.Examples: Piano Organ Harpsichord 50.0908 Voice and Opera.A program that prepares individuals to master the human voice and performing art as solo and/or ensemble performers in concert, choir, opera, or other forms of singing. Includes instruction in voice pedagogy, diction, vocal physiology and exercise, expressive movement, repertoire, recital, and personal style development. 50.0910 Jazz/Jazz Studies.A program that prepares individuals to study and master the performance and composition of Jazz. Includes instruction in the history of Jazz and related musical styles such as the Blues, Jazz composition and theory, improvisation, Jazz instrument and ensemble performance, and related topics. 50.0911 Stringed Instruments.A program that prepares individual to master a stringed instrument and performing arts as solo, ensemble and/or accompanist performers. Includes instruction in playing and personal style development.Examples: Violin Viola Double Bass Guitar Banjo Harp 50.0912 Music Pedagogy.A program that prepares individuals to provide musical instruction and tutoring to clients in private and institutional settings. Includes instruction in music theory, music composition, mastery of one or more instruments, familiarity with various musical genres and styles, principles of music education, and client communications. 50.0913 Music Technology.A program that focuses on the creative aspects of the blending of music and technology; and that prepares individuals to apply technical knowledge and skills to the composition, recording, synthesis, and performance of music; audio-visual production; scoring for film and multimedia; and software and multimedia development. Includes instruction in music theory, music history, composition, acoustics, recording technology, computer composition, electronic music synthesis, technology-based performance, 3D sound and spatial audio, and music business and law.See also: 10.0203 - Recording Arts Technology/Technician. 50.0914 Brass Instruments.A program that prepares individuals to master a brass instrument and performing art as solo, ensemble, and/or accompanist performers. Includes instruction in playing and personal style development.Examples: Trumpet Horn Trombone Euphonium/Baritone Tuba 50.0915 Woodwind Instruments.A program that prepares individuals to master a woodwind instrument and performing art as solo, ensemble, and/or accompanist performers. Includes instruction in playing and personal style development.Examples: Flute Oboe Clarinet Bassoon Saxophone 50.0916 Percussion Instruments.A program that prepares individuals to master percussion instruments and performing art for a variety of musical settings, including orchestral, solo, chamber, commercial, or nontraditional. Includes instruction in playing and personal style development.Examples: Bass Drum Snare Drum Timpani Vibraphone 50.0917 Sound Arts. (New)A program that focuses on sound as a form of cultural expression, and its relationship to other disciplines such as computer programming, performance, and video. Includes instruction in acoustics; arranging, composing, and editing music; music theory; musicology; orchestration and scoring; and sound design.See also: 10.0203 - Recording Arts Technology/Technician. 50.0999 Music, Other.Any instructional program in music not listed above. 50.10 Arts, Entertainment, and Media Management.Instructional content for this group of programs is defined in codes 50.1001 - 50.1099. 50.1001 Arts, Entertainment, and Media Management, General.A program that prepares individuals to organize and manage various aspects of the visual arts, performing arts, and entertainment media industries. Includes instruction in business and financial management, marketing and fund-raising, labor relations for the arts, event promotion and management, product and artist management, and applicable law.Examples: Entertainment Business Performing Arts Administration 50.1002 Fine and Studio Arts Management.A program that prepares individuals to organize and manage fine and studio art organizations, operations, and facilities. Includes instruction in business and financial management; marketing and fundraising; personnel management and labor relations; event promotion and management; public relations and arts advocacy; arts law; and applications to specific arts activities such as galleries, museums, studios, foundations, and community organizations.Examples: Visual Arts ManagementSee also: 30.1401 - Museology/Museum Studies. 50.1003 Music Management.A program that prepares individuals to organize and manage music organizations, operations, facilities, and personnel. Includes instruction in business and financial management; marketing and fundraising; personnel management and labor relations; event promotion and management; music products merchandising; artist agency and promotion; music law; and applications to specific activities such as managing theaters, recording studios and companies, bands and other ensembles, individual artists, and music organizations.Examples: Music Merchandising 50.1004 Theatre/Theatre Arts Management.A program that prepares individuals to apply business management principles to the management of theatres and production corporations. Includes instruction in theatrical production, theatre design and planning, fund-raising and promotion, investment strategies, human resources management, theatre operations management, marketing, public relations, financial management and insurance, and applicable laws and regulations. 50.1099 Arts, Entertainment, and Media Management, Other.Any instructional program in arts, entertainment, and media management not listed above. 50.11 Community/Environmental/Socially-Engaged Art. (New)Instructional content is defined in code 50.1101. 50.1101 Community/Environmental/Socially-Engaged Art. (New)A program that focuses on using the arts to promote activism, civic dialog, community development, ecological and environmental awareness, or social justice. Includes instruction in community organizing, cultural criticism, social practice, studio art, and visual and performing arts.Examples: Community Arts Practice Socially-Engaged Practice in Design and the Arts Socially-Engaged Art Socially-Engaged Studio Art Art and Social Practice 50.99 Visual and Performing Arts, Other.Instructional content is defined in code 50.9999. 50.9999 Visual and Performing Arts, Other.Any instructional program in visual and performing arts not listed above. 51 HEALTH PROFESSIONS AND RELATED PROGRAMSInstructional programs that prepare individuals to practice as licensed professionals and assistants in the health care professions and related clinical sciences and administrative and support services. 51.00 Health Services/Allied Health/Health Sciences, General.Instructional content for this group of programs is defined in codes 51.0000 - 51.0001. 51.0000 Health Services/Allied Health/Health Sciences, General.A general, introductory, undifferentiated, or joint program in health services occupations that prepares individuals for either entry into specialized training programs or for a variety of concentrations in the allied health area. Includes instruction in the basic sciences, research and clinical procedures, and aspects of the subject matter related to various health occupations. 51.0001 Health and Wellness, General.A program of study that prepares individuals to assume roles as health/wellness professionals in private business and industry, community organizations, and health care settings. Includes instruction in personal health, community health and welfare, nutrition, epidemiology, disease prevention, fitness and exercise, and health behaviors.Examples: Health and Wellness Health Promotion and Wellness Wellness, Health Promotion and Injury PreventionSee also: 31.0501 - Sports, Kinesiology, and Physical Education/Fitness, General. 51.01 Chiropractic.Instructional content is defined in code 51.0101. 51.0101 Chiropractic.A program that prepares individuals for the independent professional practice of chiropractic, a health care and healing system based on the application of non-invasive treatments and spinal adjustments to alleviate health problems caused by vertebral misalignments affecting bodily function as derived from the philosophy of Daniel Palmer. Includes instruction in the basic medical sciences, chiropractic theory and science, postural and spinal analysis, diagnostic radiology and ultrasound, adjustment technique, patient counseling, professional standards and ethics, and practice management.Examples: Chiropractic (DC) 51.02 Communication Disorders Sciences and Services.Instructional content for this group of programs is defined in codes 51.0201 - 51.0299. 51.0201 Communication Sciences and Disorders, General.A program that focuses on the application of biomedical, psychological, and physical principles to the study of the scientific bases, development, and treatment of speech, language, hearing, and cognitive communication problems caused by disease, injury, or disability. Includes instruction in language science, hearing science, speech and voice science, biology of communication, behavioral linguistics, psychology, and applications to the development of diagnostic and rehabilitative strategies and technologies.Examples: Communication Disorders 51.0202 Audiology/Audiologist.A program that prepares individuals to diagnose and treat hearing loss and other disorders involving the ear, advise patients on means to use their remaining hearing, and select and fit hearing aids and other devices. Includes instruction in acoustics, anatomy and physiology of hearing, hearing measurement, auditory pathology, middle and inner ear analysis, rehabilitation therapies and assistive technologies, and pediatric and other special applications.Examples: Audiology and Hearing Sciences 51.0203 Speech-Language Pathology/Pathologist.A program that prepares individuals to evaluate the speaking, language interpretation, and related physiological and cognitive capabilities of children and/or adults and develop treatment and rehabilitative solutions in consultation with clinicians and educators. Includes instruction in the anatomy and physiology of speech and hearing, biomechanics of swallowing and vocal articulation, communications disorders, psychology of auditory function and cognitive communication, language assessment and diagnostic techniques, and rehabilitative and management therapies.Examples: Speech Pathology Speech-Language PathologySee also: 51.0816 - Speech-Language Pathology Assistant. 51.0204 Audiology/Audiologist and Speech-Language Pathology/Pathologist.An integrated program that prepares individuals to work as both audiologists and speech-language pathologists. Includes instruction in a variety of communication disorder studies, audiology, speech pathology, language acquisition, and the design and implementation of comprehensive therapeutic and rehabilitative solutions to communications problems.Examples: Audiology and Speech Pathology Audiology and Speech-Language PathologySee also: 51.0816 - Speech-Language Pathology Assistant. 51.0299 Communication Disorders Sciences and Services, Other.Any instructional program in communications disorders sciences and services not listed above.Examples: Child Speech-Language Disorders Pre-Speech Language Pathology and AudiologySee also: 51.0816 - Speech-Language Pathology Assistant., 51.0918 - Hearing Instrument Specialist., 05.0211 - Deaf Studies., 16.1601 - American Sign Language (ASL). 51.04 Dentistry.Instructional content is defined in code 51.0401. 51.0401 Dentistry.A program that prepares individuals for the independent professional practice of dentistry/dental medicine, encompassing the evaluation, diagnosis, prevention, and treatment of diseases, disorders, and conditions of the oral cavity, maxillofacial area, and adjacent structures and their impact on the human body and health. Includes instruction in the basic biomedical sciences, occlusion, dental health and prevention, oral pathology, cariology, operative dentistry, oral radiology, principles of the various dental specialties, pain management, oral medicine, clinic and health care management, patient counseling, and professional standards and ethics.Examples: Dentistry (DDS, DMD) 51.05 Advanced/Graduate Dentistry and Oral Sciences.Instructional content for this group of programs is defined in codes 51.0501 - 51.0599. 51.0501 Dental Clinical Sciences, General.An integrated or undifferentiated program that generally prepares dentists in one or more of the oral sciences and advanced/graduate dentistry specialties.Examples: Dental Clinical Sciences, General (MS) Dental Clinical Sciences, General (PhD) 51.0502 Advanced General Dentistry.A program that focuses on the advanced study of dental clinical techniques and dental practice issues. Includes instruction in subjects such as the history of dentistry, advanced dental practice management, dental ethics and jurisprudence, social and behavioral science studies of dentistry, advanced restorative dentistry, oral medicine, oral radiology, advanced clinical procedures and technology, and others.Examples: Advanced General Dentistry (Cert.) Advanced General Dentistry (MS) Advanced General Dentistry (PhD) 51.0503 Oral Biology and Oral and Maxillofacial Pathology.A program that focuses on the scientific study of the growth, development, diseases, healing properties, and neurological components of the oral cavity, related tissues and organs, and associated craniofacial areas. Includes instruction in oral microbiology microanatomy, craniofacial pain, humoral aspects of disease, etiology and histology of caries, plaque ecology, wound healing, oral disease epidemiology, oral manifestations of systemic disease, lesions, normal and pathologic physiology, and related molecular and physical studies.Examples: Oral Biology and Oral and Maxillofacial Pathology (MS) Oral Biology and Oral and Maxillofacial Pathology (PhD) Oral and Craniofacial Biology Craniofacial Biology Oral Biology and Oral Pathology 51.0504 Dental Public Health and Education.A program that focuses on the scientific study of dental disease prevention and control, community dental health promotion, and prepares dentists and public health professionals to function as dental health specialists. Includes instruction in preventive dentistry, the relationship of oral disease to health and quality of life, patient and practitioner behavior, dental epidemiology, nutrition and dental health, dental care policy and delivery, oral health program planning and administration, biostatistics, and research methods.Examples: Dental Public Health and Education (Cert.) Dental Public Health and Education (MS, MPH) Dental Public Health and Education (PhD, DPH) 51.0505 Dental Materials.A program that focuses on the scientific study of the biomaterials and inert and active compounds used in dental procedures; the development of dental materials; and their effects on the living tissues of the oral cavity and systemic bodily health. Includes instruction in materials science, dental bioengineering, biocompatibility of materials, physics and mechanics of dental materials, elastic and plastic deformation, surface bonding, and applications to fixed and removable prostheses and restorative procedures.Examples: Dental Materials (MS) Dental Materials (PhD) 51.0506 Endodontics/Endodontology.A program that focuses on the advanced study of the morphology, physiology, and pathology of human dental pulp and periradicular tissues, and prepares dentists to diagnose and treat internal diseases and injuries of teeth. Includes instruction in theory and practice of endodontics; pulpal disease; relationship of endodontic conditions to other dental/oral health issues; endodontic operative technique; and patient care and management.Examples: Endodontics/Endodontology (Cert.) Endodontics/Endodontology (MS) Endodontics/Endodontology (PhD) 51.0507 Oral/Maxillofacial Surgery.A program that focuses on the advanced study of the diagnosis and intrusive and adjunctive treatment of diseases, injuries, and defects of the oral and maxillofacial regions, including functional and aesthetic aspects. Includes instruction in pharmacology, analgesia, anesthesia, anxiety control, surgical procedures and techniques, surgical instrumentation, exodontia, oral diseases and malfunctions, soft and hard tissue pathology, dentoalveolar surgery, infection management, and prosthetic implantation.Examples: Oral/Maxillofacial Surgery (Cert.) Oral/Maxillofacial Surgery (MS) Oral/Maxillofacial Surgery (PhD) 51.0508 Orthodontics/Orthodontology.A program that focuses on the advanced study of the guidance of growing dental structures and the correction of misalignments, disproportionate growth, and traumas caused by genetics, disease, injuries, and dysfunctional behaviors. Includes instruction in craniofacial growth and development, malocclusion, design and fabrication of orthodontic appliances, craniofacial alignment, physiological function and analysis, cephalometrics, model analysis, space analysis, surgical orthodontics, cleft lip and palate, and treatment planning and management.Examples: Orthodontics/Orthodontology (Cert.) Orthodontics/Orthodontology (MS) Orthodontics/Orthodontology (PhD) Orthodontics and Dentofacial Orthopedics 51.0509 Pediatric Dentistry/Pedodontics.A program that focuses on the advanced study of the therapeutic and preventive care of the oral health of children from birth through adolescence, and the care of adults with physical, mental, and emotional disabilities. Includes instruction in developmental oral biology, preventive medicine, diet therapy and counseling, patient management, pediatric restorative procedures, pulp therapy, trauma management, anesthesia, treatment planning, and the treatment of handicapped patients.Examples: Pediatric Dentistry/Pedodontics (Cert.) Pediatric Dentistry/Pedodontics (MS) Pediatric Dentistry/Pedodontics (PhD) 51.0510 Periodontics/Periodontology.A program that focuses on the advanced study of the etiology and treatment of diseases of the gingivae (gum tissue) and supporting bone, nerve, and vascular structures. Includes instruction in periodontium pathology, diagnostic procedures and equipment, occulsion, nutritional aspects of periodontology, surgical treatments, and patient care and management.Examples: Periodontics/Periodontology (Cert.) Periodontics/Periodontology (MS) Periodontics/Periodontology (PhD) 51.0511 Prosthodontics/Prosthodontology.A program that focuses on the advanced study of the restoration and maintenance of teeth, oral function, and aesthetic form through the use of single or compound materials, structures, and artificial devices. Includes instruction in implant dentistry, surgical procedures, denture design and fabrication, fixed and removable prosthodontics, restorative techniques, occlusion therapy and devices, geriatric dentistry, cosmetic dentistry, and tempromandibular joint dysfunction.Examples: Prosthodontics/Prosthodontology (Cert.) Prosthodontics/Prosthodontology (MS) Prosthodontics/Prosthodontology (PhD) 51.0512 Digital Dentistry. (New)A program that focuses on the use of digital and CAD/CAM technology in dental treatment. Includes instruction in digital diagnostic and treatment planning techniques, CAD/CAM restoration, and patient management. 51.0513 Geriatric Dentistry. (New)A program that focuses on the advanced study of the therapeutic and preventive care of the oral health of geriatric patients. Includes instruction in aging, preventive medicine, diet therapy and counseling, geriatric restorative procedures, pulp therapy, trauma management, anesthesia, treatment planning, and patient management. 51.0514 Implantology/Implant Dentistry. (New)A program that focuses on dental implantology. Includes instruction in diagnosis and treatment planning, surgical protocols, implant placement, sinus grafting, guided bone regeneration, soft tissue grafting, prosthetic protocols, prosthesis design, and aftercare. 51.0599 Advanced/Graduate Dentistry and Oral Sciences, Other.Any instructional program in advanced/graduate dentistry and oral sciences not listed above. 51.06 Dental Support Services and Allied Professions.Instructional content for this group of programs is defined in codes 51.0601 - 51.0699. 51.0601 Dental Assisting/Assistant.A program that prepares individuals to provide patient care, take dental radiographs (x-ray photographs), prepare patients and equipment for dental procedures, and discharge office administrative functions under the supervision of dentists and dental hygienists. Includes instruction in medical record-keeping, general office duties, reception and patient intake, scheduling, equipment maintenance and sterilization, basic radiography, pre- and post-operative patient care and instruction, chairside assisting, taking tooth and mouth impressions, and supervised practice. 51.0602 Dental Hygiene/Hygienist.A program that prepares individuals to clean teeth and apply preventive materials, provide oral health education and treatment counseling to patients, identify oral pathologies and injuries, and manage dental hygiene practices. Includes instruction in dental anatomy, microbiology, and pathology; dental hygiene theory and techniques; cleaning equipment operation and maintenance; dental materials; radiology; patient education and counseling; office management; supervised clinical training; and professional standards. 51.0603 Dental Laboratory Technology/Technician.A program that prepares individuals, under the supervision of dentists, to design and construct dental prostheses such as caps, crowns, bridges, dentures, splints, and orthodontic appliances. Includes instruction in dental anatomy, dental materials, ceramics technology, impressions, complete dentures, partial dentures, orthodontics, crowns and bridges, sculpture, bonding and assembly techniques, and equipment operation. 51.0699 Dental Services and Allied Professions, Other.Any instructional program in dental services and allied professions not listed above. 51.07 Health and Medical Administrative Services.Instructional content for this group of programs is defined in codes 51.0701 - 51.0799. 51.0701 Health/Health Care Administration/Management.A program that prepares individuals to develop, plan, and manage health care operations and services within health care facilities and across health care systems. Includes instruction in planning, business management, financial management, public relations, human resources management, health care systems operation and management, health care resource allocation and policy making, health law and regulations, and applications to specific types of health care services. 51.0702 Hospital and Health Care Facilities Administration/Management.A program that prepares individuals to apply managerial principles to the administration of hospitals, clinics, nursing homes, and other health care facilities. Includes instruction in facilities planning, building and operations management, business management, financial management and insurance, fund-raising and marketing, public relations, human resources management and labor relations, health care facilities operations, principles of health care delivery, and applicable law and regulations. 51.0703 Health Unit Coordinator/Ward Clerk.A program that prepares individuals, under the supervision of nurses or ward supervisors, to perform routine administrative and reception duties in a patient care unit within a hospital or other health care facility. Includes instruction in receiving and directing visitors, transcribing medical and nursing orders, preparing requisition forms, scheduling patient appointments and procedures, monitoring patients and personnel, and interpersonal skills. 51.0704 Health Unit Manager/Ward Supervisor.A program that prepares individuals, under the supervision of nursing or medical service administrators, to supervise and coordinate the operations of one or more patient care units in hospitals or other health care facilities. Includes instruction in planning and initiating administrative procedures, personnel supervision, interpersonal skills, general and/or specialized health care operations and procedures, and consultation with other medical, nursing, and administrative team members. 51.0705 Medical Office Management/Administration.A program that prepares individuals to manage the specialized business functions of a medical or clinical office. Includes instruction in business office operations, business and financial record-keeping, personnel supervision, medical and health care policy administration, conference planning, scheduling and coordination, public relations, and applicable law and regulations. 51.0706 Health Information/Medical Records Administration/Administrator.A program that prepares individuals to plan, design, and manage systems, processes, and facilities used to collect, store, secure, retrieve, analyze, and transmit medical records and other health information used by clinical professionals and health care organizations. Includes instruction in the principles and basic content of the biomedical and clinical sciences, information technology and applications, data and database management, clinical research methodologies, health information resources and systems, office management, legal requirements, and professional standards. 51.0707 Health Information/Medical Records Technology/Technician.A program that prepares individuals, under the supervision of health information administrators and other professionals, to construct medical records and clinical databases, perform manipulations on retrieved data, control the security and quality of records, and supervise data entry and technical maintenance personnel. Includes instruction in clinical and biomedical science data and information requirements, database management, data coding and validation, information security, quality control, health information content and structure, medical business procedures, and legal requirements. 51.0708 Medical Transcription/Transcriptionist.A program that prepares individuals to execute verbatim medical conference minutes, medical reports, and medical orders. Includes instruction in dictation and simultaneous recording, analysis of notes and visual evidence, medical terminology, data processing applications and skills, formal medical report and correspondence formats, professional standards, and applicable law and regulations.See also: 22.0303 - Court Reporting and Captioning/Court Reporter., 10.0204 - Voice Writing Technology/Technician. 51.0709 Medical Office Computer Specialist/Assistant.A program that prepares individuals to apply computer programming, troubleshooting, and information technology skills to the installation, maintenance, and upgrade of standard, customized, or proprietary medical software and associated hardware. Includes instruction in computer programming, systems analysis, networking, telecommunications, medical records and informatics software applications, information technology, systems administration, computer security, and applicable regulations and certifications or licenses. 51.0710 Medical Office Assistant/Specialist.A program that prepares individuals, under the supervision of office managers and other professionals, to perform routine administrative duties in a medical, clinical, or health care facility/system office environment. Includes instruction in general office skills, data processing, office equipment operation, principles of medical record-keeping and business regulations, medical/clinical office procedures, and communications skills. 51.0711 Medical/Health Management and Clinical Assistant/Specialist.A program that prepares individuals, under the supervision of physicians, nurses, or other health care professionals, to perform medical office or facilities management services and perform one or more clinical allied health specialties. Includes instruction in health care management; medical office administration; medical law and regulations; training in one or more diagnostic, treatment, therapy, or laboratory specialties at the assistant level or above; and applicable professional standards and ethics. 51.0712 Medical Reception/Receptionist.A program that prepares individuals, under the supervision of office managers, nurses, or physicians, to provide customer service, visitor reception, and patient intake and discharge services. Includes instruction in medical office and health care facility procedures, medical terminology, interpersonal skills, record-keeping, customer service, telephone skills, data entry, interpersonal communications skills, and applicable policies and regulations. 51.0713 Medical Insurance Coding Specialist/Coder.A program that prepares individuals to perform specialized data entry, classification, and record-keeping procedures related to medical diagnostic, treatment, billing, and insurance documentation. Includes instruction in medical records and insurance software applications, basic anatomy and physiology, medical terminology, fundamentals of medical science and treatment procedures, data classification and coding, data entry skills, and regulations relating to Medicare and insurance documentation. 51.0714 Medical Insurance Specialist/Medical Biller.A program that prepares individuals to perform and manage the medical and health insurance operations in a medical office, health care facility, health maintenance organization, or insurance provider. Includes instruction in health and medical insurance processes; health insurance law, policy, and regulations; insurance records and paperwork administration; insurance office administration; health/medical insurance software applications; personnel supervision; business mathematics; billing and collection procedures; medical terminology; and communications skills. 51.0715 Health/Medical Claims Examiner.A program that prepares individuals to perform specialized investigatory, analytical, evaluative, and consultative functions related to health/medical insurance operations and their regulation. Includes instruction in health and medical insurance processes and procedures, health insurance law and regulations, health care industry law, record-keeping, analytic and investigatory techniques, evaluation methods, field operations methods, office procedures, related software applications, oral and written communications skills, interviewing techniques, and professional standards and ethics. 51.0716 Medical Administrative/Executive Assistant and Medical Secretary.A program that prepares individuals to perform the duties of special assistants and personal secretaries for practicing physicians and nurses, health care facilities and services administrators, and other health care professionals. Includes instruction in business and medical communications, medical terminology, principles of health care operations, public relations and interpersonal communications, software applications, record-keeping and filing systems, scheduling and meeting planning, applicable policy and regulations, and professional standards and ethics.Examples: Dental Secretary 51.0717 Medical Staff Services Technology/Technician.A program that prepares individuals to perform credentialing, privileging, personnel management, and accreditation compliance services for hospitals and other health care facilities and organizations. Includes instruction in medical staff organization and management, medical terminology, credentialing and re-credentialing, health care accreditation and regulatory standards, health care law, meeting and negotiation management, and office information systems management. 51.0718 Long Term Care Administration/Management.A program that prepares individuals to apply managerial principles to the administration of nursing homes, assisted living facilities, adult day care, home health services, and other long term care settings and agencies serving the elderly and disabled. Includes instruction in social and clinical aspects of aging, health care delivery systems, nursing home administration, assisted living administration, aging policy and government programs, ethics, business management, financial management, human resource management, marketing, and applicable laws and regulations.Examples: Aging Services Management 51.0719 Clinical Research Coordinator.A program that prepares individuals for careers as clinical research administrators or clinical research coordinators where they work under the supervision of a Principal Investigator to organize, coordinate and administer clinical research trials. Includes instruction in pharmacology, medical terminology, foundations of clinical research, project management, ethics, research design and data management, and legal and regulatory compliance .Examples: Clinical Research Trial Coordination Clinical Trials Research Clinical Trials ManagementSee also: 51.1005 - Clinical Laboratory Science/Medical Technology/Technologist. 51.0720 Regulatory Science/Affairs. (New)A program that prepares individuals to manage the regulatory process for companies innovating and developing cutting edge products in science, biotechnology, pharmaceuticals, and medicine. Includes instruction in regulatory affairs, clinical documentation, human and animal subject protection, Food and Drug Administration (FDA) regulations, data management and analysis, good manufacturing practices, and quality management.See also: 52.0214 - Research Administration. 51.0721 Disease Registry Data Management. (New)A program that prepares individuals to find, interpret, and record demographic and medical information on individuals for healthcare agencies and disease registries. Includes instruction in anatomy, data management, disease registry organization and operations, epidemiology, ethics, fundamentals of disease coding and staging, medical terminology, pathophysiology, pharmacology, physiology, quality management, and statistics.Examples: Cancer Data Management 51.0722 Healthcare Innovation. (New)A program that prepares individuals to innovate solutions and lead change within a healthcare organization. Includes instruction in innovation management, medical device development, evidence-based practice, systems thinking, information technology, healthcare policy and finance, organizational change, and leadership. 51.0723 Healthcare Information Privacy Assurance and Security. (New)A program that prepares individuals for careers in designing, implementing, and administering comprehensive privacy and security protection programs in all types of healthcare organizations. Includes instruction in health information ethics, healthcare information privacy and security, healthcare compliance, healthcare information security and disaster recovery, and healthcare privacy law.Examples: Information Governance in Healthcare 51.0799 Health and Medical Administrative Services, Other.Any instructional program in health and medical administrative services not listed above. 51.08 Allied Health and Medical Assisting Services.Instructional content for this group of programs is defined in codes 51.0801 - 51.0899. 51.0801 Medical/Clinical Assistant.A program that prepares individuals, under the supervision of physicians, to provide medical office administrative services and perform clinical duties including patient intake and care, routine diagnostic and recording procedures, pre-examination and examination assistance, and the administration of medications and first aid. Includes instruction in basic anatomy and physiology; medical terminology; medical law and ethics; patient psychology and communications; medical office procedures; and clinical diagnostic, examination, testing, and treatment procedures. 51.0802 Clinical/Medical Laboratory Assistant.A program that prepares individuals, under the supervision of physicians or laboratory scientists or technologists, to perform waived testing procedures (Clinical Laboratory Improvement Amendments of 1988), phlebotomy, and other duties in support of laboratory teams. Includes instruction in clinical procedures, various laboratory tests, laboratory mathematics, computer technology, equipment operation and maintenance, sterilization and safety, communications skills, and interpersonal skills.See also: 51.1004 - Clinical/Medical Laboratory Technician. 51.0803 Occupational Therapist Assistant.A program that prepares individuals, under the supervision of occupational therapists, to direct patient participation in skill-enhancing, learning, and motivational tasks; correct or diminish pathologies; and to provide direct health education and promotion services. Includes instruction in human life span development, occupational therapy principles and practice skills, treatment planning and implementation, record-keeping and documentation, patient education and intervention, activity and program direction, and assistive services management. 51.0805 Pharmacy Technician/Assistant.A program that prepares individuals, under the supervision of pharmacists, to prepare medications, provide medications and related assistance to patients, and manage pharmacy clinical and business operations. Includes instruction in medical and pharmaceutical terminology, principles of pharmacology and pharmaceutics, drug identification, pharmacy laboratory procedures, prescription interpretation, patient communication and education, safety procedures, record-keeping, measurement and testing techniques, pharmacy business operations, prescription preparation, logistics and dispensing operations, and applicable standards and regulations. 51.0806 Physical Therapy Assistant. CIP Title or Definition ChangedA program that prepares individuals, under the supervision of a physical therapist, to implement physical therapy treatment care plans, train patients, conduct treatment interventions, use equipment, and observe and record patient progress. Includes instruction in applied anatomy and physiology, behavioral sciences, biomechanics, clinical documentation, clinical pathology, communication, exercise physiology, kinesiology, neuroscience, and professional standards and ethics. 51.0808 Veterinary/Animal Health Technology/Technician and Veterinary Assistant. (Moved from)Moved from 51.0808 to 01.8301 51.0809 Anesthesiologist Assistant.A program that prepares individuals to assist anesthesiologists and nurse anesthetists in developing and implementing patient anesthesia care plans, including preoperative, surgical theater, recovery room, and postoperative/intensive care procedures. Includes instruction in patient data collection, catheter insertion, airway management and drug administration, assisting the administration and monitoring of regional and peripheral nerve blockades, support therapy, adjusting anesthetic levels during surgery, interoperative monitoring, postoperative procedures, pain clinics and patient education, and administrative tasks. 51.0810 Emergency Care Attendant (EMT Ambulance).A program that prepares individuals to assist licensed EMTs, under the supervision of a physician, to prepare and transport ill or injured patients, and to operate emergency vehicles and equipment such as life support units. Includes instruction in first aid and emergency medicine field techniques, patient stabilization and care, medical field communications, equipment operation and maintenance, emergency vehicle operation, and applicable standards and regulations.See also: 51.0904 - Emergency Medical Technology/Technician (EMT Paramedic). 51.0811 Pathology/Pathologist Assistant.A program that prepares individuals, under the supervision of pathologists, to assist in the performance of autopsies, obtaining and preparing surgical specimens, preparing autopsy reports, and interacting with other clinicians, officials, and individuals. Includes instruction in anatomy; physiology; medical terminology; general, systemic, forensic, and pediatric pathology; autopsy procedures; surgical technique; medical photography; tissue preparation; record keeping and laboratory administration; interpersonal skills; and applicable standards and regulations. 51.0812 Respiratory Therapy Technician/Assistant.A program that prepares individuals to administer general respiratory care procedures under the supervision of respiratory therapists in a variety of clinical settings. Includes instruction in patient data collection and monitoring, airway management, installation of nebulizers and other respiratory assistance devices, application and monitoring of breathing gases, equipment operation and maintenance, safety and sanitation procedures, and applicable regulations. 51.0813 Chiropractic Technician/Assistant.A program that prepares individuals, under the supervision of a chiropractor, to provide patient management, examination, and treatment services. Includes instruction in the principles and procedures of chiropractic, radiographic X-Ray procedures and techniques, X-Ray film analysis and media studies, orthopedic and neurological testing, clinical laboratory procedures, patient management and education, office administrative skills, and applicable law and regulations. 51.0814 Radiologist Assistant.A program that prepares individuals, under the supervision of a physician, to perform patient assessment, patient management, selected imaging procedures and to make initial observations of diagnostic images. Includes instruction in radiologic procedures and techniques, cross sectional anatomy, pharmacology, pathophysiology, patient assessment, patient care and management, and radiation biology. 51.0815 Lactation Consultant.A program that prepares individuals to provide lactation management services and breastfeeding support to women, and to work as a Lactation Consultant in a variety of clinical settings. Includes instruction in anatomy and physiology of lactation, nutrition, breastfeeding techniques and technologies, common concerns and solutions, management of special situations, breastfeeding instruction, professional and legal concerns, and advocacy.Examples: Lactation Education Lactation Counselor Lactation Management 51.0816 Speech-Language Pathology Assistant.A program that prepares individuals, under the supervision of speech-language pathologists, to assist in the provision of speech-language pathology services to individuals of all ages, including screenings and assessments, following treatment plans or protocols, documenting and reporting patient performance, performing checks and maintenance of equipment, and providing support in research projects. Includes instruction in speech and language development, phonetics, childhood and adult communication disorders, speech and hearing screening, and clinical procedures in speech-language pathology.See also: 13.1012 - Education/Teaching of Individuals with Speech or Language Impairments., 51.0203 - Speech-Language Pathology/Pathologist., 51.0204 - Audiology/Audiologist and Speech-Language Pathology/Pathologist. 51.0817 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 51.0899 Allied Health and Medical Assisting Services, Other.Any instructional program in allied health and medical assisting services not listed above. 51.09 Allied Health Diagnostic, Intervention, and Treatment Professions.Instructional content for this group of programs is defined in codes 51.0901 - 51.0999. 51.0901 Cardiovascular Technology/Technologist.A program that prepares individuals to perform invasive, noninvasive, and peripheral examinations of the cardiovascular system at the request of physicians to aid in diagnoses and therapeutic treatments. Includes instruction in reviewing and recording patient histories and clinical data, patient care, investigative and examination procedures, diagnostic procedures, data analysis and documentation, physician consultation, equipment operation and monitoring, and professional standards and ethics. 51.0902 Electrocardiograph Technology/Technician.A program that prepares individuals, under the supervision of physicians and nurses, to administer EKG and ECG diagnostic examinations and report results to the treatment team. Includes instruction in basic anatomy and physiology, the cardiovascular system, medical terminology, cardiovascular medications and effects, patient care, EKG and ECG administration, equipment operation and maintenance, interpretation of cardiac rhythm, patient record management, and professional standards and ethics. 51.0903 Electroneurodiagnostic/Electroencephalographic Technology/Technologist.A program that prepares individuals, under the supervision of a physician, to study and record electrical activity in the brain and nervous system for purposes of patient monitoring and supporting diagnoses. Includes instruction in patient communication and care; taking and abstracting patient histories; application of recording electrodes; EEG, EP, and PSG equipment operation and procedural techniques; and data recording and documentation. 51.0904 Emergency Medical Technology/Technician (EMT Paramedic).A program that prepares individuals, under the remote supervision of physicians, to recognize, assess, and manage medical emergencies in prehospital settings and to supervise Ambulance personnel. Includes instruction in basic, intermediate, and advanced EMT procedures; emergency surgical procedures; medical triage; rescue operations; crisis scene management and personnel supervision; equipment operation and maintenance; patient stabilization, monitoring, and care; drug administration; identification and preliminary diagnosis of diseases and injuries; communication and computer operations; basic anatomy, physiology, pathology, and toxicology; and professional standards and regulations.See also: 51.0810 - Emergency Care Attendant (EMT Ambulance). 51.0905 Nuclear Medical Technology/Technologist.A program that prepares individuals, under the supervision of physicians, to employ radioactive and stable nuclides in diagnostic evaluations and therapeutic applications while monitoring for patient health and safety. Includes instruction in nuclear physics, health physics, instrumentation and statistics, biochemistry, immunology, radiopharmacology, radiation biology, clinical nuclear medicine, radionuclide therapy, computer applications, safety regulations, equipment operation, quality control, laboratory procedures, taking patient histories, patient evaluation and monitoring, emergency first aid, administration and record-keeping, and personnel supervision. 51.0906 Perfusion Technology/Perfusionist.A program that prepares individuals, under the supervision of physicians and nurses, to operate extracorporeal circulation and autotransfusion equipment during medical procedures and surgeries where the support or temporary replacement of a patient’s own respiratory or circulatory system is required. Includes instruction in equipment selection and operation, physician and medical team consultation, patient condition monitoring, procedural techniques, and principles of respiratory and circulatory physiology. 51.0907 Medical Radiologic Technology/Science - Radiation Therapist.A program that prepares individuals to administer prescribed courses of radiation treatment, manage patients undergoing radiation therapy, and maintain pertinent records. Includes instruction in applied anatomy and physiology, oncologic pathology, radiation biology, radiation oncology procedures and techniques, radiation dosimetry, tumor localization, treatment planning, patient communication and management, data collection, record-keeping, and applicable standards and regulations. 51.0908 Respiratory Care Therapy/Therapist.A program that prepares individuals, under the supervision of physicians, to assist in developing respiratory care plans, administer respiratory care procedures, supervise personnel and equipment operation, maintain records, and consult with other health care team members. Includes instruction in the applied basic biomedical sciences; anatomy, physiology, and pathology of the respiratory system; clinical medicine; therapeutic procedures; clinical expressions; data collection and record-keeping; patient communication; equipment operation and maintenance; personnel supervision; and procedures for special population groups. 51.0909 Surgical Technology/Technologist.A program that prepares individuals, under the supervision of physicians and surgical nurses, to maintain, monitor, and enforce the sterile field and adherence to aseptic technique by preoperative, surgical team, and postoperative personnel. Includes instruction in instrument and equipment sterilization and handling, surgical supplies management, wound exposure and closure, surgical computer and robot operation and monitoring, maintenance of hemostasis, and patient and team scrubbing.See also: 51.1012 - Sterile Processing Technology/Technician. 51.0910 Diagnostic Medical Sonography/Sonographer and Ultrasound Technician.A program that prepares individuals, under the supervision of physicians, to utilize medical ultrasound techniques to gather sonographic data used to diagnose a variety of conditions and diseases. Includes instruction in obtaining, reviewing, and integrating patient histories and data; patient instruction and care; anatomic, physiologic and pathologic data recording; sonographic data processing; sonography equipment operation; and professional standards and ethics.Examples: Vascular Sonography 51.0911 Radiologic Technology/Science - Radiographer.A program that prepares individuals, under the supervision of physicians, to provide medical imaging services to patients and attending health care professionals. Includes instruction in applied anatomy and physiology, patient positioning, radiographic technique, radiation biology, safety and emergency procedures, equipment operation and maintenance, quality assurance, patient education, and medical imaging/radiologic services management. 51.0912 Physician Associate/Assistant. CIP Title or Definition ChangedA program that prepares individuals to practice medicine, including diagnoses and treatment therapies, under the supervision of a physician. Includes instruction in the basic medical and clinical sciences and specialized preparation in fields such as family medicine, pediatrics, obstetrics, gynecology, general surgery, psychiatry, and behavioral medicine; the delivery of health care services to homebound patients, rural populations, and underserved populations; and community health services. 51.0913 Athletic Training/Trainer.A program that prepares individuals to work in consultation with, and under the supervision of physicians to prevent and treat sports injuries and associated conditions. Includes instruction in the identification, evaluation, and treatment of athletic injuries and illnesses; first aid and emergency care; therapeutic exercise; anatomy and physiology; exercise physiology; kinesiology and biomechanics; nutrition; sports psychology; personal and community health; knowledge of various sports and their biomechanical and physiological demands; and applicable professional standards and regulations.See also: 26.0908 - Exercise Physiology and Kinesiology., 31.0505 - Exercise Science and Kinesiology., 31.0507 - Physical Fitness Technician. 51.0914 Gene/Genetic Therapy.A program that focuses on the application of genetics to the therapeutic treatment of diseases and inherited abnormalities through the targeted modification of gene expression, and prepares individuals to administer genetic therapies. Includes instruction in medical genetics, genome analysis, pharmacology of gene transfer, viral vectors, nonviral therapeutic techniques, genetic screening, targeted gene delivery, vector production, safety and quality assurance, clinical trials management, and bioethics.See also: 51.1509 - Genetic Counseling/Counselor., 26.0806 - Human/Medical Genetics. 51.0915 Cardiopulmonary Technology/Technologist.A program that prepares individuals, under the supervision of physicians and nurses, to perform both cardiovascular and pulmonary diagnostic and therapeutic procedures. Includes instruction in cardiopulmonary pharmacology; anatomy and physiology of the heart, peripheral vascular system, and lungs; pulmonary and cardiovascular disease and dysfunction; peripheral vascular Doppler procedures; invasive and non-invasive cardiology; pulmonary function tests; blood gas analysis; echocardiograph procedures; bronchoscopy; patient management; patient history taking and record-keeping; applications to clinical research; and emergency procedures. 51.0916 Radiation Protection/Health Physics Technician.A program that prepares individuals, under the supervision of health physicists, occupational safety and health specialists, and public health officials, to monitor and control radiation exposure and implement preventive measures in health care, work, and natural environments. Includes instruction in radiation physics, environmental radioactivity, radiological instrumentation, electronics of radiation detection equipment, radioactive waste management and control, safety and handling procedures, decontamination procedures, radioactivity testing and analysis, and communications skills. 51.0917 Polysomnography.A program that prepares individuals to work under the supervision of a physician to provide comprehensive evaluation and treatment of sleep disorders. Includes instruction in human anatomy and physiology, polysomnographic technology, polysomnography scoring, neuroanatomy and neurophysiology of sleep, sleep disorders, and medical terminology.Examples: Polysomnography Polysomnography/Sleep Technology 51.0918 Hearing Instrument Specialist.A program that prepares individuals to test the hearing of, and to select, fit and dispense appropriate hearing aids for, patients. Includes instruction in acoustics, anatomy and physiology of the ear, hearing testing, hearing aid fitting and technology, health promotion and rehabilitation, counseling and communication, business management, and professional ethics.Examples: Hearing Aid Technician 51.0919 Mammography Technology/Technician. CIP Title or Definition ChangedA program that prepares registered radiographers to become registered mammographers. Includes instruction in anatomy and physiology, mammography instrumentation, mammography positioning, principles and procedures of mammography, and quality assurance.Examples: Mammography Breast Imaging and Mammography 51.0920 Magnetic Resonance Imaging (MRI) Technology/Technician.A program that prepares individuals who are AART-certified radiological technicians to utilize MRI technology to obtain still and moving images of various vascular structures in the human body that aid the physician in the diagnosis or treatment of disease and injury. Includes instruction in MRI imaging, sectional anatomy and pathology, MRI technology, MRI techniques and procedures, MRI physics, and clinical training. 51.0921 Hyperbaric Medicine Technology/Technician. (New)A program that prepares individuals, under the supervision of physicians, to operate hyperbaric (recompression) chambers for the treatment of disease. Includes instruction in patient assessment and management, hyperbaric safety, physics of hyperbaric and hypobaric exposures, physiology, hyperbaric chamber operation, and air decompression procedures. 51.0922 Intraoperative Neuromonitoring Technology/Technician. (New)A program that prepares individuals, under the supervision of physicians, to become neuromonitoring technicians who analyze, monitor, and record nervous system function to promote the effective treatment of pathological conditions. Includes instruction in EEG technology, EMG technology, anatomy, and neuroanatomy. 51.0923 Orthopedic Technology/Technician. (New)A program that prepares individuals, under the supervision of physicians, to cast, splint, and brace orthopedic injuries. Includes instruction in patient assessment; casting, splinting, and orthopedic appliances; radiographic interpretation; traction; and wound care. 51.0924 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 51.0999 Allied Health Diagnostic, Intervention, and Treatment Professions, Other.Any instructional program in allied health diagnostic, intervention, and treatment professions not listed above. 51.10 Clinical/Medical Laboratory Science/Research and Allied Professions.Instructional content for this group of programs is defined in codes 51.1001 - 51.1099. 51.1001 Blood Bank Technology Specialist.A program that prepares individuals to perform routine and specialized blood testing procedures, collect and process blood donations, and support physicians and other clinicians administering transfusion therapy. Includes instruction in basic cellular biology, immunohematology, blood bank procedures, blood typing, antigen and antibody identification tests, hemolytic and transfusion responses and diseases, donor selection, blood drawing and storage, blood separation, viral marker testing, laboratory and personnel supervision, safety and sterilization, and applicable laws and regulations. 51.1002 Cytotechnology/Cytotechnologist.A program that prepares individuals to work with pathologists to detect changes in body cells that may indicate, and permit diagnosis of, the early development of cancers and other diseases. Includes instruction in biochemistry, microbiology, applied mathematics, microscopy, slide preparation, identification of cellular structures and abnormalities, and laboratory procedures and safety. 51.1003 Hematology Technology/Technician.A program that prepares individuals, under the supervision of clinical laboratory scientists and health care professionals, to perform tests and analyses of blood samples. Includes instruction in clinical laboratory procedures; blood anatomy and physiology; cellular and molecular biology; blood pathology and disease indicators; quantitative, qualitative, and coagulation testing methodologies; equipment operation and maintenance; and record-keeping. 51.1004 Clinical/Medical Laboratory Technician.A program that prepares individuals, under the supervision of clinical laboratory scientists/medical technologists, to perform routine medical laboratory procedures and tests and to apply preset strategies to record and analyze data. Includes instruction in general laboratory procedures and skills; laboratory mathematics; medical computer applications; interpersonal and communications skills; and the basic principles of hematology, medical microbiology, immunohematology, immunology, clinical chemistry, and urinalysis.See also: 41.0101 - Biology/Biotechnology Technology/Technician., 51.0802 - Clinical/Medical Laboratory Assistant. 51.1005 Clinical Laboratory Science/Medical Technology/Technologist.A program that prepares individuals to conduct and supervise complex medical tests, clinical trials, and research experiments; manage clinical laboratories; and consult with physicians and clinical researchers on diagnoses, disease causation and spread, and research outcomes. Includes instruction in the theory and practice of hematology, clinical chemistry, microbiology, immunology, immunohematology, physiological relationships to test results, laboratory procedures and quality assurance controls, test and research design and implementation, analytic techniques, laboratory management, data development and reporting, medical informatics, and professional standards and regulations.See also: 51.0719 - Clinical Research Coordinator. 51.1006 Ophthalmic Laboratory Technology/Technician.A program that prepares individuals, under the supervision of ophthalmologists and optometrists, to cut, grind, edge, and finish corrective lenses and to fabricate eyewear. Includes instruction in optical theory, applied mathematics, lens surfacing and finishing, tinting and coating, impact resistance treatment and testing, frame construction and repair, prescription interpretation, equipment operation and maintenance, follow-up adjustment, record-keeping, and laboratory safety procedures. 51.1007 Histologic Technology/Histotechnologist.A program that prepares individuals, at the request of physicians, researchers, and laboratory scientists, to identify tissue structures and cell components and relate these findings to physiological functions and to the detection and diagnosis of diseases and other abnormalities. Includes instruction in medical chemistry, histochemistry, biochemistry, anatomy, physiology, medical informatics, applied mathematics, electron microscopy, instrumentation, quality control procedures, data recording and analysis, laboratory administration, medical terminology, and professional standards and ethics. 51.1008 Histologic Technician.A program that prepares individuals, under the supervision of histotechnologists and other clinical laboratory scientists, to prepare and process tissue samples and perform routine histologic procedures and tests. Includes instruction in fixation, dehydration, embedding, sectioning, decalcification, microincineration, mounting, routine and special steaming, laboratory mathematics, laboratory procedures and safety, instrumentation and microscopy, computer applications, preparation of museum specimens, and recording and administrative procedures. 51.1009 Phlebotomy Technician/Phlebotomist.A program that prepares individuals, under the supervision of physicians and other health care professionals, to draw blood samples from patients using a variety of intrusive procedures. Includes instruction in basic vascular anatomy and physiology, blood physiology, skin puncture techniques, venipuncture, venous specimen collection and handling, safety and sanitation procedures, and applicable standards and regulations. 51.1010 Cytogenetics/Genetics/Clinical Genetics Technology/Technologist.A program that prepares individuals to perform analyses of the human genome and chromosomes for the research and diagnosis of genetic diseases and defects, in preparation for organ transplants, and in support of treatments for cancers and leukemias. Includes instruction in chromosome analysis, fluorescent in situ hybridization (FISH), molecular genetic techniques, cytotechnology, and photomicrography.See also: 26.0806 - Human/Medical Genetics. 51.1011 Renal/Dialysis Technologist/Technician.A program that prepares individuals to administer hemodialysis treatments to patients with renal failure under the supervision of a nurse or physician. Includes instruction in basic anatomy and physiology, dialysis prescription interpretation, dialysite preparation, extracorporeal circuit and dialyzer set-up and maintenance, equipment monitoring, patient preparation, taking vital signs, documentation and communication, venipuncture and local anesthesia administration, emergency intervention, safety and sanitation, and professional standards and ethics. 51.1012 Sterile Processing Technology/Technician.A program that prepares individuals to clean, sterilize, and assemble surgical instruments, equipment, and supplies for use in operating rooms and other medical and surgical facilities. Includes instruction in sterilization; infection control; decontamination; and surgical instrumentation processing, distribution, and record-keeping.See also: 51.0909 - Surgical Technology/Technologist. 51.1099 Clinical/Medical Laboratory Science and Allied Professions, Other.Any instructional program in clinical/medical laboratory science and allied professions not listed above.Examples: Pharmaceutical Technician 51.11 Health/Medical Preparatory Programs.Instructional content for this group of programs is defined in codes 51.1101 - 51.1199. 51.1101 Pre-Dentistry Studies.A program that prepares individuals for admission to a professional program in dentistry. 51.1102 Pre-Medicine/Pre-Medical Studies.A program that prepares individuals for admission to a professional program in medicine, osteopathic medicine, or podiatric medicine. 51.1103 Pre-Pharmacy Studies.A program that prepares individuals for admission to a professional program in pharmacy. 51.1104 Pre-Veterinary Studies. (Moved from)Moved from 51.1104 to 01.1302 51.1105 Pre-Nursing Studies.A program that prepares individuals for admission to a professional program in Nursing. 51.1106 Pre-Chiropractic Studies.A program that prepares individuals for admission to a professional program in chiropractic medicine. 51.1107 Pre-Occupational Therapy Studies.A program that prepares individuals for admission to a professional program in occupational therapy. 51.1108 Pre-Optometry Studies.A program that prepares individuals for admission to a professional program in optometry. 51.1109 Pre-Physical Therapy Studies.A program that prepares individuals for admission to a professional program in physical therapy. 51.1110 Pre-Art Therapy. (New)A program that prepares individuals for admission to a professional art therapy program. 51.1111 Pre-Physician Assistant. (New)A program that prepares individuals for admission to a professional physician assistant program. 51.1199 Health/Medical Preparatory Programs, Other.Any instructional program in health and medical professional preparation not listed above.See also: 01.1302 - Pre-Veterinary Studies. 51.12 Medicine. CIP Title or Definition ChangedInstructional content for this group of programs is defined in codes 51.1201 - 51.1299. 51.1201 Medicine.A program that prepares individuals for the independent professional practice of medicine, involving the prevention, diagnosis, and treatment of illnesses, injuries, and other disorders of the human body. Includes instruction in the basic medical sciences, clinical medicine, examination and diagnosis, patient communications, medical ethics and law, professional standards, and rotations in specialties such as internal medicine, surgery, pediatrics, obstetrics and gynecology, orthopedics, neurology, ophthalmology, radiology, clinical pathology, anesthesiology, family medicine, and psychiatry.Examples: Medicine (MD) Allopathic Medicine 51.1202 Osteopathic Medicine/Osteopathy. (Moved to)A program that prepares individuals for the independent professional practice of osteopathic medicine, involving a combination of medical principles and procedures and osteopathic principles of holistic medicine and the relationship of the musculoskeletal system to general health. Includes instruction in the basic medical sciences, preventive medicine, family and community medicine, medical informatics, disease systems, organ and physiologic systems, osteopathic principles and practice, osteopathic manipulative treatment, musculoskeletal and skin systems, clinical specialty rotations, medical ethics, and professional standards and practice management.Examples: Osteopathy Osteopathic Medicine (DO) 51.1203 Podiatric Medicine/Podiatry. (Moved to)A program that prepares individuals for the independent professional practice of podiatric medicine, involving the prevention, diagnosis, and treatment of diseases, disorders, and injuries to the foot and lower extremities. Includes instruction in the basic medical sciences, anatomy of the lower extremity, functional orthopedics, foot biomechanics, podiatric radiology, dermatology, podiatric surgery, podopediatrics, sports medicine, physical diagnosis, emergency medicine and traumatology, practice management, and professional standards and ethics.Examples: Podiatric Medicine/Podiatry (DPM) 51.1299 Medicine, Other. (New)Any program in medicine not listed above. 51.14 Medical Clinical Sciences/Graduate Medical Studies. CIP Title or Definition ChangedInstructional content for this group of programs is defined in codes 51.1401 - 51.1499. 51.1401 Medical Science/Scientist. CIP Title or Definition ChangedAn undifferentiated clinical science program that prepares clinicians to conduct clinical and translational research in various areas. Note: programs that prepare clinicians to conduct research in specific scientific fields should report under the relevant CIP code series (e.g., Series 26 Biological and Biomedical Sciences).Examples: Medical Scientist (MS) Medical Scientist (PhD) 51.1402 Clinical and Translational Science. (New)A program of study that prepares clinicians to direct a broad range of scientific or clinical or translational studies, translate scientific knowledge into clinical practice, and bridge clinical science with laboratory investigations. Includes instruction in bioinformatics, Information technology, biostatistics, epidemiology, grant writing, management and analysis of clinical data, clinical and translational research law and policy, responsible conduct of research, and scientific writing. 51.1403 Pain Management. (New)A post-residency program of study that prepares physicians in the diagnosis, management, and treatment of acute and chronic pain. Includes instruction in anesthesiology, pain assessment, pain classification and diagnosis, pain neuroscience, palliative and end-of-life care, physical medicine and rehabilitation, psychiatry of pain, pain pharmacology, public policy, and legal issues of pain management.See also: 61.0210 - Pain Medicine Fellowship Program. 51.1404 Temporomandibular Disorders and Orofacial Pain. (New)A program that prepares clinicians to evaluate, diagnose, and treat of a wide variety of temporomandibular disorders (TMD) and orofacial pain disorders as well as the treatment of sleep apnea and snoring with intraoral appliances. Includes instruction in head and neck anatomy, physical diagnosis and evaluation, orofacial pain, neurobiology of pain and analgesia, and diagnostic radiography. 51.1405 Tropical Medicine. (New)A program that prepares clinicians to prevent and control vector-borne and tropical infectious diseases. Includes instruction in microbiology, parasitology, mycology, virology, vector biology, vaccinology, laboratory diagnosis, travelers’ health, epidemiology, and disease management.Examples: Diploma in Tropical Medicine Diploma in Tropical Medicine and Public Health Master of Tropical Medicine (MTM) Clinical Tropical Medicine and Travelers’ Health Graduate Certificate in Tropical Medicine Tropical Medicine and Global Health 51.1499 Medical Clinical Sciences/Graduate Medical Studies, Other. (New)Any program in medical clinical sciences or graduate medical studies not listed above. 51.15 Mental and Social Health Services and Allied Professions.Instructional content for this group of programs is defined in codes 51.1501 - 51.1599. 51.1501 Substance Abuse/Addiction Counseling.A program that prepares individuals to help prevent substance abuse, counsel individuals and families with drug and alcohol problems, and perform intervention and therapeutic services for persons suffering from addiction. Includes instruction in individual and group counseling skills, psychology of addiction, sociology, crisis intervention, substance abuse identification methodologies, substance abuse treatment modalities, substance abuse prevention and treatment resources, pharmacology and behavioral aspects of abused substances, treatment evaluation, patient observation and education, group dynamics, professional standards and ethics, and applicable law and regulations. 51.1502 Psychiatric/Mental Health Services Technician.A program that prepares individuals, under the supervision of psychiatrists, psychologists, nurses, and other mental health care professionals, to provide direct patient care services, assist in developing and implementing treatment plans, administer medications, and perform related administrative functions. Includes instruction in mental health theory, applied psychopathology, patient communication and management, crisis intervention, psychotropic medication, mental health treatment procedures, substance abuse, record-keeping, clinical administrative skills, and applicable standards and regulations. 51.1503 Clinical/Medical Social Work.A program that prepares individuals for the specialized professional practice of social work, in collaboration with other health care professionals, in hospitals and other health care facilities and organizations. Includes instruction in social work, psychiatric case work, clinical interviewing techniques, therapeutic intervention strategies, patient testing and evaluation, patient and family counseling, social rehabilitation, patient care planning, record-keeping, and support services liaison.See also: 44.0701 - Social Work. 51.1504 Community Health Services/Liaison/Counseling.A program that prepares individuals to serve as facilitators, advocates, and referral professionals linking health care and related social services with affected recipient communities. Includes instruction in public and community health, human and social services, health services administration, group counseling, health education, group advocacy, cross-cultural and multilingual communication, and applicable laws and policies.Examples: Community Health Education 51.1505 Marriage and Family Therapy/Counseling.A program that prepares individuals for the independent professional practice of marriage and family therapy, involving the diagnosis of cognitive, affective, and behavioral domain disorders, both mental and emotional, within the context of marriage and family systems and the application of short- and long-term therapeutic strategies in family group contexts. Includes instruction in psychotherapy, family systems and studies, small group intervention and therapy, marital problems, depression, identification of psychopathologies and behavioral disorders, holistic health care, practice management, applicable regulations, and professional standards and ethics.See also: 42.2811 - Family Psychology., 19.0704 - Family Systems. 51.1506 Clinical Pastoral Counseling/Patient Counseling.A program that prepares individuals, including but not limited to, ordained clergy and other counseling professionals to respond to the emotional and/or spiritual needs of patients and families in health care emergencies and other situations, and to consult with and counsel other health care professionals. Includes instruction in advanced interpersonal communication; individual and small group counseling; interdisciplinary teamwork; crisis management; extended care relationships; self-analysis; medical ethics; pastoral care art; spiritual dimensions of human growth and health; counseling psychology and therapy; and applications to grief, death, emotional collapse, injury, individual/family adjustment, and chronic illness situations.See also: 39.0701 - Pastoral Studies/Counseling. 51.1507 Psychoanalysis and Psychotherapy.A program that prepares individuals to practice the provision of psychoanalytic counseling to individuals and groups based on the psychodynamic principles evolved from authorities such as Freud, Adler, and Jung. Includes instruction in self-analysis, personality theory, dream analysis, free association and transference theory and techniques, psychodynamic theory, developmental processes, applications to specific clinical conditions, practice management, and professional standards and ethics. 51.1508 Mental Health Counseling/Counselor.A program that prepares individuals to provide evaluations, referrals, and short-term counseling services to help people prevent or remediate personal problems, conflicts, and emotional crises. Includes instruction in human development, psychopathology, individual and group counseling, personality theory, career assessment, patient screening and referral, observation and testing techniques, interviewing skills, professional standards and ethics, and applicable laws and regulations.See also: 42.2803 - Counseling Psychology. 51.1509 Genetic Counseling/Counselor.A program that prepares individuals to counsel patients and families concerning inherited genetic disorders and diseases; assess risk factors and planning options associated with potential and actual inherited conditions; and serve as patient advocates and provide referral services in relation to private and public support services. Includes instruction in clinical/medical genetics, methods of genetic testing, interviewing and counseling skills, genetic and support services delivery, principles of public health, medical ethics, law and regulations, patient advocacy, and professional standards.See also: 51.0914 - Gene/Genetic Therapy., 26.0806 - Human/Medical Genetics. 51.1510 Infant/Toddler Mental Health Services. (New)A program that prepares individuals to provide mental health services to infants, toddlers, and preschoolers and their families. Includes instruction in developmental psychology, cognitive and biological development, social and emotional development, research methods, and ethics. 51.1511 Medical Family Therapy/Therapist. (New)A program that prepares individuals to work with patients and their families who are experiencing emotional, physical, relational and spiritual difficulties related to acute and chronic illnesses. Includes instruction in cultural context, ethics, family dynamics, family therapy, gender, human development, marriage counseling, psychopathology, research design and methods, sexuality, and systems thinking. 51.1512 Hospice and Palliative Care. (New)A program of study that prepares individuals to work with patients in hospice and palliative care and focuses on the physical, psychological, spiritual, and social needs of patients and families affected by advanced illness. Includes instruction in aging, thanatology, pharmacology, complementary and integrative therapies, pathophysiology, and ethics. 51.1513 Trauma Counseling. (New)A program that focuses on understanding elements of traumatic exposure, trauma-sensitive care, and crisis intervention. Includes instruction in disaster response, grief and loss counseling, crisis intervention and management, trauma counseling, neurobiology of trauma, PTSD and combat-related trauma, relational trauma and treatment of trauma-related disorders. 51.1580 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 51.1599 Mental and Social Health Services and Allied Professions, Other.Any instructional program in mental and social health services and allied professions not listed above. 51.17 Optometry.Instructional content is defined in code 51.1701. 51.1701 Optometry.A program that prepares individuals for the independent professional practice of optometry and that focuses on the principles and techniques for examining, diagnosing and treating conditions of the visual system. Includes instruction in prescribing glasses and contact lenses, other optical aids, corrective therapies, patient counseling, physician referral, practice management, and ethics and professional standards.Examples: Optometry (OD) 51.18 Ophthalmic and Optometric Support Services and Allied Professions.Instructional content for this group of programs is defined in codes 51.1801 - 51.1899. 51.1801 Opticianry/Ophthalmic Dispensing Optician.A program that prepares individuals to adapt and fit corrective eyewear, including eyeglasses and contact lenses, as prescribed by ophthalmologists or optometrists; to assist patients in selecting appropriate frames; and to prepare work orders for ophthalmic laboratory technicians. Includes instruction in geometrical optics, ophthalmic optics, anatomy of the eye, optical instrumentation, use and maintenance of adjustment and cleaning tools, prescription interpretation, contact lens adaptation and fitting, prosthesis fitting, facial and eye measuring, pathology identification, record-keeping, and patient and business administrative tasks. 51.1802 Optometric Technician/Assistant.A program that prepares individuals to assist optometrists in providing patient care, administering examinations and treatments, and performing office administrative functions. Includes instruction in applied anatomy and physiology of the eye, visual testing, patient communication, patient preparation, medications and administration, dispensing and fitting of eyeglasses and contact lenses, record-keeping, and office management skills. 51.1803 Ophthalmic Technician/Technologist.A program that prepares individuals to assist ophthalmologists and optometrists in examining and treating patients with vision problems, vision disorders, and eye diseases. Includes instruction in taking patient histories, administering directed treatments and topical medications, diagnostic test procedures and equipment operation, anatomical and functional ocular measurements, patient care and instruction, ophthalmic and surgical equipment maintenance, safety and sterilization procedures, and office administrative procedures. 51.1804 Orthoptics/Orthoptist.A program that prepares individuals, under the supervision of ophthalmologists, to analyze, evaluate, and treat specific disorders of vision, eye movement, and eye alignment in children and adults. Includes instruction in eye anatomy, neuroanatomy, physiology, pharmacology, ophthalmic optics, diagnostic testing and measurement, orthoptic treatment therapy, systemic ocular diseases and disorders, principles of surgery, examination techniques, patient education, child psychology and development, learning disabilities, medical writing, and record-keeping. 51.1899 Ophthalmic and Optometric Support Services and Allied Professions, Other.Any instructional program in ophthalmic and optometric support services and allied professions not listed above. 51.19 Osteopathic Medicine/Osteopathy. (Deleted)Deleted, Report under 51.1202 51.1901 Osteopathic Medicine/Osteopathy. (Moved from)Moved from 51.1901 to 51.1202 51.20 Pharmacy, Pharmaceutical Sciences, and Administration.Instructional content for this group of programs is defined in codes 51.2001 - 51.2099. 51.2001 Pharmacy.A program that prepares individuals for the independent or employed practice of preparing and dispensing drugs and medications in consultation with prescribing physicians and other health care professionals, and for managing pharmacy practices and counseling patients. Includes instruction in mathematics, physics, chemistry, biochemistry, anatomy, physiology, pharmacology, pharmaceutical chemistry, pharmacognosy, pharmacy practice, pharmacy administration, applicable regulations, and professional standards and ethics.Examples: Pharmacy (BS, BPharm - Canada) Pharmacy (PharmD - USA and Canada) 51.2002 Pharmacy Administration and Pharmacy Policy and Regulatory Affairs.A program that prepares individuals to apply managerial, social, and economic sciences to the study and management of the distribution and use of pharmaceutical products and the provision of pharmacy services. Includes instruction in research design and methods, statistics, social and organizational behavior, pharmacoeconomics, management of pharmacy services, outcomes research, product planning and reimbursement, cost-benefit analysis, drug marketing, pharmacy and pharmaceutics law and regulation, risk assessment, and organization of the health care system.Examples: Pharmacy Administration Drug Regulatory Affairs Drug Regulatory and Quality Compliance Pharmacy Quality Assurance and Regulatory Affairs 51.2003 Pharmaceutics and Drug Design.A program that focuses on the scientific study of the formulation of medicinal substances into product vehicles capable of being stored, transported, and then introduced into the patient and behaving in ways optimal to therapeutic interaction. Includes instruction in statistics, biopharmaceutics, drug metabolism, pharmacokinetics, pharmacodynamics, physical pharmacy, pharmacological analysis, drug design and development, pharmacological biotechnology, chemical separations, spectroscopy, drug-host interactions, immunology, quantitative drug measurement, enzymatic transformations, and metabolic excretion.Examples: Pharmaceutics and Drug Design (MS) Pharmaceutics and Drug Design (PhD)See also: 26.1001 - Pharmacology. 51.2004 Medicinal and Pharmaceutical Chemistry.A program that focuses on the application of chemistry to the study of biologically and clinically active substances, biological and pharmacological interactions, and the development of associated research methods, techniques, and clinical trial procedures. Includes instruction in organic chemistry, biochemistry, molecular graphics, rational drug design, toxicology, molecular biology, pharmacology, enzyme mechanisms, receptor theory, neurochemistry, drug metabolism, drug synthesis, biological mechanisms of drug action, research tools and techniques, and laboratory safety.Examples: Medicinal and Pharmaceutical Chemistry (MS) Medicinal and Pharmaceutical Chemistry (PhD) 51.2005 Natural Products Chemistry and Pharmacognosy.A program that focuses on the scientific study of biologically active compounds found in naturally occurring sources such as plants, animals, and microbes and their use and/or modification as medicinal substances. Includes instruction in medicinal chemistry, organic medicinals, pharmacological therapeutics, pharmacokinetics, molecular biology, structural chemistry, enzymes, nucleic acids, economic botany, ethnobotany, bioprospecting, bioassay, compound identification and isolation, mass spectrometry, and analytical instrumentation and techniques.Examples: Natural Products Chemistry and Pharmacognosy (MS) Natural Products Chemistry and Pharmacognosy (PhD) 51.2006 Clinical and Industrial Drug Development.A program that focuses on the scientific application of pharmacology, pharmaceutics, and industrial management to the development, production, marketing, and distribution of pharmaceutical products. Includes instruction in industrial microbiology, plasmids, expression vectors, protein chemistry, assay and evaluation, drug synthesis and purification, quality control, industrial management, production security, patent procedures, intellectual property regulations and issues, patent enforcement and defense, and research design and testing.Examples: Clinical and Industrial Drug Development (MS) Clinical and Industrial Drug Development (PhD) 51.2007 Pharmacoeconomics/Pharmaceutical Economics.A program that focuses on the application of economics and policy analysis to the study of the relationship of pharmacy services and pharmaceutical processes and products to the health care system and their impact on health care organizations. Includes instruction in health economics, pharmacoeconomics, health care systems, health care organization and management, statistics and biostatistics, outcomes research, health care policy, pharmacy services, and pharmaceutical industry operations.Examples: Pharmacoeconomics/Pharmaceutical Economics (MS) Pharmacoeconomics/Pharmaceutical Economics (PhD) 51.2008 Clinical, Hospital, and Managed Care Pharmacy.A program that prepares individuals to deliver specialized pharmacy services and produce pharmaceutical products in clinical settings in conjunction with other health care professionals. Includes instruction in biostatistics; clinical pharmacokinetics; biopharmaceutics; neuropharmacology; pharmacodynamics; drug metabolism; clinical sampling and research design; drug delivery systems; chemotherapy; pharmacotherapy; clinical pharmacy management; medical and research ethics; and applications to nuclear, nutrition support, oncology, psychiatric, and therapeutic pharmacy.Examples: Clinical, Hospital, and Managed Care Pharmacy (MS) Clinical, Hospital, and Managed Care Pharmacy (PhD) 51.2009 Industrial and Physical Pharmacy and Cosmetic Sciences.A program that focuses on the application of pharmaceutical sciences and pharmacy to the study of pharmaceuticals production and distribution, and prepares individuals to manage pharmaceutical industry operations. Includes instruction in pharmacoeconomics, industrial management, operations management, preformulation evaluation, product formulation/reformulation, drug product development, stability testing, dosage design, pilot scale-up, drug marketing, quality control, drug information, and legal and regulatory affairs.Examples: Industrial and Physical Pharmacy and Cosmetic Sciences (MS) Industrial and Physical Pharmacy and Cosmetic Sciences (PhD) 51.2010 Pharmaceutical Sciences.A program that focuses on the basic sciences that underlie drugs and drug therapy and that prepares individuals for further study and/or careers in pharmaceutical science and research, pharmaceutical administration and sales, biotechnology, drug manufacturing, regulatory affairs, and related fields. Includes instruction in mathematics, biology, chemistry, physics, statistics, pharmaceutics, pharmacology and toxicology, dosage formulation, manufacturing, quality assurance, and regulations.See also: 26.1001 - Pharmacology. 51.2011 Pharmaceutical Marketing and Management.A program that combines the study of basic and pharmaceutical sciences with marketing and management studies; and that prepares individuals for careers in pharmaceutical sales, marketing, management, and related fields within the health care industry. Includes instruction in biology, chemistry, pharmaceutics, pharmacology, health care systems, issues and structure of pharmaceutical industry, management, pharmaceutical marketing, pharmaceutical and medical product management, and legal issues.Examples: Pharmaceutical Marketing 51.2099 Pharmacy, Pharmaceutical Sciences, and Administration, Other.Any instructional program in pharmacy, pharmaceutical sciences, and administration not listed above. 51.21 Podiatric Medicine/Podiatry. (Deleted)Deleted, Report under 51.1203 51.2101 Podiatric Medicine/Podiatry. (Moved from)Moved from 51.2101 to 51.1203 51.22 Public Health.Instructional content for this group of programs is defined in codes 51.2201 - 51.2299. 51.2201 Public Health, General.A program that generally prepares individuals to plan, manage, and evaluate public health care services; to function as public health professionals in public agencies, the private sector, and other settings; and to provide leadership in the field of public health. Includes instruction in epidemiology, biostatistics, public health principles, preventive medicine, health policy and regulations, health care services and related administrative functions, public health law enforcement, health economics and budgeting, public communications, and professional standards and ethics.Examples: Public Health, General (MPH) Public Health, General (DPH)See also: 26.1309 - Epidemiology., 44.0503 - Health Policy Analysis. 51.2202 Environmental Health.A program that focuses on the application of environmental sciences, public health, the biomedical sciences, and environmental toxicology to the study of environmental factors affecting human health, safety, and related ecological issues, and prepares individuals to function as professional environmental health specialists. Includes instruction in epidemiology, biostatistics, toxicology, public policy analysis, public management, risk assessment, communications, environmental law, occupational health and safety emergency response, and applications such as air quality, food protection, radiation protection, solid and hazardous waste management, water quality, soil quality, noise abatement, housing quality, and environmental control of recreational areas. 51.2205 Health/Medical Physics.A program that focuses on the application of physics, nuclear science, and engineering physics to diagnostic, treatment, and therapeutic processes and public health protection. Includes instruction in radiation biophysics, biophysics, health effects of natural and artificially induced radiation, hazard evaluation, environmental radioactivity, nuclear physics, engineering physics, radiobiology, medical radiology, calibration and dosage theory, computer applications and medical informatics, and specific research problems.Examples: Biomedical PhysicsSee also: 26.0203 - Biophysics. 51.2206 Occupational Health and Industrial Hygiene.A program that prepares public health specialists to monitor and evaluate health and related safety standards in industrial, commercial, and government workplaces and facilities. Includes instruction in occupational health and safety standards and regulations; health-related aspects of various occupations and work environments; health hazard testing and evaluation; test equipment operation and maintenance; industrial toxicology; worker health and safety education; and the analysis and testing of job-related equipment, behavior practices, and protective devices and procedures.Examples: Industrial Hygiene 51.2207 Public Health Education and Promotion.A program that focuses on the application of educational and communications principles and methods to the promotion of preventive health measures and the education of targeted populations on health issues, and prepares individuals to function as public health educators and health promotion specialists. Includes instruction in human development, health issues across the life span, population-specific health issues, principles and methods of public health education, administration of health education campaigns and programs, evaluation methods, public communications, and applications to specific public health subjects and issues. 51.2208 Community Health and Preventive Medicine.A program that prepares public health specialists to plan and manage health services in local community settings, including the coordination of related support services, government agencies, and private resources. Includes instruction in public health, community health services and delivery, health behavior and cultural factors, local government operations, human services, health communication and promotion, health services administration in local settings, environmental health, preventive and comparative medicine, epidemiology, biostatistics, family and community health, and applicable law and regulations. 51.2209 Maternal and Child Health.A program that focuses on the application of public health specializations, public policy studies, and the social and behavioral sciences to issues of health affecting women, children, and families; and prepares individuals to function as maternal and child health specialists. Includes instruction in research design and testing, program evaluation, public policy analysis, public finance, economics of health care, community health, family development and dynamics, women’s studies, social psychology, fetal and child development, biostatistics, health education and promotion, nutrition, neonatal development, psychology, and social services delivery. 51.2210 International Public Health/International Health.A program that focuses on the application of public health specializations, the social and behavioral sciences, and policy and communications methods to the study of health problems in low- and middle-income countries and regions, and prepares individuals to function as professional international health specialists. Includes instruction in health education and promotion, research design and evaluation, infectious disease epidemiology, international health policy and management, public nutrition and food security, information systems, program evaluation, medical anthropology, international communication, behavioral sciences, maternal and child health, demography and population policy, and health care finance and economics.Examples: Global HealthSee also: 26.0509 - Infectious Disease and Global Health. 51.2211 Health Services Administration.A program that focuses on the application of policy analysis, public administration, business management, and communications to the planning and management of health services delivery systems in the public and private sectors, and prepares individuals to function as health services administrators and managers. Includes instruction in health systems planning, public health organization and management, pubic health policy formulation and analysis, finance, business and operations management, economics of health care, organizational and health communications, marketing, human resources management, and public health law and regulations. 51.2212 Behavioral Aspects of Health.A program that focuses on the biological, behavioral, and socio-cultural determinants of health and health behavior, and the interventions and policies aimed at improving community and population health. Includes instruction in behavioral sciences, public health practice and policy, human services, and research methods.Examples: Behavioral Health Biobehavioral Health Health and Social Behavior Health Behavior 51.2213 Patient Safety and Healthcare Quality. (New)A program that focuses on the application of transformative mechanisms and evidence-based protocols to reduce preventable patient harm and improve clinical outcomes. Includes instruction in healthcare quality, patient safety, research methods, program evaluation, epidemiology, legal and regulatory compliance, systems thinking, human factors engineering, and risk management. 51.2214 Public Health Genetics. (New)A program that prepares individuals to respond to the complex social, legal, ethical, and public health policy implications generated by genetic research. Includes instruction in biochemical genetics of complex diseases, bioethics, chromosomes and human disease, genetic counseling, genetic epidemiology, gene mapping, human population genetics, and the molecular basis of human inherited disease. 51.2280 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 51.2299 Public Health, Other.Any instructional program in public health not listed above.See also: 51.0504 - Dental Public Health and Education., 26.1309 - Epidemiology., 44.0503 - Health Policy Analysis. 51.23 Rehabilitation and Therapeutic Professions.Instructional content for this group of programs is defined in codes 51.2300 - 51.2399. 51.2300 Rehabilitation and Therapeutic Professions, General. (New)A program that prepares individuals to work with people who have learning disabilities, mental illness, and physical disabilities in a clinical, educational, or institutional setting. Includes instruction in abnormal psychology, assistive technology, case management, counseling techniques, cultural diversity, disability assessment and measurement, ethics, psychological and physiological aspects of disability, rehabilitation services, rehabilitation science, and vocational counseling. 51.2301 Art Therapy/Therapist.A program that prepares individuals, in consultation with other rehabilitation team members or in private practice, to use drawing and other art media forms to assess, treat, and rehabilitate individuals with mental, emotional, developmental, or physical disorders. Includes instruction in art, history and theory of art therapy, art therapeutic techniques, psychopathology, patient assessment and diagnosis, cultural diversity issues, legal and ethical practice issues, and professional standards and regulations. 51.2302 Dance Therapy/Therapist.A program that prepares individuals, in consultation with other rehabilitation team members or in private practice, to use the therapeutic application of creative dance movement to assist in promoting client rehabilitation and physical, emotional, and mental health. Includes instruction in neuroanatomy, personality development, movement and motor behavior, psychology, dance, creative expression modalities, improvisation, group psychology and leadership, client evaluation and supervision, dance therapy practice, and professional standards and ethics.See also: 51.3601 - Movement Therapy and Movement Education. 51.2305 Music Therapy/Therapist. CIP Title or Definition ChangedA program that prepares individuals, in association with a rehabilitation team or in private practice, to use music in therapeutic relationships to address the physical, psychological, cognitive, emotional, and social needs of clients. Includes instruction in music theory and performance, human growth and development, biomedical sciences, abnormal psychology, disabling conditions, patient assessment and diagnosis, treatment plan development and implementation, clinical evaluation, record-keeping, and professional standards and ethics. 51.2306 Occupational Therapy/Therapist.A program that prepares individuals to assist patients limited by physical, cognitive, psychosocial, mental, developmental, and learning disabilities, as well as adverse environmental conditions, to maximize their independence and maintain optimum health through a planned mix of acquired skills, performance motivation, environmental adaptations, assistive technologies, and physical agents. Includes instruction in the basic medical sciences, psychology, sociology, patient assessment and evaluation, standardized and non-standardized tests and measurements, assistive and rehabilitative technologies, ergonomics, environmental health, special education, vocational counseling, health education and promotion, and professional standards and ethics. 51.2307 Orthotist/Prosthetist.A program that prepares individuals, in consultation with physicians and other therapists, to design and fit orthoses for patients with disabling conditions of the limbs and/or spine, and prostheses for patients who have partial or total absence of a limb or significant superficial deformity. Includes instruction in biomechanics, gait analysis, pathomechanics, kinesiology, pathology, neuroanatomy, materials science, diagnostic imaging, patient analysis and measurement, impression taking, model rectification, assistive/restorative technology and engineering applications, product finishing, diagnostic and definitive fitting and alignment, power devices, postoperative management, and patient counseling and follow-up. 51.2308 Physical Therapy/Therapist. CIP Title or Definition ChangedA program that prepares individuals to evaluate, examine, diagnose, and alleviate physical functional impairments and limitations caused by injury or disease through the design and implementation of therapeutic interventions to promote fitness and health. Includes instruction in anatomy, behavioral sciences, biology, biomechanics, biophysical agents, care plan development and documentation, cellular histology, clinical evaluation and measurement, clinical reasoning, communication, exercise physiology, kinesiology, neuroscience, pharmacology, pathology, physiology, professional standards and ethics, rehabilitation psychology, and therapeutic exercise.Examples: Doctor of Physical Therapy (DPT) 51.2309 Therapeutic Recreation/Recreational Therapy.A program that prepares individuals to plan, organize, and direct recreational activities designed to promote health and well-being for patients who are physically, mentally, or emotionally disabled. Includes instruction in the foundations of therapeutic recreation, leisure education and counseling, program planning, therapeutic recreational modalities, basic anatomy and physiology, psychology, medical terminology, human growth and development, patient observation and evaluation, special needs populations, and professional standards and ethics. 51.2310 Vocational Rehabilitation Counseling/Counselor.A program that prepares individuals to counsel and assist disabled individuals and recovering patients in order to achieve their greatest physical, mental, social, educational, and vocational potential. Includes instruction in patient evaluation and testing, rehabilitation program planning, patient support services and referral, job analysis, adjustment psychology, rehabilitation services provision, patient counseling and education, applicable law and regulations, and professional standards and ethics.Examples: Rehabilitation Counseling Rehabilitation Services 51.2311 Kinesiotherapy/Kinesiotherapist.A program that prepares individuals, under the direction of physicians, to treat the effects of disease, injury, and congenital disorders through therapeutic exercise and education. Includes instruction in human anatomy, human physiology, kinesiology, biomechanics, therapeutic exercise and adapted physical education, human growth and development, motor learning and performance, testing and measurement, first aid and cardiopulmonary resuscitation, psychology, rehabilitation procedures, patient assessment and management, and professional standards and ethics.See also: 31.0505 - Exercise Science and Kinesiology. 51.2312 Assistive/Augmentative Technology and Rehabilitation Engineering.A program that prepares individuals to apply the principles of psychology, engineering, and occupational therapy to the design and implementation of technological interventions and systems to promote patient rehabilitation and function. Includes instruction in ergonomics, seating and mobility design, universal and near environment systems design, rehabilitation research, rehabilitation biomechanics, access and communications design, microprocessor-based technologies, neurological trauma, standards and testing, and service delivery management. 51.2313 Animal-Assisted Therapy.A program that prepares health and human service professionals to integrate the use of animals into their treatment practices in order to facilitate change in people with mental and physical disabilities. Includes instruction in psychology, psychology of disabilities, animal behavior, animal training, the human-animal bond, integration of animals into therapeutic settings, and ethical and cultural issues.Examples: Equine-Assisted Therapy 51.2314 Rehabilitation Science.A program that focuses on human function, disability, and rehabilitation from the perspectives of the health sciences, social sciences, psychology, engineering, and related fields. Includes instruction in psychological, social, and cultural aspects of disability and rehabilitation; sensory and motor function and dysfunction; biomechanics and kinesiology; assistive technology; rehabilitation instrumentation and methodology; statistics; and health and rehabilitation policy. 51.2315 Drama Therapy/Therapist. (New)A program that prepares individuals, in association with a rehabilitation team or in private practice, to use dramatic play, theater, role play, psychodrama, and dramatic ritual in therapeutic relationships to address the physical, psychological, cognitive, emotional, and social needs of clients. Includes instruction in drama theory and performance, human growth and development, biomedical sciences, abnormal psychology, disabling conditions, patient assessment and diagnosis, treatment plan development and implementation, clinical evaluation, record-keeping, and professional standards and ethics.See also: 50.0599 - Dramatic/Theatre Arts and Stagecraft, Other. 51.2316 Horticulture Therapy/Therapist. (New)A program that focuses on plant science and horticulture techniques to achieve measurable physical and mental health outcomes for individuals with physical or mental challenges. Includes instruction in abnormal psychology, adult development and aging, botany, facilities design, horticultural therapy, plant pathology, people-plant relationships, and psychology. 51.2317 Play Therapy/Therapist. (New)A program that prepares individuals to be a Registered Play Therapist (RPT) or a School Based-Registered Play Therapist (SB-RPT). Includes instruction in child development, theories of personality, psychotherapy, child and adolescent psychopathology, and ethics. 51.2399 Rehabilitation and Therapeutic Professions, Other.Any instructional program in rehabilitation and therapeutic professions not listed above. 51.24 Veterinary Medicine. (Moved from)Moved from 51.24 to 01.80 51.2401 Veterinary Medicine. (Moved from)Moved from 51.2401 to 01.8001 51.25 Veterinary Biomedical and Clinical Sciences. (Moved from)Moved from 51.25 to 01.81 51.2501 Veterinary Sciences/Veterinary Clinical Sciences, General. (Moved from)Moved from 51.2501 to 01.8101 51.2502 Veterinary Anatomy. (Moved from)Moved from 51.2502 to 01.8105 51.2503 Veterinary Physiology. (Moved from)Moved from 51.2503 to 01.8109 51.2504 Veterinary Microbiology and Immunobiology. (Moved from)Moved from 51.2504 to 01.8107 51.2505 Veterinary Pathology and Pathobiology. (Moved from)Moved from 51.2505 to 01.8108 51.2506 Veterinary Toxicology and Pharmacology. (Moved from)Moved from 51.2506 to 01.8111 51.2507 Large Animal/Food Animal and Equine Surgery and Medicine. (Moved from)Moved from 51.2507 to 01.8103 51.2508 Small/Companion Animal Surgery and Medicine. (Moved from)Moved from 51.2508 to 01.8104 51.2509 Comparative and Laboratory Animal Medicine. (Moved from)Moved from 51.2509 to 01.8102 51.2510 Veterinary Preventive Medicine, Epidemiology, and Public Health. (Moved from)Moved from 51.2510 to 01.8110 51.2511 Veterinary Infectious Diseases. (Moved from)Moved from 51.2511 to 01.8106 51.2599 Veterinary Biomedical and Clinical Sciences, Other. (Moved from)Moved from 51.2599 to 01.8199 51.26 Health Aides/Attendants/Orderlies.Instructional content for this group of programs is defined in codes 51.2601 - 51.2699. 51.2601 Health Aide.A program that prepares individuals to provide routine care and assistance to patients under the direct supervision of other health care professionals, and/or to perform routine maintenance and general assistance in health care facilities and laboratories. 51.2602 Home Health Aide/Home Attendant.A program that prepares individuals to provide routine care and support services for homebound disabled, recovering, or elderly people. Includes instruction in basic nutrition, home sanitation, infection control, first aid, taking vital signs, personal hygiene, interpersonal communication skills, supervised home management, emergency recognition and referral, geriatric care, and legal and ethical responsibilities. 51.2603 Medication Aide.A program that prepares individuals to administer prescribed medications; observe and report patient reactions and side effects; and perform related emergency and recording duties under the supervision of nurses and/or physicians. Includes instruction in basic anatomy and physiology, common medications and their effects, taking vital signs, oxygen administration, medication administration and application, record-keeping, and patient observation. 51.2604 Rehabilitation Aide. CIP Title or Definition ChangedA program that prepares individuals to assist in rehabilitation services under the supervision of occupational therapists, speech-language pathologists, and other therapeutic professionals, and to perform routine functions in support of rehabilitation. Includes instruction in roles and responsibilities of rehabilitation providers, basic function of the human body, disabling conditions, therapeutic skills, client management, and communication skills. 51.2605 Physical Therapy Technician/Aide. (New)A program that prepares individuals to assist in rehabilitation services under the supervision of physical therapists, and to perform routine functions in support of physical therapy and rehabilitation. Includes instruction in applied kinesiology, basic function of the human body, communication skills, principles and procedures of physical therapy, physical therapy modalities, and professional ethics. 51.2699 Health Aides/Attendants/Orderlies, Other.Any other instructional program that prepares individuals to provide routine patient care and assistance. 51.27 Medical Illustration and Informatics.Instructional content for this group of programs is defined in codes 51.2703 - 51.2799. 51.2703 Medical Illustration/Medical Illustrator.A program that prepares individuals to apply the principles and techniques of art and computer-assisted imaging, graphics, and animation to create visual materials to facilitate the recording and dissemination of biomedical knowledge for educational, research, and clinical purposes. Includes instruction in anatomy, physiology, pathology, histology, embryology, neuroanatomy, medical terminology, artistic media and techniques, illustration techniques, three-dimensional modeling, prosthetics, data display design, exhibit design and production, medical photography, multimedia, computer graphics and animation, digital imaging, business management, production technology, and instructional design. 51.2706 Medical Informatics.A program that focuses on the application of computer science and software engineering to medical research and clinical information technology support, and the development of advanced imaging, database, and decision systems. Includes instruction in computer science, health information systems architecture, medical knowledge structures, medical language and image processing, quantitative medical decision modeling, imaging techniques, electronic medical records, medical research systems, clinical decision support, and informatics aspects of specific research and practice problems.Examples: Biomedical Informatics Health Informatics Dental Informatics Nursing InformaticsSee also: 26.1103 - Bioinformatics., 11.0104 - Informatics. 51.2799 Medical Illustration and Informatics, Other.Any instructional program in medical illustration and informatics not listed above. 51.31 Dietetics and Clinical Nutrition Services.Instructional content for this group of programs is defined in codes 51.3101 - 51.3199. 51.3101 Dietetics/Dietitian.A program that prepares individuals to integrate and apply the principles of the food and nutrition sciences, human behavior, and the biomedical sciences to design and manage effective nutrition programs in a variety of settings. Includes instruction in human nutrition; nutrient metabolism; the role of foods and nutrition in health promotion and disease prevention; planning and directing food service activities; diet and nutrition analysis and planning; supervision of food storage and preparation; client education; and professional standards and regulations.Examples: Dietetics/Dietitian (RD) Registered Dietitian (RD) 51.3102 Clinical Nutrition/Nutritionist.A program that prepares individuals to apply the principles of dietetics and the biomedical and nutrition sciences to design and manage effective nutrition programs as part of clinical treatment and therapy programs, and to manage health care facility food services. Includes instruction in human nutrition, nutrient metabolism, the role of foods and nutrition in health promotion and disease prevention, nutrition as a treatment regime, planning and directing hospital food service programs, diet and nutrition analysis and planning, supervision of food storage and preparation, special diets, client education, and professional standards and regulations.See also: 19.0504 - Human Nutrition., 30.1901 - Nutrition Sciences. 51.3103 Dietetic Technician.A program that prepares individuals, under the supervision of registered dietitians and nutritionists, to implement nutritional and dietetic plans and provide direct client and patient services. Includes instruction in human nutrition, client interviewing and record keeping, dietary planning, food preparation and safety, food worker supervision, food service establishment monitoring and inspection, and applicable procedures and regulations.Examples: Dietetic Technician (DTR) Registered Dietetic Technician (DTR) 51.3104 Dietitian Assistant.A program that prepares individuals to assist registered dietitians in planning, preparing and serving meals to individuals with specific dietary needs. Includes instruction in equipment use, food preparation, diet regulations, food handling, safety and sanitary standards and administrative techniques and procedures. 51.3199 Dietetics and Clinical Nutrition Services, Other.Any instructional program in dietetics and clinical nutrition services not listed above. 51.32 Health Professions Education, Ethics, and Humanities. CIP Title or Definition ChangedInstructional content for this group of programs is defined in codes 51.3201 - 51.3299. 51.3201 Bioethics/Medical Ethics.A program that focuses on the application of ethics, religion, jurisprudence, and the social sciences to the analysis of health care issues, clinical decision making, and research procedures. Includes instruction in philosophical ethics, moral value, medical sociology, theology, spirituality and health, policy analysis, decision theory, and applications to problems such as death and dying, therapeutic relationships, organ transplantation, human and animal subjects, reproduction and fertility, health care justice, cultural sensitivity, needs assessment, professionalism, conflict of interest, chaplaincy, and clinical or emergency procedures.See also: 38.0104 - Applied and Professional Ethics. 51.3202 Health Professions Education. (New)A program that focuses on education and administration leadership skills for clinical educators across health professions and specialties. Includes instruction in academic leadership, assessment, clinical decision making, curriculum development, ethics, primary care education, program evaluation, research methods, and statistics.Examples: Teaching Certificate for Pharmacists Medical Education TeachingSee also: 61.0207 - Medical Education Fellowship Program. 51.3203 Nursing Education. (Moved to)A program that prepares registered nurses to teach in academic and clinical settings, including staff development. Includes instruction in advanced nursing practice, nursing role development, curriculum and instruction, program and course design, clinical instruction, and evaluation of learning. 51.3204 Medical/Health Humanities. (New)A program that explores the ethical, historical, literary, philosophical, and religious dimensions of medicine or health. Includes instruction in art, cultural studies, economics, ethics, history, literature, medical anthropology, philosophy, religion and spiritual thought, science and technology, visual art, and writing.Examples: Narrative Medicine 51.3205 History of Medicine. (New)A program that focuses on the historical evolution and socio-economic context of medical theories, education, practices, and technologies; and on the history of diseases, therapeutics, patients, and healers. Includes instruction in the concepts and methods of the historiography of medicine; the history of science, medicine, and technology; and of research methods in the history of medicine.See also: 54.0104 - History and Philosophy of Science and Technology., 30.1501 - Science, Technology and Society. 51.3206 Arts in Medicine/Health. (New)A program that focuses on the design, implementation, and management of programs that use the visual and performing arts in support of health and wellness among diverse individuals and communities. Includes instruction in dance, literary arts, music, theatre, healthcare systems, program administration, and public health.Examples: Theatre for Health Visual Arts in Medicine Dance in Medicine Music in Medicine Arts and Health Arts in Healthcare Arts in Public Health 51.3299 Health Professions Education, Ethics, and Humanities, Other. (New)Any instructional program in health professions education, ethics, and humanities not listed above.See also: 54.0104 - History and Philosophy of Science and Technology., 30.1501 - Science, Technology and Society., 45.0203 - Medical Anthropology. 51.33 Alternative and Complementary Medicine and Medical Systems.Instructional content for this group of programs is defined in codes 51.3300 - 51.3399. 51.3300 Alternative and Complementary Medicine and Medical Systems, General.A general program that focuses on the theories, science, and practice of alternative and complementary medicine and medical systems. Includes instruction in understanding acupuncture, herbal medicine, naturopathy, homeopathy, and other alternative and complementary medicine modalities; mind-body therapies; nutrition; comparison of conventional and alternative medicine; and medical ethics; and may include training in specific alternative and complementary medicine modalities. 51.3301 Acupuncture and Oriental Medicine.A program that prepares individuals for the independent professional practice of acupuncture, a Chinese system of health care and healing based on the use of pulse diagnosis, acupuncture point selection, and needle insertion, as well as herbs and other Asian treatment modalities. Includes instruction in basic Western medical sciences, Asian philosophy, Chinese medical anatomy and physiology, Chinese herbs, diagnostic techniques, patient observation and communication, acupuncture points and point selection, acupuncture techniques, acupuncture treatment of disease, pain management, practice management, and professional standards and ethics.Examples: Acupuncture Acupuncture and Oriental Medicine Oriental Medicine 51.3302 Traditional Chinese Medicine and Chinese Herbology.A program that prepares individuals for the independent professional practice of Chinese herbal medicine, a system based on the use of nutrition, natural products, and prescribed medical formulae to treat imbalances in the state of bodily health as defined in the Nei Ching Su Wen and other authorities. Includes instruction in the basic Western medical sciences, history and theory of Chinese medicine, Chinese medical anatomy and physiology, Chinese herbology, herbal prescription preparation, herbal patent medicine, herbal pharmacology, Chinese internal medicine and gynecology, febrile diseases, food therapy, practice management, and professional standards and ethics. 51.3303 Naturopathic Medicine/Naturopathy.A program that prepares individuals for the independent professional practice of naturopathic medicine, an holistic therapeutic approach combining medical knowledge with noninvasive natural, homeopathic, and non-Western therapies and emphasizing disease prevention, wellness, and self-healing. Includes instruction in the basic medical sciences, epidemiology, neuroscience, biostatistics, public and community health, laboratory and clinical diagnosis, pharmacognosy, botanical medicine, homeopathy, principles of Oriental medicine and Ayurveda, manipulative therapy, naturopathic therapeutics, therapeutic nutrition, case analysis and management, philosophy of naturopathy, patient counseling, practice management, and professional standards and ethics.Examples: Naturopathic Medicine/Naturopathy (ND) 51.3304 Homeopathic Medicine/Homeopathy.A program that prepares individuals for the independent professional practice of homeopathic medicine, an holistic therapeutic system using naturally occurring substances in highly diluted forms to mimic symptoms of illness and trigger autoimmune responses, based on the law of similars and other principles derived from the work of Samuel Hahnemann and others. Includes instruction in anatomy, physiology, pathology, toxicology, philosophy and theory of homeopathy, casetaking and case analysis, repertory, materia medica, constitutional typing, proving, practice management, and professional standards and ethics. 51.3305 Ayurvedic Medicine/Ayurveda.A program that prepares individuals for the independent professional practice of Ayurveda, a holistic health care system based on the use of dietary, lifestyle, spiritual, pharmacological and physical therapies to remove imbalances and restore health as defined in Vedic and other classical Sanskrit authorities in the Indian tradition. Includes instruction in Sanskrit; history, philosophy, and principles of Ayurveda; Ayurvedic pharmacology; anatomy and physiology; internal medicine; herbology; diagnostic techniques; patient examination and communication; therapeutic modalities; detoxification theory and practice; mind and body behavior modification; Yoga; clinical pediatrics and gynecology; diet therapies; treatment of specific diseases; and professional standards and ethics. 51.3306 Holistic/Integrative Health. CIP Title or Definition ChangedA program that focuses on the holistic interconnectedness of physical, psychological, social, spiritual, and environmental well-being and that integrates aspects of alternative, complementary, and conventional medicine to alleviate illness and promote, maintain, and optimize wellness. Includes instruction in anatomy and physiology, alternative diagnostic and healing methods, aromatherapy, biofeedback, energy medicine, environmental psychology, ethics, health coaching, herbal medicine, mind-body medicine, mindfulness, nutrition, somatic bodywork, and stress management. 51.3399 Alternative and Complementary Medicine and Medical Systems, Other.Any instructional program in alternative and complementary medicine and medical systems not listed above. 51.34 Alternative and Complementary Medical Support Services.Instructional content for this group of programs is defined in codes 51.3401 - 51.3499. 51.3401 Direct Entry Midwifery.A program that prepares individuals to provide pre-natal, natural birth, and immediate postpartum care to pregnant women in jurisdictions licensing direct (non-nursing) training for midwives. Includes instruction in basic obstetrics, women’s health, fetal development, childbirth education, maternal nutrition and health, labor support, natural childbirth, postpartum support, prebirth counseling and risk screening, management of obstetric emergencies, patient referral, applicable regulations, and professional standards and ethics.Examples: Direct Entry Midwifery Licensed Midwife (LM) Certified Professional Midwife (CPM) 51.3499 Alternative and Complementary Medical Support Services, Other.Any instructional program in alternative and complementary medical support services not listed above. 51.35 Somatic Bodywork and Related Therapeutic Services.Instructional content for this group of programs is defined in codes 51.3501 - 51.3599. 51.3501 Massage Therapy/Therapeutic Massage.A program that prepares individuals to provide relief and improved health and well-being to clients through the application of manual techniques for manipulating skin, muscles, and connective tissues. Includes instruction in Western (Swedish) massage, sports massage, myotherapy/trigger point massage, myofascial release, deep tissue massage, cranio-sacral therapy, reflexology, massage safety and emergency management, client counseling, practice management, applicable regulations, and professional standards and ethics. 51.3502 Asian Bodywork Therapy.A program that prepares individuals to provide relief and improved health and well-being based on Chinese medical principles through one or more of the traditional bodywork therapies of Asia. Includes instruction in acupressure, AMMA(r) Therapy, Chi Nei Tsang, Five Element Shiatsu, Integrative Eclectic Shiatsu, Japanese Shiatsu, Jin Shin Do(r) Bodymind Acupressure(tm), Macrobiotic Shiatsu, Anma Therapy, Thai massage, Tui na, Zen Shiatsu, Qigong, Okazaki(r) Restorative Massage, principles of Western and Chinese medicine, patient counseling and observation, practice management, applicable regulations, and professional standards and ethics. 51.3503 Somatic Bodywork.A program that prepares individuals to promote physical and emotional balance and well-being through the application of skilled touch principles and techniques. Includes instruction in therapeutic massage and other hands-on touch methods, anatomy and physiology, structural/functional integration and various holistic health systems (Rolfing/Structural Integration, colon hydrotherapy, Breema, Hellerwork, lymphatic drainage, Rosen Method, hydrotherapy, and others), client counseling, practice management, and applicable regulations and professional standards. 51.3599 Somatic Bodywork and Related Therapeutic Services, Other.Any instructional program in somatic bodywork and related therapeutic services not listed above. 51.36 Movement and Mind-Body Therapies and Education.Instructional content for this group of programs is defined in codes 51.3601 - 51.3699. 51.3601 Movement Therapy and Movement Education.A program that prepares individuals to use functional and expressive integration strategies to help promote somatic awareness and optimal psychophysical functioning. Includes instruction in skilled touch techniques, kinesthetic awareness processes, movement observation, patterning, client assessment and guidance, verbal and nonverbal communication, practice management, professional standards and ethics, and specific therapeutic and educational modalitiesSee also: 51.2302 - Dance Therapy/Therapist. 51.3602 Yoga Teacher Training/Yoga Therapy.A program that prepares individuals to function as professional instructors in the spiritual and physical therapy of Yoga in private, institutional, and clinical settings. Includes instruction in the principles of Ayurveda, philosophy of Yoga, warm-up and progressive exercises, breathing exercises, meditation, Yamas and Niyamas, instructional techniques, posture adjustment, student/client counseling and assessment, advanced Yoga disciplines and styles, business practices, and professional standards and ethics. 51.3603 Hypnotherapy/Hypnotherapist.A program that prepares individuals to employ the controlled inducement of altered states of consciousness, or trance, to reduce pain, resolve emotional conflicts, and enhance communications as part of diagnostic and treatment programs. Includes instruction in the principles of hypnosis and suggestion, induction and deepening, post-hypnotic suggestion, awakening techniques, regression, pacing and leading, resistance transformation, client testing and management, practice management and regulation, and professional standards and ethics. 51.3699 Movement and Mind-Body Therapies and Education, Other.Any instructional program in movement and mind-body therapies not listed above. 51.37 Energy and Biologically Based Therapies.Instructional content for this group of programs is defined in codes 51.3701 - 51.3799. 51.3701 Aromatherapy.A program that prepares individuals to provide therapeutic care through the preparation and application of extracted essential oils from plants, including flowers (botanicals), roots, berries, and bark. Includes instruction in aromatherapy history and theory, basic physiology of absorption, aromachemistry, organic chemistry, botanical taxonomy, carrier oils, essential oils, extraction methods, blending techniques, application methods, safety, client consultation and treatment planning, business management, professional standards and ethics, and applicable regulations. 51.3702 Herbalism/Herbalist.A program that prepares individuals to utilize the materia medica and clinical practices of Western, Native American, African, Australasian, and other herbal medicine traditions to prevent and cure illness and temporary physical disorders. Includes instruction in basic anatomy, physiology, pathology, and toxicology; nutrition; terminology and materia medica; therapeutic herbalism; herbal pharmacy; botanicals and ethnobotany; wildcrafting and harvesting; labeling and dispensing phytotherapy; counterindications; practice management; consultation skills; and professional standards and ethics. 51.3703 Polarity Therapy.A program that prepares individuals to promote health and well-being through application of the integrative therapeutic system based on the Human Energy Field theory developed by Randolph Stone. Includes instruction in polarity theory and principles, energy-based and orthodox anatomy and physiology, polarity processing, polarity bodywork, polarity yoga, energetic nutrition, energetic evaluation and assessment, client communication, practice management, and professional standards and ethics. 51.3704 Reiki.A program that prepares individuals to promote physical, emotional, and spiritual balance and healing through the manipulation of the body’s energy field to increase healing energy. Includes instruction in the history and philosophy of Usui Reiki, attunement, empowerment, self-treatment, direct and distance healing techniques, healing symbols, aura clearing, Reiki meditation, practice management, and related Reiki systems such as Lightarian, Urevia, and Magnified Healing. 51.3799 Energy and Biologically Based Therapies, Other.Any instructional program in alternative, complementary, and somatic health and therapeutic services not listed above (bioenergetics, cranio-sacral therapy, Therapeutic Touch, Qi Gong, and others). 51.38 Registered Nursing, Nursing Administration, Nursing Research and Clinical Nursing.Instructional content for this group of programs is defined in codes 51.3801 - 51.3899. 51.3801 Registered Nursing/Registered Nurse.A program that generally prepares individuals in the knowledge, techniques and procedures for promoting health, providing care for sick, disabled, infirmed, or other individuals or groups. Includes instruction in the administration of medication and treatments, assisting a physician during treatments and examinations, Referring patients to physicians and other health care specialists, and planning education for health maintenance.Examples: Nursing (ASN) Nursing (BSN, BScN) Nursing (MSN, MScN, MN) Registered Nurse (RN) 51.3802 Nursing Administration.A program that prepares registered nurses to manage nursing personnel and services in hospitals and other health care delivery agencies. Includes instruction in principles of health care administration, resource and financial management, health care law and policy, medical personnel management, and managed care operations.Examples: Nursing Administration (PhD) Nursing Administration (MSN, MScN, MS, MSc, MN) 51.3803 Adult Health Nurse/Nursing.A program that prepares registered nurses to provide general care for adult patients. Includes instruction in adult primary care, adult pathophysiology, clinical management of medication and treatments, patient assessment and education, patient referral, and planning adult health maintenance programs.Examples: Adult Nurse Practitioner 51.3804 Nurse Anesthetist.A program that prepares registered nurses to administer anesthetics and provide care for patients before, during and after anesthesia. Includes instruction in the biochemistry and physics of anesthesia; advanced anatomy and physiology; clinical pharmacology of anesthetics and adjunctive drugs; pain management; acute care and operating room practice; clinical technology and procedures; emergency intervention; patient assessment and education; and legal issues. 51.3805 Family Practice Nurse/Nursing.A program that prepares registered nurses to provide independent general care for family groups and individuals in the context of family living. Includes instruction in family theory and intervention, role synthesis, family primary care, nursing practice and health care policy, holistic practice, pediatric practice, gerontological practice, health assessment, clinical pharmacotherapeutics, clinical techniques, and pathopsychology.Examples: Family Practice Nurse Practitioner Family Nurse Practitioner Primary Health Care Nurse Practitioner Primary Care Nurse Practitioner 51.3806 Maternal/Child Health and Neonatal Nurse/Nursing.A program that prepares registered nurses to provide prenatal care to pregnant women and to mothers and their newborn infants. Includes instruction in perinatal and newborn health assessment, stabilization, and care; pathophysiology of pregnancy, fetuses, and the newborn; clinical management of high-risk pregnancies and newborns; perinatal and neonatal technology and clinical procedures; and patient education.Examples: Neonatal Nurse Practitioner 51.3807 Nurse Midwife/Nursing Midwifery.A program that prepares registered nurses to independently deliver babies and treat mothers in the prenatal, delivery, and post-delivery periods. Includes instruction in pre-delivery screening, physician referral, and the care of infants during the delivery and immediate post-delivery phases. 51.3808 Nursing Science.A research program that focuses on the study of advanced clinical practices, research methodologies, the administration of complex nursing services, and that prepares nurses to further the progress of nursing research through experimentation and clinical applications.Examples: Nursing Science (PhD) Nursing Science (MS, MSc, MSN, MN) 51.3809 Pediatric Nurse/Nursing.A program that prepares registered nurses to provide care for children from infancy through adolescence. Includes instruction in the administration of medication and treatments, assisting physicians, patient examination and referral, and planning and delivering health maintenance and health education programs.Examples: Pediatric Nurse Practitioner 51.3810 Psychiatric/Mental Health Nurse/Nursing.A program that prepares registered nurses to promote mental health and provide nursing care to patients with mental, emotional or behavioral disorders, in mental institutions or other settings. Includes instruction in psychopathology, behavioral health, counseling and intervention strategies, psychoeducation, mental health assessment and dual diagnosis, stabilization and management of psychotic illness, psychiatric care and rehabilitation, substance abuse, and crisis intervention.Examples: Psychiatric Nurse Practitioner 51.3811 Public Health/Community Nurse/Nursing.A program that prepares registered nurses to promote health and provide preventive and curative nursing services for groups or communities under the supervision of a public health agency. Includes instruction in community and rural health, family therapy and intervention, disease prevention, health education, and community health assessment. 51.3812 Perioperative/Operating Room and Surgical Nurse/Nursing.A program that prepares registered nurses to provide care to patients before and during surgery, and provide tableside assistance to surgeons. Includes instruction in operating room safety and preparation, aseptic technique, anesthesia, patient preparation, surgical instruments and procedures, sterilization and disinfecting, surgical drugs and solutions, hemostasis, emergency procedures, and patient/family education. 51.3813 Clinical Nurse Specialist.A program that prepares registered nurses to deliver direct patient and client care in clinical settings. Includes instruction in clinical pharmacotherapeutics, advanced clinical practice, holistic nursing, nursing practice and health care policy, administration and consultation services, health assessment, patient stabilization and care, and patient education. 51.3814 Critical Care Nursing.A program that prepares registered nurses to provide specialized care to patients with life-threatening problems, including those in intensive care facilities and on life support. Includes instruction in adult, neonatal, and pediatric critical care; technical skills; patient monitoring and assessment; normal and abnormal readings; and troubleshooting.Examples: Acute Care Nursing Acute Care Nurse Practitioner 51.3815 Occupational and Environmental Health Nursing.A program that prepares registered nurses to deliver nursing health care services to workers and worker populations in clinical settings and at job sites. Includes instruction in public and community health, occupational safety and health, occupational health surveillance, case management, fitness for duty testing, medication, allergies and immunization, emergency and ambulatory care, and applicable laws and regulations. 51.3816 Emergency Room/Trauma Nursing.A program that prepares registered nurses to deliver advanced, direct patient care in emergency and trauma settings. Includes instruction in advanced health assessment, pharmacology, physiology, emergency management, trauma conditions, trauma assessments and acute care.Examples: Emergency Nursing Emergency Nurse Practitioner Trauma Nursing Trauma, Critical Care and Emergency Nursing 51.3817 Nursing Education. (Moved from)Moved from 51.3817 to 51.3203 51.3818 Nursing Practice.A practice-focused program that prepares registered nurses for increasingly complex evidence-based nursing practice, including translating research into practice, evaluating evidence, applying research in decision-making, and implementing viable clinical innovations to change practice. Includes instruction in healthcare delivery systems, health economics and finance, health policy, research methods, translating evidence into practice, concepts in population health, and nursing leadership.Examples: Nursing Practice (DNP) 51.3819 Palliative Care Nursing.A program that prepares registered nurses to provide a combination of active and compassionate therapies intended to comfort and support patients and their families who are living with life-threatening illness. Includes instruction in pathophysiology, palliative care processes, pain management, pharmacology, loss, grief, death, and bereavement. 51.3820 Clinical Nurse Leader.A program that prepares registered nurses for careers as clinical nurse leaders in which they work as part of an interdisciplinary team that provides direct medical care for patients based on evidence-based practice and research. Includes instruction in pharmacology, pathophysiology, epidemiology, research in nursing methods, advanced health assessment, statistics, and clinical practice management. 51.3821 Geriatric Nurse/Nursing.A program that prepares registered nurses to provide health care to aging and elderly patients. Includes instruction in geriatric primary care, geriatric diagnosis, mental health and aging, primary care management, geriatric acute and chronic illness, advanced nursing practices for geriatric patients, evidence-based nursing practice, advanced physiology, pathophysiology, pharmacology, and pharmacotherapeutics.Examples: Gerontological Nurse Practitioner 51.3822 Women’s Health Nurse/Nursing.A program that prepares registered nurses to provide health care specific to women. Includes instruction in the wellness and care of women, gynecology, obstetrics, advanced nursing practices for women, evidence-based nursing practice, advanced physiology and pathophysiology, advanced pharmacology, and pharmacotherapeutics.Examples: Women’s Health Nurse Practitioner 51.3823 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 51.3824 Forensic Nursing. (New)A program that prepares individuals to apply the law and forensic science to nursing practice and collaborate with other professionals for the care of victims and the prosecution of criminals. Includes instruction in advanced physical assessment, evidence collection and preservation, forensic anthropology, legal testimony, medicolegal investigation, pathophysiology, pathohistology, pharmacology, and violence prevention. 51.3899 Registered Nursing, Nursing Administration, Nursing Research and Clinical Nursing, Other.Any instructional program in registered nursing, nursing administration, nursing research, and clinical nursing not listed above.Examples: Cardiology Nurse Practitioner Nephrology Nurse Practitioner 51.39 Practical Nursing, Vocational Nursing and Nursing Assistants.Instructional content for this group of programs is defined in codes 51.3901 - 51.3999. 51.3901 Licensed Practical/Vocational Nurse Training.A program that prepares individuals to assist in providing general nursing care under the direction of a registered nurse, physician or dentist. Includes instruction in taking patient vital signs, applying sterile dressings, patient health education, and assistance with examinations and treatment.Examples: Licensed Practical Nurse (LPN) Licensed Vocational Nurse (LVN) Licensed Practical/Vocational Nurse Training (Cert.) Licensed Practical/Vocational Nurse Training (Dipl) Licensed Practical/Vocational Nurse Training (AAS) 51.3902 Nursing Assistant/Aide and Patient Care Assistant/Aide.A program that prepares individuals to perform routine nursing-related services to patients in hospitals or long-term care facilities, under the training and supervision of a registered nurse or licensed practical nurse. 51.3999 Practical Nursing, Vocational Nursing and Nursing Assistants, Other.Any instructional program in practical nursing, vocational nursing, and nursing assistants not listed above. 51.99 Health Professions and Related Clinical Sciences, Other.Instructional content for this group of programs is defined in codes 51.9980 - 51.9999. 51.9980 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 51.9999 Health Professions and Related Clinical Sciences, Other.Any instructional program in the health professions and related clinical sciences not listed above. 52 BUSINESS, MANAGEMENT, MARKETING, AND RELATED SUPPORT SERVICESInstructional programs that prepare individuals to perform managerial, technical support, and applied research functions related to the operation of commercial and non-profit enterprises and the buying and selling of goods and services. 52.01 Business/Commerce, General.Instructional content is defined in code 52.0101. 52.0101 Business/Commerce, General.A program that focuses on the general study of business, including the processes of interchanging goods and services (buying, selling and producing), business organization, and accounting as used in profit-making and nonprofit public and private institutions and agencies. The programs may prepare individuals to apply business principles and techniques in various occupational settings. 52.02 Business Administration, Management and Operations.Instructional content for this group of programs is defined in codes 52.0201 - 52.0299. 52.0201 Business Administration and Management, General.A program that generally prepares individuals to plan, organize, direct, and control the functions and processes of a firm or organization. Includes instruction in management theory, human resources management and behavior, accounting and other quantitative methods, purchasing and logistics, organization and production, marketing, and business decision-making.Examples: General Management Business Administration 52.0202 Purchasing, Procurement/Acquisitions and Contracts Management.A program that prepares individuals to manage and/or administer the processes by which a firm or organization contracts for goods and services to support its operations, as well as contracts it to sell to other firms or organizations. Includes instruction in contract law, negotiations, buying procedures, government contracting, cost and price analysis, vendor relations, contract administration, auditing and inspection, relations with other firm departments, and applications to special areas such as high-technology systems, international purchasing, and construction.Examples: Purchasing Management Contracts Management Acquisition/Procurement Management 52.0203 Logistics, Materials, and Supply Chain Management.A program that prepares individuals to manage and coordinate all logistical functions in an enterprise, ranging from acquisitions to receiving and handling, through internal allocation of resources to operations units, to the handling and delivery of output. Includes instruction in acquisitions and purchasing, inventory control, storage and handling, just-in-time manufacturing, logistics planning, shipping and delivery management, transportation, quality control, resource estimation and allocation, and budgeting.Examples: Logistics Management Materials Management Acquisition Logistics Supply Management 52.0204 Office Management and Supervision.A program that prepares individuals to supervise and manage the operations and personnel of business offices and management-level divisions. Includes instruction in employee supervision, management, and labor relations; budgeting; scheduling and coordination; office systems operation and maintenance; office records management, organization, and security; office facilities design and space management; preparation and evaluation of business management data; and public relations.See also: 51.0705 - Medical Office Management/Administration. 52.0205 Operations Management and Supervision.A program that prepares individuals to manage and direct the physical and/or technical functions of a firm or organization, particularly those relating to development, production, and manufacturing. Includes instruction in principles of general management, manufacturing and production systems, plant management, equipment maintenance management, production control, industrial labor relations and skilled trades supervision, strategic manufacturing policy, systems analysis, productivity analysis and cost control, and materials planning.Examples: Maintenance Management Production Management 52.0206 Non-Profit/Public/Organizational Management.A program that prepares individuals to manage the business affairs of non-profit corporations, including foundations, educational institutions, associations, and other such organizations, and public agencies and governmental operations. Includes instruction in business management, principles of public administration, principles of accounting and financial management, human resources management, taxation of non-profit organizations, and business law as applied to non-profit organizations.See also: 39.0801 - Religious Institution Administration and Management. 52.0207 Customer Service Management.A program that prepares individuals to supervise and monitor customer service performance and manage frontline customer support services, call centers/help desks, and customer relations. Includes instruction in customer behavior, specialized information technology and systems management, developing and using customer service databases, user surveys and other feedback mechanisms, strategic and performance planning and analysis, operations management, personnel supervision, and communications and marketing skills. 52.0208 E-Commerce/Electronic Commerce.A program that prepares individuals to plan, manage, supervise, and market electronic business operations, products, and services provided online via the Internet. Includes instruction in business administration, information technology, information resources management, web design, computer and Internet law and policy, computer privacy and security, e-trading, insurance, electronic marketing, investment capital planning, enterprise operations, personnel supervision, contracting, and product and service networking. 52.0209 Transportation/Mobility Management. CIP Title or Definition ChangedA program that focuses on the theory, policy, law, and practices required to administrate and operate public transportation facilities, networks, services, and systems. Includes instruction in demand analysis and forecasting, environmental planning, facilities design and construction, geographic information systems (GIS), logistics, multi- and intermodal transportation systems, project management, public administration, public policy, transportation economics, transportation law, transportation operations, transportation systems, and transportation technologies.Examples: Mobility Management Air Mobility Sea Mobility Freight Forwarding Customs Broker Transportation Administration and ManagementSee also: 44.0403 - Transportation and Infrastructure Planning/Studies. 52.0210 Research and Development Management.A program that prepares individuals to manage projects, programs and organizations involving basic and applied research, or specialized technology applications, in the public or private sectors. Includes instruction in all aspects of business management applied to the leadership and control of scientific, clinical, engineering and social scientific enterprises; the management of related operational, security and logistical issues; and technical competence in one or more research disciplines. 52.0211 Project Management.A program that prepares individuals to apply quantitative and qualitative knowledge, skills, tools, and techniques to manage projects in a wide range of fields and occupations. Includes instruction in project planning, risk management, cost and time management, contracts and procurement, accounting, statistics, decision making, and human resources.See also: 11.1005 - Information Technology Project Management. 52.0212 Retail Management.A program that prepares individuals to manage the operations of a wide variety of retail businesses, including department stores; independent and chain stores; fashion, food and beverage, and pharmaceutical establishments; and online retail businesses. Includes instruction in retail management, merchandise management, customer service management, marketing, organizational behavior, accounting, finance, business law, and personnel management. 52.0213 Organizational Leadership.A program that focuses on leadership skills that can be applied to a business, government, non-profit, or educational setting. Includes instruction in organizational planning, dynamics of leadership, finance, team building, conflict resolution and mediation, communication and other management skills.Examples: Leadership Studies Nonprofit Leadership Studies 52.0214 Research Administration. (New)A program designed to prepare formally trained, advanced-level personnel for research administration leadership positions at colleges and universities, government agencies, hospitals, nonprofit agencies, and in industry. Includes instruction in bioethics, biostatistics, ethical, legal and regulatory consideration in clinical investigation, financial analysis, grant writing, managing and monitoring clinical trials, project management, strategic planning, and team building.See also: 51.0720 - Regulatory Science/Affairs. 52.0215 Risk Management. (New)A program that focuses on the principles of business risk measurement, mitigation, and management. Includes instruction in business analytics, foundations of insurance and risk management, investments, life and health insurance, loss prevention, property and liability insurance risk assessment, risk control, risk financing, and security. 52.0216 Science/Technology Management. (New)A program that prepares individuals to develop science, technical, and business skills required for management of people and systems in technology-based industries, government agencies, and non-profit organizations. Includes instruction in computer applications, general management principles, production and operations management, project management, quality control, safety and health issues, and statistics. 52.0299 Business Administration, Management and Operations, Other.Any instructional program in business and administration not listed above.See also: 51.0701 - Health/Health Care Administration/Management., 51.0702 - Hospital and Health Care Facilities Administration/Management. 52.03 Accounting and Related Services.Instructional content for this group of programs is defined in codes 52.0301 - 52.0399. 52.0301 Accounting.A program that prepares individuals to practice the profession of accounting and to perform related business functions. Includes instruction in accounting principles and theory, financial accounting, managerial accounting, cost accounting, budget control, tax accounting, legal aspects of accounting, auditing, reporting procedures, statement analysis, planning and consulting, business information systems, accounting research methods, professional standards and ethics, and applications to specific for-profit, public, and non-profit organizations. 52.0302 Accounting Technology/Technician and Bookkeeping.A program that prepares individuals to provide technical administrative support to professional accountants and other financial management personnel. Includes instruction in posting transactions to accounts, record-keeping systems, accounting software operation, and general accounting principles and practices. 52.0303 Auditing.A program that prepares individuals, including certified accountants, to perform independent internal and external appraisals to evaluate organizational financial and operational activities, ensure compliance with laws and policies, safeguard assets, and promote effective planning and resource allocation. Includes instruction in advanced accounting, audit tools and techniques, sampling, risk and control, audit planning, audit function management, law and regulations, environmental auditing, information technology applications, professional standards and ethics, and specific industry and service sector problems. 52.0304 Accounting and Finance.An integrated or combined program in accounting and finance that prepares individuals to function as accountants and financial managers or analysts.See also: 52.0301 - Accounting., 52.0801 - Finance, General. 52.0305 Accounting and Business/Management.An integrated or combined program in accounting and business administration/management that prepares individuals to function as accountants and business managers.See also: 52.0201 - Business Administration and Management, General., 52.0301 - Accounting. 52.0399 Accounting and Related Services, Other.Any instructional program in accounting not listed above.Examples: Controllership 52.04 Business Operations Support and Assistant Services.Instructional content for this group of programs is defined in codes 52.0401 - 52.0499. 52.0401 Administrative Assistant and Secretarial Science, General.A program that generally prepares individuals to perform the duties of administrative assistants and/or secretaries and stenographers. Includes instruction in business communications, principles of business law, word processing and data entry, office machines operation and maintenance, office procedures, public relations, secretarial accounting, filing systems and records management, and report preparation.See also: 22.0301 - Legal Administrative Assistant/Secretary., 51.0716 - Medical Administrative/Executive Assistant and Medical Secretary. 52.0402 Executive Assistant/Executive Secretary.A program that prepares individuals to perform the duties of special assistants and/or personal secretaries for business executives and top management. Includes instruction in business communications, principles of business law, public relations, scheduling and travel management, secretarial accounting, filing systems and records management, conference and meeting recording, report preparation, office equipment and procedures, office supervisory skills, and professional standards and legal requirements.See also: 51.0716 - Medical Administrative/Executive Assistant and Medical Secretary. 52.0406 Receptionist.A program that prepares individuals to perform frontline public relations duties for a business, organization, or answering service. Includes instruction in telephone answering techniques, responding to information requests, keeping caller and/or visitor records, placing business calls, operating telephone switchboards and/or other communications equipment, relaying incoming and interoffice calls, schedule maintenance, and public relations skills.See also: 51.0712 - Medical Reception/Receptionist., 01.8203 - Veterinary Reception/Receptionist. 52.0407 Business/Office Automation/Technology/Data Entry.A program that prepares individuals to support business information operations by using computer equipment to enter, process, and retrieve data for a wide variety of administrative purposes. Includes instruction in using basic business software and hardware, business computer networking, principles of desktop publishing, preparing mass mailings, compiling and editing spreadsheets, list maintenance, preparing tables and graphs, receipt control, and preparing business performance reports. 52.0408 General Office Occupations and Clerical Services.A program that prepares individuals to provide basic administrative support under the supervision of office managers, administrative assistants, secretaries, and other office personnel. Includes instruction in typing, keyboarding, filing, general business correspondence, office equipment operation, and communications skills. 52.0409 Parts, Warehousing, and Inventory Management Operations.A program that prepares individuals to provide administrative, technical, and managerial support in the operation of warehouses, control of inventory, parts identification, and the performance of counter services for customers. Includes instruction in record-keeping, equipment operation, database entry, supply logistics, shop operations and math, and customer and supplier relations. 52.0410 Traffic, Customs, and Transportation Clerk/Technician.A program that prepares individuals to perform duties associated with managing revenue-based customs, traffic, or transportation services, such as control of domestic and international traffic, toll roads and waterways, and to assist in the dispatch and control of fleet-based traffic for businesses and public services. Includes instruction in record-keeping; preparation of customs and transportation documentation; operation of communications equipment; basic transportation operations management; tariffs, rates and fares; revenue collection and change-making; and interpretation of customs or transportation regulations and related legislation, policies, and procedures. 52.0411 Customer Service Support/Call Center/Teleservice Operation.A program that prepares individuals to assist customers with inquiries and problems in frontline call centers, help desks, teleservice centers, and online. Includes instruction in user interfaces and user behavior, principles of hardware and software systems operation, customer interaction skills, telephone and e-mailing skills, data entry, and database and Internet searching and retrieval. 52.0499 Business Operations Support and Secretarial Services, Other.Any instructional program in administrative and secretarial services not listed above. 52.05 Business/Corporate Communications.Instructional content for this group of programs is defined in codes 52.0501 - 52.0599. 52.0501 Business/Corporate Communications, General. CIP Title or Definition ChangedA program that prepares individuals to function in an organization as a composer, editor, and proofreader of business or business-related communications. 52.0502 Grantsmanship. (New)A program that prepares individuals to develop and write grant proposals to support an organization or cause. Includes instruction in identifying grant opportunities, developing an effective proposal, budget justifications, and developing a working relationship with the funder. 52.0599 Business/Corporate Communications, Other. (New)Any program in business or corporate communications not included above. 52.06 Business/Managerial Economics.Instructional content is defined in code 52.0601. 52.0601 Business/Managerial Economics.A program that focuses on the application of economics principles to the analysis of the organization and operation of business enterprises. Includes instruction in monetary theory, banking and financial systems, theory of competition, pricing theory, wage and salary/incentive theory, analysis of markets, and applications of econometrics and quantitative methods to the study of particular businesses and business problems. 52.07 Entrepreneurial and Small Business Operations.Instructional content for this group of programs is defined in codes 52.0701 - 52.0799. 52.0701 Entrepreneurship/Entrepreneurial Studies.A program that generally prepares individuals to perform development, marketing and management functions associated with owning and operating a business. 52.0702 Franchising and Franchise Operations.A program that prepares individuals to manage and operate franchises. Includes instruction in legal requirements, set-up costs and capitalization requirements, financing, and applications to specific franchise opportunities. 52.0703 Small Business Administration/Management.A program that prepares individuals to develop and manage independent small businesses. Includes instruction in business administration; enterprise planning and entrepreneurship; start-up; small business operations and problems; personnel supervision; capitalization and investment; taxation; business law and regulations; e-commerce; home business operations; and applications to specific sectors, products, and services. 52.0704 Social Entrepreneurship. (New)A program that focuses on blending entrepreneurial ideas and management skills for issue advocacy and social change. Includes instruction in philanthropy, business modeling, design, entrepreneurship, finance, investing, resource management, project management, prototype development, and marketing.See also: 13.0413 - Education Entrepreneurship. 52.0799 Entrepreneurial and Small Business Operations, Other.Any instructional program in enterprise management and entrepreneurship not listed above. 52.08 Finance and Financial Management Services.Instructional content for this group of programs is defined in codes 52.0801 - 52.0899. 52.0801 Finance, General.A program that generally prepares individuals to plan, manage, and analyze the financial and monetary aspects and performance of business enterprises, banking institutions, or other organizations. Includes instruction in principles of accounting, financial instruments, capital planning, funds acquisition, asset and debt management, budgeting, financial analysis, and investments and portfolio management. 52.0803 Banking and Financial Support Services.A program that prepares individuals to perform a wide variety of customer services in banks, insurance agencies, savings and loan companies, and related enterprises. Includes instruction in communications and public relations skills, business equipment operation, and technical skills applicable to the methods and operations of specific financial or insurance services. 52.0804 Financial Planning and Services.A program that prepares individuals to plan and manage the financial interests and growth of individuals and institutions. Includes instruction in portfolio management, investment management, estate planning, insurance, tax planning, strategic investing and planning, financial consulting services, and client relations.See also: 19.0401 - Family Resource Management Studies, General. 52.0806 International Finance.A program that prepares individuals to manage international financial operations and related currency transactions. Includes instruction in international banking, international monetary and financial policy, money and capital markets, foreign exchange, risk analysis, and international cash flow operations.See also: 45.0605 - International Economics. 52.0807 Investments and Securities.A program that prepares individuals to manage assets placed in capital markets, and related technical operations. Includes instruction in security analysis, debt and equity analysis, investment strategies, securities markets, computer-assisted research, portfolio management, portfolio performance analysis, and applications to specific investment problems and business situations. 52.0808 Public Finance.A program that prepares individuals to manage the financial assets and budgets of public sector organizations. Includes instruction in public trusts and investments; the laws and procedures used to plan, prepare and administer public agency budgets; and the preparation and analysis of public budget projections and policies. 52.0809 Credit Management.A program that prepares individuals to perform and/or manage operations concerning personal and corporate credit, collateral, loan processing, and related financial agency communications. Includes instruction in general finance and banking principles, insurance, real estate, taxation, business law and regulations, quantitative methods, financial computer systems applications, database management, communications skills, business and office management, and professional standards and ethics.Examples: Mortgage Broker 52.0810 Financial Risk Management. (New)A program that focuses on the strategies used to define and manage acceptable financial risk for companies. Includes instruction in banking and bank regulations, derivative securities, interest rate and credit markets, financial engineering of systematic risk, and equity, bond, futures, and options markets. 52.0899 Finance and Financial Management Services, Other.Any instructional program in financial management and services not listed above. 52.09 Hospitality Administration/Management.Instructional content for this group of programs is defined in codes 52.0901 - 52.0999. 52.0901 Hospitality Administration/Management, General.A program that prepares individuals to serve as general managers and directors of hospitality operations on a system-wide basis, including both travel arrangements and promotion and the provision of traveler facilities. Includes instruction in principles of operations in the travel and tourism, hotel and lodging facilities, food services, and recreation facilities industries; hospitality marketing strategies; hospitality planning; management and coordination of franchise and unit operations; business management; accounting and financial management; hospitality transportation and logistics; and hospitality industry policies and regulations. 52.0903 Tourism and Travel Services Management.A program that prepares individuals to manage travel-related enterprises and related convention and/or tour services. Includes instruction in travel agency management, tour arranging and planning, convention and event planning, travel industry operations and procedures, tourism marketing and promotion strategies, travel counseling, travel industry law, international and domestic operations, and travel and tourism policy.See also: 03.0207 - Environmental/Natural Resource Recreation and Tourism. 52.0904 Hotel/Motel Administration/Management.A program that prepares individuals to manage operations and facilities that provide lodging services to the traveling public. Includes instruction in hospitality industry principles; supplies purchasing, storage and control; hotel facilities design and planning; hospitality industry law; personnel management and labor relations; financial management; marketing and sales promotion; convention and event management; front desk operations; and applications to specific types of hotels and motel operations. 52.0905 Restaurant/Food Services Management.A program that prepares individuals to plan, manage, and market restaurants, food services in hospitality establishments, food service chains and franchise networks, and restaurant supply operations. Includes instruction in hospitality administration, food services management, wholesale logistics and distribution, franchise operations, business networking, personnel management, culinary arts, business planning and capitalization, food industry operations, marketing and retailing, business law and regulations, finance, and professional standards and ethics.See also: 12.0504 - Restaurant, Culinary, and Catering Management/Manager., 19.0505 - Foodservice Systems Administration/Management. 52.0906 Resort Management.A program that prepares individuals to plan, manage, and market comprehensive vacation facilities and services and related products. Includes instruction in hospitality administration, hotel/motel management, restaurant and food services management, facilities planning, leisure studies, recreation administration, marketing, recreation equipment and grounds operations and maintenance, business finance, insurance and taxation, event management and guest services, personnel management, travel and logistics management, safety and health services, professional standards and ethics, and applications to specific vacation types and locations.Examples: Spa Management Resort and Attraction Management 52.0907 Meeting and Event Planning.A program that prepares individuals to plan, budget, and implement conferences, meetings, and other special events in the public or private sectors. Includes instruction in principles of meeting and event planning; special event management; budgets and finance; site selection; contracts, vendors, and negotiations; marketing and promotions; food and beverage management; audio-visual basics and meeting technology; and hospitality law.Examples: Conference Management Conference Planning Wedding PlanningSee also: 19.0604 - Facilities Planning and Management. 52.0908 Casino Management. CIP Title or Definition ChangedA program that prepares individuals to manage casinos and gaming establishments. Includes instruction in business and financial management; casino operations; casino security and surveillance; hospitality, facilities, and personnel management; and principles of the gaming industry, ethics, and gaming law.Examples: Casino Management Gaming and Casino Management Hospitality and Casino ManagementSee also: 12.0601 - Casino Operations and Services, General. 52.0909 Hotel, Motel, and Restaurant Management.An instructional program that prepares individuals to manage operations and facilities that provide food and/or lodging services to the traveling public. Includes instruction in hospitality industry principles; supplies purchasing, storage, and control; hotel and restaurant facilities design and planning; hospitality industry law; personnel management and labor relations; financial management; facilities management; marketing and sale promotion strategies; convention and event management; front desk operations; and applications to specific types of hotel, motel, and/or restaurant operations. Note: this program was re-instated after being deleted from CIP 2000; previously, it was coded as 52.0902.See also: 52.0904 - Hotel/Motel Administration/Management., 52.0905 - Restaurant/Food Services Management. 52.0910 Brewery/Brewpub Operations/Management. (New)A program that prepares individuals to plan, manage, and market breweries and brewpubs. Includes instruction in brewing science, food services management, logistics and distribution, business networking, personnel management, business planning and capitalization, brewing industry operations, marketing, alcohol and liquor law and regulations, finance, and ethics.See also: 01.1003 - Brewing Science., 01.1005 - Zymology/Fermentation Science. 52.0999 Hospitality Administration/Management, Other.Any instructional program in hospitality service management not listed above. 52.10 Human Resources Management and Services.Instructional content for this group of programs is defined in codes 52.1001 - 52.1099. 52.1001 Human Resources Management/Personnel Administration, General.A program that generally prepares individuals to manage the development of human capital in organizations, and to provide related services to individuals and groups. Includes instruction in personnel and organization policy, human resource dynamics and flows, labor relations, sex roles, civil rights, human resources law and regulations, motivation and compensation systems, work systems, career management, employee testing and assessment, recruitment and selection, managing employee and job training programs, and the management of human resources programs and operations. 52.1002 Labor and Industrial Relations.A program that focuses on employee-management interactions and the management of issues and disputes regarding working conditions and worker benefit packages, and that may prepare individuals to function as labor or personnel relations specialists. Includes instruction in labor history, policies and strategies of the labor movement, union organization, labor-management negotiation, labor law and contract interpretation, labor economics, welfare and benefit packages, grievance procedures, and labor policy studies. 52.1003 Organizational Behavior Studies.A program that focuses on the scientific study of the behavior and motivations of individuals functioning in organized groups, and its application to business and industrial settings. Includes instruction in organization theory, industrial and organizational psychology, social psychology, sociology of organizations, reinforcement and incentive theory, employee relations strategies, organizational power and influence, organization stratification and hierarchy, leadership styles, and applications of operations research and other methodologies to organizational analysis.See also: 42.2804 - Industrial and Organizational Psychology., 09.0901 - Organizational Communication, General. 52.1004 Labor Studies.A program that focuses on the study of various aspects of work, labor organization and policy, and labor movements from the perspective of the social sciences and history. Includes instruction in labor history; political and ideological issues; worker movements and social organizations; civil rights; labor law and policy studies; labor economics; international and comparative labor studies; and applications to specific industries, groups, locations, and time periods. 52.1005 Human Resources Development.A program that prepares individuals to apply integrated training, organizational development, and career planning and counseling skills to the design, management, and evaluation of programs to improve individual productivity, employability, and job satisfaction and organizational effectiveness. Includes instruction in psychology; organizational behavior; principles of adult education; occupational counseling; skill testing and evaluation; program design; consulting practice; organizational development; and applications to issues such as training, management development, customer service, and total quality management. 52.1006 Executive/Career Coaching. (New)A program of study that focuses on assisting individuals achieve career goals or assisting business leaders achieve organizational change. Includes instruction in executive coaching, group dynamics, leadership, management, organizational behavior, organizational communication, and team building. 52.1099 Human Resources Management and Services, Other.Any instructional program in human resources management not listed above. 52.11 International Business.Instructional content is defined in code 52.1101. 52.1101 International Business/Trade/Commerce.A program that prepares individuals to manage international businesses and/or business operations. Includes instruction in the principles and processes of export sales, trade controls, foreign operations and related problems, monetary issues, international business policy, and applications to doing business in specific countries and markets.Examples: Global Business Global Commerce Global ManagementSee also: 45.0605 - International Economics. 52.12 Management Information Systems and Services.Instructional content for this group of programs is defined in codes 52.1201 - 52.1299. 52.1201 Management Information Systems, General.A program that generally prepares individuals to provide and manage data systems and related facilities for processing and retrieving internal business information; select systems and train personnel; and respond to external data requests. Includes instruction in cost and accounting information systems, management control systems, personnel information systems, data storage and security, business systems networking, report preparation, computer facilities and equipment operation and maintenance, operator supervision and training, and management information systems policy and planning.See also: 11.0401 - Information Science/Studies. 52.1206 Information Resources Management.A program that prepares individuals to apply principles of information technology, computer systems management, and business operations to the planning, management, and evaluation of information services in organizations. Includes instruction in telecommunications, systems planning and integration, information policy, information security, contracting and purchasing, budgeting, information technology, operations management, human resources, communications skills, and applicable law and regulations.Examples: Information Management Chief Information Officer Training 52.1207 Knowledge Management.A program that focuses on the study of knowledge management in government agencies and corporations for the purpose of supporting stated organizational goals and objectives, and prepares individuals to function as information resource managers. Includes instruction in information technology, principles of computer and information systems, management information systems, applicable policy and regulations, and operations and personnel management. 52.1299 Management Information Systems and Services, Other.Any program in business information and data processing services not listed above. 52.13 Management Sciences and Quantitative Methods.Instructional content for this group of programs is defined in codes 52.1301 - 52.1399. 52.1301 Management Science.A general program that focuses on the application of statistical modeling, data warehousing, data mining, programming, forecasting and operations research techniques to the analysis of problems of business organization and performance. Includes instruction in optimization theory and mathematical techniques, data mining, data warehousing, stochastic and dynamic modeling, operations analysis, and the design and testing of prototype systems and evaluation models.Examples: Business Intelligence Competitive Intelligence 52.1302 Business Statistics.A program that focuses on the application of mathematical statistics to the description, analysis, and forecasting of business data. Includes instruction in statistical theory and methods, computer applications, data analysis and display, long- and short-term forecasting methods, and market performance analysis.See also: 27.0501 - Statistics, General., 30.7102 - Business Analytics. 52.1304 Actuarial Science.A program that focuses on the mathematical and statistical analysis of risk, and their applications to insurance and other business management problems. Includes instruction in forecasting theory, quantitative and non-quantitative risk measurement methodologies, development of risk tables, secondary data analysis, and computer-assisted research methods. 52.1399 Management Sciences and Quantitative Methods, Other.Any instructional program in business quantitative methods and management science not listed above. 52.14 Marketing.Instructional content for this group of programs is defined in codes 52.1401 - 52.1499. 52.1401 Marketing/Marketing Management, General.A program that generally prepares individuals to undertake and manage the process of developing consumer audiences and moving products from producers to consumers. Includes instruction in buyer behavior and dynamics, principle of marketing research, demand analysis, cost-volume and profit relationships, pricing theory, marketing campaign and strategic planning, market segments, advertising methods, sales operations and management, consumer relations, retailing, and applications to specific products and markets.Examples: Social Media Marketing 52.1402 Marketing Research.A program that prepares individuals to provide analytical descriptions of consumer behavior patterns and market environments to marketing managers and other business decision-makers. Includes instruction in survey research methods, research design, new product test marketing, exploratory marketing, consumer needs and preferences analysis, geographic analysis, and applications to specific products and markets. 52.1403 International Marketing.A program that prepares individuals to perform marketing activities in enterprises primarily engaged in exporting or importing goods and services in world markets. Includes instruction in international trade controls, foreign trade operations, locating markets, negotiation practices, monetary issues, and international public relations.See also: 45.0605 - International Economics. 52.1404 Digital Marketing. (New)A program that prepares individuals to develop a digital marketing plan and integrate marketing, advertising, sales, and logistics across physical and digital channels. Includes instruction in digital marketing, e-commerce, online consumer psychology, search engine optimization, social media marketing, and web analytics.Examples: Digital Innovation in Marketing 52.1499 Marketing, Other.Any instructional program in general marketing and marketing research not listed above.See also: 51.2011 - Pharmaceutical Marketing and Management. 52.15 Real Estate.Instructional content is defined in code 52.1501. 52.1501 Real Estate.A program that prepares individuals to develop, buy, sell, appraise, and manage real estate. Includes instruction in land use development policy, real estate law, real estate marketing procedures, agency management, brokerage, property inspection and appraisal, real estate investing, leased and rental properties, commercial real estate, and property management.Examples: Property ManagementSee also: 04.1001 - Real Estate Development. 52.16 Taxation.Instructional content is defined in code 52.1601. 52.1601 Taxation.A program that prepares individuals to provide tax advice and management services to individuals and corporations. Includes instruction in tax law and regulations, tax record systems, individual and corporate income taxation, tax planning, partnerships and fiduciary relationships, estates and trusts, property depreciation, capital gains and losses, dispositions, transfers, liquidity, valuation, and applications to specific tax problems. 52.17 Insurance.Instructional content is defined in code 52.1701. 52.1701 Insurance.A program that prepares individuals to manage risk in organizational settings and provide insurance and risk-aversion services to businesses, individuals, and other organizations. Includes instruction in casualty insurance and general liability, property insurance, employee benefits, social and health insurance, loss adjustment, underwriting, risk theory, and pension planning. 52.18 General Sales, Merchandising and Related Marketing Operations.Instructional content for this group of programs is defined in codes 52.1801 - 52.1899. 52.1801 Sales, Distribution, and Marketing Operations, General.A program that focuses on the general process and techniques of direct wholesale and retail buying and selling operations and introduces individuals to related careers. Includes instruction in the principles of entrepreneurial economics, basic sales skills, the distribution channels for goods and services, and supervised practical application experiences. 52.1802 Merchandising and Buying Operations.A program that prepares individuals to function as professional buyers of resale products and product lines for stores, chains, and other retail enterprises. Includes instruction in product evaluation, merchandising, applicable aspects of brand and consumer research, principles of purchasing, and negotiation skills. 52.1803 Retailing and Retail Operations.A program that prepares individuals to perform operations associated with retail sales in a variety of settings. Includes instruction in over-the-counter and other direct sales operations in business settings, basic bookkeeping principles, customer service, team/staff leadership and supervision, floor management, and applicable technical skills. 52.1804 Selling Skills and Sales Operations.A program that prepares individuals to possess the skills associated with direct promotion of products and services to potential customers and to function as independent sales representatives and managers. Includes instruction in consumer psychology, image projection, public speaking and interpersonal communications, sales organization and operations, customer relations, professional standards and ethics, and applicable technical skills. 52.1880 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 52.1899 General Merchandising, Sales, and Related Marketing Operations, Other.Any instructional program in merchandising, sales, and related marketing operations not listed above. 52.19 Specialized Sales, Merchandising and Marketing Operations.Instructional content for this group of programs is defined in codes 52.1901 - 52.1999. 52.1901 Auctioneering.A program that prepares individuals for professional careers as auctioneers and auction managers, and for meeting applicable state licensing requirements. Includes instruction in bid calling, public speaking, ringworking, auction techniques, salesmanship skills, auction clerking and cashiering, auction advertising, working independently or with auction houses, contracts and agency, applicable sales law, and managing both general auctions and auctions specializing in commodities such as antiques, consignments, farm equipment, industrial equipment, real estate, livestock, and automobiles. 52.1902 Fashion Merchandising.A program that prepares individuals to promote product lines/brands, and organize promotional campaigns, at the wholesale level to attract retailer interest, wholesale purchasing, and supply contracts. Includes instruction in wholesaling, wholesale advertising, selling, and customer relations.See also: 19.0905 - Apparel and Textile Marketing Management. 52.1903 Fashion Modeling.A program that prepares individuals to present and display fashion, apparel, and accessories products in wholesale and retail settings, either on the person or via props and natural or artificial settings. Includes instruction in modeling skills, health and cosmetic principles, fashion show management, display design and production, and applicable aspects of advertising and fashion photography. 52.1904 Apparel and Accessories Marketing Operations.A program that prepares individuals to perform operations connected with the distribution and sale of apparel and accessories. Includes instruction in wholesaling and retailing, apparel technologies, distribution, customer sales and service skills, and principles of consumer research and sales forecasting. 52.1905 Tourism and Travel Services Marketing Operations.A program that prepares individuals to provide direct retail services to hotel and motel clients and customers in a variety of settings. Includes instruction in the principles of hotel/motel operations, customer sales and assistance operations and techniques, telephone operations, and basic office management. 52.1906 Tourism Promotion Operations.A program that prepares individuals to perform marketing and sales operations connected with the promotion of tourism in public and private sector settings. Includes instruction in principles of marketing research and advertising, promotional campaign organization, media relations, and applicable technical and administrative skills. 52.1907 Vehicle and Vehicle Parts and Accessories Marketing Operations.A program that prepares individuals to perform operations connected with the distribution and sale of replacement parts and other end-use supplies in the automotive, marine, and aviation industries. Includes instruction in wholesaling and retailing, principles of vehicular technologies, storage and distribution, customer sales and service skills, and principles of consumer research and sales forecasting. 52.1908 Business and Personal/Financial Services Marketing Operations.A program that prepares individuals to perform marketing and operational tasks associated with the provision of personal and financial services. Includes instruction in banking, marketing research, advertising, promotional campaign organization, insurance, media relations, and applicable technical and administrative skills. 52.1909 Special Products Marketing Operations.A program that prepares individuals to perform marketing and sales operations connected with the promotion of special products, including floristry, food, and home and office products. Includes instruction in principles of marketing research and advertising, promotional campaign organization, media relations, and applicable technical and administrative skills. 52.1910 Hospitality and Recreation Marketing Operations.A program that prepares individuals to provide marketing services in the hospitality and leisure fields. Includes instruction in hospitality operations, customer sales and assistance operations and techniques, telephone operations, basic office management, retail sports, recreation equipment, food and beverage. 52.1980 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 52.1999 Specialized Merchandising, Sales, and Marketing Operations, Other.Any instructional program in sales, marketing, and distribution operations not listed above.Examples: Industrial Marketing Scientific and Medical Marketing 52.20 Construction Management.Instructional content for this group of programs is defined in codes 52.2001 - 52.2099. 52.2001 Construction Management, General. CIP Title or Definition ChangedA program that prepares individuals to manage, coordinate, and supervise the construction process. Includes instruction in commercial, residential, mechanical, highway/heavy civil, electrical, environmental, industrial, and specialty construction; facilities management; budgeting and cost control; logistics and materials management; organization and scheduling; personnel management and labor relations; site safety; construction contracting; construction processes and techniques; and applicable codes and regulations.See also: 46.0412 - Building/Construction Site Management/Manager. 52.2002 Construction Project Management. (New)A program that prepares individuals to apply project management knowledge, skills, tools, and techniques in the construction and facility management industries. Includes instruction in facilities operations and maintenance, construction estimating, OSHA standards, sustainability, drafting, construction plans, project planning, risk management, cost and time management, contracts and procurement, accounting, statistics, decision making, and human resources. 52.2099 Construction Management, Other. (New)Any program in construction management not listed above. 52.21 Telecommunications Management.Instructional content is defined in code 52.2101. 52.2101 Telecommunications Management.A program that prepares individuals to apply business skills to design, implement, and manage the voice, video, and data networking systems of organizations. Includes instruction in telecommunications concepts and technologies, network operations and management, wireless communications and mobile computing, cybersecurity, regulation and public policy, business practices and management, and written and oral communications. 52.99 Business, Management, Marketing, and Related Support Services, Other.Instructional content is defined in code 52.9999. 52.9999 Business, Management, Marketing, and Related Support Services, Other.Any instructional program in business, management, marketing and related support services not listed above. 53 HIGH SCHOOL/SECONDARY DIPLOMAS AND CERTIFICATESInstructional programs that define the prescribed requirements for high school/secondary school graduation. These CIP codes are not valid for IPEDS reporting. 53.01 High School/Secondary Diploma Programs.Instructional content for this group of programs is defined in codes 53.0101 - 53.0199. These CIP codes are not valid for IPEDS reporting. 53.0101 Regular/General High School/Secondary Diploma Program.An instructional program that defines the prescribed minimum requirements specified by a state, province, or other jurisdiction for completion of, and graduation from an undifferentiated regular secondary school program representing 12 academic years of schooling intended for school-age students. This CIP code is not valid for IPEDS reporting. 53.0102 College/University Preparatory and Advanced High School/Secondary Diploma Program.An instructional program that defines the prescribed requirements, specified by a state, province, or other jurisdiction, for completion of, and graduation from, a secondary school program of academic subject matter designed to meet typical college and university entrance requirements. This CIP code is not valid for IPEDS reporting. 53.0103 Vocational High School and Secondary Business/Vocational-Industrial/Occupational Diploma Program.An instructional program that defines the prescribed requirements, specified by a state, province, or other jurisdiction, for high school/secondary school graduation in a vocational program – together with other required subject matter, and that may prepare individuals for specific occupations or direct labor market entry. This CIP code is not valid for IPEDS reporting. 53.0104 Honors/Regents High School/Secondary Diploma Program.An instructional program that defines the prescribed requirements, specified by a state, province, or other jurisdiction for high school/secondary school graduation in an academic or vocational program at a prescribed level of outstanding scholastic performance, or via meeting special requirements beyond the minimum. This CIP code is not valid for IPEDS reporting. 53.0105 Adult High School/Secondary Diploma Program.An instructional program that defines the prescribed requirements, specified by a state, province, or other jurisdiction for the completion of, and graduation from a secondary school program of academic subject matter offered for adult learners outside of the regular secondary school program. This does not include adult compensatory education programs resulting in completion of a high school equivalency certificate or diploma. This CIP code is not valid for IPEDS reporting. 53.0199 High School/Secondary Diploma Programs, Other.Any high school/secondary diploma program not listed above, such as diplomas awarded to special education students for completion of an individualized education plan (IEP). This CIP code is not valid for IPEDS reporting. 53.02 High School/Secondary Certificate Programs.Instructional content for this group of programs is defined in codes 53.0201 - 53.0299. These CIP codes are not valid for IPEDS reporting. 53.0201 High School Equivalence Certificate Program.An instructional program that defines the requirements for meeting the minimum high school/secondary completion requirements specified by a U.S. state or other jurisdiction, for adult learners who did not complete secondary school. Includes undertaking a specified program of studies and obtaining a prescribed passing score on the General Educational Development Test (GED) or provincial examinations. These awards represent the legally recognized equivalent of secondary school graduation. This CIP code is not valid for IPEDS reporting. 53.0202 High School Certificate of Competence Program.An instructional program that defines the content requirements for meeting specified performance standards in various secondary school studies that does not represent completion of and graduation from secondary school, as prescribed by a U.S. state or other jurisdiction. Includes such requirements as passing a state- or province-mandated academic achievement test and completing other specified requirements for subject-matter competence. These awards may be given for partial completion of secondary school or for achieving a specified high level of concentration and/or performance in certain subjects, and may be awarded independently or in conjunction with a high school/secondary diploma. This CIP code is not valid for IPEDS reporting. 53.0203 Certificate of IEP Completion Program.An instructional program that defines the requirements for meeting specified goals pertaining to an Individual Educational Program established by a local school system under the authority of a state or other jurisdiction. Specific content varies by student and may or may not equal a regular high school/secondary school program. This CIP code is not valid for IPEDS reporting. 53.0299 High School/Secondary Certificates, Other.Any certificate program at the high school/secondary instructional level not listed above. This CIP code is not valid for IPEDS reporting. 54 HISTORYInstructional programs that focus on the study and interpretation of past events, institutions, issues, and cultures. 54.01 History.Instructional content for this group of programs is defined in codes 54.0101 - 54.0199. 54.0101 History, General.A program that focuses on the general study and interpretation of the past, including the gathering, recording, synthesizing and criticizing of evidence and theories about past events. Includes instruction in historiography; historical research methods; studies of specific periods, issues and cultures; and applications to areas such as historic preservation, public policy, and records administration.See also: 30.4501 - History and Language/Literature., 30.4601 - History and Political Science. 54.0102 American History (United States).A program that focuses on the development of American society, culture, and institutions from the Pre-Columbian period to the present. Includes instruction in American historiography, American history sources and materials, historical research methods, and applications to the study of specific themes, issues, periods, and institutions. 54.0103 European History.A program that focuses on the development of European society, culture, and institutions from the origins to the present. Includes instruction in European historiography, European history sources and materials, historical research methods, and applications to the study of specific themes, issues, periods, and institutions.See also: 30.1301 - Medieval and Renaissance Studies. 54.0104 History and Philosophy of Science and Technology.A program that focuses on the historical evolution of scientific theories, science applications and technologies, and the scientific, medical, and technological disciplines, as well as the philosophy of science and its historical socio-economic context. Includes instruction in the concepts and methods of philosophical inquiry; historiography of science; history of science, medicine, and technology; and research methods in the history of the scientific and engineering disciplines, including mathematics.See also: 30.1501 - Science, Technology and Society., 51.3205 - History of Medicine. 54.0105 Public/Applied History.A program that focuses on the application of history and administrative skills to the recording of public events and the management of related historical resources. Includes instruction in historical research methods, the planning and administration of public history projects, and applications to specific problems in public organizations, government agencies, foundations, and other facilities.See also: 30.1202 - Cultural Resource Management and Policy Analysis., 25.0103 - Archives/Archival Administration. 54.0106 Asian History.A program that focuses on the development of the societies, cultures, and institutions of the Asian Continent from their origins to the present. Includes instruction in the historiography of specific cultures and periods; sources and materials; historical research methods; and applications to the study of specific themes, issues, periods, and institutions. 54.0107 Canadian History.A program that focuses on the study of the society, culture, and institutions of Canada from its origins to the present. Includes instruction in Canadian historiography, sources and materials, historical research methods, and applications to the study of specific themes, issues, periods, and institutions. 54.0108 Military History.A program that focuses on the study of the history of warfare and military institutions in their operational, politico-economic and socio-cultural contexts; including airpower history, naval history, and military history. Includes instruction in military organization, military operations, the history of technology, leadership and biography, military psychology and behavior, international relations and politics, economics, aspects of general and regional history, cultural history and anthropology, historiography, and applicable quantitative methods.Examples: Air Force History Naval History Military History (Armies) 54.0199 History, Other.Any instructional program in history not listed above.See also: 30.4501 - History and Language/Literature., 30.4601 - History and Political Science. 55 RESERVED. (New)Reserved for use by Statistics Canada. These CIP codes are not valid for IPEDS reporting. 55.01 Reserved. (New)Instructional content is defined in code 55.0101. 55.0101 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 55.13 Reserved. (New)Instructional content for this group of programs is defined in codes 55.1301 - 55.1399. 55.1301 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 55.1302 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 55.1303 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 55.1304 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 55.1399 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 55.14 Reserved. (New)Instructional content for this group of programs is defined in codes 55.1401 - 55.1499. 55.1401 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 55.1403 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 55.1404 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 55.1405 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 55.1499 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 55.99 Reserved. (New)Instructional content is defined in code 55.9999. 55.9999 Reserved. (New)Reserved for use by Statistics Canada. This CIP code is not valid for IPEDS reporting. 60 HEALTH PROFESSIONS RESIDENCY/FELLOWSHIP PROGRAMS. CIP Title or Definition ChangedPrograms that prepare dentists (DDS, DMD), nurse practitioners, pharmacists (PharmD), physician assistants, and veterinarians (DVM) for certification as practitioners of recognized specialties in their respective professions. These programs are approved and accredited by designated professional associations. Residency or fellowship programs that also result in the completion of an academic degree (e.g., MS, PhD), should be reported under the appropriate CIP code, rather than in a residency code located in Series 60. These CIP codes are not valid for IPEDS reporting. 60.01 Dental Residency/Fellowship Programs. CIP Title or Definition ChangedInstructional content for this group of programs is defined in codes 60.0101 - 60.0199. These CIP codes are not valid for IPEDS reporting. 60.0101 Oral and Maxillofacial Surgery Residency Program.A residency training program that prepares dentists in the diagnosis, and surgical and related treatment, of diseases, injuries, and defects involving both the functional and esthetic aspects of the hard and soft tissues of the head, mouth, teeth, gums, jaws, and neck. Includes treatment of problem wisdom teeth, facial pain, misaligned jaws, and reconstructive and dental implant surgery. This CIP code is not valid for IPEDS reporting.Examples: Dental/Oral Surgery Residency Program 60.0102 Dental Public Health Residency Program.A residency-training program that prepares dentists in the formulation and delivery of public preventive and curative dental health services. This CIP code is not valid for IPEDS reporting. 60.0103 Endodontics Residency Program.A residency training program that prepares dentists in the etiology, diagnosis, prevention, and treatment of conditions that affect the dental and other periodontal tissues, including pulp canal therapy and root canal therapy. This CIP code is not valid for IPEDS reporting. 60.0104 Oral and Maxillofacial Pathology Residency Program.A residency training program that prepares dentists in the diagnosis and management of diseases affecting the oral and maxillofacial regions, using clinical, radiographic, microscopic, biochemical, or other examinations. This CIP code is not valid for IPEDS reporting.Examples: Oral Pathology Residency Program 60.0105 Orthodontics Residency Program.A residency training program that prepares dentists in the principles and techniques involved in the prevention and correction of dental malocclusions and oral cavity anomalies. This CIP code is not valid for IPEDS reporting. 60.0106 Pediatric Dentistry Residency Program.A residency training program that prepares dentists to provide primary oral health care to infants, children, and adolescents, including patients with medical, physical or mental disabilities, and to treat a wide variety of dental problems for these patients. This CIP code is not valid for IPEDS reporting.Examples: Pedodontics Residency Program 60.0107 Periodontology Residency Program.A residency training program that prepares dentists in the prevention, diagnosis, and treatment of diseases affecting the gums and supporting structures of the teeth, and in the placement and maintenance of dental implants. This CIP code is not valid for IPEDS reporting.Examples: Periodontics Residency Program 60.0108 Prosthodontics Residency Program.A residency training program that prepares dentists in the principles and techniques of constructing oral prostheses, and the restoration and maintenance of oral function by the replacement of missing teeth and other oral structures with such artificial devices. This CIP code is not valid for IPEDS reporting. 60.0109 Oral and Maxillofacial Radiology Residency Program.A residency training program that prepares dentists to produce and interpret images of the jaws, teeth, bone, and other structures of the head and neck region; and to diagnose and manage diseases, disorders, and conditions that affect this area of the body. This CIP code is not valid for IPEDS reporting. 60.0110 Implantology Fellowship Program. (New)A fellowship training program that prepares dentists in the surgical and restorative aspects of implant dentistry. This CIP code is not valid for IPEDS reporting. 60.0199 Dental Residency/Fellowship Program, Other. CIP Title or Definition ChangedAny dental residency or fellowship specialty program not listed above. This CIP code is not valid for IPEDS reporting. 60.03 Veterinary Residency/Fellowship Programs. CIP Title or Definition ChangedInstructional content for this group of programs is defined in codes 60.0301 - 60.0399. These CIP codes are not valid for IPEDS reporting. 60.0301 Veterinary Anesthesiology Residency Program.A residency training program that prepares veterinarians in the application of anesthesia for general and specialized surgery and obstetrics, critical animal care and the care of pain problems. Includes instruction in surgical procedures, current monitoring procedures, fluid therapy, pain management, diagnostic and therapeutic procedures outside the operating room, and operating room safety. This CIP code is not valid for IPEDS reporting. 60.0302 Veterinary Dentistry Residency Program.A residency training program that prepares veterinarians in the application of dental care procedures to the teeth, eating surfaces, and oral cavities of animals. Includes instruction in the prevention, diagnosis, and treatment of diseases and abnormalities of animal teeth and gums and related parts of the oral cavity; and related anatomical and physiological principles. This CIP code is not valid for IPEDS reporting. 60.0303 Veterinary Dermatology Residency Program.A residency training program that prepares veterinarians in the delivery of specialized care to animals with diseases of the skin, scales, feathers, hair, nails and mucous membranes. Includes instruction in dermatologic surgical procedures, cutaneous allergies, and diagnostic and therapeutic techniques. This CIP code is not valid for IPEDS reporting. 60.0304 Veterinary Emergency and Critical Care Medicine Residency Program.A residency training program that prepares veterinarians in the emergency treatment and management of care for animals with acutely life-threatening conditions which may include multiple organ failure. Includes instruction in the management of critical care units, emergency procedures, and long-term care of critically diseased animals. This CIP code is not valid for IPEDS reporting. 60.0305 Veterinary Internal Medicine Residency Program.A residency training program that prepares veterinarians in the provision of general medical services to animals with a wide range of non-surgical clinical problems. Includes instruction in behavioral aspects of diseases, animal diagnosis, animal aging, and referral procedures. This CIP code is not valid for IPEDS reporting. 60.0306 Laboratory Animal Medicine Residency Program.A residency training program that prepares veterinarians in the principles and practices of applied veterinary research and related techniques, equipment, data systems and research design. Includes instruction in the management of veterinary and other animal research laboratories and health care facilities. This CIP code is not valid for IPEDS reporting. 60.0307 Veterinary Microbiology Residency Program.A residency training program that prepares veterinarians in clinical applications of research on harmful microorganisms, including viruses, and of the disease processes they induce in animals. This CIP code is not valid for IPEDS reporting. 60.0308 Veterinary Nutrition Residency Program.A residency training program that prepares veterinarians to apply research on the chemical nature of food substances; the processes by which animals ingest, digest, absorb, transport, utilize and excrete food and nutrients; and their relation to animal behavior and health. This CIP code is not valid for IPEDS reporting. 60.0309 Veterinary Ophthalmology Residency Program.A residency training program that prepares veterinarians in the diagnosis, prevention, and treatment of ophthalmic diseases and disorders in animals, and related ocular pathology procedures. Includes instruction in animal eye surgery. This CIP code is not valid for IPEDS reporting. 60.0310 Veterinary Pathology Residency Program.A residency training program that prepares veterinarians in the clinical laboratory analysis and diagnosis of diseased animal tissues and anatomic abnormalities. Includes instruction in performing general autopsies, forensic medicine, laboratory management and quality control. This CIP code is not valid for IPEDS reporting. 60.0311 Veterinary Practice Residency Program.A residency training program that prepares veterinarians in the provision of regular and long-term care to animals, health services to owners, and the management of independent veterinary practices. Includes instruction in comprehensive care and specialist referral, basic surgery, emergency medical procedures, and diagnostic imaging. This CIP code is not valid for IPEDS reporting. 60.0312 Veterinary Preventive Medicine Residency Program.A residency training program that prepares veterinarians in the investigation of and intervention in health and disease problems of animal and related human communities, comparative medicine, and animal public health. Includes instruction in biostatistics, epidemiology, environmental control, toxicology and the planning and administration of animal health programs and services. This CIP code is not valid for IPEDS reporting. 60.0313 Veterinary Radiology Residency Program.A residency training program that prepares veterinarians in the use of radiologic imaging and therapies to diagnose and treat animal diseases and health problems. Includes instruction in the use and handling of equipment for radionuclides detection and application. This CIP code is not valid for IPEDS reporting. 60.0314 Veterinary Surgery Residency Program.A residency training program that prepares veterinarians in the care and treatment of animal diseases and disorders via invasive procedures and the etiology, pathogenesis, diagnosis and management of physical disorders. Includes instruction in clinical and operative skills, pre-operative and post-operative care, trauma management, endoscopic techniques, and applications to large and small animal medicine. This CIP code is not valid for IPEDS reporting. 60.0315 Theriogenology Residency Program.A residency training program that prepares veterinarians in the diagnosis, prevention and treatment of diseases and health problems affecting the reproductive systems of animals, and the comprehensive care and treatment of parent animals, animal fetuses and newborn or newly hatched animals throughout the gestation period. This CIP code is not valid for IPEDS reporting. 60.0316 Veterinary Toxicology Residency Program.A residency training program that prepares veterinarians in the clinical application of research on the nature and extent of adverse effects of synthetic and naturally occurring chemical substances on animals. Includes instruction in chemical mechanisms and the specialties of reproductive, developmental, genetic, forensic, inhalation and neurobehavioral toxicology. This CIP code is not valid for IPEDS reporting. 60.0317 Zoological Medicine Residency Program.A residency training program that prepares veterinarians in the specialized treatment and care of zoo animals, performing animals, and animals living in the wild. Includes instruction in the principles and procedures used in the observation, diagnosis, care and treatment of illness, disease, injury, deformity, or other anomalies in non-domesticated animals. This CIP code is not valid for IPEDS reporting. 60.0318 Poultry Veterinarian Residency Program.A residency training program that prepares veterinarians to work in the commercial poultry industry, providing services and technical support pertaining to prevention, diagnosis, and management of disease; epidemiology; genetics; and nutrition. This CIP code is not valid for IPEDS reporting. 60.0319 Veterinary Behaviorist Residency Program.A residency training program that prepares veterinarians to understand and treat the behavioral problems of animals, primarily through the application of behavior modification techniques to companion animals; may also involve diagnosis of medical conditions that can affect a pet’s behavior, and the use of medication in conjunction with behavior modification therapy. This CIP code is not valid for IPEDS reporting. 60.0320 Veterinary Clinical Pharmacology Residency Program.A residency training program that prepares veterinarians to apply advanced knowledge of the chemical properties and biological effects of drugs to rational drug therapy in animal patients. Includes instruction in the comparative pharmacology of principal drug groups, pharmacokinetics, basic mechanisms and features of diseases occurring in domesticated animals, the role of drugs in modifying the disease process, and specific skills critical to the practice of clinical pharmacology. This CIP code is not valid for IPEDS reporting. 60.0399 Veterinary Residency/Fellowship Program, Other. CIP Title or Definition ChangedAny residency or fellowship training program in veterinary medicine not listed above. This CIP code is not valid for IPEDS reporting. 60.04 Medical Residency Programs - General Certificates. (Deleted)Deleted, Report under 61 60.0401 Aerospace Medicine Residency Program. (Moved from)Moved from 60.0401 to 61.2302 60.0402 Allergy and Immunology Residency Program. (Moved from)Moved from 60.0402 to 61.0301 60.0403 Anesthesiology Residency Program. (Moved from)Moved from 60.0403 to 61.0401 60.0404 Child Neurology Residency Program. (Moved from)Moved from 60.0404 to 61.1102 60.0405 Clinical Biochemical Genetics Residency Program. (Moved from)Moved from 60.0405 to 61.0901 60.0406 Clinical Cytogenetics Residency Program. (Deleted)Deleted, Report under 61.0903 60.0407 Clinical Genetics Residency Program. (Moved from)Moved from 60.0407 to 61.0902 60.0408 Clinical Molecular Genetics Residency Program. (Deleted)Deleted, Report under 61.0903 60.0409 Colon and Rectal Surgery Residency Program. (Moved from)Moved from 60.0409 to 61.2702 60.0410 Dermatology Residency Program. (Moved from)Moved from 60.0410 to 61.0501 60.0411 Diagnostic Radiology Residency Program. (Moved from)Moved from 60.0411 to 61.2601 60.0412 Emergency Medicine Residency Program. (Moved from)Moved from 60.0412 to 61.0601 60.0413 Family Medicine Residency Program. (Moved from)Moved from 60.0413 to 61.0701 60.0414 General Surgery Residency Program. (Moved from)Moved from 60.0414 to 61.2701 60.0415 Internal Medicine Residency Program. (Moved from)Moved from 60.0415 to 61.0801 60.0416 Neurological Surgery Residency Program. (Moved from)Moved from 60.0416 to 61.1001 60.0417 Neurology Residency Program. (Moved from)Moved from 60.0417 to 61.1101 60.0418 Nuclear Medicine Residency Program. (Moved from)Moved from 60.0418 to 61.1201 60.0419 Obstetrics and Gynecology Residency Program. (Moved from)Moved from 60.0419 to 61.1301 60.0420 Occupational Medicine Residency Program. (Moved from)Moved from 60.0420 to 61.2303 60.0421 Ophthalmology Residency Program. (Moved from)Moved from 60.0421 to 61.1401 60.0422 Orthopedic Surgery Residency Program. (Moved from)Moved from 60.0422 to 61.1501 60.0423 Otolaryngology Residency Program. (Moved from)Moved from 60.0423 to 61.1701 60.0424 Pathology Residency Program. (Moved from)Moved from 60.0424 to 61.1801 60.0425 Pediatrics Residency Program. (Moved from)Moved from 60.0425 to 61.1901 60.0426 Physical Medicine and Rehabilitation Residency Program. (Moved from)Moved from 60.0426 to 61.2001 60.0427 Plastic Surgery Residency Program. (Moved from)Moved from 60.0427 to 61.2101 60.0428 Psychiatry Residency Program. (Moved from)Moved from 60.0428 to 61.2401 60.0429 Public Health and General Preventive Medicine Residency Program. (Moved from)Moved from 60.0429 to 61.2301 60.0430 Radiation Oncology Residency Program. (Moved from)Moved from 60.0430 to 61.2501 60.0431 Radiologic Physics Residency Program. (Moved from)Moved from 60.0431 to 61.2610 60.0432 Thoracic Surgery Residency Program. (Moved from)Moved from 60.0432 to 61.2707 60.0433 Urology Residency Program. (Moved from)Moved from 60.0433 to 61.2801 60.0434 Vascular Surgery Residency Program. (Moved from)Moved from 60.0434 to 61.2708 60.0499 Medical Residency Programs - General Certificates, Other. (Deleted)Deleted, Report under 61 60.05 Medical Residency Programs - Subspecialty Certificates. (Deleted)Deleted, Report under 61 60.0501 Addiction Psychiatry Residency Program. (Moved from)Moved from 60.0501 to 61.2402 60.0502 Adolescent Medicine Residency Program. (Moved from)Moved from 60.0502 to 61.1902 60.0503 Blood Banking/Transfusion Medicine Residency Program. (Moved from)Moved from 60.0503 to 61.1804 60.0504 Cardiovascular Disease Residency Program. (Moved from)Moved from 60.0504 to 61.0804 60.0505 Chemical Pathology Residency Program. (Moved from)Moved from 60.0505 to 61.1805 60.0506 Child Abuse Pediatrics Residency Program. (Moved from)Moved from 60.0506 to 61.1903 60.0507 Child and Adolescent Psychiatry Residency Program. (Moved from)Moved from 60.0507 to 61.2403 60.0508 Clinical Cardiac Electrophysiology Residency Program. (Moved from)Moved from 60.0508 to 61.0805 60.0509 Clinical Neurophysiology Residency Program. (Moved from)Moved from 60.0509 to 61.1103 60.0510 Congenital Cardiac Surgery Residency Program. (Moved from)Moved from 60.0510 to 61.2704 60.0511 Critical Care Medicine Residency Program. (Moved from)Moved from 60.0511 to 61.0202 60.0512 Cytopathology Residency Program. (Moved from)Moved from 60.0512 to 61.1806 60.0513 Dermatopathology Residency Program. (Moved from)Moved from 60.0513 to 61.0502 60.0514 Developmental-Behavioral Pediatrics Residency Program. (Moved from)Moved from 60.0514 to 61.1904 60.0515 Diagnostic Radiologic Physics Residency Program. (Moved from)Moved from 60.0515 to 61.2604 60.0516 Endocrinology, Diabetes and Metabolism Residency Program. (Moved from)Moved from 60.0516 to 61.0806 60.0517 Forensic Pathology Residency Program. (Moved from)Moved from 60.0517 to 61.1807 60.0518 Forensic Psychiatry Residency Program. (Moved from)Moved from 60.0518 to 61.2405 60.0519 Gastroenterology Residency Program. (Moved from)Moved from 60.0519 to 61.0807 60.0520 Geriatric Medicine Residency Program. (Moved from)Moved from 60.0520 to 61.0203 60.0521 Geriatric Psychiatry Residency Program. (Moved from)Moved from 60.0521 to 61.2406 60.0522 Gynecologic Oncology Residency Program. (Moved from)Moved from 60.0522 to 61.1302 60.0523 Hematological Pathology Residency Program. (Moved from)Moved from 60.0523 to 61.1808 60.0524 Hematology Residency Program. (Moved from)Moved from 60.0524 to 61.0808 60.0525 Hospice and Palliative Medicine Residency Program. (Moved from)Moved from 60.0525 to 61.0205 60.0526 Immunopathology Residency Program. (Moved from)Moved from 60.0526 to 61.1809 60.0527 Infectious Disease Residency Program. (Moved from)Moved from 60.0527 to 61.0810 60.0528 Interventional Cardiology Residency Program. (Moved from)Moved from 60.0528 to 61.0811 60.0529 Laboratory Medicine Residency Program. (Moved from)Moved from 60.0529 to 61.1810 60.0530 Maternal and Fetal Medicine Residency Program. (Moved from)Moved from 60.0530 to 61.1303 60.0531 Medical Biochemical Genetics Residency Program. (Moved from)Moved from 60.0531 to 61.0904 60.0532 Medical Microbiology Residency Program. (Moved from)Moved from 60.0532 to 61.1811 60.0533 Medical Nuclear Physics Residency Program. (Moved from)Moved from 60.0533 to 61.2605 60.0534 Medical Oncology Residency Program. (Moved from)Moved from 60.0534 to 61.0813 60.0535 Medical Toxicology Residency Program. (Moved from)Moved from 60.0535 to 61.0208 60.0536 Molecular Genetic Pathology Residency Program. (Moved from)Moved from 60.0536 to 61.1812 60.0537 Musculoskeletal Oncology Residency Program. (Moved from)Moved from 60.0537 to 61.1502 60.0538 Neonatal-Perinatal Medicine Residency Program. (Moved from)Moved from 60.0538 to 61.1905 60.0539 Nephrology Residency Program. (Moved from)Moved from 60.0539 to 61.0812 60.0540 Neurodevelopmental Disabilities Residency Program. (Moved from)Moved from 60.0540 to 61.1106 60.0541 Neuromuscular Medicine Residency Program. (Moved from)Moved from 60.0541 to 61.0209 60.0542 Neuropathology Residency Program. (Moved from)Moved from 60.0542 to 61.1813 60.0543 Neuroradiology Residency Program. (Moved from)Moved from 60.0543 to 61.2607 60.0544 Neurotology Residency Program. (Moved from)Moved from 60.0544 to 61.1702 60.0545 Nuclear Radiology Residency Program. (Moved from)Moved from 60.0545 to 61.2608 60.0546 Orthopedic Sports Medicine Residency Program. (Moved from)Moved from 60.0546 to 61.1503 60.0547 Orthopedic Surgery of the Spine Residency Program. (Moved from)Moved from 60.0547 to 61.1504 60.0548 Pain Medicine Residency Program. (Moved from)Moved from 60.0548 to 61.0210 60.0549 Pediatric Cardiology Residency Program. (Moved from)Moved from 60.0549 to 61.1906 60.0550 Pediatric Critical Care Medicine Residency Program. (Moved from)Moved from 60.0550 to 61.1907 60.0551 Pediatric Dermatology Residency Program. (Moved from)Moved from 60.0551 to 61.0503 60.0552 Pediatric Emergency Medicine Residency Program. (Moved from)Moved from 60.0552 to 61.1908 60.0553 Pediatric Endocrinology Residency Program. (Moved from)Moved from 60.0553 to 61.1909 60.0554 Pediatric Gastroenterology Residency Program. (Moved from)Moved from 60.0554 to 61.1910 60.0555 Pediatric Hematology-Oncology Residency Program. (Moved from)Moved from 60.0555 to 61.1911 60.0556 Pediatric Infectious Diseases Residency Program. (Moved from)Moved from 60.0556 to 61.1912 60.0557 Pediatric Nephrology Residency Program. (Moved from)Moved from 60.0557 to 61.1913 60.0558 Pediatric Orthopedics Residency Program. (Moved from)Moved from 60.0558 to 61.1505 60.0559 Pediatric Otolaryngology Residency Program. (Moved from)Moved from 60.0559 to 61.1703 60.0560 Pediatric Pathology Residency Program. (Moved from)Moved from 60.0560 to 61.1814 60.0561 Pediatric Pulmonology Residency Program. (Moved from)Moved from 60.0561 to 61.1914 60.0562 Pediatric Radiology Residency Program. (Moved from)Moved from 60.0562 to 61.2609 60.0563 Pediatric Rehabilitation Medicine Residency Program. (Moved from)Moved from 60.0563 to 61.2003 60.0564 Pediatric Rheumatology Residency Program. (Moved from)Moved from 60.0564 to 61.1915 60.0565 Pediatric Surgery Residency Program. (Moved from)Moved from 60.0565 to 61.2705 60.0566 Pediatric Transplant Hepatology Residency Program. (Moved from)Moved from 60.0566 to 61.1917 60.0567 Pediatric Urology Residency Program. (Moved from)Moved from 60.0567 to 61.2802 60.0568 Physical Medicine and Rehabilitation/Psychiatry Residency Program. (Deleted)Deleted, Report under 61.0199 60.0569 Plastic Surgery Within the Head and Neck Residency Program. (Moved from)Moved from 60.0569 to 61.2103 60.0570 Psychosomatic Medicine Residency Program. (Moved from)Moved from 60.0570 to 61.2404 60.0571 Pulmonary Disease Residency Program. (Moved from)Moved from 60.0571 to 61.0814 60.0572 Radioisotopic Pathology Residency Program. (Moved from)Moved from 60.0572 to 61.1815 60.0573 Reproductive Endocrinology/Infertility Residency Program. (Moved from)Moved from 60.0573 to 61.1304 60.0574 Rheumatology Residency Program. (Moved from)Moved from 60.0574 to 61.0816 60.0575 Sleep Medicine Residency Program. (Moved from)Moved from 60.0575 to 61.0212 60.0576 Spinal Cord Injury Medicine Residency Program. (Moved from)Moved from 60.0576 to 61.2002 60.0577 Sports Medicine Residency Program. (Moved from)Moved from 60.0577 to 61.0213 60.0578 Surgery of the Hand Residency Program. (Moved from)Moved from 60.0578 to 61.0214 60.0579 Surgical Critical Care Residency Program. (Moved from)Moved from 60.0579 to 61.2706 60.0580 Therapeutic Radiologic Physics Residency Program. (Moved from)Moved from 60.0580 to 61.2611 60.0581 Transplant Hepatology Residency Program. (Moved from)Moved from 60.0581 to 61.0818 60.0582 Undersea and Hyperbaric Medicine Residency Program. (Moved from)Moved from 60.0582 to 61.0216 60.0583 Vascular and Interventional Radiology Residency Program. (Moved from)Moved from 60.0583 to 61.2612 60.0584 Vascular Neurology Residency Program. (Moved from)Moved from 60.0584 to 61.1107 60.0599 Medical Residency Programs - Subspecialty Certificates, Other. (Deleted)Deleted, Report under 61 60.06 Podiatric Medicine Residency Programs. (Moved from)Moved from 60.06 to 61.22 60.0601 Podiatric Medicine and Surgery - 24 Residency Program. (Deleted)Deleted, Report under 61.2201 60.0602 Podiatric Medicine and Surgery - 36 Residency Program. (Deleted)Deleted, Report under 61.2201 60.07 Nurse Practitioner Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 60.0701 - 60.0799. These CIP codes are not valid for IPEDS reporting. 60.0701 Nurse Practitioner Residency/Fellowship Program, General. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in nursing. This CIP Code is not valid for IPEDS reporting. 60.0702 Combined Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in two or more nursing specialties. This CIP Code is not valid for IPEDS reporting. 60.0703 Acute Care Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in acute care medicine. This CIP Code is not valid for IPEDS reporting. 60.0704 Adult/Gerontology Acute Care Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in adult/gerontology acute care medicine. This CIP Code is not valid for IPEDS reporting. 60.0705 Adult/Gerontology Critical Care Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in adult/gerontology critical care medicine. This CIP Code is not valid for IPEDS reporting. 60.0706 Cardiology/Cardiovascular Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in cardiology and cardiovascular medicine. This CIP Code is not valid for IPEDS reporting. 60.0707 Clinical Informatics Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in clinical informatics. This CIP Code is not valid for IPEDS reporting. 60.0708 Dermatology Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in dermatology. This CIP Code is not valid for IPEDS reporting. 60.0709 Developmental and Behavioral Pediatrics Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in developmental and behavioral pediatrics. This CIP Code is not valid for IPEDS reporting. 60.0710 Diabetes Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in diabetology and metabolic disorders. This CIP Code is not valid for IPEDS reporting. 60.0711 Emergency Medicine Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in emergency medicine. This CIP Code is not valid for IPEDS reporting. 60.0712 Endocrinology Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in endocrinology. This CIP Code is not valid for IPEDS reporting. 60.0713 Family Medicine Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in family medicine. This CIP Code is not valid for IPEDS reporting. 60.0714 Gastroenterology and Hepatology Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in gastroenterology and hepatology. This CIP Code is not valid for IPEDS reporting. 60.0715 Gastroenterology Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in gastroenterology. This CIP Code is not valid for IPEDS reporting. 60.0716 Genetics Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in genetic counseling and disorders. This CIP Code is not valid for IPEDS reporting. 60.0717 Gerontology Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in gerontology. This CIP Code is not valid for IPEDS reporting. 60.0718 Global Health Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in global health. This CIP Code is not valid for IPEDS reporting. 60.0719 Hematology-Oncology Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in hematology and oncology. This CIP Code is not valid for IPEDS reporting. 60.0720 Hepatology Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in hepatology. This CIP Code is not valid for IPEDS reporting. 60.0721 Home-Based Primary Care Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in home-based primary care. This CIP Code is not valid for IPEDS reporting. 60.0722 Hospice and Palliative Medicine Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in hospice and palliative medicine. This CIP Code is not valid for IPEDS reporting. 60.0723 Hospital Medicine Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in hospital medicine. This CIP Code is not valid for IPEDS reporting. 60.0724 Infectious Diseases Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in infectious diseases. This CIP Code is not valid for IPEDS reporting. 60.0725 Neonatal Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in neonatology. This CIP Code is not valid for IPEDS reporting. 60.0726 Nephrology Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in nephrology. This CIP Code is not valid for IPEDS reporting. 60.0727 Neurology Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in neurology. This CIP Code is not valid for IPEDS reporting. 60.0728 Neuroscience Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in neuroscience. This CIP Code is not valid for IPEDS reporting. 60.0729 Obstetrics and Gynecology Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in obstetrics and gynecology. This CIP Code is not valid for IPEDS reporting. 60.0730 Occupational Health Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in occupational health. This CIP Code is not valid for IPEDS reporting. 60.0731 Orthopedic Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in orthopedics. This CIP Code is not valid for IPEDS reporting. 60.0732 Orthopedic Surgery Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in orthopedic surgery. This CIP Code is not valid for IPEDS reporting. 60.0733 Pain Management Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in pain management. This CIP Code is not valid for IPEDS reporting. 60.0734 Palliative Care Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in palliative care. This CIP Code is not valid for IPEDS reporting. 60.0735 Pediatric Hematology-Oncology Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in pediatric hematology and oncology. This CIP Code is not valid for IPEDS reporting. 60.0736 Pediatric Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in pediatrics. This CIP Code is not valid for IPEDS reporting. 60.0737 Pediatric Rehabilitation Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in pediatric rehabilitation. This CIP Code is not valid for IPEDS reporting. 60.0738 Psychiatric/Mental Health Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in psychiatric and mental health. This CIP Code is not valid for IPEDS reporting. 60.0739 Public/Community Health Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in public or community health. This CIP Code is not valid for IPEDS reporting. 60.0740 Pulmonary Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in pulmonology. This CIP Code is not valid for IPEDS reporting. 60.0741 Rheumatology Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in rheumatology. This CIP Code is not valid for IPEDS reporting. 60.0742 Rural Health Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in rural health. This CIP Code is not valid for IPEDS reporting. 60.0743 Sleep Medicine Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in sleep medicine. This CIP Code is not valid for IPEDS reporting. 60.0744 Surgical and Critical Care Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in surgical and critical care medicine. This CIP Code is not valid for IPEDS reporting. 60.0745 Surgical Wound and Reconstruction Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in surgical wound care and reconstruction. This CIP Code is not valid for IPEDS reporting. 60.0746 Transplantation Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in transplantology. This CIP Code is not valid for IPEDS reporting. 60.0747 Trauma and Critical Care Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in trauma and critical care medicine. This CIP Code is not valid for IPEDS reporting. 60.0748 Urgent Care Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in urgent care medicine. This CIP Code is not valid for IPEDS reporting. 60.0749 Urology Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in urology. This CIP Code is not valid for IPEDS reporting. 60.0750 Women’s Health Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in women’s health. This CIP Code is not valid for IPEDS reporting. 60.0751 Wound Care Nurse Practitioner Residency/Fellowship Program. (New)A residency or fellowship program for licensed nurse practitioners that provides advanced didactic and clinical training in wound care. This CIP Code is not valid for IPEDS reporting. 60.0799 Nurse Practitioner Residency/Fellowship Program, Other. (New)Any residency or fellowship program for nurse practitioners not listed above. This CIP code is not valid for IPEDS reporting. 60.08 Pharmacy Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 60.0801 - 60.0899. These CIP codes are not valid for IPEDS reporting. 60.0801 Pharmacy Residency/Fellowship Program, General. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in pharmacy. This CIP Code is not valid for IPEDS reporting. 60.0802 Combined Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in two or more pharmacy specialties. This CIP Code is not valid for IPEDS reporting. 60.0803 Ambulatory Care Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in ambulatory care pharmacy. This CIP Code is not valid for IPEDS reporting. 60.0804 Cardiology Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in cardiology pharmacy. This CIP Code is not valid for IPEDS reporting. 60.0805 Clinical Pharmacogenomics Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in clinical pharmacogenomics. This CIP Code is not valid for IPEDS reporting.Examples: Biologics/Pharmacogenomics Pharmacy Residency Program 60.0806 Community/Community-Based Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in community or community-based pharmacy. This CIP Code is not valid for IPEDS reporting. 60.0807 Corporate Pharmacy Leadership Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in corporate pharmacy leadership. This CIP Code is not valid for IPEDS reporting. 60.0808 Critical Care Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in critical care pharmacy. This CIP Code is not valid for IPEDS reporting. 60.0809 Drug Information Pharmacy Residency/Fellowship Program (New)A residency or fellowship program for licensed pharmacists that provides advanced training in drug information. This CIP Code is not valid for IPEDS reporting. 60.0810 Emergency Medicine Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in emergency medicine pharmacy. This CIP Code is not valid for IPEDS reporting. 60.0811 Family Medicine Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in family medicine pharmacy. This CIP Code is not valid for IPEDS reporting. 60.0812 Geriatric Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in geriatric pharmacy. This CIP Code is not valid for IPEDS reporting. 60.0813 Health System Medication Management Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in health system medication management. This CIP Code is not valid for IPEDS reporting. 60.0814 Health System Pharmacy Administration and Leadership Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in health system pharmacy administration and leadership. This CIP Code is not valid for IPEDS reporting. 60.0815 Infectious Diseases Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in infectious diseases pharmacy. This CIP Code is not valid for IPEDS reporting.Examples: HIV Pharmacy Residency Program 60.0816 Internal Medicine Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in internal medicine pharmacy. This CIP Code is not valid for IPEDS reporting. 60.0817 Investigational Drugs and Research Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in investigational drugs and research. This CIP Code is not valid for IPEDS reporting. 60.0818 Managed Care Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in managed care pharmacy. This CIP Code is not valid for IPEDS reporting. 60.0819 Medication Systems and Operations Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in medication systems and operations. This CIP Code is not valid for IPEDS reporting. 60.0820 Medication-Use Safety Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in medication-use safety. This CIP Code is not valid for IPEDS reporting. 60.0821 Neonatal Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in neonatal pharmacy. This CIP Code is not valid for IPEDS reporting. 60.0822 Nephrology Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in nephrology pharmacy. This CIP Code is not valid for IPEDS reporting. 60.0823 Neurology Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in neurology pharmacy. This CIP Code is not valid for IPEDS reporting. 60.0824 Nuclear Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in nuclear pharmacy. This CIP Code is not valid for IPEDS reporting. 60.0825 Nutrition Support Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in nutrition support. This CIP Code is not valid for IPEDS reporting. 60.0826 Oncology Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in oncology pharmacy. This CIP Code is not valid for IPEDS reporting. 60.0827 Palliative Care/Pain Management Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in palliative care and pain management. This CIP Code is not valid for IPEDS reporting. 60.0828 Pediatric Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in pediatric pharmacy. This CIP Code is not valid for IPEDS reporting. 60.0829 Pharmacotherapy Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in pharmacotherapy. This CIP Code is not valid for IPEDS reporting. 60.0830 Pharmacy Informatics Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in pharmacy informatics. This CIP Code is not valid for IPEDS reporting.Examples: Pharmacoeconomics and Outcomes Research Pharmacy Residency Program 60.0831 Psychiatric Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in psychiatric pharmacy. This CIP Code is not valid for IPEDS reporting. 60.0832 Transplantation Pharmacy Residency/Fellowship Program. (New)A residency or fellowship program for licensed pharmacists that provides advanced training in transplantation pharmacy. This CIP Code is not valid for IPEDS reporting.Examples: Solid Organ Transplant Pharmacy Residency Program Transplantional/Immunology Pharmacy Residency Program 60.0899 Pharmacy Residency Programs, Other. (New)Any residency or fellowship program in pharmacy not listed above. This CIP code is not valid for IPEDS reporting. 60.09 Physician Assistant Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 60.0901 - 60.0999. These CIP codes are not valid for IPEDS reporting. 60.0901 Physician Assistant Residency/Fellowship Program, General. (New)A residency or fellowship program for licensed physician associates/assistants that provides advanced training in medicine. This CIP Code is not valid for IPEDS reporting.Examples: Physician Associate Residency/Fellowship Program, General. 60.0902 Combined Physician Assistant Residency/Fellowship Program. (New)A residency or fellowship program for licensed physician associates/assistants that provides advanced training in two or more medical or surgical specialties. This CIP Code is not valid for IPEDS reporting.Examples: Combined Physician Associate Residency/Fellowship Program. 60.0903 Acute Care Medicine Physician Assistant Residency/Fellowship Program. (New)A residency or fellowship program for licensed physician associates/assistants that provides advanced training in acute care medicine. This CIP Code is not valid for IPEDS reporting.Examples: Acute Care Medicine Physician Associate Residency/Fellowship Program. 60.0904 Acute Care Surgery Physician Assistant Residency/Fellowship Program. (New)A residency or fellowship program for licensed physician associates/assistants that provides advanced training in acute care surgery. This CIP Code is not valid for IPEDS reporting.Examples: Acute Care Surgery Physician Associate Residency/Fellowship Program. 60.0905 Cardiology Physician Assistant Residency/Fellowship Program. (New)A residency or fellowship program for licensed physician associates/assistants that provides advanced training in cardiology. This CIP Code is not valid for IPEDS reporting.Examples: Cardiology Physician Associate Residency/Fellowship Program. 60.0906 Cardiothoracic Surgery Physician Assistant Residency/Fellowship Program. (New)A residency or fellowship program for licensed physician associates/assistants that provides advanced training in cardiothoracic surgery. This CIP Code is not valid for IPEDS reporting.Examples: Cardiothoracic Surgery Physician Associate Residency/Fellowship Program. 60.0907 Critical Care Physician Assistant Residency/Fellowship Program. (New)A residency or fellowship program for licensed physician associates/assistants that provides advanced training in critical care medicine. This CIP Code is not valid for IPEDS reporting.Examples: Critical Care Physician Associate Residency/Fellowship Program. 60.0908 Critical Care and Trauma Surgery Physician Assistant Residency/Fellowship Program. (New)A residency or fellowship program for licensed physician associates/assistants that provides advanced training in critical care and trauma surgery. This CIP Code is not valid for IPEDS reporting.Examples: Critical Care and Trauma Surgery Physician Associate Residency/Fellowship Program. 60.0909 Emergency Medicine Physician Assistant Residency/Fellowship Program. (New)A residency or fellowship program for licensed physician associates/assistants that provides advanced training in emergency medicine. This CIP Code is not valid for IPEDS reporting.Examples: Emergency Medicine Physician Associate Residency/Fellowship Program. 60.0910 ENT Surgery Physician Assistant Residency/Fellowship Program. (New)A residency or fellowship program for licensed physician associates/assistants that provides advanced training in ENT (ears, nose, and throat) surgery. This CIP Code is not valid for IPEDS reporting.Examples: ENT Surgery Physician Associate Residency/Fellowship Program. 60.0911 Family Medicine Physician Assistant Residency/Fellowship Program. (New)A residency or fellowship program for licensed physician associates/assistants that provides advanced training in family medicine. This CIP Code is not valid for IPEDS reporting.Examples: Family Medicine Physician Associate Residency/Fellowship Program. 60.0912 Geriatrics Physician Assistant Residency/Fellowship Program. (New)A residency or fellowship program for licensed physician associates/assistants that provides advanced training in geriatrics. This CIP Code is not valid for IPEDS reporting.Examples: Geriatrics Physician Associate Residency/Fellowship Program. 60.0913 Hematology-Oncology Physician Assistant Residency/Fellowship Program. (New)A residency or fellowship program for licensed physician associates/assistants that provides advanced training in hematology and oncology. This CIP Code is not valid for IPEDS reporting.Examples: Hematology-Oncology Physician Associate Residency/Fellowship Program. 60.0914 Hepatobiliary Surgery Physician Assistant Residency/Fellowship Program. (New)A residency or fellowship program for licensed physician associates/assistants that provides advanced training in hepatobiliary surgery. This CIP Code is not valid for IPEDS reporting.Examples: Hepatobiliary Surgery Physician Associate Residency/Fellowship Program. 60.0915 Hospitalist Physician Assistant Residency/Fellowship Program. (New)A residency or fellowship program for licensed physician associates/assistants that provides advanced training in hospital medicine. This CIP Code is not valid for IPEDS reporting.Examples: Hospitalist Physician Associate Residency/Fellowship Program. 60.0916 Neurosurgery Physician Assistant Residency/Fellowship Program. (New)A residency or fellowship program for licensed physician associates/assistants that provides advanced training in neurosurgery. This CIP Code is not valid for IPEDS reporting.Examples: Neurosurgery Physician Associate Residency/Fellowship Program. 60.0917 Orthopedic Surgery Physician Assistant Residency/Fellowship Program. (New)A residency or fellowship program for licensed physician associates/assistants that provides advanced training in orthopedic surgery. This CIP Code is not valid for IPEDS reporting.Examples: Orthopedic Surgery Physician Associate Residency/Fellowship Program. 60.0918 Pediatric Surgery Physician Assistant Residency/Fellowship Program. (New)A residency or fellowship program for licensed physician associates/assistants that provides advanced training in pediatric surgery. This CIP Code is not valid for IPEDS reporting.Examples: Pediatric Surgery Physician Associate Residency/Fellowship Program. 60.0919 Transplant Surgery Physician Assistant Residency/Fellowship Program. (New)A residency or fellowship program for licensed physician associates/assistants that provides advanced training in transplant surgery. This CIP Code is not valid for IPEDS reporting.Examples: Transplant Surgery Physician Associate Residency/Fellowship Program. Abdominal Organ Transplantation Physician Associate Residency Program. Abdominal Organ Transplantation Physician Assistant Residency Program. 60.0920 Urology Physician Assistant Residency/Fellowship Program. (New)A residency or fellowship program for licensed physician associates/assistants that provides advanced training in urology. This CIP Code is not valid for IPEDS reporting.Examples: Urology Physician Associate Residency/Fellowship Program. 60.0999 Physician Assistant Residency/Fellowship Program, Other. (New)Any residency or fellowship program for physician associates/assistants not listed above. This CIP code is not valid for IPEDS reporting.Examples: Physician Associate Residency/Fellowship Program, Other. 60.99 Health Professions Residency/Fellowship Programs, Other. (New)Instructional content is defined in code 60.9999. These CIP codes are not valid for IPEDS reporting. 60.9999 Health Professions Residency/Fellowship Programs, Other. (New)Any health professions residency or fellowship program not listed above. This CIP code is not valid for IPEDS reporting. 61 MEDICAL RESIDENCY/FELLOWSHIP PROGRAMS. (New)Programs that prepare allopathic physicians (MD), osteopathic physicians (DO), and podiatrists (DPM) for certification as practitioners of recognized medical specialties. These programs are approved and accredited by the Accreditation Council for Graduate Medical Education (ACGME) or the Council on Podiatric Medical Education (CPME) and require from one to seven years to complete, depending on the program. Residency programs that also result in the completion of an academic degree (e.g., MS, PhD), should be reported under one of the clinical sciences codes located in Series 26, 51.05, or 51.14, rather than in a residency code located in Series 61. These CIP Codes are not valid for IPEDS reporting. 61.01 Combined Medical Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.0101 - 61.0199. 61.0101 Combined Medical Residency/Fellowship Program, General. (New)A combined educational program in two or more closely related medical specialty or subspecialty programs which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0102 Diagnostic Radiology/Nuclear Medicine Combined Specialty Program. (New)A combined educational program in diagnostic radiology and nuclear medicine which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0103 Emergency Medicine/Anesthesiology Combined Specialty Program. (New)A combined educational program in emergency medicine and anesthesiology which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0104 Family Medicine/Emergency Medicine Combined Specialty Program. (New)A combined educational program in family medicine and emergency medicine which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0105 Family Medicine/Osteopathic Neuromusculoskeletal Medicine Combined Specialty Program. (New)A combined educational program in family medicine and osteopathic neuromusculoskeletal medicine which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0106 Family Medicine/Preventive Medicine Combined Specialty Program. (New)A combined educational program in family medicine and preventative medicine which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0107 Family Medicine/Psychiatry Combined Specialty Program. (New)A combined educational program in family medicine and psychiatry which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0108 Internal Medicine/Anesthesiology Combined Specialty Program. (New)A combined educational program in internal medicine and anesthesiology which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0109 Internal Medicine/Dermatology Combined Specialty Program. (New)A combined educational program in internal medicine and dermatology which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0110 Internal Medicine/Emergency Medicine Combined Specialty Program. (New)A combined educational program in internal medicine and emergency medicine which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0111 Internal Medicine/Emergency Medicine/Critical Care Medicine Combined Specialty Program. (New)A combined educational program in internal medicine, emergency medicine, and critical care medicine which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0112 Internal Medicine/Family Medicine Combined Specialty Program. (New)A combined educational program in internal medicine and family medicine which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0113 Internal Medicine/Medical Genetics and Genomics Combined Specialty Program. (New)A combined educational program in internal medicine and medical genetics and genomics which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0114 Internal Medicine/Neurology Combined Specialty Program. (New)A combined educational program in internal medicine and neurology which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0115 Internal Medicine/Pediatrics Combined Specialty Program. (New)A combined educational program in internal medicine and pediatrics which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0116 Internal Medicine/Preventive Medicine Combined Specialty Program. (New)A combined educational program in internal medicine and preventative medicine which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0117 Internal Medicine/Psychiatry Combined Specialty Program. (New)A combined educational program in internal medicine and psychiatry which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0118 Medical Genetics and Genomics/Maternal-Fetal Medicine Combined Specialty Program. (New)A combined educational program in medical genetics and genomics and maternal-fetal medicine which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0119 Pediatrics/Anesthesiology Combined Specialty Program. (New)A combined educational program in pediatrics and anesthesiology which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0120 Pediatrics/Emergency Medicine Combined Specialty Program. (New)A combined educational program in pediatrics and emergency medicine which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0121 Pediatrics/Medical Genetics and Genomics Combined Specialty Program. (New)A combined educational program in pediatrics and medical genetics and genomics which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0122 Pediatrics/Physical Medicine &amp; Rehabilitation Combined Specialty Program. (New)A combined educational program in pediatrics and physical medicine and rehabilitation which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0123 Pediatrics/Psychology/Child-Adolescent Psychology Combined Specialty Program. (New)A combined educational program in pediatrics, psychology, and child-adolescent psychology which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0124 Psychiatry/Neurology Combined Specialty Program. (New)A combined educational program in psychiatry and neurology which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0125 Reproductive Endocrinology and Infertility/Medical Genetics and Genomics Combined Specialty Program. (New)A combined educational program in reproductive endocrinology and infertility and medical genetics and genomics which has been approved by the specialty board of each of the specialties to ensure that resident physicians completing combined training are eligible for board certification in each of the component specialties. The duration of combined training is longer than any one of its component specialty programs standing alone, and shorter than all of its component specialty programs together. This CIP code is not valid for IPEDS reporting. 61.0199 Combined Medical Residency/Fellowship Programs, Other. (New)Any combined medical residency or fellowship program not listed above. 61.02 Multiple-Pathway Medical Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.0202 - 61.0299. 61.0202 Critical Care Medicine Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the management of care for patients with acutely life-threatening conditions which may include multiple organ failure. Includes instruction in the management of critical care units, emergency procedures and post-discharge care of former critical care patients. Requires prior completion of a residency program in anesthesiology, internal medicine, or obstetrics and gynecology. Note: critical care anesthesiology is no longer a medical subspecialty, but anesthesiologists may complete a subspecialty in critical care medicine. This CIP code is not valid for IPEDS reporting.Examples: Critical Care Anesthesiology Residency Program 61.0203 Geriatric Medicine Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the care and management of elderly patients in acute, ambulatory, community and long-term care settings, and the treatment of diseases and conditions associated with the aging process. Includes instruction in ethical and legal issues, behavioral aspects of illness, socioeconomic factors in care and rehabilitation therapies. Requires prior completion of a residency program in family medicine or internal medicine. This CIP code is not valid for IPEDS reporting. 61.0204 Health Policy Fellowship Program. (New)A fellowship training program that prepares physicians to effect change within the health care system and advocate for the practice of medicine to ultimately shape the future health care landscape on both local and national levels. Requires prior completion of an accredited medical residency program. This CIP code is not valid for IPEDS reporting. 61.0205 Hospice and Palliative Medicine Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians to prevent and relieve the suffering experienced by patients with life-limiting illnesses and to maximize the quality of life while addressing the physical, psychological, social, and spiritual needs of both patient and family throughout the course of the disease, including through the dying process and subsequent family grieving. Requires prior completion of a residency program in anesthesiology, emergency medicine, family medicine, internal medicine, neurology, child neurology, obstetrics and gynecology, pediatrics, physical medicine and rehabilitation, psychiatry, radiation oncology, or general surgery. This CIP code is not valid for IPEDS reporting. 61.0206 Integrative Medicine Fellowship Program. (New)A fellowship training program that prepares physicians to practice medicine in a way that reaffirms the importance of the relationship between practitioner and patient; focuses on the whole person; is informed by evidence; and makes use of all appropriate therapeutic approaches, healthcare professionals, and disciplines to achieve optimal health and healing. Requires prior completion of an accredited medical residency program. This CIP code is not valid for IPEDS reporting.Examples: Integrative Geriatric Fellowship Program Academic Integrative Health Fellowship Program Integrative Health and Medicine Fellowship Program Lifestyle Medicine Fellowship Program 61.0207 Medical Education Fellowship Program. (New)A fellowship training program that prepares physicians to teach deliver, design, and evaluate courses and curricula for medical students, residents, and faculty. Requires prior completion of an accredited medical residency program. This CIP code is not valid for IPEDS reporting.See also: 51.3202 - Health Professions Education. 61.0208 Medical Toxicology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians who specialize in the prevention, evaluation, treatment, and monitoring of injury and illness from exposures to drugs and chemicals, as well as exposures to biological and radiological agents. Important areas include acute drug poisoning; adverse drug events; drug abuse, addiction, and withdrawal; chemicals and hazardous materials; terrorism preparedness; venomous bites and stings; and environmental and workplace exposures. Requires prior completion of a residency program in emergency medicine, pediatrics, or preventive medicine. This CIP code is not valid for IPEDS reporting. 61.0209 Neuromuscular Medicine Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the diagnosis and management of disorders of nerve, muscle, or neuromuscular junction, including amyotrophic lateral sclerosis, peripheral neuropathies, various muscular dystrophies, congenital and acquired myopathies, inflammatory myopathies, and neuromuscular transmission disorders. Requires prior completion of a residency program in neurology, child neurology, or physical medicine and rehabilitation. This CIP code is not valid for IPEDS reporting. 61.0210 Pain Medicine Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the diagnosis and treatment of the entire range of painful disorders, either as a primary physician or consultant, for patients experiencing problems with acute, chronic, and/or cancer pain in both hospital and ambulatory settings. Requires prior completion of a residency program in anesthesiology, neurology, child neurology, physical medicine and rehabilitation, or psychiatry. This CIP code is not valid for IPEDS reporting.See also: 51.1403 - Pain Management. 61.0211 Simulation Fellowship Program. (New)A fellowship training program that prepares physicians to develop, implement, manage, and assess healthcare simulation-based activities and programs. Requires prior completion of an accredited medical residency program. This CIP code is not valid for IPEDS reporting. 61.0212 Sleep Medicine Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the diagnosis and management of clinical conditions that occur during sleep, that disturb sleep, or that are affected by disturbances in the wake-sleep cycle; in the analysis and interpretation of comprehensive polysomnography; and in the management of a sleep laboratory. Requires prior completion of a residency program in family medicine, internal medicine, neurology, child neurology, otolaryngology, pediatrics, or psychiatry. This CIP code is not valid for IPEDS reporting. 61.0213 Sports Medicine Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the pathology and biomechanics of athletic injuries and the effects of injury on the athlete, including both physical and psychological manifestations. Includes instruction in acute and chronic patient supervision, therapy and rehabilitation, and diagnostic procedures. Requires prior completion of a residency program in emergency medicine, family medicine, internal medicine, orthopedic surgery, pediatrics, or physical medicine and rehabilitation. This CIP code is not valid for IPEDS reporting. 61.0214 Surgery of the Hand Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the investigation, preservation, and restoration by medical, surgical or physical methods of all structures of the upper extremity which directly affect the form and function of the limb, wrist, and hand. Requires prior completion of a residency program in orthopedic surgery, plastic surgery, or general surgery. This CIP code is not valid for IPEDS reporting.Examples: Hand Surgery Residency Program 61.0215 Telemedicine Fellowship Program. (New)A fellowship training program that prepares physicians to bring together technology and clinical medicine to enhance the overall delivery of medical care. Requires prior completion of an accredited medical residency program. This CIP code is not valid for IPEDS reporting.Examples: Telehealth Residency Program 61.0216 Undersea and Hyperbaric Medicine Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians to treat decompression illness and diving accident cases; to use hyperbaric oxygen therapy treatment for conditions such as carbon monoxide poisoning, gas gangrene, non-healing wounds, tissue damage from radiation and burns, and bone infections; to serve as consultant in all aspects of hyperbaric chamber operations; and to assess risks and apply appropriate standards to prevent disease and disability in divers and other persons working in altered atmospheric conditions. Requires prior completion of a residency program in emergency medicine or preventive medicine. This CIP code is not valid for IPEDS reporting. 61.0217 Wilderness Medicine Fellowship Program. (New)A fellowship training program that prepares physicians to practice medicine with limited resources in austere environments or to provide healthcare anywhere in which environmental conditions have physiologic insult to a patient. Requires prior completion of a medical residency program. This CIP code is not valid for IPEDS reporting. 61.0218 Women’s Health Fellowship Program. (New)A fellowship training program that prepares physicians to provide high-quality and culturally competent reproductive and gynecologic care to women, and to understand the interactions of biological, societal, behavioral, political, and environmental issues on the overall health of women. Requires prior completion of a residency program in emergency medicine, internal medicine, obstetrics-gynecology, or psychiatry. This CIP code is not valid for IPEDS reporting.Examples: Global Women’s Health Fellowship Sex and Gender Fellowship Women’s Health Fellowship 61.0299 Multiple-Pathway Medical Fellowship Programs, Other. (New)Any multiple-pathway medical fellowship program not listed above. 61.03 Allergy and Immunology Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.0301 - 61.0399. 61.0301 Allergy and Immunology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the delivery of skilled medical care to patients suffering from allergic, asthmatic, and immunologic diseases. Requires completion of a prior residency program in internal medicine or pediatrics. This CIP code is not valid for IPEDS reporting. 61.0399 Allergy and Immunology Residency/Fellowship Programs, Other. (New)Any residency or fellowship in allergy or immunology not listed above. 61.04 Anesthesiology Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.0401 - 61.0499. 61.0401 Anesthesiology Residency Program. (Moved to)CIP Title or Definition ChangedA residency training program that prepares physicians in the application of anesthesia for general and specialized surgery and obstetrics, critical patient care, and the care of pain problems. Includes instruction in surgical procedures, current monitoring procedures, fluid therapy, pain management, diagnostic and therapeutic procedures outside the operating room, and operating room safety. This CIP code is not valid for IPEDS reporting. 61.0499 Anesthesiology Residency/Fellowship Programs, Other. (New)Any residency or fellowship program in anesthesiology not listed above. 61.05 Dermatology Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.0501 - 61.0599. 61.0501 Dermatology Residency Program. (Moved to)A residency training program that prepares physicians in the delivery of specialized care to patients with diseases of the skin, hair, nails and mucous membranes. Includes instruction in dermatologic surgical procedures, cutaneous allergies, sexually transmitted diseases, and diagnostic and therapeutic techniques. This CIP code is not valid for IPEDS reporting. 61.0502 Dermatopathology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the clinical and microscopic diagnosis and analysis of skin diseases and disorders. Includes instruction in laboratory administration and the supervision and training of support personnel. Requires prior completion of a residency program in dermatology. This CIP code is not valid for IPEDS reporting. 61.0503 Pediatric Dermatology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the treatment of specific skin disease categories, with emphasis on those diseases which predominate in infants, children, and adolescents. Requires prior completion of a residency program in dermatology. This CIP code is not valid for IPEDS reporting. 61.0599 Dermatology Residency/Fellowship Programs, Other. (New)Any residency or fellowship program in dermatology not listed above. 61.06 Emergency Medicine Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.0601 - 61.0699. 61.0601 Emergency Medicine Residency Program. (Moved to)A residency training program that prepares physicians in the methods, procedures, and techniques of providing and managing immediate health care services. Includes instruction in the initial recognition, stabilization, evaluation and care of the acutely ill or injured patient; patient follow-up and referral; management of prehospital care; training and supervision of emergency medical personnel; emergency department management; medicolegal and ethical issues; and disaster planning. This CIP code is not valid for IPEDS reporting. 61.0602 Disaster Medicine Fellowship Program. (New)A fellowship training program that prepares physicians to provide care for the victims of natural and man-made disasters with specific consideration given to timeliness and availability of resources. Includes instruction in emergency medicine and its associated acute care specialties, public health, emergency management, humanitarian services, and prehospital emergency medical services (EMS). Requires prior completion of a residency program in emergency medicine. This CIP code is not valid for IPEDS reporting.Examples: Disaster Medicine and Emergency Management Fellowship 61.0603 Emergency Medical Services Fellowship Program. (New)A fellowship training program that prepares physicians in the leadership and medical oversight of pre- and out-of-hospital emergency care systems with advanced competencies in Emergency Medical System (EMS) system design, administration, and clinical care. Includes instruction in clinical aspects of EMS, medical oversight of EMS, mass casualty management, disaster planning and operations, wilderness EMS systems, and quality management and research. Requires prior completion of a residency program in emergency medicine. This CIP code is not valid for IPEDS reporting. 61.0699 Emergency Medicine Residency/Fellowship Programs, Other. (New)Any residency or fellowship program in emergency medicine not listed above. 61.07 Family Medicine Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.0701 - 61.0799. 61.0701 Family Medicine Residency Program. (Moved to)A residency training program that prepares physicians in the provisions of regular and long-term care to individuals and family members. Includes instruction in comprehensive care and specialist referral, basic surgery, emergency medical procedures, and diagnostic imaging and practice management. This CIP code is not valid for IPEDS reporting. 61.0799 Family Medicine Residency/Fellowship Programs, Other. (New)Any residency or fellowship program in family medicine not listed above. 61.08 Internal Medicine Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.0801 - 61.0899. 61.0801 Internal Medicine Residency Program. (Moved to)A residency training program that prepares physicians in the provision of general medical services to adult patients with a wide range of non-surgical clinical problems. Includes instruction in behavioral aspects of diseases, patient and family counseling and practice management. This CIP code is not valid for IPEDS reporting. 61.0804 Cardiovascular Disease Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians to specialize in diseases of the heart and blood vessels and to manage complex cardiac conditions such as heart attacks and life-threatening, abnormal heartbeat rhythms. Requires prior completion of a residency program in internal medicine. This CIP code is not valid for IPEDS reporting.Examples: Cardiology Fellowship Program 61.0805 Clinical Cardiac Electrophysiology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program, within the subspecialty of cardiovascular disease, which prepares physicians in intricate technical procedures to evaluate heart rhythms and determine appropriate treatment. Requires prior completion of a residency program in internal medicine. This CIP code is not valid for IPEDS reporting. 61.0806 Endocrinology, Diabetes, and Metabolism Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians to specialize in disorders of the internal (endocrine) glands such as the thyroid and adrenal glands, and to deal with disorders such as diabetes, metabolic and nutritional disorders, obesity, pituitary diseases, and menstrual and sexual problems. Requires prior completion of a residency program in internal medicine. This CIP code is not valid for IPEDS reporting.Examples: Endocrinology and Metabolism Residency Program 61.0807 Gastroenterology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the diagnosis and treatment of patients with digestive and other gastrointestinal disorders. Includes instruction in surgical procedures, cancer of the digestive system, nutrition and malnutrition, and counseling the behavioral adjustment of patients with chronic problems. Requires prior completion of a residency program in internal medicine. This CIP code is not valid for IPEDS reporting. 61.0808 Hematology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the mechanisms and therapy of diseases of the blood, bone marrow, spleen, and lymph, including patient management, diagnostic tests, biopsies, and other procedures. Requires prior completion of a residency program in internal medicine or pathology. This CIP code is not valid for IPEDS reporting. 61.0809 Hematology-Oncology Fellowship Program. (New)A fellowship training program that prepares physicians in the diagnosis and treatment of cancer, benign and malignant tumors, and diseases of the blood, bone marrow, spleen, and lymph. Requires prior completion of a residency program in internal medicine. This CIP code is not valid for IPEDS reporting. 61.0810 Infectious Disease Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the natural history, prevention and treatment of major infectious diseases, including sexually transmitted diseases, and the long-term management of patients. Includes instruction in epidemiology, identification and specimen collection techniques, and quality assurance and cost containment. Requires prior completion of a residency program in internal medicine. This CIP code is not valid for IPEDS reporting. 61.0811 Interventional Cardiology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program, within the subspecialty of cardiology, which trains physicians in the use of specialized imaging and other diagnostic techniques to evaluate blood flow and pressure in the coronary arteries and chambers of the heart, and in the use of technical procedures and medications to treat abnormalities that impair the function of the cardiovascular system. Requires prior completion of a residency program in internal medicine. This CIP code is not valid for IPEDS reporting. 61.0812 Nephrology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the pathogenesis, natural history, and management of congenital and acquired diseases of the kidney and urinary tract and renal diseases associated with systemic disorders. Includes instruction in organ transplantation and dialysis therapy. Requires prior completion of a residency program in internal medicine. This CIP code is not valid for IPEDS reporting. 61.0813 Medical Oncology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the diagnosis and treatment of all types of cancer and other benign and malignant tumors; this includes deciding on and administering therapy for these malignancies, as well as consulting with surgeons and radiotherapists on other treatments for cancer. Requires prior completion of a residency program in internal medicine. This CIP code is not valid for IPEDS reporting. 61.0814 Pulmonary Disease Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in pulmonary physiology and the treatment of lung diseases, pulmonary malignancies, related vascular diseases, respiratory disorders, diagnostic and therapeutic procedures, and pulmonary pathology. Requires prior completion of a residency program in internal medicine. This CIP code is not valid for IPEDS reporting. 61.0816 Rheumatology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the diagnosis and treatment of patients with acute and chronic rheumatic diseases, diffuse connective tissue diseases, systemic and metabolic diseases and infections and complications following surgery. Requires prior completion of a residency program in internal medicine. This CIP code is not valid for IPEDS reporting. 61.0818 Transplant Hepatology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians with special knowledge and the skill required of a gastroenterologist to care for patients prior to and following hepatic transplantation that spans all phases of liver transplantation. Requires prior completion of a residency program in internal medicine. This CIP code is not valid for IPEDS reporting. 61.0899 Internal Medicine Residency/Fellowship Programs, Other. (New)Any residency or fellowship program in internal medicine not listed above. 61.09 Medical Genetics and Genomics Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.0901 - 61.0999. 61.0901 Clinical Biochemical Genetics Residency Program. (Moved to)CIP Title or Definition ChangedA residency training program that prepares physicians to perform and interpret biochemical analyses relevant to the diagnosis and management of human genetic diseases, and to serve as a consultant regarding laboratory diagnosis of a broad range of inherited disorders. One of three general certificates in the area of medical genetics. This CIP code is not valid for IPEDS reporting. 61.0902 Clinical Genetics and Genomics Residency Program. (Moved to)CIP Title or Definition ChangedA residency training program that prepares physicians to provide comprehensive diagnostic, management, and counseling services for individuals and families at risk for clinical disorders with a genetic basis. One of three general certificates in the area of medical genetics. This CIP code is not valid for IPEDS reporting. 61.0903 Laboratory Genetics and Genomics Residency Program. (New)A residency training program that prepares physicians to direct and interpret both clinical cytogenetic and molecular genetic analyses relevant to the diagnosis and management of human genetic diseases. One of three general certificates in the area of medical genetics. This CIP code is not valid for IPEDS reporting.Examples: Clinical Cytogenetics and Genomics Residency Program Clinical Molecular Genetics and Genomics Residency Program 61.0904 Medical Biochemical Genetics Residency Program. (Moved to)CIP Title or Definition ChangedA residency training program that prepares physicians in the diagnosis and medical management of individuals with inborn errors of metabolism, including the provision of direct care and consultative care for individuals of all ages. Requires prior completion of a residency program in medical genetics. This CIP code is not valid for IPEDS reporting. 61.0999 Medical Genetics and Genomics Residency/Fellowship Programs, Other. (New)Any residency or fellowship program in medical genetics and genomics not listed above. 61.10 Neurological Surgery Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.1001 - 61.1099. 61.1001 Neurological Surgery Residency Program. (Moved to)A residency training program that prepares physicians in the prevention, diagnosis, evaluation, treatment, critical care, and rehabilitation of disorders of the central, peripheral, and autonomic nervous systems, using operative and non-operative means; the evaluation and treatment of pathological processes that modify the function or activity of the nervous system; and the management of pain. This CIP code is not valid for IPEDS reporting.Examples: Neurological Surgery/Neurosurgery Residency Program 61.1099 Neurological Surgery Residency/Fellowship Programs, Other. (New)Any residency or fellowship program in neurological surgery not listed above. 61.11 Neurology Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.1101 - 61.1199. 61.1101 Neurology Residency Program. (Moved to)A residency training program that prepares physicians in the diagnosis and treatment of all types of disease or impaired function of the brain, spinal cord, peripheral nerves, muscles and autonomic nervous system, as well as the blood vessels that relate to these structures. This CIP code is not valid for IPEDS reporting. 61.1102 Child Neurology Residency Program. (Moved to)A residency training program that prepares physicians in the diagnosis and management of neurologic disorders of the neonatal period, infancy, early childhood, and adolescence. Requires training in neurology with additional training in child neurology. This CIP code is not valid for IPEDS reporting.Examples: Neurology with Special Qualifications in Child Neurology Residency Program Pediatric Neurology Residency Program 61.1103 Clinical Neurophysiology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the diagnosis and management of central, peripheral, and autonomic nervous system disorders using a combination of clinical evaluation and electrophysiologic testing such as electroencephalography (EEG), electromyography (EMG), and nerve conduction studies (NCS). Requires prior completion of a residency program in neurology, child neurology, or psychiatry. This CIP code is not valid for IPEDS reporting. 61.1104 Epilepsy Fellowship Program. (New)A fellowship training program that prepares physicians in the diagnosis and treatment of patients with epileptic seizures or with symptoms and signs whose differential diagnosis includes epileptic seizures. Requires prior completion of a residency program in neurology. This CIP code is not valid for IPEDS reporting. 61.1105 Headache Medicine Fellowship Program. (New)A fellowship training program that prepares physicians in the diagnosis, treatment, and research of headache and related disorders. Requires prior completion of a residency program in neurology. This CIP code is not valid for IPEDS reporting. 61.1106 Neurodevelopmental Disabilities Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians to treat children having developmental delays or learning disorders, including those associated with visual and hearing impairment, mental retardation, cerebral palsy, spina bifida, autism, and other chronic neurologic conditions. Requires prior completion of a residency program in neurology, child neurology, or pediatrics. This CIP code is not valid for IPEDS reporting. 61.1107 Vascular Neurology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the evaluation, prevention, treatment, and recovery from vascular diseases of the nervous system resulting from a large number of causes, such as ischemic stroke, intracranial hemorrhage, spinal cord ischemia, and spinal cord hemorrhage. Requires prior completion of a residency program in neurology or child neurology. This CIP code is not valid for IPEDS reporting. 61.1199 Neurology Residency/Fellowship Programs, Other. (New)Any residency or fellowship program in neurology not listed above. 61.12 Nuclear Medicine Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.1201 - 61.1299. 61.1201 Nuclear Medicine Residency Program. (Moved to)A residency training program that prepares physicians to use the tracer principle, most often with radiopharmaceuticals, to evaluate molecular, metabolic, physiologic and pathologic conditions of the body for the purposes of diagnosis, therapy and research. Includes instruction in tracer kinetics, the biologic effects of radiation exposure, the fundamentals of the physical sciences, and the principles and operation of radiation detection and imaging systems. This CIP code is not valid for IPEDS reporting. 61.1299 Nuclear Medicine Residency/Fellowship Programs, Other. (New)Any residency or fellowship program in nuclear medicine not listed above. 61.13 Obstetrics and Gynecology Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.1301 - 61.1399. 61.1301 Obstetrics and Gynecology Residency Program. (Moved to)A residency training program that prepares physicians in the diagnosis, prevention and treatment of diseases of women, especially those affecting the reproductive system, and the comprehensive care and treatment of women before, during and after childbirth. This CIP code is not valid for IPEDS reporting. 61.1302 Gynecologic Oncology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians for consultation and comprehensive management of patients with gynecologic cancer, including those diagnostic and therapeutic procedures necessary for the total care of the patient with gynecologic cancer and resulting complications. Requires prior completion of a residency program in obstetrics and gynecology. This CIP code is not valid for IPEDS reporting. 61.1303 Maternal and Fetal Medicine Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians to care for, or provide consultation on, patients with complications of pregnancy, based on advanced knowledge of the obstetrical, medical, and surgical complications of pregnancy, and their effect on both the mother and the fetus, and expertise in the most current diagnostic and treatment modalities used in the care of patients with complicated pregnancies. Requires prior completion of a residency program in obstetrics and gynecology. This CIP code is not valid for IPEDS reporting. 61.1304 Reproductive Endocrinology/Infertility Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians to manage complex problems relating to reproductive endocrinology and infertility. Requires prior completion of a residency program in obstetrics and gynecology. This CIP code is not valid for IPEDS reporting. 61.1399 Obstetrics and Gynecology Residency/Fellowship Programs, Other. (New)Any residency or fellowship program in obstetrics and gynecology not listed above. 61.14 Ophthalmology Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.1401 - 61.1499. 61.1401 Ophthalmology Residency Program. (Moved to)A residency training program that prepares physicians in the diagnosis, prevention treatment of ophthalmic diseases and disorders, and ocular pathology procedures. Includes instruction in eye surgery. This CIP code is not valid for IPEDS reporting. 61.1499 Ophthalmology Residency/Fellowship Programs, Other. (New)Any residency or fellowship program in ophthalmology not listed above. 61.15 Orthopedic Surgery Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.1501 - 61.1599. 61.1501 Orthopedic Surgery Residency Program. (Moved to)A residency training program that prepares physicians in the investigation, preservation, and restoration of the form and function of the extremities, spine and associated structures by medical, surgical and physical methods. This CIP code is not valid for IPEDS reporting.Examples: Orthopedics Residency Program Adult Reconstructive Orthopedics Residency Program Orthopaedic Surgery Residency Program 61.1502 Musculoskeletal Oncology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the diagnosis and treatment of musculoskeletal neoplasm, and the application of cancer therapy regimes. This CIP code is not valid for IPEDS reporting. 61.1503 Orthopedic Sports Medicine Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians to prevent and manage athletic injuries and to provide appropriate care for all structures of the musculoskeletal system directly affected by participation in sporting activity. Requires prior completion of a residency program in orthopedic surgery. This CIP code is not valid for IPEDS reporting.Examples: Orthopaedic Sports Medicine Residency Program 61.1504 Orthopedic Surgery of the Spine Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares individuals for the study, prevention and treatment of spinal column disease, disorders, and injuries by medical, physical and surgical methods. Includes instruction in pathogenesis and diagnosis of clinical disorders of the spine; non-operative treatment modalities; invasive modalities; basic sciences related to the musculoskeletal system; spinal degeneration; spinal neurologic function; pre- and post-operative management; and patient evaluation. This CIP code is not valid for IPEDS reporting. 61.1505 Pediatric Orthopedics Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the diagnosis, surgical and non-surgical treatment, and management of musculoskeletal diseases, abnormalities and trauma in infants, children, and adolescents. Requires prior completion of a residency program in orthopedic surgery. This CIP code is not valid for IPEDS reporting. 61.1599 Orthopedic Surgery Residency/Fellowship Programs, Other. (New)Any residency or fellowship program in orthopedic surgery not listed above. 61.16 Osteopathic Medicine Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.1601 - 61.1699. 61.1601 Osteopathic Neuromusculoskeletal Medicine Residency Program. (New)A residency training program that prepares osteopathic (DO) physicians to perform osteopathic neuromusculoskeletal diagnosis and perform Osteopathic Manipulative Treatment (OMT). This CIP code is not valid for IPEDS reporting. 61.1699 Osteopathic Medicine Residency/Fellowship Programs, Other. (New)Any residency or fellowship program in osteopathic medicine not listed above. 61.17 Otolaryngology Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.1701 - 61.1799. 61.1701 Otolaryngology Residency Program. (Moved to)A residency training program that prepares physicians to diagnose and provide medical and/or surgical therapy or prevention of diseases, allergies, neoplasms, deformities, disorders, and injuries of the ears, nose, sinuses, throat, respiratory and upper alimentary systems, face, jaws, and the other head and neck systems. This CIP code is not valid for IPEDS reporting. 61.1702 Neurotology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians to treat diseases of the ear and temporal bone, including disorders of hearing and balance. Requires prior completion of a residency program in otolaryngology. This CIP code is not valid for IPEDS reporting. 61.1703 Pediatric Otolaryngology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians to diagnose, treat and manage disorders of infants and children that include congenital and acquired conditions involving the aerodigestive tract, nose and paranasal sinuses, the ear, and other areas of the head and neck; this includes special skills in the diagnosis, treatment, and management of childhood disorders of voice, speech, language, and hearing. Requires prior completion of a residency program in otolaryngology. This CIP code is not valid for IPEDS reporting. 61.1799 Otolaryngology Residency/Fellowship Programs, Other. (New)Any residency or fellowship program in otolaryngology not listed above. 61.18 Pathology Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.1801 - 61.1899. 61.1801 Combined Anatomic and Clinical Pathology Residency Program. (Moved to)CIP Title or Definition ChangedA residency training program that prepares physicians in the clinical laboratory analysis and diagnosis of disease and anatomic abnormalities. Includes instruction in performing general autopsies, forensic medicine, laboratory management, and quality control. This CIP code is not valid for IPEDS reporting.Examples: Anatomic Pathology Residency Program Clinical Pathology Residency Program Anatomic Pathology and Clinical Pathology Residency Program 61.1802 Anatomic Pathology Residency Program. (New)A residency training program that prepares physicians in the diagnosis of disease and anatomic abnormalities. Includes instruction in autopsy pathology, cytology, diagnostic surgical pathology, forensic medicine, laboratory management, and quality control. This CIP code is not valid for IPEDS reporting. 61.1803 Clinical Pathology Residency Program. (New)A residency training program that prepares physicians in the clinical laboratory analysis and diagnosis of disease. Includes instruction in performing clinical chemistry, cytogenetics, immunology, laboratory management, microbiology, molecular biology, quality control, serology, toxicology, and virology. This CIP code is not valid for IPEDS reporting. 61.1804 Blood Banking/Transfusion Medicine Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians for the maintenance of an adequate blood supply, blood donor and patient-recipient safety, and appropriate blood utilization. Includes directing the preparation and safe use of specially prepared blood components, including red blood cells, white blood cells, platelets and plasma constituents, and marrow or stem cells for transplantation. Requires prior completion of a residency program in pathology. This CIP code is not valid for IPEDS reporting.Examples: Blood Banking Residency Program 61.1805 Chemical Pathology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the use and interpretation of chemical analyses, chemical diagnoses and management, and the supervision of chemical pathology laboratories. Includes instruction in basic and applied analytical chemical pathology; instrumentation data processing and chemical laboratory management. Requires prior completion of a residency program in medical pathology. This CIP code is not valid for IPEDS reporting. 61.1806 Cytopathology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares individuals to study, prevent, and manage human diseases manifested in cells. Includes instruction in laboratory procedures, laboratory management, quality assurance, screening, specimen collection, cytopreparation, cytometric and image analysis, and related immunological and molecular techniques. Requires prior completion of a residency program in pathology. This CIP code is not valid for IPEDS reporting. 61.1807 Forensic Pathology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the performance of medical autopsies, the analysis of human remains and crime scenes, and the legal follow-up and responsibilities of public pathologists. Requires prior completion of a residency program in pathology. This CIP code is not valid for IPEDS reporting. 61.1808 Hematological Pathology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the laboratory and analytical procedures for studying all facets of hematologic and coagulation disorders. Includes instruction in the management of hematology laboratories. Requires prior completion of a residency program in pathology. This CIP code is not valid for IPEDS reporting.Examples: Hematopathology 61.1809 Immunopathology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the diagnosis, treatment and laboratory management of immunologic diseases. Includes instruction in diagnostic surgical pathology, management of organ transplantation and immunotherapy. Requires prior completion of a residency program in pathology. This CIP code is not valid for IPEDS reporting. 61.1810 Laboratory Medicine Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the principles and practices of applied medical research and related techniques, equipment, data systems, and research design. Includes instruction in the management of medical laboratories in research and healthcare facilities. This CIP code is not valid for IPEDS reporting. 61.1811 Medical Microbiology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the isolation and identification of microbial agents that cause infectious disease, including viruses, bacteria, fungi, and parasites. Requires prior completion of a residency program in pathology. This CIP code is not valid for IPEDS reporting. 61.1812 Molecular Genetic Pathology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians to make or confirm diagnoses of Mendelian genetic disorders, disorders of human development, infectious diseases and malignancies, and to assess the natural history of those disorders, using the principles, theory, and technologies of molecular biology and molecular genetics. Requires prior completion of a residency program in medical genetics or pathology. This CIP code is not valid for IPEDS reporting. 61.1813 Neuropathology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the laboratory analysis of nerve tissues and the clinical diagnosis of neurological and neuromuscular diseases. Includes instruction in nerve biopsies and necropsies. Requires prior completion of a residency program in pathology. This CIP code is not valid for IPEDS reporting. 61.1814 Pediatric Pathology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the laboratory diagnosis of diseases that occur during fetal growth, infancy, and child development, based on knowledge of general pathology, normal growth and development, and pediatric medicine. Requires prior completion of a residency program in pathology. This CIP code is not valid for IPEDS reporting. 61.1815 Radioisotopic Pathology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the use of radionuclides in the study of body fluids, excreta, or tissues quantified outside the body. Includes instruction in laboratory management and safety, quality control, instrumentation, isotope storage and in vitro analyses. Requires prior completion of a residency program in pathology. This CIP code is not valid for IPEDS reporting. 61.1899 Pathology Residency/Fellowship Programs, Other. (New)Any residency or fellowship program in pathology not listed above. 61.19 Pediatrics Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.1901 - 61.1999. 61.1901 Pediatrics Residency Program. (Moved to)A residency training program that prepares physicians in the comprehensive care and treatment of all aspects of human growth and development from conception through fetal life, infancy, childhood and adolescence, including preventive and therapeutic regimes. Includes instruction in behavioral aspects of illness, related family and community medicine issues, and emergency and critical care procedures. This CIP code is not valid for IPEDS reporting. 61.1902 Adolescent Medicine Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the unique physical, psychological, and social characteristics of adolescents and their healthcare problems and needs. Requires prior completion of a residency program in family medicine, internal medicine, or pediatrics. This CIP code is not valid for IPEDS reporting. 61.1903 Child Abuse Pediatrics Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians to accurately diagnose abuse, consult with community agencies on child safety, provide expertise in courts of law, treat consequences of abuse and neglect, direct child abuse and neglect prevention programs and participate on multidisciplinary investigative teams, and manage child abuse cases. Requires prior completion of a residency program in pediatrics. This CIP code is not valid for IPEDS reporting. 61.1904 Developmental-Behavioral Pediatrics Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians to assist in the prevention, diagnosis, and management of developmental difficulties and problematic behaviors in children, and in the family dysfunctions that compromise children’s development; and to foster understanding and promotion of optimal development of children and families through research, education, clinical care, and advocacy efforts. Requires prior completion of a residency program in pediatrics. This CIP code is not valid for IPEDS reporting. 61.1905 Neonatal-Perinatal Medicine Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the physiology of the normal neonate, the pathophysiology of the sick infant, and the diagnosis and management of problems of the newborn infant, including consulting with obstetricians to plan for the care of women with high-risk pregnancies. Requires prior completion of a residency program in pediatrics. This CIP code is not valid for IPEDS reporting. 61.1906 Pediatric Cardiology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the diagnosis and management of diseases and disorders of the cardiovascular and cardiopulmonary systems of infants, children, and adolescents. Includes instruction in related public health and community medicine issues. Requires prior completion of a residency program in pediatrics. This CIP code is not valid for IPEDS reporting. 61.1907 Pediatric Critical Care Medicine Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in advanced life support for children, from the term or near-term neonate to the adolescent. This includes critical care management of life-threatening organ system failure in both medical and surgical patients and support of vital physiological functions. Requires prior completion of a residency program in pediatrics. This CIP code is not valid for IPEDS reporting. 61.1908 Pediatric Emergency Medicine Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians to manage emergencies in infants and children. Requires prior completion of a residency program in emergency medicine or pediatrics. This CIP code is not valid for IPEDS reporting. 61.1909 Pediatric Endocrinology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the diagnosis and management of endocrine diseases and the regulation of hormone balance in childhood and adolescence. Requires prior completion of a residency program in pediatrics. This CIP code is not valid for IPEDS reporting. 61.1910 Pediatric Gastroenterology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the diagnosis and treatment of diseases of the digestive systems of infants, children, and adolescents; includes treatment of conditions such as abdominal pain, ulcers, diarrhea, cancer, and jaundice, and performance of complex diagnostic and therapeutic procedures using lighted scopes to see internal organs. Requires prior completion of a residency program in pediatrics. This CIP code is not valid for IPEDS reporting. 61.1911 Pediatric Hematology-Oncology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the diagnosis and management of hematologic disorders and malignant diseases, including blood and bone marrow function, in infancy, childhood, and adolescence. Requires prior completion of a residency program in pediatrics. This CIP code is not valid for IPEDS reporting.Examples: Pediatric Hemato-Oncology Residency Program 61.1912 Pediatric Infectious Diseases Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the diagnosis, treatment, and prevention of infectious diseases in children; and to effect a better outcome for pediatric infections with complicated courses, underlying diseases that predispose to unusual or severe infections, unclear diagnoses, uncommon diseases, and complex or investigational treatments. Requires prior completion of a residency program in pediatrics. This CIP code is not valid for IPEDS reporting. 61.1913 Pediatric Nephrology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the diagnosis and management of infants, children, and adolescents with renal and genito-urinary problems, hypertension and disorders of body fluid physiology. Requires prior completion of a residency program in pediatrics. This CIP code is not valid for IPEDS reporting. 61.1914 Pediatric Pulmonology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the prevention and treatment of all respiratory diseases affecting infants, children, and young adults, based on knowledge of the growth and development of the lung, assessment of respiratory function in infants and children, and experience in a variety of invasive and noninvasive diagnostic techniques. Requires prior completion of a residency program in pediatrics. This CIP code is not valid for IPEDS reporting. 61.1915 Pediatric Rheumatology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians to diagnose and treat diseases of joints, muscle, bones, and tendons in children and young adults, including arthritis, back pain, muscle strains, common athletic injuries, and collagen diseases. Requires prior completion of a residency program in pediatrics. This CIP code is not valid for IPEDS reporting. 61.1917 Pediatric Transplant Hepatology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians with special knowledge, skill, and expertise required of pediatric gastroenterologists to care for children and young adults prior to and following hepatic transplantation. Requires prior completion of a residency program in pediatrics. This CIP code is not valid for IPEDS reporting. 61.1999 Pediatrics Residency/Fellowship Programs, Other. (New)Any residency or fellowship program in pediatrics not listed above. 61.20 Physical Medicine and Rehabilitation Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.2001 - 61.2099. 61.2001 Physical Medicine and Rehabilitation Residency Program. (Moved to)A residency training program that prepares physicians in the diagnosis, etiology, treatment, prevention and rehabilitation of neuromusculo-skeletal, cardiovascular, pulmonary and other system disorders common to patients of both sexes and all ages. Includes instruction in physical examinations, design and prescription of rehabilitation strategies and the supervision of rehabilitation teams. This CIP code is not valid for IPEDS reporting.Examples: Physical and Rehabilitation Medicine Residency Program 61.2002 Spinal Cord Injury Medicine Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians to address the prevention, diagnosis, treatment, and management of traumatic spinal cord injury and non-traumatic etiologies of spinal cord dysfunction, including related medical, physical, psychological, and vocational disabilities and complications. Requires prior completion of a residency program in physical medicine and rehabilitation. This CIP code is not valid for IPEDS reporting. 61.2003 Pediatric Rehabilitation Medicine Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians to use an interdisciplinary approach to prevent, diagnose, treat, and manage congenital and childhood-onset physical impairments in children and young adults, including related medical, physical, functional, psychosocial, and vocational limitations or conditions. Requires prior completion of a residency program in physical medicine and rehabilitation. This CIP code is not valid for IPEDS reporting. 61.2099 Physical Medicine and Rehabilitation Residency/Fellowship Programs, Other. (New)Any residency or fellowship program in physical medicine and rehabilitation not listed above. 61.21 Plastic Surgery Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.2101 - 61.2199. 61.2101 Plastic Surgery Residency Program. (Moved to)A residency training program that prepares physicians in the repair, replacement, and reconstruction of defects of form and function of the integument and its underlying musculoskeletal system, with emphasis on the craniofacial structures, the oropharynx, the hand, the breast, and the external genitalia. Includes instruction in aesthetic as well as reconstructive surgery. Requires prior completion of a program in general surgery. This CIP code is not valid for IPEDS reporting. 61.2102 Integrated Plastic Surgery Residency Program. (New)A residency training program that prepares physicians in the repair, replacement, and reconstruction of defects of form and function of the integument and its underlying musculoskeletal system, with emphasis on the craniofacial structures, the oropharynx, the hand, the breast, and the external genitalia. Includes instruction in aesthetic as well as reconstructive surgery. Does NOT require prior completion of a program in general surgery. This CIP code is not valid for IPEDS reporting. 61.2103 Plastic Surgery Within the Head and Neck Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in plastic and reconstructive procedures within the head, face, neck, and associated structures, including cutaneous head and neck oncology and reconstruction, management of maxillofacial trauma, soft tissue repair, and neural surgery. Requires prior completion of a residency program in otolaryngology or plastic surgery. This CIP code is not valid for IPEDS reporting. 61.2199 Plastic Surgery Residency/Fellowship Programs, Other. (New)Any residency or fellowship program in plastic surgery not listed above. 61.22 Podiatric Medicine Residency/Fellowship Programs. (Moved to)CIP Title or Definition ChangedInstructional content for this group of programs is defined in codes 61.2201 - 61.2299. 61.2201 Podiatric Medicine and Surgery Residency Program. (New)A residency training program that prepares podiatrists for primary practice in podiatric healthcare and foot surgery. This includes diagnosis and treatment of conditions affecting the human foot, ankle, and their governing and related structures, including the leg, and the local manifestations of systemic conditions, by all appropriate systems and means. This CIP code is not valid for IPEDS reporting. 61.2299 Podiatric Medicine Residency/Fellowship Programs, Other. (New)Any residency or fellowship program in podiatric medicine not listed above. 61.23 Preventive Medicine Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.2301 - 61.2399. 61.2301 Public Health and General Preventive Medicine Residency Program. (Moved to)A residency training program that prepares physicians to promote health, prevent disease, and manage the health of communities and defined populations; combines population-based public health skills with knowledge of primary, secondary, and tertiary prevention-oriented clinical practice in a wide variety of settings. One of three general certificates in the area of preventive medicine. Note: this medical specialty merges the previous subspecialties of preventive medicine and public health medicine. This CIP code is not valid for IPEDS reporting.Examples: Public Health Medicine Residency Program Preventive Medicine Residency Program 61.2302 Aerospace Medicine Residency Program. (Moved to)A residency training program that prepares physicians in the health care of operating crews, support personnel, and passengers of air and space vehicles. Includes instruction in special conditions of physical and psychological stress, emergency medical procedures, adaptive systems and artificial environments. One of three general certificates in the area of preventive medicine. This CIP code is not valid for IPEDS reporting. 61.2303 Occupational Medicine Residency Program. (Moved to)A residency training program that prepares physicians in the maintenance of the health of workers, the ability to perform work, the arrangements of work, and the physical and chemical environments of the workplace. Includes instruction in data collection and management and the administration and regulation of occupational medical services. One of three general certificates in the area of preventive medicine. This CIP code is not valid for IPEDS reporting. 61.2399 Preventive Medicine Residency/Fellowship Programs, Other. (New)Any residency or fellowship program in preventive medicine not listed above. 61.24 Psychiatry Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.2401 - 61.2499. 61.2401 Psychiatry Residency Program. (Moved to)A residency training program that prepares physicians in the diagnosis, treatment, and prevention of mental, emotional, behavioral and neurological disorders. Includes instruction in psychotherapy, family counseling, referral, clinical diagnosis, and practice management. This CIP code is not valid for IPEDS reporting. 61.2402 Addiction Psychiatry Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the evaluation and treatment of individuals with alcohol, drug, or other substance-related disorders, and of individuals with the dual diagnosis of substance-related and other psychiatric disorders. Requires prior completion of a residency program in psychiatry. This CIP code is not valid for IPEDS reporting. 61.2403 Child and Adolescent Psychiatry Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the diagnosis and treatment of developmental, behavioral, emotional, and mental disorders of childhood and adolescence. Requires prior completion of a residency program in psychiatry. This CIP code is not valid for IPEDS reporting.Examples: Child Psychiatry Residency Program 61.2404 Consultation-Liaison Psychiatry Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the diagnosis and treatment of psychiatric disorders and symptoms in complex medically ill patients. This includes treatment of patients with acute or chronic medical, neurological, obstetrical, or surgical illness in which psychiatric illness is affecting their medical care and/or quality of life, and patients who have a psychiatric disorder that is the direct consequence of a primary medical condition, a somatoform disorder, or psychological factors affecting a general medical condition. Requires prior completion of a residency program in psychiatry. This CIP code is not valid for IPEDS reporting.Examples: Psychosomatic Medicine 61.2405 Forensic Psychiatry Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians to evaluate individuals involved with the legal system and provide specialized treatment to those incarcerated in jails, prisons, and forensic psychiatry hospitals; and who focus on the interrelationships between psychiatry and civil, criminal, and administrative law. Requires prior completion of a residency program in psychiatry. This CIP code is not valid for IPEDS reporting. 61.2406 Geriatric Psychiatry Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the prevention, evaluation, diagnosis, and treatment of mental and emotional disorders in the elderly, and to improve the psychiatric care of the elderly both in health and in disease. Requires prior completion of a residency program in psychiatry. This CIP code is not valid for IPEDS reporting. 61.2499 Psychiatry Residency/Fellowship Programs, Other. (New)Any residency or fellowship program in psychiatry not listed above. 61.25 Radiation Oncology Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.2501 - 61.2599. 61.2501 Radiation Oncology Residency Program. (Moved to)A residency training program that prepares physicians in the use of ionizing radiation to treat patients with cancer and other diseases. Includes instruction in treatment planning, instrument design and operation, radiation physics and radiobiology. One of two general certificates in the area of radiology. This CIP code is not valid for IPEDS reporting. 61.2599 Radiation Oncology Residency/Fellowship Programs, Other. (New)Any residency or fellowship program in radiation oncology not listed above. 61.26 Radiology Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.2601 - 61.2699. 61.2601 Diagnostic Radiology Residency Program. (Moved to)A residency training program that prepares physicians to utilize x-ray, ionizing radiation, radionuclides, ultrasound, electromagnetic radiation, and image-guided intervention to diagnose and treat disease. One of two general certificates in the area of radiology. This CIP code is not valid for IPEDS reporting. 61.2602 Integrated Interventional Radiology Residency Program. (New)A fellowship training program that prepares physicians in image-guided therapies, using fluoroscopy, digital radiography, computed tomography, sonography, and magnetic resonance imaging, to guide small devices inserted into the body through very small openings. These therapies include angioplasty, stent placement, thrombolysis, embolization, biliary and genitourinary drainages, and abscess drainages. Does NOT require prior completion of a residency program in diagnostic radiology. This CIP code is not valid for IPEDS reporting. 61.2603 Abdominal Radiology Fellowship Program. (New)A fellowship training program that prepares diagnostic radiologists in the diagnosis and treatment of disorders of the abdomen and pelvis in adults and children. Requires prior completion of a residency program in diagnostic or interventional radiology. This CIP code is not valid for IPEDS reporting. 61.2604 Diagnostic Radiologic Physics Residency Program. (Moved to)A residency training program that prepares physicians in the diagnostic applications of x-rays, gamma rays from sealed sources, ultrasonic radiation, and magnetic resonance; and in the use of equipment associated with their production and use, including radiation safety. One of the three subspecialties available to residents in radiologic physics who must select one or more subspecialty areas. This CIP code is not valid for IPEDS reporting. 61.2605 Medical Nuclear Physics Residency Program. (Moved to)A residency training program that prepares physicians in the therapeutic and diagnostic applications of radionuclides (except those used in sealed sources for therapeutic purposes); and in the use of equipment associated with their production and use, including radiation safety. One of the three subspecialties available to residents in radiologic physics who must select one or more subspecialty areas. This CIP code is not valid for IPEDS reporting. 61.2606 Musculoskeletal Radiology Fellowship Program. (New)A fellowship training program that prepares diagnostic radiologists in the diagnosis and treatment of disorders or injuries of the joints, bones, muscles, and spine in adults and children. Requires prior completion of a residency program in diagnostic or interventional radiology. This CIP code is not valid for IPEDS reporting. 61.2607 Neuroradiology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares diagnostic radiologists in the diagnosis and treatment of disorders of the brain, spine, spinal cord, peripheral nerves, and head and neck in adults and children. Requires prior completion of a residency program in diagnostic radiology. This CIP code is not valid for IPEDS reporting. 61.2608 Nuclear Radiology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the imaging by external detection of radionuclides and/or biodistribution by external detection of radionuclides for diagnosis of disease. Requires prior partial completion of a residency program in diagnostic radiology. This CIP code is not valid for IPEDS reporting. 61.2609 Pediatric Radiology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in all forms of diagnostic imaging as it pertains to the diagnosis and treatment of diseases in the newborn, infant, child, and adolescent. Requires prior completion of a residency program in diagnostic radiology. This CIP code is not valid for IPEDS reporting. 61.2610 Radiologic Physics Residency Program. (Moved to)A residency training program that prepares physicians in that branch of physics which includes the physical aspects of radiation therapy, radiologic diagnosis, and/or nuclear medicine. Radiologic physicists must specialize in at least one of the three subspecialty areas: therapeutic radiological physics, diagnostic radiological physics, and/or medical nuclear physics. This CIP code is not valid for IPEDS reporting. 61.2611 Therapeutic Radiologic Physics Residency Program. (Moved to)A residency training program that prepares physicians to deal with the physical aspects of the therapeutic applications of x-rays, gamma rays, electron, and other charged particle beams, neutrons, and radiations from sealed radionuclide sources; and with the equipment associated with their production and use, including radiation safety. One of the three subspecialties available to residents in radiologic physics who must select one or more subspecialty areas. This CIP code is not valid for IPEDS reporting. 61.2612 Vascular and Interventional Radiology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares diagnostic radiologists with additional training in image-guided therapies, using fluoroscopy, digital radiography, computed tomography, sonography, and magnetic resonance imaging, to guide small devices inserted into the body through very small openings. These therapies include angioplasty, stent placement, thrombolysis, embolization, biliary and genitourinary drainages, and abscess drainages. Requires prior completion of a residency program in diagnostic radiology. This CIP code is not valid for IPEDS reporting. 61.2699 Radiology Residency/Fellowship Programs, Other. (New)Any medical residency or fellowship in radiology not listed above. 61.27 Surgery Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.2701 - 61.2799. 61.2701 General Surgery Residency Program. (Moved to)A residency training program that prepares physicians in the care and treatment of diseases and disorders via invasive procedures and the etiology, pathogenesis, diagnosis and management of physical disorders. Includes instruction in clinical and operative skills, pre-operative and post-operative care, trauma management and endoscopic techniques. This CIP code is not valid for IPEDS reporting.Examples: Surgery Residency Program 61.2702 Colon and Rectal Surgery Residency Program. (Moved to)CIP Title or Definition ChangedA residency training program that prepares physicians in the surgical care of patients with anorectal and colonic diseases. Also includes instruction in diagnostic and therapeutic colonoscopy. Requires prior or concurrent completion of a residency program in general surgery. This CIP code is not valid for IPEDS reporting. 61.2703 Complex General Surgical Oncology Fellowship Program. (New)A fellowship training program that prepares surgeons in the management of patients with difficult, rare or complex cancer presentations, including clinical evaluation, surgical management, and adjuvant therapy. Requires prior completion of a residency program in general surgery. This CIP code is not valid for IPEDS reporting. 61.2704 Congenital Cardiac Surgery Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the operative treatment of structural abnormalities involving the heart and major blood vessels, including defects resulting from congenital malformations as well as defects acquired in infants and children; includes care of patients from the fetus to the adult. Requires prior completion of a residency or fellowship program in thoracic surgery. This CIP code is not valid for IPEDS reporting. 61.2705 Pediatric Surgery Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the diagnosis, evaluation and surgical treatment of diseases, disorders, and trauma in infants and children. Requires prior completion of a residency program in general surgery. This CIP code is not valid for IPEDS reporting. 61.2706 Surgical Critical Care Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares surgeons in the diagnosis, treatment, and support of critically ill and injured patients, particularly trauma victims and patients with multiple organ dysfunction. Requires prior completion of a residency program in general surgery. This CIP code is not valid for IPEDS reporting.Examples: Critical Care Surgery Residency Program 61.2707 Thoracic Surgery Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the evaluation and surgical treatment of pulmonary, esophageal, mediastinal, chest wall, diaphragmatic and cardiovascular disorders. Includes instruction in bronchoscopy and esophagoscopy. Requires prior or concurrent completion of a residency program in general surgery. This CIP code is not valid for IPEDS reporting.Examples: Integrated Thoracic Surgery Fellowship Program 61.2708 Vascular Surgery Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares physicians in the surgical treatment of diseases and disorders of the arterial, venous and lymphatic circulatory systems and of the heart and thoracic aorta. Requires prior or concurrent completion of a residency program in general surgery. This CIP code is not valid for IPEDS reporting. 61.2799 Surgery Residency/Fellowship Programs, Other. (New)Any residency or fellowship program in surgery not listed above. 61.28 Urology Residency/Fellowship Programs. (New)Instructional content for this group of programs is defined in codes 61.2801 - 61.2899. These CIP codes are not valid for IPEDS reporting. 61.2801 Urology Residency Program. (Moved to)CIP Title or Definition ChangedA residency training program that prepares physicians to manage congenital and acquired conditions of the genitourinary system, the adrenal gland, and other contiguous structures throughout the lifespan and which may be benign or malignant. This specialist is skilled in medical and open surgical therapy of these conditions, as well as endoscopic, percutaneous, and other minimally invasive methods. This CIP code is not valid for IPEDS reporting. 61.2802 Pediatric Urology Fellowship Program. (Moved to)CIP Title or Definition ChangedA fellowship training program that prepares individuals in the study, prevention, and management of congenital, childhood-acquired, and overlapping adolescent anomalies of the genitourinary tract, including problems, diseases, tumors, and traumas. Requires prior completion of a residency program in urology. This CIP code is not valid for IPEDS reporting. 61.2899 Urology Residency/Fellowship Programs, Other. (New)Any residency or fellowship program in urology not listed above. 61.99 Medical Residency/Fellowship Programs, Other. (New)Instructional content is defined in code 61.9999. 61.9999 Medical Residency/Fellowship Programs, Other. (New)Any medical residency or fellowship program not listed above. This CIP code is not valid for IPEDS reporting.","link":"/%E5%AD%A6%E7%A7%91_%E4%B8%93%E4%B8%9A_%E8%A1%8C%E4%B8%9A_%E5%9B%BE%E4%B9%A6-%E5%88%86%E7%B1%BB/CIP%20Classification%20of%20Instructional%20Programs%20-%202020/"},{"title":"Learn-Python-Programming-Masterclass","text":"section 1buildin functionhttps://docs.python.org/3/library/functions.html#built-in-functions print()print(‘Hello, World!’) def print(*values: object, sep: str | None = “ “, end: str | None = “\\n”, file: SupportsWrite[str] | None = None, flush: Literal[False] = False) -&gt; NonePrints the values to a stream, or to sys.stdout by default. sepstring inserted between values, default a space.endstring appended after the last value, default a newline.filea file-like object (stream); defaults to the current sys.stdout.flushwhether to forcibly flush the stream.print(*values, sep=&quot; &quot;, end=&quot;\\n&quot;, file=None, flush=False) 1234567print('Hello, World!')print(&quot;Hello, World!&quot;)print(1 + 2)print(7 * 6)print()# The end or is it? keep watching to learn more about python 3print(&quot;The end&quot;, &quot;or is it?&quot;, &quot;keep watching to learn more about python&quot;, 3) literal: a value of some type input()def input(__prompt: object = “”) -&gt; strRead a string from standard input. The trailing newline is stripped.The prompt string, if given, is printed to standard output without a trailing newline before reading input.If the user hits EOF (nix: Ctrl-D, Windows: Ctrl-Z+Return), raise EOFError. Onnix systems, readline is used if available.input(__prompt=&quot;&quot;) type()type(object) -&gt; the object’s type sum()Return the sum of a ‘start’ value (default: 0) plus an iterable of numbers id()def id(__obj: object) -&gt; intReturn the identity of an object.This is guaranteed to be unique among simultaneously existing objects. (CPython uses the object’s memory address.) immutable type1234567891011121314151617# result = True# another_result = result## print(id(result)) # 140714778504272# print(id(another_result)) # 140714778504272## result = False# print(id(result)) # 140714778504304result = &quot;Correct&quot;another_result = resultprint(id(result)) # 2290629759584print(id(another_result)) # 2290629759584result += &quot;ish&quot;print(id(result)) # 2290629932336 string123456789101112print(&quot;Today is a good day to learn Python&quot;)print(&quot;Python's string are easy to use&quot;)print('We can even include &quot;quotes&quot; in strings')print(&quot;hello&quot; + &quot; world&quot;) # 'hello world'greeting = &quot;Hello&quot;# name = &quot;Bruce&quot;name = input(&quot;Please enter your name &quot;)print(greeting + name) # HelloBruce# if we want space, we can add that tooprint(greeting + ' ' + name) # Hello Bruce mutable type1234567891011121314151617shopping_list = [ 'milk', 'pasta', 'eggs', 'spam', 'bread', 'rice']another_list = shopping_listprint(id(shopping_list)) # 1978024513920print(id(another_list)) # 1978024513920shopping_list += ['cookies']print(shopping_list)print(id(shopping_list)) # 1978024513920print(id(another_list)) # 1978024513920 escape charater12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152# 'This string has been '# 'split over '# 'several '# 'lines'splitString = &quot;This string has been \\nsplit over \\nseveral \\nlines&quot;print(splitString)# 1 2 3 4 5tabbedString = &quot;1\\t2\\t3\\t4\\t5&quot;print(tabbedString)# The pet shop owner said &quot;No, no, 'e's uh, ...he's resting&quot;.print('The pet shop owner said &quot;No, no, \\'e\\'s uh, ...he\\'s resting&quot;.')print(&quot;The pet shop owner said \\&quot;No, no, 'e's uh, ...he's resting\\&quot;.&quot;)print(&quot;&quot;&quot;The pet shop owner said &quot;No, no, 'e's uh, ...he's resting&quot;.&quot;&quot;&quot;)# This string has been# split over# several# linesanotherSplitString = &quot;&quot;&quot;This string has beensplit overseverallines&quot;&quot;&quot;print(anotherSplitString)anotherSplitString_1 =&quot;&quot;&quot;This string has beensplit overseverallines&quot;&quot;&quot;# ''# This string has been# split over# several# lines# ''print(anotherSplitString_1)# This string has not been split over several linesnotSplitString = &quot;&quot;&quot;This string has not been \\split over \\several \\lines&quot;&quot;&quot;print(notSplitString)# perfered!!!print(&quot;C:\\\\Users\\\\timbuchalka\\\\notes.txt&quot;)# raw stringprint(r&quot;C:\\Users\\timbuchalka\\notes.txt&quot;) variable names must begin with a letter(either upper or lower case) or an underscore_ character can contain letters, numbers or underscore characters(but cannot begin with a number) are case sensitive, so greeting and Greeting would refer to 2 different variables initializing variable123456789101112131415shopping_list = ['milk', 'pasta', 'eggs', 'spam', 'bread', 'rice']item_to_find = 'spam'found_at = None# find the first item in a listfor index in range(len(shopping_list)): if shopping_list[index] == item_to_find: found_at = index breakif found_at is not None: print(&quot;Item found at index {}&quot;.format(found_at))else: print(&quot;{} not found&quot;.format(item_to_find)) dynamic type and strongly typed123456789greeting = &quot;Hello&quot;age = 24print(age)print(type(greeting)) # &lt;class 'str'&gt;print(type(age)) # &lt;class 'int'&gt;age = &quot;2 years&quot;print(type(age)) # &lt;class 'str'&gt; 1234greeting = &quot;Hello&quot;age = 24# TypeError: can only concatenate str (not &quot;int&quot;) to str# print(name + &quot; is &quot; + age + &quot; years old&quot;) constantsConstants are usually defined on a module level and written in all capital letters with underscores separating words. Examples include MAX_OVERFLOW and TOTAL. numeric data typeint: python has no maximun size of the numberfloat: 64bit, max1.79e+308, min 2.22e-308, 52 digits of percisonDeicmal: more precise decimal numberscomplex: contain a real and imaginary part, base on the square root of minus one 123456789a = 12b = 3print(a + b) # 15print(a - b) # 9print(a * b) # 36print(a / b) # 4.0 floatprint(a // b) # 4 integer division, rounded down towards minus infinityprint(a % b) # 0 modulo: the remainder after integer division operator precedencehttps://docs.python.org/3/reference/expressions.html#operator-precedence Operator Description (expressions…), [expressions…], {key: value…}, {expressions…} Binding or parenthesized expression, list display, dictionary display, set display x[index], x[index:index], x(arguments…), x.attribute Subscription, slicing, call, attribute reference await x Await expression ** Exponentiation [5] +x, -x, ~x Positive, negative, bitwise NOT *, @, /, //, % Multiplication, matrix multiplication, division, floor division, remainder [6] +, - Addition and subtraction &lt;&lt;, &gt;&gt; Shifts &amp; Bitwise AND ^ Bitwise XOR | Bitwise OR in, not in, is, is not, &lt;, &lt;=, &gt;, &gt;=, !=, == Comparisons, including membership tests and identity tests not x Boolean NOT and Boolean AND or Boolean OR if – else Conditional expression lambda Lambda expression := Assignment expression 12345678910111213141516a = 12b = 3# -35.0print(a + b / 3 - 4 * 12) # -35.0print(a + (b / 3) - (4 * 12)) # -35.0c = a + bd = c / 3e = d - 4print(e * 12) # 12.0print(((a + b) / 3 - 4) * 12) # 12.0print()print(a / (b * a) / b) # 0.11111111print((a / (b * a)) / b) # 0.11111111 sequence type: string12345678910111213141516171819202122232425262728# 01234567890123parrot = &quot;Norwegian Blue&quot;# -43210987654321print(parrot)print(parrot[0]) # 'N'print(parrot[3]) # 'w'print(parrot[-1]) # 'e'print(parrot[-2]) # 'u'print()print(parrot[3])print(parrot[4])print()print(parrot[14 - 11])print(parrot[14 - 8])print(parrot[14 - 6])print(len(parrot)) # 14print(parrot[3 - 14])print(parrot[4 - 14])print()print(parrot[-11])print(parrot[-8])print(parrot[-6]) slice string123456789101112131415161718192021222324252627282930# 01234567890123parrot = &quot;Norwegian Blue&quot;# -43210987654321print(parrot)print(parrot[0:6]) # 'Norweg'print(parrot[3:5]) # 'we'print(parrot[0:9]) # 'Norwegian'print(parrot[:9]) # Norwegianprint(parrot[10:14]) # 'Blue'print(parrot[10:]) # 'Blue'print(parrot[:]) # 'Norwegian Blue'### slice with negative numbersprint(parrot[-4:-1]) # 'Blu'# print(parrot[-4:0]) ### errorprint(parrot[-4:]) # 'Blue'print(parrot[:-5]) # 'Norwegian'print(parrot[3:5]) # 'we'print(parrot[-11:-9]) # 'we'print(parrot[3:-9]) # 'we'print(parrot[-11:5]) # 'we' 12345678910111213141516171819202122### step in string sliceprint(parrot[0:6]) # 'Norweg'print(parrot[0:6:2]) # 'Nre'print(parrot[0:6:3]) # 'Nw'number = &quot;2,123;456:123 478,124;807&quot;print(number[1::4]) # &quot;,;: ,;&quot;seperators = number[1::4]value = &quot;&quot;.join(char if char not in seperators else &quot; &quot; for char in number).split()print([int(val) for val in value]) ## [2, 123, 456, 123, 478, 124, 807]values = []for char in number: if char not in seperators: values.append(char) else: values.append(' ')value_1 = &quot;&quot;.join(values).split()print(value_1) # ['2', '123', '456', '123', '478', '124', '807'] 1234567891011121314151617181920### slice backwardsletters = &quot;abcdefghijklmnopqrstuvwxyz&quot;## starter &gt; stopper(not included)backwards = letters[25:0:-1]print(backwards) # 'zyxwvutsrqponmlkjihgfedcb'backwards = letters[25::-1]print(backwards) # 'zyxwvutsrqponmlkjihgfedcba'# backwards = letters[25:-1:-1] ## error ''## recommendbackwards = letters[::-1]print(backwards) # 'zyxwvutsrqponmlkjihgfedcba'##exampleprint(letters[16:13:-1]) # 'qpo'print(letters[4::-1]) # 'edcba' # first 5 lettersprint(letters[:-9:-1]) # 'zyxwvuts' # last 8 letters 12345letters = []print(letters[0]) ## first letter, when null have error: IndexError: list index out of range print(letters[:1]) ## first letter, when null no errorprint(letters[-1:]) ## last letter, when null no error string operators12345678910111213141516171819string1 = &quot;he's &quot;string2 = &quot;probably &quot;string3 = &quot;pining &quot;string4 = &quot;for the &quot;string5 = &quot;fjords&quot;# he's probably pining for the fjordsprint(string1 + string2 + string3 + string4 + string5)### not recommendprint(&quot;Hello &quot; &quot;World!&quot;) # Hello World!# print(string1 string2 string3) ## errorprint(&quot;Hello &quot; * 5) # &quot;Hello Hello Hello Hello Hello &quot;# print(&quot;Hello&quot; + 5) # TypeError: can only concatenate str (not &quot;int&quot;) to strtoday = &quot;friday&quot;print(&quot;day&quot; in today) # Trueprint('thur' in today) # False fstring12345# Pi is approximately 3.14285714285714279370154144999105483293533325195312print(f&quot;Pi is approximately {22 / 7:55.50f}&quot;)pi = 22 / 7# Pi is approximately 3.14285714285714279370154144999105483293533325195312print(f&quot;Pi is approximately {pi:12.50f}&quot;) string methodshttps://docs.python.org/3/library/stdtypes.html#string-methods str() class str(Sequence[str])str(object=’’) -&gt; str str(bytes_or_buffer[, encoding[, errors]]) -&gt; strCreate a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.__str__() (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to ‘strict’. format()def format(self: LiteralString, *args: LiteralString, **kwargs: LiteralString) -&gt; LiteralStringS.format(*args,**kwargs) -&gt; strReturn a formatted version of S, using substitutions from args and kwargs. The substitutions are identified by braces (‘{‘ and ‘}’) 123456789101112131415161718192021222324age = 24print(&quot;My age is &quot; + str(age) + &quot; years&quot;) # &quot;My age is 24 years&quot;# replacement fieldsprint(&quot;My age is {0} years&quot;.format(age))## There are 31 days in Jan, Mar, May, Jul, Aug, Oct and Decprint(&quot;There are {0} days in {1}, {2}, {3}, {4}, {5}, {6} and {7}&quot; .format(31, 'Jan', 'Mar','May', 'Jul', 'Aug', 'Oct', 'Dec'))## Jan: 31, Feb: 28, Mar: 31, Apr: 30, May: 31, Jun: 30, Jul: 31, Sep: 30, Oct: 31, Nov: 30, Dec: 31print(&quot;Jan: {2}, Feb: {0}, Mar: {2}, Apr: {1}, May: {2}, Jun: {1}, Jul: {2}, Sep: {1}, Oct: {2}, Nov: {1}, Dec: {2}&quot; .format(28, 30, 31))print(&quot;&quot;&quot;Jan: {2}Feb: {0}Mar: {2}Apr: {1}May: {2}Jun: {1}Jul: {2}Sep: {1}Oct: {2}Nov: {1}Dec: {2}&quot;&quot;&quot;.format(28, 30, 31)) 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647# No. 1 squared is 1 and cubed is 1# No. 2 squared is 4 and cubed is 8# No. 3 squared is 9 and cubed is 27# No. 4 squared is 16 and cubed is 64for i in range(1, 13): print(&quot;No. {} squared is {} and cubed is {}&quot;.format(i, i ** 2, i ** 3))# No. 1 squared is 1 and cubed is 1# No. 2 squared is 4 and cubed is 8# No. 3 squared is 9 and cubed is 27for i in range(1, 13): print(&quot;No. {0:2} squared is {1:4} and cubed is {2:4}&quot;.format(i, i ** 2, i ** 3))### &lt; left align, ^ center# No. 1 squared is 1 and cubed is 1# No. 2 squared is 4 and cubed is 8# No. 3 squared is 9 and cubed is 27# No. 4 squared is 16 and cubed is 64# No. 5 squared is 25 and cubed is 125print()for i in range(1, 13): print(&quot;No. {0:2} squared is {1:&lt;3} and cubed is {2:^4}&quot;.format(i, i ** 2, i ** 3))print()# Pi is approximately 3.142857142857143print(&quot;Pi is approximately {0:12}&quot;.format(22 / 7))# Pi is approximately 3.142857 ## 6 digitsprint(&quot;Pi is approximately {0:12f}&quot;.format(22 / 7))# Pi is approximately 3.14285714285714279370154144999105483293533325195312# Pi is approximately 3.14285714285714279370154144999105483293533325195312# Pi is approximately 3.14285714285714279370154144999105483293533325195312print(&quot;Pi is approximately {0:12.50f}&quot;.format(22 / 7))print(&quot;Pi is approximately {0:52.50f}&quot;.format(22 / 7))print(&quot;Pi is approximately {0:62.50f}&quot;.format(22 / 7))# Pi is approximately 3.142857142857142793701541449991054832935333252# Pi is approximately 3.14285714285714279370154144999105483293533325195312# Pi is approximately 3.142857142857142793701541449991054832935333251953125000print(&quot;Pi is approximately {0:&lt;72.45f}&quot;.format(22 / 7))print(&quot;Pi is approximately {0:&lt;72.50f}&quot;.format(22 / 7))print(&quot;Pi is approximately {0:&lt;72.54f}&quot;.format(22 / 7)) join()def join(self: LiteralString, __iterable: Iterable[LiteralString]) -&gt; LiteralStringConcatenate any number of strings.The string whose method is called is inserted in between each given string. The result is returned as a new string.Example: ‘.’.join([‘ab’, ‘pq’, ‘rs’]) -&gt; ‘ab.pq.rs’ 1234567891011121314151617flowers = [ 'Daffodil', 'Evening Primrose', 'Hydrangea', 'Iris', 'Lavender', 'Sunflower', 'Tiger Lily',]for flower in flowers: print(flower)separator = ' | 'output = separator.join(flowers)## Daffodil | Evening Primrose | Hydrangea | Iris | Lavender | Sunflower | Tiger Lilyprint(output) ''.join(['1', '2', '3']) split()def split(self: LiteralString, sep: LiteralString | None = None, maxsplit: SupportsIndex = -1) -&gt; list[LiteralString]Return a list of the substrings in the string, using sep as the separator string. sepThe separator used to split the string.When set to None (the default value), will split on any whitespace character (including newline, tab and spaces) and will discard empty strings from the result.maxsplitMaximum number of splits (starting from the left). -1 (the default value) means no limit 12345678910panagram = &quot;The quick brown fox jumps over the lazy dog&quot;panagram = &quot;&quot;&quot;The quick brownfox jumps\\toverthe lazy dog&quot;&quot;&quot;words = panagram.split()print(words) # ['The', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog']numbers = &quot;12,165,425,365,254&quot;print(numbers.split(',')) # ['12', '165', '425', '365', '254'] center()def center(self: LiteralString, __width: SupportsIndex, __fillchar: LiteralString = “ “) -&gt; LiteralStringReturn a centered string of length width.Padding is done using the specified fill character (default is a space). 123456789101112def banner_text(text): screen_width = 80 if len(text) &gt; screen_width -4: print(&quot;The text is too long to fit in the specified width&quot;) if text == '*': print('*' * screen_width) else: output_string = '**{0}**'.format(text.center(screen_width -4)) print(output_string)# &quot;** Hello world! **&quot;banner_text('Hello world!') casefold()def casefold(self: LiteralString) -&gt; LiteralStringReturn a version of the string suitable for caseless comparisons isnumeric()def isnumeric(self) -&gt; boolReturn True if the string is a numeric string, False otherwise.A string is numeric if all characters in the string are numeric and there is at least one character in the string. isalpha()def isalpha(self) -&gt; boolReturn True if the string is an alphabetic string, False otherwise.A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string. Common Sequence Operationss[i] ith item of s, origin 0 s[i:j] slice of s from i to j s[i:j:k] slice of s from i to j with step k in, not ininnot in comp_operator ::= “&lt;” | “&gt;” | “==” | “&gt;=” | “&lt;=” | “&lt;&gt;” | “!=” | “is” [“not”] | [“not”] “in” The operators in and not in test for collection membership. x in s evaluates to true if x is a member of the collection s, and false otherwise. x not in s returns the negation of x in s.in it make sense for many other object types to support membership tests without being a sequence. In particular, dictionaries (for keys) and sets support membership testing. 123456789101112131415161718192021222324parrot = &quot;Norwegian Blue&quot;# letter = input(&quot;Enter a character: &quot;)letter = 'A'# letter = 'Blue'if letter in parrot: print(&quot;{} is in {}&quot;.format(letter, parrot))else: print(&quot;I don't need that letter&quot;)### not in# activity = input(&quot;What would you like to do today? &quot;)# activity = &quot;I want to learn Python&quot;activity = &quot;I want to go to the Cinema&quot; # But I want to go to the cinemaif &quot;cinema&quot; not in activity: print(&quot;But I want to go to the cinema&quot;)activity = &quot;I want to go to the Cinema&quot; # But I want to go to the cinemaif &quot;cinema&quot; not in activity.casefold(): print(&quot;But I want to go to the cinema&quot;) count()def count(self, x: str, __start: SupportsIndex | None = …, __end: SupportsIndex | None = …) -&gt; intS.count(sub[, start[, end]]) -&gt; intReturn the number of non-overlapping occurrences of substring sub in string S[start:end]. Optional arguments start and end are interpreted as in slice notation. print(&quot;mississippi&quot;.count(&quot;s&quot;)) # 4print(&quot;mississippi&quot;.count(&quot;ssi&quot;)) # 2 min() max()min(s) smallest item of s max(s) largest item of s index()def index(self, __value: _T, __start: SupportsIndex = 0, __stop: SupportsIndex = sys.maxsize) -&gt; intReturn first index of value.Raises ValueError if the value is not present. 123456789101112131415161718shopping_list = ['milk', 'pasta', 'eggs', 'spam', 'bread', 'rice']item_to_find = 'spam'found_at = None# # find the first item in a list# for index in range(len(shopping_list)):# if shopping_list[index] == item_to_find:# found_at = index# breakif item_to_find in shopping_list: found_at = shopping_list.index(item_to_find)if found_at is not None: print(&quot;Item found at index {}&quot;.format(found_at))else: print(&quot;{} not found&quot;.format(item_to_find)) some random meaningWhat are iterator, iterable, and iteration?Iteration is a general term for taking each item of something, one after another. Any time you use a loop, explicit or implicit, to go over a group of items, that is iteration. In Python, iterable and iterator have specific meanings. An iterable is an object that has an __iter__ method which returns an iterator, or which defines a __getitem__ method that can take sequential indexes starting from zero (and raises an IndexError when the indexes are no longer valid). So an iterable is an object that you can get an iterator from. An iterator is an object with a next (Python 2) or __next__ (Python 3) method. Whenever you use a for loop, or map, or a list comprehension, etc. in Python, the next method is called automatically to get each item from the iterator, thus going through the process of iteration. pseudocodeepressionevaluated to a value refactoringmeans changing its structure, without changing its behaviour edge case and corner cases testingoutlying values at both the low and high endsoutlying values at the low end onlyoutlying values at the high end onlyno outlying valuesonly outlying values(no valid ones)an empty data set 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758data = [4,5,104,105,110,120,130,130,150, 160,170,183,185,187,188,191,350,360]# data = [4,5,104,105,110,120,130,130,150,# 160,170,183,185,187,188,191]# data = [104,105,110,120,130,130,150,# 160,170,183,185,187,188,191,350,360]# data = [104,105,110,120,130,130,150,# 160,170,183,185,187,188,191]# data = [350,3601,1464,1541,1132,3112,4682]# data = []# del data[0:2]# print(data) # [104, 105, 110, 120, 130, 130, 150, 160, 170, 183, 185, 187, 188, 191, 350, 360]## del data[14:]# print(data) # [104, 105, 110, 120, 130, 130, 150, 160, 170, 183, 185, 187, 188, 191]min_valid = 100max_valid = 200## wrong approche# for index, value in enumerate(data):# if value &lt; min_valid or value &gt; max_valid:# del data[index]# print(data)#### for ordered list# process the low values in the liststop = 0for index, value in enumerate(data): if value &gt;= min_valid: stop = index breakprint(stop) # 2del data[:stop]print(data) # [104, 105, 110, 120, 130, 130, 150, 160, 170, 183, 185, 187, 188, 191, 350, 360]# process the high values in the list# ### error the high outlying test fell# start = -1# for index, value in enumerate(data):# if value &gt;= max_valid:# start = index# break# print(start)# del data[start:]# print(data)### more efficientstart = 0for index in range(len(data) - 1, -1, -1): print(index) if data[index] &lt;= max_valid: start = index + 1 breakprint(start)del data[start:]print(data) algorithms Performance123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657import timeitmax_value = 10000000min_valid = 10max_valid = 9999997data_list1 = list(range(max_value))data_list2 = list(range(max_value))data_list3 = list(range(max_value))def sanitise_1(data): # process the low values in the list stop = 0 for index, value in enumerate(data): if value &gt;= min_valid: stop = index break del data[:stop] # process the high values in the list start = 0 for index in range(len(data) - 1, -1, -1): if data[index] &lt;= max_valid: start = index + 1 break del data[start:]def sanitise_2(data): top_index = len(data) - 1 for index, value in enumerate(reversed(data)): if value &lt; min_valid or value &gt; max_valid: del data[top_index - index]def sanitise_3(data): for index in range(len(data) - 1, -1, -1): current = data[index] if current &lt; min_valid or current &gt; max_valid: del data[index]if __name__ == '__main__': print(&quot;Timing&quot;) x = timeit.timeit(&quot;sanitise_1(data_list1)&quot;, setup=&quot;from __main__ import sanitise_1, data_list1&quot;, number=1) print(&quot;{:15.15f}&quot;.format(x)) y = timeit.timeit(&quot;sanitise_2(data_list2)&quot;, setup=&quot;from __main__ import sanitise_2, data_list2&quot;, number=1) print(&quot;{:15.15f}&quot;.format(y)) z = timeit.timeit(&quot;sanitise_3(data_list3)&quot;, setup=&quot;from __main__ import sanitise_3, data_list3&quot;, number=1) print(&quot;{:15.15f}&quot;.format(z)) function signaturethe definition of a function def print(*values: object, sep: str | None = “ “, end: str | None = “\\n”, file: SupportsWrite[str] | None = None, flush: Literal[False] = False) -&gt; None 12345name = 'Tim'age = 10print(name, age, 'python', 2020) # 'Tim 10 python 2020'print(name, age, 'python', 2020, sep=', ') # 'Tim, 10, python, 2020' debug123456789101112131415161718192021222324252627282930LOW = 1HIGH = 1000def guess_binary(answer, low, high): guesses = 1 while True: guess = low + (high - low) // 2 if guess == answer: return guesses elif guess &gt; answer: high = guess - 1 elif guess &lt; answer: low = guess + 1 guesses = guesses + 1max_guesses = 0guesses_count = 0for number in range(LOW, HIGH + 1): number_of_guesses = guess_binary(number, LOW, HIGH) if max_guesses &lt; number_of_guesses: max_guesses, guesses_count = number_of_guesses, 1 elif max_guesses == number_of_guesses: guesses_count += 1 print(f&quot;{number} guessed in {number_of_guesses}&quot;)print(f&quot;Max guess {max_guesses} repeat {guesses_count} times&quot;) section 2code blocksindentation to indicate code blocks if statements1234567891011121314151617181920# name = input(&quot;Please enter your name: &quot;)name = 'lucfe'# age = int(input(&quot;How old are you, {0}? &quot;.format(name)))age = 15print(age)if age &gt;= 18: print(&quot;You are old enough to vote&quot;) print(&quot;Please put an x in the box&quot;)else: print(&quot;Please come back in {0} years&quot;.format(18 - age))if age &lt; 18: print(&quot;Please come back in {0} years&quot;.format(18 - age))elif age == 900: print(&quot;Sorry, Yoda, you die in Return of the Jedi&quot;)else: print(&quot;You are old enough to vote&quot;) print(&quot;Please put an x in the box&quot;) 123456789101112131415161718192021answer = 5print(&quot;Please guess number between 1 and 10: &quot;)guess = int(input())if guess &lt; answer: print(&quot;Pleaser guess higher&quot;) guess = int(input()) if guess == answer: print(&quot;Well done, you guessed it&quot;) else: print(&quot;Sorry, you have not guessed correctly&quot;)elif guess &gt; answer: print(&quot;Pleaser guess lower&quot;) guess = int(input()) if guess == answer: print(&quot;Well done, you guessed it&quot;) else: print(&quot;Sorry, you have not guessed correctly&quot;)else: print(&quot;You got it first time&quot;) 1234567891011121314151617answer = 5print(&quot;Please guess number between 1 and 10: &quot;)guess = int(input())if guess != answer: if guess &lt; answer: print(&quot;Please guess higher&quot;) else: # guess must be greater than answer print(&quot;Please guess lower&quot;) guess = int(input()) if guess == answer: print(&quot;Well done, you guessed it&quot;) else: print(&quot;Sorry, you have not guessed correctly&quot;)else: print(&quot;You guess it first time!&quot;) Boolean expressionorandnot 12345678910111213141516age = int(input(&quot;How old are you? &quot;))if age &gt;= 16 and age &lt;= 65: print(&quot;Have a good day at work&quot;)# Simplify chained comparison if 16 &lt;= age &lt;= 65: print(&quot;Have a good day at work&quot;)else: print(&quot;Enjoy your free time&quot;)#### orif age &lt; 16 or age &gt; 65: print(&quot;Enjoy your free time&quot;)else: print(&quot;Have a good day at work&quot;) when comparing conditions using and, Python will stop checking as soon as it finds a condition that is False. when comparing conditions using or, Python will stop checking as soon as it finds a condition that is True. 12345678910# day = &quot;Monday&quot;day = &quot;Saturday&quot;temperature = 30# raining = Trueraining = Falseif (day == &quot;Saturday&quot; and temperature &gt; 27) or not raining: print(&quot;Go swimming&quot;)else: print(&quot;Learn Python&quot;) truthy valueHere are most of the built-in objects considered false: constants defined to be false: None and False zero of any numeric type: 0, 0.0, 0j, Decimal(0), Fraction(0, 1) empty sequences and collections: ‘’, (), [], {}, set(), range(0) 12345678910111213141516if 0 : print(&quot;True&quot;)else: print(&quot;False&quot;)if '' : print(&quot;True&quot;)else: print(&quot;False&quot;)name = input(&quot;Please enter your name: &quot;)# if name != '':if name: print(&quot;Hello, {}&quot;. format(name))else: print(&quot;Are you the man with no name&quot;) repeat blockfor loopan iterable object: that can be iterated over 1234parrot = &quot;Norwegian Blue&quot;for character in parrot: print(character) 123456789number = &quot;2,123;456:123 478,124;807&quot;# print(number[1::4]) # &quot;,;: ,;&quot;# seperators = number[1::4]seperators = ''for char in number: if not char.isnumeric(): seperators = seperators + charprint(seperators) # &quot;,;: ,;&quot; nest for loop1234for i in range(1, 9): for j in range(1, 9): print(&quot;{0} times {1} is {2}&quot;.format(j, i, i * j)) print(&quot;----------------------&quot;) range()class range(Sequence[int])range(stop) -&gt; range object range(start, stop[, step]) -&gt; range objectReturn an object that produces a sequence of integers from start (inclusive) to stop (exclusive) by step. range(i, j) produces i, i+1, i+2, …, j-1. start defaults to 0, and stop is omitted! range(4) produces 0, 1, 2, 3. These are exactly the valid indices for a list of 4 elements. When step is given, it specifies the increment (or decrement). 12345# i is now 1# i is now 2# i is now 3for i in range(1, 4): print(&quot;i is now {}&quot;.format(i)) 123456789101112131415161718# 0# 1# 2# 3for i in range(4): print(i)# 1# 3for i in range(1, 4, 2): print(i)# 4# 2for i in range(4, 1, -2): print(i) 1234567age = int(input(&quot;How old are you? &quot;))## more efficientif 16 &lt;= age &lt;= 65:# if age in range(16,66): print(&quot;Have a good day at work&quot;)else: print(&quot;Enjoy your free time&quot;) continue and break12345678910111213141516171819202122232425shopping_list = ['milk', 'pasta', 'eggs', 'spam', 'bread', 'rice']# for item in shopping_list:# if item != 'spam':# print(&quot;Buy &quot; + item)# Buy milk# Buy pasta# Buy eggs# Buy bread# Buy ricefor item in shopping_list: if item == 'spam': continue print(&quot;Buy &quot; + item)#### break# Buy milk# Buy pasta# Buy eggsfor item in shopping_list: if item == 'spam': break print(&quot;Buy &quot; + item) break is efficient 123456789101112shopping_list = ['milk', 'pasta', 'eggs', 'spam', 'bread', 'rice']item_to_find = 'spam'found_at = None# find the first item in a listfor index in range(len(shopping_list)): if shopping_list[index] == item_to_find: found_at = index breakprint(&quot;Item found at index {}&quot;.format(found_at)) in while loop12345678910available_exits = ['north', 'south', 'east', 'west']chosen_exit = ''while chosen_exit not in available_exits: chosen_exit = input(&quot;Please choose a direction: &quot;).casefold() if chosen_exit == 'quit': print(&quot;Game over&quot;) breakprint(&quot;aren't you glad you got out of there&quot;) while loopdont need to know how many times the loop will execute. 123456789101112# for i in range(4):# print(&quot;i is now {}&quot;.format(i))i = 0# i is now 0# i is now 1# i is now 2# i is now 3while i &lt; 4: print(&quot;i is now {}&quot;.format(i)) i += 1 # i = i + 1 1234567available_exits = ['north', 'south', 'east', 'west']chosen_exit = ''while chosen_exit not in available_exits: chosen_exit = input(&quot;Please choose a direction: &quot;)print(&quot;aren't you glad you got out of there&quot;) 1234567891011121314151617181920import randomhighest = 10answer = random.randint(1, highest)print(answer) # TODO: remove after testingguess = 0while guess != answer: guess = int(input(&quot;Please guess number between 1 and {}: &quot;.format(highest))) if guess == 0: break if guess == answer: print(&quot;You guess it&quot;) break elif guess &lt; answer: print(&quot;Please guess higher&quot;) else: print(&quot;Please guess lower&quot;) binary searchwhen you have an ordered set of data to search through, you can split the data in half each time. 12345678910111213141516171819202122232425low = 1high = 1000print(&quot;Please think of a number between {} and {}&quot;.format(low, high))input(&quot;Press ENTER to start&quot;)my_number = 837guesses = 1while True: print(f&quot;\\tGuessing in the range of {low} to {high}&quot;) guess = low + (high - low) // 2 low_or_high = input(&quot;is {0} the number? enter '0' for correct. &quot; &quot;{0} is higher or lower than the answer? enter '+' for higher, '-' for lower &quot;.format(guess)) if low_or_high == '0': print(f&quot;the number is {guess}&quot;) print(f&quot;I guess {guesses} times&quot;) break elif low_or_high == '+': # guess is higher than the answer high = guess - 1 elif low_or_high == '-': # guess is lower than the answer low = guess + 1 else: print(&quot;Please enter '+', '-', '0'&quot;) guesses = guesses + 1 else in a loopif the loop terminate normal for loop end without a break while loop condition false without break 12345678910# numbers = [1, 45, 32, 12, 60] # The numbers are unacceptablenumbers = [1, 45, 31, 12, 60] # All those numbers are finefor number in numbers: if number % 8 == 0: print(&quot;The numbers are unacceptable&quot;) breakelse: print(&quot;All those numbers are fine&quot;) 12345678910111213141516171819202122232425262728low = 1high = 1000print(&quot;Please think of a number between {} and {}&quot;.format(low, high))input(&quot;Press ENTER to start&quot;)my_number = 837guesses = 1while low != high: print(f&quot;\\tGuessing in the range of {low} to {high}&quot;) guess = low + (high - low) // 2 low_or_high = input(&quot;is {0} the number? enter '0' for correct. &quot; &quot;{0} is higher or lower than the answer? &quot; &quot;enter '+' for higher, '-' for lower &quot;.format(guess)) if low_or_high == '0': print(f&quot;the number is {guess}&quot;) print(f&quot;I guess {guesses} times&quot;) break elif low_or_high == '+': # guess is higher than the answer high = guess - 1 elif low_or_high == '-': # guess is lower than the answer low = guess + 1 else: print(&quot;Please enter '+', '-', '0'&quot;) guesses = guesses + 1else: print(f&quot;You thought of the number {low}&quot;) 12345678910available_exits = ['north', 'south', 'east', 'west']chosen_exit = ''while chosen_exit not in available_exits: chosen_exit = input(&quot;Please choose a direction: &quot;).casefold() if chosen_exit == 'quit': print(&quot;Game over&quot;) breakelse: print(&quot;aren't you glad you got out of there&quot;) list comprehensions and generator expressionsmoduleseach .py file created by you becomes a new python module virtualenv venvactive venv cd C:\\Users\\liucf\\Documents\\learning\\Learn-Python-Programming-MasterclassSet-ExecutionPolicy Unrestricted -Scope Process.\\.venv\\Scripts\\activate deactivatedeactivate random module12import randomanswer = random.randint(1, 10) def randint(self, a: int, b: int) -&gt; intReturn random integer in range [a, b], including both end points. augmented assignmentguesses = 0guesses = guesses + 1guesses += 1 when binary operation(it take 2 operands to work on) and there is an assignmentchange to augmented assignment in python, the augmented assignment form only evaluates the assignee(guesses in the example) once, so more efficientusing an augmented assignment, it can perform the operation in-place where possible, modifying the original variable(not create a new one) evaluating a variable basically consists of looking its value PEP: python enhancement proposalPEP 8style guide for python https://peps.python.org/pep-0008/ naming conventionsFunction names should be lowercase, with words separated by underscores as necessary to improve readability. Variable names follow the same convention as function names. code layoutMaximum Line Length pycham -&gt; file -&gt; setting -&gt; editor -&gt; code style -&gt; visual guides -&gt; 72,80 conditional debugging(breakpoint)right click breakpoint( red dot ) hashlibhashlib.algorithms_guaranteedA set containing the names of the hash algorithms guaranteed to be supported by this module on all platforms. sha256 def encode(self, encoding: str = “utf-8”, errors: str = “strict”) -&gt; bytesEncode the string using the codec registered for encoding. encodingThe encoding in which to encode the string. 1234567891011121314151617181920212223242526272829303132333435import hashlibprint(sorted(hashlib.algorithms_guaranteed))# ['blake2b', 'blake2s', 'md5', 'sha1', 'sha224', 'sha256', 'sha384', 'sha3_224', 'sha3_256', 'sha3_384', 'sha3_512', 'sha512', 'shake_128', 'shake_256']print(sorted(hashlib.algorithms_available))python_program = &quot;&quot;&quot;for i in range(10):print(i)&quot;&quot;&quot;print(python_program)# def chr(__i: int) -&gt; str# Return a Unicode string of one character with ordinal i; 0 &lt;= i &lt;= 0x10ffff.# 102 f# 111 o# 114 r# ...# for b in python_program.encode('utf-8'):# print(b, chr(b))# print(python_program.encode('utf-8')) # b'for i in range(10):\\nprint(i)\\n'original_hash = hashlib.sha256(python_program.encode('utf-8'))print(original_hash) # &lt;sha256 _hashlib.HASH object @ 0x000002862FFB9930&gt;print(f&quot;SHA256 {original_hash.hexdigest()}&quot;) # SHA256 5033b46b90e4250ce294d67078ad62b516b4b65964488e4605c7d216263c1565python_program += &quot;print('code change')&quot;new_hash = hashlib.sha256(python_program.encode('utf-8'))print(f&quot;SHA256 {new_hash.hexdigest()}&quot;) # SHA256 0b4bd931add7a7164314f8feb7927ebca575417f8650b1f6069ba783a3a0f9e2# the code and been modifiedif new_hash.hexdigest() == original_hash.hexdigest(): print('the code has not changed')else: print('the code and been modified') section 3: buildin types5 sequence typeshttps://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range sequence: an ordered set of itemsindex can be used to refer the itemsequence are iterable types stringlisttuplerangebytes and bytearray muteble sequenceslice and assign and deletes[i] = xitem i of s is replaced by x s[i:j] = t slice of s from i to j is replaced by the contents of the iterable t 1234567891011121314computer_parts = [ 'computer', 'monitor', 'keyboard', 'mouse', 'mouse mat']print(computer_parts)computer_parts[3] = 'trackball'print(computer_parts) # ['computer', 'monitor', 'keyboard', 'trackball', 'mouse mat']print(computer_parts[3:]) # ['trackball', 'mouse mat']computer_parts[3:] = ['trackball']print(computer_parts) # ['computer', 'monitor', 'keyboard', 'trackball'] s[i:j:k] = t the elements of s[i:j:k] are replaced by those of t del s[i:j]same as s[i:j] = [] del s[i:j:k] removes the elements of s[i:j:k] from the list 123456789101112131415161718192021222324252627282930313233343536373839404142data = [4,5,104,105,110,120,130,130,150, 160,170,183,185,187,188,191,350,360]# del data[0:2]# print(data) # [104, 105, 110, 120, 130, 130, 150, 160, 170, 183, 185, 187, 188, 191, 350, 360]## del data[14:]# print(data) # [104, 105, 110, 120, 130, 130, 150, 160, 170, 183, 185, 187, 188, 191]min_valid = 100max_valid = 200## wrong approche# for index, value in enumerate(data):# if value &lt; min_valid or value &gt; max_valid:# del data[index]# print(data)#### for ordered list# process the low values in the liststop = 0for index, value in enumerate(data): if value &gt;= min_valid: stop = index breakprint(stop) # 2del data[:stop]print(data) # [104, 105, 110, 120, 130, 130, 150, 160, 170, 183, 185, 187, 188, 191, 350, 360]# process the high values in the list#### more efficientstart = 0for index in range(len(data) - 1, -1, -1): print(index) if data[index] &lt;= max_valid: start = index + 1 breakprint(start)del data[start:]print(data) itarate backwards12345678910111213#### for not sorted listdata = [104,101,4,105,308,103,5, 107,100,306,106,102,108]min_valid = 100max_valid = 200for index in range(len(data) - 1, -1, -1): if data[index] &lt; min_valid or data[index] &gt; max_valid: # print(index, data) del data[index]### [104, 101, 105, 103, 107, 100, 106, 102, 108]print(data) 12345678910111213141516171819202122data = [104,101,4,105,308,103,5, 107,100,306,106,102,108]min_valid = 100max_valid = 200# for index in range(len(data) - 1, -1, -1):# if data[index] &lt; min_valid or data[index] &gt; max_valid:# # print(index, data)# del data[index]# ### [104, 101, 105, 103, 107, 100, 106, 102, 108]# print(data)## more efficienttop_index = len(data) - 1for index, value in enumerate(reversed(data)): i = top_index - index # print(i) if value &lt; min_valid or value &gt; max_valid: print(i, data) del data[i]print(data) s.append(x)appends x to the end of the sequence (same as s[len(s):len(s)] = [x]) 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061available_parts = [ 'computer', 'monitor', 'keyboad', 'mouse', # 'mouse mat', 'hdmi cable']current_choice = '-'computer_parts = []# valid_choices = [str(i) for i in range(1, len(available_parts) + 1)]# print(valid_choices) # ['1', '2', '3', '4', '5', '6']valid_choices = []for i in range(1, len(available_parts) + 1): valid_choices.append(str(i))print(valid_choices) # ['1', '2', '3', '4', '5', '6']while current_choice != '0': # if current_choice in '123456': if current_choice in valid_choices: print(f&quot;Adding {current_choice}&quot;) # if current_choice == '1': # computer_parts.append(&quot;computer&quot;) # elif current_choice == '2': # computer_parts.append(&quot;monitor&quot;) # elif current_choice == '3': # computer_parts.append(&quot;keyboad&quot;) # elif current_choice == '4': # computer_parts.append(&quot;mouse&quot;) # elif current_choice == '5': # computer_parts.append(&quot;mouse mat&quot;) # elif current_choice == '6': # computer_parts.append('hdmi cable') computer_parts.append(available_parts[int(current_choice) - 1]) else: print(&quot;Please add options from the list below:&quot;) # print(&quot;1: computer&quot;) # print(&quot;2: monitor&quot;) # print(&quot;3: keyboad&quot;) # print(&quot;4: mouse&quot;) # print(&quot;5: mouse mat&quot;) # print(&quot;6: hdmi cable&quot;) # print(&quot;0: to finish&quot;) # not efficient # for part in available_parts: # print(f&quot;{available_parts.index(part) + 1}: {part}&quot;) for number, part in enumerate(available_parts): print(f&quot;{number + 1}: {part}&quot;) current_choice = input()print(computer_parts) s.clear()removes all items from s (same as del s[:]) s.copy()creates a shallow copy of s (same as s[:]) 123456789101112131415# more_numbers = list(numbers)# print(more_numbers) # [2, 4, 6, 8, 1, 3, 5, 7, 9]# print(numbers is more_numbers) # False# print(numbers == more_numbers) # True# # another_numbers = numbers[:]# print(another_numbers) # [2, 4, 6, 8, 1, 3, 5, 7, 9]# print(numbers is another_numbers) # False# print(numbers == another_numbers) # True## most efficientmore_numbers = numbers.copy()print(more_numbers) # [2, 4, 6, 8, 1, 3, 5, 7, 9]print(numbers is more_numbers) # Falseprint(numbers == more_numbers) # True s.extend(t) or s += textends s with the contents of t (for the most part the same as s[len(s):len(s)] = t) def extend(self, __iterable: Iterable[_T]) -&gt; NoneExtend list by appending elements from the iterable 1234even = [2, 4, 6, 8]odd = [1, 3, 5, 7, 9]even.extend(odd)print(even) ## [2, 4, 6, 8, 1, 3, 5, 7, 9] s *= nupdates s with its contents repeated n times s.insert(i, x)inserts x into s at the index given by i (same as s[i:i] = [x]) s.pop() or s.pop(i)retrieves the item at i and also removes it from s s.remove(x)remove the first item from s where s[i] is equal to x def remove(self, __value: _T) -&gt; NoneRemove first occurrence of value.Raises ValueError if the value is not present. 12345678910111213141516171819202122232425262728293031323334353637383940available_parts = [ 'computer', 'monitor', 'keyboad', 'mouse', # 'mouse mat', 'hdmi cable']current_choice = '-'computer_parts = []valid_choices = []for i in range(1, len(available_parts) + 1): valid_choices.append(str(i))print(valid_choices) # ['1', '2', '3', '4', '5', '6']while current_choice != '0': if current_choice in valid_choices: index = int(current_choice) - 1 chosen_part = available_parts[index] # remove method if chosen_part in computer_parts: print(f&quot;Removing {current_choice}&quot;) computer_parts.remove(chosen_part) else: print(f&quot;Adding {current_choice}&quot;) computer_parts.append(chosen_part) print(computer_parts) else: print(&quot;Please add options from the list below:&quot;) for number, part in enumerate(available_parts): print(f&quot;{number + 1}: {part}&quot;) current_choice = input()print(computer_parts) s.reverse()reverses the items of s in place buildin method reversed()Return a reverse iterator over the values of the given sequence. 12345678910111213141516171819202122data = [104,101,4,105,308,103,5, 107,100,306,106,102,108]min_valid = 100max_valid = 200# for index in range(len(data) - 1, -1, -1):# if data[index] &lt; min_valid or data[index] &gt; max_valid:# # print(index, data)# del data[index]# ### [104, 101, 105, 103, 107, 100, 106, 102, 108]# print(data)## more efficienttop_index = len(data) - 1for index, value in enumerate(reversed(data)): i = top_index - index # print(i) if value &lt; min_valid or value &gt; max_valid: print(i, data) del data[i]print(data) listlist are mutalbe list() functionBuilt-in mutable sequence.If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. bindin mutible name to a list123456789101112131415161718192021222324252627shopping_list = [ 'milk', 'pasta', 'eggs', 'spam', 'bread', 'rice']another_list = shopping_listprint(id(shopping_list)) # 1978024513920print(id(another_list)) # 1978024513920shopping_list += ['cookies']print(shopping_list)print(id(shopping_list)) # 1978024513920print(another_list) # ['milk', 'pasta', 'eggs', 'spam', 'bread', 'rice', 'cookies']print(id(another_list)) # 1978024513920a = b = c = d = e = f = another_listprint(a)print(&quot;Adding cream&quot;)b.append(&quot;cream&quot;)print(c) # ['milk', 'pasta', 'eggs', 'spam', 'bread', 'rice', 'cookies', 'cream']print(d) # ['milk', 'pasta', 'eggs', 'spam', 'bread', 'rice', 'cookies', 'cream'] create list12345678910111213141516empty_list = []even = [2, 4, 6, 8]odd = [1, 3, 5, 7, 9]numbers = even + oddprint(numbers) # [2, 4, 6, 8, 1, 3, 5, 7, 9]sorted_numbers = sorted(numbers)print(sorted_numbers) # [1, 2, 3, 4, 5, 6, 7, 8, 9]digits = sorted(&quot;4425725136&quot;)print(digits) # ['1', '2', '2', '3', '4', '4', '5', '5', '6', '7']digits_1 = list(&quot;17854612&quot;)print(digits_1) # ['1', '7', '8', '5', '4', '6', '1', '2'] nest list12345678910even = [2, 4, 6, 8]odd = [1, 3, 5, 7, 9]numbers = [even, odd]print(numbers) # [[2, 4, 6, 8], [1, 3, 5, 7, 9]]for number_list in numbers: print(number_list) for number in number_list: print(number) 12345678my_list = [ 1, 2, 3, 4, 5, 6,]result = some_function_that_takes_arguments( 'a', 'b', 'c', 'd', 'e', 'f',) 12345678910111213141516171819202122menu = [ ['egg', 'bacon'], ['egg', 'sausage', 'bacon'], ['egg', 'spam'], ['egg', 'bacon', 'spam'], ['egg', 'bacon', 'sausage', 'spam'], ['spam', 'bacon', 'sausage', 'spam'], ['spam', 'sausage', 'spam', 'bacon', 'spam', 'tomato', 'spam'], ['spam', 'egg', 'spam', 'spam', 'bacon', 'spam'],]for meal in menu: for index in range(len(meal) - 1, -1, -1): if meal[index] == 'spam': del meal[index] print(meal)for meal in menu: for item in meal: if item != 'spam': print(item, end=' ') print() buildin function: enumerate()class enumerate(Iterator[tuple[int, _T]], Generic[_T])Return an enumerate object. iterablean object supporting iterationThe enumerate object yields pairs containing a count (from start, which defaults to zero) and a value yielded by the iterable argument.enumerate is useful for obtaining an indexed list:(0, seq[0]), (1, seq[1]), (2, seq[2]), … 12345# 0 a# 1 b# 2 cfor index, character in enumerate(&quot;abc&quot;): print(index, character) 12345678# (0, 'a')# (1, 'b')# (2, 'c')for t in enumerate(&quot;abc&quot;): print(t) index, character = t print(index) print(character) list methodssort()def sort(self: list[SupportsRichComparisonT], *, key: None = None, reverse: bool = False) -&gt; NoneSort the list in ascending order and return None.The sort is in-place (i.e. the list itself is modified) and stable (i.e. the order of two equal elements is maintained).If a key function is given, apply it once to each list item and sort them, ascending or descending, according to their function values.The reverse flag can be set to sort in descending order.sort(self, *, key=None, reverse=False) 1234567891011even = [2, 4, 6, 8]odd = [1, 3, 5, 7, 9]even.extend(odd)print(even) ## [2, 4, 6, 8, 1, 3, 5, 7, 9]even.sort()print(even) # [1, 2, 3, 4, 5, 6, 7, 8, 9]another_even = eveneven.sort(reverse=True)print(even) # [9, 8, 7, 6, 5, 4, 3, 2, 1]print(another_even) # [9, 8, 7, 6, 5, 4, 3, 2, 1] buildin function: sorted()def sorted(__iterable: Iterable[SupportsRichComparisonT], *, key: None = None, reverse: bool = False) -&gt; list[SupportsRichComparisonT]Return a new list containing all items from the iterable in ascending order.A custom key function can be supplied to customize the sort order, and the reverse flag can be set to request the result in descending order.sorted(__iterable, *, key=None, reverse=False) 1234567891011121314pangram = &quot;The quick brown fox jumps over the lazy dog&quot;# [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'T', 'a', 'b', 'c', 'd', 'e', 'e', 'e', 'f', 'g', 'h', 'h', 'i', 'j', 'k',# 'l', 'm', 'n', 'o', 'o', 'o', 'o', 'p', 'q', 'r', 'r', 's', 't', 'u', 'u', 'v', 'w', 'x', 'y', 'z']letters = sorted(pangram)print(letters)numbers = [2.3, 4.5, 8.7, 3.1, 9.2, 1.6]sorted_numbers = sorted(numbers)print(sorted_numbers) # [1.6, 2.3, 3.1, 4.5, 8.7, 9.2]print(numbers) # [2.3, 4.5, 8.7, 3.1, 9.2, 1.6]missing_letter = sorted(&quot;The quick brown fox jumps over the lazy dog&quot;)print(missing_letter) 1234# [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'a', 'b', 'c', 'd', 'e', 'e', 'e', 'f', 'g', 'h', 'h', 'i', 'j',# 'k', 'l', 'm', 'n', 'o', 'o', 'o', 'o', 'p', 'q', 'r', 'r', 's', 'T', 't', 'u', 'u', 'v', 'w', 'x', 'y', 'z']missing_letter = sorted(&quot;The quick brown fox jumps over the lazy dog&quot;, key = str.casefold)print(missing_letter) tuplesan ordered set of dataimmutable 123t = &quot;a&quot;, 'b', 'c't = (&quot;a&quot;, 'b', 'c')print(t) # ('a', 'b', 'c') 1234567name = 'Tim'age = 10print(name, age, 'python', 2020) # 'Tim 10 python 2020'# ('Tim', 10, 'python', 2020)print((name, age, 'python', 2020)) # 'Tim 10 python 2020' 1234567891011121314metallica = &quot;Ride the Lightning&quot;, &quot;Meallica&quot;, 1984print(metallica)print(metallica[0]) # Ride the Lightningprint(metallica[1])print(metallica[2])## Tuples don't support item assignment# metallica[0] = &quot;Master of Puppets&quot;metallica2 = list(metallica)print(metallica2) # ['Ride the Lightning', 'Meallica', 1984]metallica2[0] = &quot;Master of Puppets&quot;print(metallica2) # ['Master of Puppets', 'Meallica', 1984] unpacking tuples12345678910111213141516171819202122232425262728a = b = c = d = e = f = 12print(c)### unpackingx, y, z = 1, 2, 76print(x)print(y)print(z)data = 1, 2, 76 # tuplex, y, z = data ## left side is not a tuple# &quot;data&quot; not changeprint(x)print(y)print(z)data = (12, 13, 14)(x, y, z) = dataprint(x, y, z)print(&quot;unpacking a list&quot;)data_list = [12, 13, 14]# data_list.append(15) # ValueError: too many values to unpack (expected 3)p, q, r = data_listprint(p) # 12print(q)print(r) 1234567891011121314# 0 a# 1 b# 2 cfor index, character in enumerate(&quot;abc&quot;): print(index, character)# (0, 'a')# (1, 'b')# (2, 'c')for t in enumerate(&quot;abc&quot;): print(t) index, character = t print(index) print(character) 1234567891011121314151617metallica = &quot;Ride the Lightning&quot;, &quot;Meallica&quot;, 1984title, artist, year = metallicaprint(title) # Ride the Lightningprint(artist)print(year)table = (&quot;Coffe table&quot;, 200, 100, 75, 34.50)print(table[1] * table[2])name, length, width, height, price = tableprint(length * width)# print(metallica)# print(metallica[0]) # Ride the Lightning# print(metallica[1])# print(metallica[2]) nested tuple in list12345678910111213141516albums = [(&quot;Welcome to my Nightmare&quot;, &quot;Alice Cooper&quot;, 1975), (&quot;Bad Company&quot;, &quot;Bad Company&quot;, 1974), (&quot;Nightflight&quot;, &quot;Budgie&quot;, 1981), (&quot;More Mayhem&quot;, &quot;Emilda May&quot;, 2011), (&quot;Ride the Lightning&quot;, &quot;Meallica&quot;, 1984), ]print(len(albums))for album in albums: title, artist, year = album print(f&quot;Album: {title}, Artist: {artist}, Year: {year}&quot;) print(&quot;Album: {0}, Artist: {1}, Year: {2}&quot;.format(title, artist, year))### more efficientfor title, artist, year in albums: print(&quot;Album: {0}, Artist: {1}, Year: {2}&quot;.format(title, artist, year)) 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950albums = [ (&quot;Welcome to my Nightmare&quot;, &quot;Alice Cooper&quot;, 1975, [ (1, &quot;Welcome to my Nightmare&quot;), (2, &quot;Devil's Food&quot;), (3, &quot;The Black Widow&quot;), (4, &quot;Some Folks&quot;), (5, &quot;Only Women Bleed&quot;), ] ), (&quot;Bad Company&quot;, &quot;Bad Company&quot;, 1974, [ (1, &quot;Can't Get Enough&quot;), (2, &quot;Rock Steady&quot;), (3, &quot;Ready for Love&quot;), (4, &quot;Don't Let Me Down&quot;), (5, &quot;Bad Company&quot;), (6, &quot;The Way I Choose&quot;), (7, &quot;Movin' On&quot;), (8, &quot;Seagull&quot;), ] ), (&quot;Nightflight&quot;, &quot;Budgie&quot;, 1981, [ (1, &quot;I Turned to Stone&quot;), (2, &quot;Keeping a Rendezvous&quot;), (3, &quot;Reaper of the Glory&quot;), (4, &quot;She Used Me Up&quot;), ] ), (&quot;More Mayhem&quot;, &quot;Imelda May&quot;, 2011, [ (1, &quot;Pulling the Rug&quot;), (2, &quot;Psycho&quot;), (3, &quot;Mayhem&quot;), (4, &quot;Kentish Town Waltz&quot;), ] ),]for name, artist, year, songs in albums: print(f&quot;Album: {name}, Artist: {artist}, Year: {year}&quot;) print(&quot;Songs: &quot;) for index, song_name in songs: print(f&quot;Song {index}: {song_name}&quot;)print(albums[3]) # ('More Mayhem', 'Imelda May', 2011, [(1, 'Pulling the Rug'), (2, 'Psycho'), (3, 'Mayhem'), (4, 'Kentish Town Waltz')])print(albums[3][3]) # [(1, 'Pulling the Rug'), (2, 'Psycho'), (3, 'Mayhem'), (4, 'Kentish Town Waltz')]print(albums[3][3][2]) # (3, 'Mayhem')print(albums[3][3][2][1]) # Mayhem 12345678910111213141516171819202122232425262728293031from nested_data import albumsSONGS_LIST_INDEX = 3SONG_TITLE_INDEX = 1# print(albums)while True: print(&quot;Please choose your album (invalid choice exits): &quot;) for index, (title, artist, year, songs) in enumerate(albums): print(&quot;{}: {}&quot;.format(index + 1, title)) # for index, value in enumerate(albums): # # print(index, value) # title, artist, year, songs = value # print(&quot;{}, {}, {}, {}, {}&quot; # .format(index + 1, title, artist, year, songs)) choice = int(input()) if 1 &lt;= choice &lt;= len(albums): songs_list = albums[choice - 1][SONGS_LIST_INDEX] else: break print(&quot;Please choose your song (invalid choice exits): &quot;) for index, (song_num, song_name) in enumerate(songs_list): print(&quot;{}: {}&quot;.format(index + 1, song_name)) song_choice = int(input()) if 1 &lt;= song_choice &lt;= len(songs_list): song_title = songs_list[song_choice - 1][SONG_TITLE_INDEX] print(f&quot;Playing {song_title}&quot;) else: break print('=' * 40) tuple() functionsection 4: function1234567def multiply(): result = 10.5 * 4 return resultanswer = multiply()print(answer) # 42.0 parameter and argumentformal parameter arguments are the values that will be used by formal parameters, when call a function. 12345678910111213141516def multiply(x, y): result = x * y return result# TypeError: multiply() missing 2 required positional arguments: 'x' and 'y'# answer = multiply()answer = multiply(10.5, 4)print(answer) # 42.0forty_two = multiply(6, 7)print(forty_two) # 42for val in range(1, 5): two_times = multiply(val, 2) print(two_times) parameter types any positional-or-keyword arguments that we define, MUST come first in the parameter list a var_positional parameter(start with *) must come after any positional-or-keyword arguments any parameters defined after a var-positional parameter must be keyword-only arguments(which includes var-keyword arguments) any var-keyword arguments appear last 12345678910111213141516171819def func(p1, p2, *args, k, **kwargs): print(f'positional-or-keyword:....{p1}, {p2}') print(f&quot;var-positional (*args):...{args}&quot;) print(f&quot;keyword:..................{k}&quot;) print(f&quot;var-keyword:..............{kwargs}&quot;)# positional-or-keyword:....1, 2# var-positional (*args):...(3, 4, 5)# keyword:..................6# var-keyword:..............{'key1': 7, 'key2': 8}func(1, 2, 3, 4, 5, k=6, key1=7, key2=8)# positional-or-keyword:....1, 2# var-positional (*args):...(3, 4, 5, 9)# keyword:..................6# var-keyword:..............{'key1': 7, 'key2': 8}func(1, 2, 3, 4, 5, 9, k=6, key1=7, key2=8)# TypeError: func() missing 1 required keyword-only argument: 'k'# func(1, 2, 3, 4, 5, 9, key1=7, key2=8) arguments are passed by assignmentthe behaviour is similar to pass by reference, when passing a mutable object.for immutable objects, the behaviour is closer to pass by value. in a function call a function123456789101112131415def is_palindrome(string): string = string.casefold() backwards = string[::-1] return backwards == stringdef is_palindrome_sentence(sentence): sentence_without = '' for character in sentence: if str(character).isalpha(): sentence_without += character return is_palindrome(sentence_without)print(is_palindrome_sentence(&quot;Was it a car, or a cat, I saw?&quot;)) positional argumentdefault parameter values1234567891011121314def banner_text(text, screen_width=80): if len(text) &gt; screen_width - 4: # print(&quot;The text is too long to fit in the specified width&quot;) raise ValueError(&quot;String {0} is larger than specified width {1}&quot; .format(text, screen_width)) if text == '*': print('*' * screen_width) else: output_string = '**{0}**'.format(text.center(screen_width -4)) print(output_string)# &quot;** Hello world! **&quot;banner_text('Hello world!') Don’t use spaces around the = sign when used to indicate a keyword argument, or when used to indicate a default value for an unannotated function parameter: Correct: def complex(real, imag=0.0): return magic(r=real, i=imag) Wrong: def complex(real, imag = 0.0): return magic(r = real, i = imag) *args123456789101112131415161718numbers = (0, 1, 2, 3, 4, 5)print(numbers) # (0, 1, 2, 3, 4, 5)## unpack sequenceprint(*numbers) # '0 1 2 3 4 5'print(0, 1, 2, 3, 4, 5) # '0 1 2 3 4 5'## pack to sequencedef test_star(*args): print(args) for x in args: print(x)test_star(0, 1, 2, 3, 4, 5) # (0, 1, 2, 3, 4, 5)test_star() # () 123456789101112131415161718192021222324252627282930313233343536# Some ANSI escape sequences for colours and effectsBLACK = '\\u001b[30m'RED = '\\u001b[31m'GREEN = '\\u001b[32m'YELLOW = '\\u001b[33m'BLUE = '\\u001b[34m'MAGENTA = '\\u001b[35m'CYAN = '\\u001b[36m'WHITE = '\\u001b[37m'RESET = '\\u001b[0m'BOLD = '\\u001b[1m'UNDERLINE = '\\u001b[4m'REVERSE = '\\u001b[7m'# print(RED, &quot;this will be in red&quot;)# print(&quot;and so is this&quot;)# print(RESET)# print(&quot;this is normal&quot;)def colour_print(text: str, *effects: str) -&gt; None: &quot;&quot;&quot; Print `text` using the Ansi sequences to change colour, etc. :param text: the text to print :param effects: the effects we want, one of the constants defined at the start of this module &quot;&quot;&quot; effects_joined = ''.join(effects) output_string = &quot;{0}{1}{2}&quot;.format(effects_joined, text, RESET) print(output_string)colour_print(&quot;Hello, Blue&quot;, BLUE)colour_print(&quot;Hello, Underline and Red&quot;, UNDERLINE, RED) positional/keyword argumentkeyword argument: an argument preceded by an identifier (e.g. name=) in a function call or passed as a value in a dictionary preceded by **. For example, 3 and 5 are both keyword arguments in the following calls to complex(): complex(real=3, imag=5)complex(**{'real': 3, 'imag': 5}) positional argument: an argument that is not a keyword argument. Positional arguments can appear at the beginning of an argument list and/or be passed as elements of an iterable preceded by *. For example, 3 and 5 are both positional arguments in the following calls: complex(3, 5)complex(*(3, 5)) 1234567891011121314151617181920def banner_text(text=' ', screen_width=80): if len(text) &gt; screen_width - 4: # print(&quot;The text is too long to fit in the specified width&quot;) raise ValueError(&quot;String {0} is larger than specified width {1}&quot; .format(text, screen_width)) if text == '*': print('*' * screen_width) else: output_string = '**{0}**'.format(text.center(screen_width -4)) print(output_string)# &quot;** Hello world! **&quot;banner_text('Hello world!')banner_text()### keyword argument #### banner_text(, 60)banner_text(screen_width=60) handling invalid argument12345678910111213141516def banner_text(text): screen_width = 80 if len(text) &gt; screen_width -4: # print(&quot;The text is too long to fit in the specified width&quot;) raise ValueError(&quot;String {0} is larger than specified width {1}&quot; .format(text, screen_width)) if text == '*': print('*' * screen_width) else: output_string = '**{0}**'.format(text.center(screen_width -4)) print(output_string)# &quot;** Hello world! **&quot;banner_text('Hello world!')banner_text(&quot;01234567890123456789012345678901234567890123456789012345678901234567890123456789&quot;) exceptionshttps://docs.python.org/3/library/exceptions.html#concrete-exceptions exception ValueErrorRaised when an operation or function receives an argument that has the right type but an inappropriate value, and the situation is not described by a more precise exception such as IndexError. return statement12345678910def get_integer(prompt): while True: temp = input(prompt) if temp.isnumeric(): return int(temp) # else: # print(&quot;Please enter a number&quot;) print(&quot;Please enter a number&quot;)guess = get_integer(&quot;Please guess the number: &quot;) return None123456def multiply(x, y): result = x * yanswer = multiply(10.5, 4)print(answer) # None documentation for functionspython pep docstring pycharm -&gt; ctrl + q 1234567891011121314151617def get_integer(prompt): &quot;&quot;&quot; Get an integer form Standard Input (stdin). The function will continue looping, and prompting the user, until a valid `int` is entered :param prompt: The String that the user will see, when they are prompted to enter to value :return: The integer thar the user enters &quot;&quot;&quot; while True: temp = input(prompt) if temp.isnumeric(): return int(temp) else: print(&quot;Please enter a number&quot;) print(get_integer.__doc__)help(get_integer) function annotations and type hintsdef fibonacci(n: int) -&gt; intReturn the n th Fibonacci number, for positive n. 12345678910111213141516def fibonacci(n: int) -&gt; int: &quot;&quot;&quot; Return the `n` th Fibonacci number, for positive `n`. &quot;&quot;&quot; if 0 &lt;= n &lt;= 1: return n n_minus1, n_minus2 = 1, 0 result = None for f in range(n - 1): result = n_minus2 + n_minus1 n_minus2 = n_minus1 n_minus1 = result return result 123def multiply(x: float, y: float) -&gt; float: result = x * y return result When combining an argument annotation with a default value, however, do use spaces around the = sign: Correct:def munge(sep: AnyStr = None): …def munge(input: AnyStr, sep: AnyStr = None, limit=1000): … Wrong:def munge(input: AnyStr=None): …def munge(input: AnyStr, limit = 1000): … 12345678910def banner_text(text: str = ' ', screen_width: int = 80) -&gt; None: if len(text) &gt; screen_width - 4: # print(&quot;The text is too long to fit in the specified width&quot;) raise ValueError(&quot;String {0} is larger than specified width {1}&quot; .format(text, screen_width)) if text == '*': print('*' * screen_width) else: output_string = '**{0}**'.format(text.center(screen_width -4)) print(output_string) section 5: dictionaries and setsdictionarya collection of values, that are stored using a key Mapping Types — dictA mapping object maps hashable values to arbitrary objects. Mappings are mutable objects. There is currently only one standard mapping type, the dictionary dictionaries are indexed by keys, which can be any immutable type; strings and numbers can always be keys. Tuples can be used as keys if they contain only strings, numbers, or tuples; if a tuple contains any mutable object either directly or indirectly, it cannot be used as a key. You can’t use lists as keys, since lists can be modified in place using index assignments, slice assignments, or methods like append() and extend(). hashable: an object is hashable if it has a hash value that doesn’t change during its lifetime and can be compared to other objects. In practice, it means that to be hashable objects need methods __hash__() and __eq__() . 1234567891011121314151617181920212223vehicles = { 'dream': 'Honda 250T', 'roadster': 'BMW R1100', 'er5': 'Kawasaki ER5', 'can-am': 'Bombardier Can-Am 250', 'virago': 'Yamaha XV250', 'tenere': 'Yamaha XT650', 'jmny': 'Suzuki Jimny 1.5', 'fiesta': 'Ford Fiesta Ghia 1.4',}my_car = vehicles['fiesta']print(my_car) # 'Ford Fiesta Ghia 1.4'computer = vehicles['virago']# computer = vehicles['Virago'] # KeyError: 'Virago'print(computer) # 'Yamaha XV250'# def get(self, __key: _KT) -&gt; _VT | None# Return the value for key if key is in the dictionary, else default.learner = vehicles.get('er5') # 'Kawasaki ER5'learner = vehicles.get('ER5') # Noneprint(learner) hash tablehash is one way 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051data = [ ('orange', 'a sweet, orange, citrus fruit'), ('apple', 'good for making cider'), ('lemon', 'a sour, yellow citrus fruit'), ('grape', 'a small, sweet fruit growing in bunches'), ('melon', 'sweet and juicy'),]# def ord(__c: str | bytes | bytearray) -&gt; int# Return the Unicode code point for a one-character string# print(ord('a')) # 97def simple_hash(s: str) -&gt; int: basic_hash = ord(s[0]) return basic_hash % 10def get(k: str) -&gt; str: hash_code = simple_hash(k) if values[hash_code]: return values[hash_code] else: return None# for key, value in data:# # print(key, simple_hash((key)))# h = hash(key)# print(key, h)keys = [''] * 10 # ['', '', '', '', '', '', '', '', '', '']values = keys.copy()for key, value in data: h = simple_hash(key) print(key, h) keys[h] = key values[h] = valueprint(keys) # ['', 'orange', '', 'grape', '', '', '', 'apple', 'lemon', 'melon']print(values) # ['', 'a sweet, orange, citrus fruit', '', 'a small, sweet fruit growing in bunches', '', '', '', 'good for making cider', 'a sour, yellow citrus fruit', 'sweet and juicy']print()value = get('lemon')print(value) # a sour, yellow citrus fruitvalue = get('tomato')print(value) # None### hash value collosionvalue = get('banana')print(value) # a sour, yellow citrus fruit iterate a dictwhen iterate over a dictionary with python 3.7 and above, the keys will appear in the order they were added to the dictionary 12345678910111213141516171819vehicles = { 'dream': 'Honda 250T', 'roadster': 'BMW R1100', 'er5': 'Kawasaki ER5', 'can-am': 'Bombardier Can-Am 250', 'virago': 'Yamaha XV250', 'tenere': 'Yamaha XT650', 'jmny': 'Suzuki Jimny 1.5', 'fiesta': 'Ford Fiesta Ghia 1.4',}# for key in vehicles:# print(key, vehicles[key], sep=', ')## more efficient# def items(self) -&gt; dict_items[_KT, _VT]# D.items() -&gt; a set-like object providing a view on D's itemsfor key, value in vehicles.items(): print(key, value, sep=', ') add item123456789101112131415vehicles = { 'dream': 'Honda 250T', 'roadster': 'BMW R1100',vehicles['starfighter'] = 'Lockheed F-104'vehicles['learjet'] = 'Bombardier Learjet 75'# dream, Honda 250T# roadster, BMW R1100# starfighter, Lockheed F-104# learjet, Bombardier Learjet 75for key, value in vehicles.items(): print(key, value, sep=', ') changing value in a dict123456789101112131415161718192021vehicles = { 'dream': 'Honda 250T', 'roadster': 'BMW R1100', ### duplicated 'er5': 'Kawasaki ER5', 'can-am': 'Bombardier Can-Am 250', 'virago': 'Yamaha XV250', 'roadster': 'Triumph Street Triple',}vehicles['virago'] = 'Yamaha XV535'# dream, Honda 250T# roadster, Triumph Street Triple !!!! duplicated# er5, Kawasaki ER5# can-am, Bombardier Can-Am 250# virago, Yamaha XV535 !!!! changedfor key, value in vehicles.items(): print(key, value, sep=', ') delete item from a dict1234567891011121314151617181920212223242526vehicles = { 'dream': 'Honda 250T', 'er5': 'Kawasaki ER5', 'can-am': 'Bombardier Can-Am 250', 'virago': 'Yamaha XV250',}del vehicles['virago']# dream, Honda 250T# er5, Kawasaki ER5# can-am, Bombardier Can-Am 250for key, value in vehicles.items(): print(key, value, sep=', ')# KeyError: 'notexist'# del vehicles['notexist']# vehicles.pop('f1') # KeyError: 'f1'# D.pop(k[,d]) -&gt; v, remove specified key and return the corresponding value.# If the key is not found, return the default if given; otherwise, raise a KeyError.result = vehicles.pop('f1', None)print(result) use in to a dict12345678910111213141516171819202122available_parts = { '1': 'computer', '2': 'monitor', '3': 'keyboad', '4': 'mouse', '5': 'hdmi cable', '6': 'dvd drive',}current_choice = Nonewhile current_choice != '0': if current_choice in available_parts: # if current_choice in available_parts.keys(): chosen_part = available_parts[current_choice] print(f&quot;Adding {chosen_part}&quot;) else: print(&quot;Please add options from the list&quot;) for index, part in available_parts.items(): print(index, part, sep=': ') print(&quot;0: to finish&quot;) current_choice = input(&quot;&gt; &quot;) setdefault()123456def add_shopping_item(data: dict, item: str, amount: int) -&gt; None: # if item in dict: # dict[item] += amount # else: # dict[item] = amount data[item] = data.setdefault(item, 0) + amount 1234567891011121314pantry = { 'chicken': 500,}chicken_quantity = pantry.setdefault('chicken', 0)print(f&quot;chicken: {chicken_quantity}&quot;) # chicken: 500print(pantry) # {'chicken': 500}beans_quantity = pantry.setdefault('beans', 0)print(f&quot;chicken: {beans_quantity}&quot;) # chicken: 0print(pantry) # {'chicken': 500, 'beans': 0}z_quantity = pantry.setdefault('zucchini', 'eight')print(f&quot;zucchini: {z_quantity}&quot;) # zucchini: eight enumerate(dict)12345678910111213141516171819202122recipes = { 'Egg sandwich': [ 'egg', 'bread', 'butter', ], 'Beans on toast': [ 'beans', 'bread', ], 'Span a la tin': [ 'spam', 'tin opener', 'spoon', ],}# 0 Egg sandwich# 1 Beans on toast# 2 Span a la tinfor index, key in enumerate(recipes): print(index, key) dict example123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263pantry = { &quot;chicken&quot;: 500, &quot;lemon&quot;: 2, &quot;cumin&quot;: 24, &quot;paprika&quot;: 18, &quot;chilli powder&quot;: 7, &quot;yogurt&quot;: 300, &quot;oil&quot;: 450, &quot;onion&quot;: 5, &quot;garlic&quot;: 9, &quot;ginger&quot;: 2, &quot;tomato puree&quot;: 125, &quot;almonds&quot;: 75, &quot;rice&quot;: 500, &quot;coriander&quot;: 20, &quot;lime&quot;: 3, &quot;pepper&quot;: 8, &quot;egg&quot;: 6, &quot;pizza&quot;: 2, &quot;spam&quot;: 1,}recipes = { &quot;Butter chicken&quot;: { 'chicken': 1, 'lemon': 1, 'cumin': 1, 'paprika': 1, 'chilli powder': 1, 'yogurt': 1, 'oil': 1, 'garlic': 1, 'ginger': 1, 'tomato puree': 1, 'almonds': 1, 'rice': 1, 'coriander': 1, 'lime': 1, }, 'Chicken and chips': { 'chicken': 100, 'potatoes': 3, 'salt': 1, 'malt vinegar': 5, }, 'Pizza': { &quot;pizza&quot;: 1, }, 'Egg sandwich': { 'egg': 2, 'bread': 80, 'butter': 10, }, 'Beans on toast': { 'beans': 1, 'bread': 40, }, 'Span a la tin': { 'spam': 1, 'tin opener': 1, 'spoon': 1, },} 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253from contents import pantry, recipesprint(pantry, recipes)def add_shopping_item(data: dict, item: str, amount: int) -&gt; None: # if item in dict: # dict[item] += amount # else: # dict[item] = amount data[item] = data.setdefault(item, 0) + amountdisplay_dict = {}for index, key in enumerate(recipes): print(index, key) display_dict[str(index + 1)] = keyprint(display_dict)items_to_buy = {}while True: print(f&quot;Please choose your recipe&quot;) for key, value in display_dict.items(): print(f&quot;{key} - {value}&quot;) choice = input(&quot;: &quot;) if choice == '0': break elif choice in display_dict: select_item = display_dict[choice] print(f&quot;You have selected {select_item}&quot;) print(&quot;checking ingredients...&quot;) ingredients = recipes[select_item] # print(ingredients) for ingredient, required_quantity in ingredients.items(): quantity_in_pantry = pantry.get(ingredient, 0) if quantity_in_pantry &gt;= required_quantity: print(f&quot;\\t{ingredient} OK&quot;) pantry[ingredient] -= required_quantity else: quantity_to_buy = required_quantity - quantity_in_pantry print(f&quot;\\tYou need to buy {quantity_to_buy} of {ingredient}&quot;) add_shopping_item(items_to_buy, ingredient, quantity_to_buy) if ingredient in pantry: pantry[ingredient] -= 0for key, value in pantry.items(): print(f&quot;there is {key} of {value}&quot;)for key, value in items_to_buy.items(): print(f&quot;buy {key} of {value}&quot;) dict methodsdef fromkeys(cls, __iterable: Iterable[_T], __value: None = None) -&gt; dict[_T, Any | None]Create a new dictionary with keys from iterable and values set to value. 123456789101112131415161718192021222324252627d = { 0: 'zero', 1: 'one', 2: 'two', 3: 'three', 4: 'four', 5: 'five', 6: 'six', 7: 'seven', 8: 'eight', 9: 'nine',}pantry_items = ['chicken', 'spam', 'egg', 'bread', 'lemon']new_dict = dict.fromkeys(pantry_items)# {'chicken': None, 'spam': None, 'egg': None, 'bread': None, 'lemon': None}print(new_dict)new_dict = dict.fromkeys(pantry_items, 0)# {'chicken': 0, 'spam': 0, 'egg': 0, 'bread': 0, 'lemon': 0}print(new_dict)keys = d.keys()print(keys, type(keys)) # dict_keys([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]) &lt;class 'dict_keys'&gt;# for item in d:for item in d.keys(): print(item) update()update([other])Update the dictionary with the key/value pairs from other, overwriting existing keys. Return None. update() accepts either another dictionary object or an iterable of key/value pairs (as tuples or other iterables of length two). If keyword arguments are specified, the dictionary is then updated with those key/value pairs: d.update(red=1, blue=2). 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354d = { 0: 'zero', 1: 'one', 2: 'two', 3: 'three', 4: 'four', 5: 'five', 6: 'six', 7: 'seven', 8: 'eight', 9: 'nine',}pantry_items = ['chicken', 'spam', 'egg', 'bread', 'lemon']d2 = { 7: 'lucky seven', 10: 'tem', 3: 'this is the new three',}d.update(d2)# 0 zero# 1 one# 2 two# 3 this is the new three ## changed# 4 four# 5 five# 6 six# 7 lucky seven ## changed# 8 eight# 9 nine# 10 tem ## newfor key, value in d.items(): print(key, value)print()# 0 chicken ## changed# 1 spam ## changed# 2 egg ## changed# 3 bread ## changed# 4 lemon ## changed# 5 five# 6 six# 7 lucky seven# 8 eight# 9 nine# 10 temd.update(enumerate(pantry_items))for key, value in d.items(): print(key, value) values() keys() items()Dictionary view objectsThe objects returned by dict.keys(), dict.values() and dict.items() are view objects. They provide a dynamic view on the dictionary’s entries, which means that when the dictionary changes, the view reflects these changes. Dictionary views can be iterated over to yield their respective data, and support membership tests: 1234567891011121314151617181920212223242526272829303132333435363738d = { 0: 'zero', 1: 'one', 2: 'two', 3: 'three', 4: 'four', 5: 'five', 6: 'six', 7: 'seven', 8: 'eight', 9: 'nine',}pantry_items = ['chicken', 'spam', 'egg', 'bread', 'lemon']v = d.values()print(v, type(v)) # dict_values(['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']) &lt;class 'dict_values'&gt;d[10] = 'ten' # dict_values(['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten'])print(v)print(&quot;four&quot; in v) # Trueprint(&quot;elven&quot; in v) # False## not efficientkeys = list(d.keys())values = list(d.values())if &quot;four&quot; in values: index = values.index(&quot;four&quot;) key = keys[index] print(f&quot;{d[key]} was found with the key {key}&quot;)print()for key, value in d.items(): if value == &quot;four&quot;: print(f&quot;{d[key]} was found with the key {key}&quot;) shallow copy copy()12345678910111213141516171819202122232425262728# animals = {# 'lion': 'scary',# 'elephant': 'big',# 'teddy': 'cuddly',# }## # things = animals# # animals['teddy'] = 'toy'# # print(things['teddy']) # toy## things = animals.copy()# animals['teddy'] = 'toy'# print(things['teddy']) # cuddly# print(animals['teddy']) # toyanimals = { 'lion': ['scary', 'big', 'cat'], 'elephant': ['big', 'grey', 'wrinkled'], 'teddy': ['cuddly', 'stuffed'],}things = animals.copy()print(things['teddy']) # ['cuddly', 'stuffed']print(animals['teddy']) # ['cuddly', 'stuffed']things['teddy'].append('toy')print(things['teddy']) # ['cuddly', 'stuffed', 'toy']print(animals['teddy']) # ['cuddly', 'stuffed', 'toy'] 12345678910111213141516171819202122232425262728lion_list = ['scary', 'big', 'cat']teddy_list = ['cuddly', 'stuffed']elephant_list = ['big', 'grey', 'wrinkled']animals = { 'lion': lion_list, 'elephant': elephant_list, 'teddy': teddy_list,}things = animals.copy()# things = {# 'lion': lion_list,# 'elephant': elephant_list,# 'teddy': teddy_list,# }print(things['teddy']) # ['cuddly', 'stuffed']print(animals['teddy']) # ['cuddly', 'stuffed']things['teddy'].append('toy')# teddy_list.append('toy')print(things['teddy']) # ['cuddly', 'stuffed', 'toy']print(animals['teddy']) # ['cuddly', 'stuffed', 'toy']animals['teddy'].append('added via `animals`')things['teddy'].append('added via `things`')print(things['teddy']) # ['cuddly', 'stuffed', 'toy', 'added via `animals`', 'added via `things`']print(animals['teddy']) # ['cuddly', 'stuffed', 'toy', 'added via `animals`', 'added via `things`'] deepcopy 12345678910111213141516171819202122232425262728import copyanimals = { 'lion': ['scary', 'big', 'cat'], 'elephant': ['big', 'grey', 'wrinkled'], 'teddy': ['cuddly', 'stuffed'],}# ## shllow copy# things = animals.copy()# # print(things['teddy'], id(things['teddy'])) # ['cuddly', 'stuffed'] 3016496911360# print(animals['teddy'], id(things['teddy'])) # ['cuddly', 'stuffed'] 3016496911360# # things['teddy'].append('toy')# print(things['teddy']) # ['cuddly', 'stuffed', 'toy']# print(animals['teddy']) # ['cuddly', 'stuffed', 'toy']## deep copythings = copy.deepcopy(animals)print(things['teddy'], id(things['teddy'])) # ['cuddly', 'stuffed'] 2759661916928print(animals['teddy'], id(animals['teddy'])) # ['cuddly', 'stuffed'] 2759661917184things['teddy'].append('toy')print(things['teddy']) # ['cuddly', 'stuffed', 'toy']print(animals['teddy']) # ['cuddly', 'stuffed'] 123456789101112131415161718192021222324import contents### two leveldef my_deepcopy(d: dict) -&gt; dict: copy_d = {} for key, value in d.items(): # if type(value) == dict: # copy_d[key] = {} # for k, v in value.items(): # copy_d[key][k] = v # elif type(value) == list: # copy_d[key] = [] # for item in value: # copy_d[key].append(item) # else: # copy_d[key] = value new_value = value.copy() copy_d[key] = new_value return copy_drecipes_copy = my_deepcopy(contents.recipes)recipes_copy['Butter chicken']['ginger'] = 300print(recipes_copy['Butter chicken']['ginger'])print(contents.recipes['Butter chicken']['ginger']) sethttps://docs.python.org/3/library/stdtypes.html#set an unordered collection of things. there is no wary to retrieve a specific titme from a set item must be hashble 123456789101112131415161718192021222324252627282930313233farm_animals = {'cow', 'sheep', 'hen', 'goat', 'horse'}print(farm_animals) # {'horse', 'sheep', 'goat', 'hen', 'cow'}print(type(farm_animals)) # &lt;class 'set'&gt;## sheep# hen# cow# goat# horsefor animal in farm_animals: print(animal)# goat# cow# sheep# hen# horsefor animal in farm_animals: print(animal)# print('Indexing a set is not possible')## Class 'set' does not define '__getitem__', so the '[]' operator cannot be used on its instances# goat = farm_animals[3] # TypeError: 'set' object is not subscriptable# print(goat)more_animals = {'sheep', 'goat', 'cow', 'horse', 'hen'}# The sets are equalif more_animals == farm_animals: print('The sets are equal') set(), test for membership ‘in’set(iterable) -&gt; new set objectBuild an unordered collection of unique elements. set(“12345”)set(range(1, 5, 2)) 123456789101112131415161718192021222324options = ['1. Learn Python', '2. Learn Java', '3. Go swimming', '4. Have dinner', '5. Go to bed', '0. Exit']choose = '-'while choose != '0': # choose = int(input()) # # if 1 &lt;= choose &lt;= 5: # print(options[choose - 1]) # if choose in '12345': ## have bug if '123' # if choose in list('12345'): ## set more effecient # print(set(&quot;12345&quot;)) # {'4', '2', '5', '1', '3'} # if choose in set('12345'): if choose in {'4', '2', '5', '1', '3'}: print(options[int(choose) - 1]) else: print(&quot;Please choose your option from the list below:&quot;) for option in options: print(option) choose = input()else: print(&quot;Game over&quot;) modify set123456789101112131415numbers = {}print(type(numbers)) # &lt;class 'dict'&gt;# numbers = {*''}# print(numbers, type(numbers)) # set() &lt;class 'set'&gt;numbers = set()numbers.add(1)print(numbers) # {1}while len(numbers) &lt; 4: next_value = int(input(&quot;Please enter your next value: &quot;)) numbers.add(next_value)print(numbers remove items123456789101112131415161718192021222324small_ints = set(range(21))print(small_ints) # {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}# small_ints.clear()# print(small_ints) # set()# def remove(self, __element: _T) -&gt; None# Remove an element from a set; it must be a member.# If the element is not a member, raise a KeyErrorsmall_ints.remove(10)small_ints.discard(11)print(small_ints) # {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20}# def discard(self, __element: _T) -&gt; None# Remove an element from a set if it is a member.# Unlike set.remove(), the discard() method does not raise an exception when an element is missing from the set.small_ints.discard(99)print(small_ints)# small_ints.remove(98) # KeyError: 98# print(small_ints) discard()123456789101112131415161718192021222324252627282930313233343536373839travel_mode = {'1': 'car', '2': 'plane'}items = { 'can openner', 'scissors', 'razor', 'knife', 'razor blades', 'mug', 'tent', 'stove', 'socks (3 pairs)', 'stove',}restricted_items = { 'catapult', 'fuel', 'gun', 'knife', 'razor blades', 'scissors', 'shampoo',}print(&quot;Please choose your mode of travel: &quot;)for key, value in travel_mode.items(): print(f&quot;{key}: {value}&quot;)mode = &quot;-&quot;while mode not in travel_mode: mode = input(&quot;&gt; &quot;)if mode == '2': for restricted_item in restricted_items: items.discard(restricted_item)print(&quot;You need to pack:&quot;)for item in sorted(items): print(item) remove()123456789101112131415161718192021222324from prescription_data import *# trial_patients = ['Denise', 'Eddie', 'Frank', 'Georgia']trial_patients = ['Denise', 'Eddie', 'Frank', 'Georgia', 'Kenny']for patient in trial_patients: prescription = patients[patient] if warfarin in prescription: prescription.remove(warfarin) prescription.add(edoxaban) else: print('dont have warfarin') prescription.add(edoxaban)## more efficientfor patient in trial_patients: prescription = patients[patient] try: prescription.remove(warfarin) prescription.add(edoxaban) except KeyError: print('dont have warfarin') prescription.add(edoxaban) union, intersection, difference(substract), symmetric differectsubsetusing set to remove duplicate values: converting a list to a set12345678910111213data = ['blue', 'red', 'blue', 'green', 'red', 'blue', 'white']unique_data = sorted(set(data))print(unique_data) # ['blue', 'green', 'red', 'white']## create a list of unique colours, keeping the order they appear# def fromkeys(cls,# __iterable: Iterable[_T],# __value: None = None) -&gt; dict[_T, Any | None]# Create a new dictionary with keys from iterable and values set to value# print(dict.fromkeys(data)) # {'blue': None, 'red': None, 'green': None, 'white': None}unique_data = list(dict.fromkeys(data)) # ['blue', 'red', 'green', 'white']print(unique_data) list comprehension1234567891011121314numbers = &quot;12,165,425,365,254&quot;numbers_list = numbers.split(',')print(numbers_list) # ['12', '165', '425', '365', '254']## create a new listnumbers_int = []for number in numbers_list: numbers_int.append(int(number))print(numbers_int)# replace the values in placefor index in range(len(numbers_list)): numbers_list[index] = int(numbers_list[index])print(numbers_list)","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/python/Learn-Python-Programming-Masterclass/"},{"title":"","text":"pip install jupyterlab Start JupyterLab using: jupyter lab Using Jupyter Notebook in Virtual Environmentstep 1 Creation of virtual environments is done by executing the command venv: python -m venv /path/to/new/virtual/environment Step 2: Activate the virtual environment Now as we have our virtual environment let’s activate it. venv\\Scripts\\activate venv\\Scripts\\Activate.ps1 cannot be loaded because running scripts is disabled on this system. According to Microsoft Tech Support it might be a problem with Execution Policy Settings. To fix it, you should try executing Set-ExecutionPolicy Unrestricted -Scope Process (as mentioned in the comment section by @wtsiamruk) in your PowerShell window. This would allow running virtualenv in the current PowerShell session. Step 3: Install jupyter kernel for the virtual environment using the following command: Running the following command will create a kernel that can be used to run jupyter notebook commands inside the virtual environment. ipython kernel install --user --name=venv Step 4: Select the installed kernel when you want to use jupyter notebook in this virtual environment","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/python/jupyter_lab/"},{"title":"python web scraping","text":"httpuri url URL stands for Uniform Resource Locator. A URL is nothing more than the address of a given unique resource on the Web. In theory, each valid URL points to a unique resource. http https tls/ssl Transport Layer Security (TLS) is a cryptographic protocol designed to provide communications security over a computer network. The protocol is widely used in applications such as email, instant messaging, and voice over IP, but its use in securing HTTPS remains the most publicly visible. TLS builds on the now-deprecated SSL (Secure Sockets Layer) specifications (1994, 1995, 1996) chrome developer toolnetwork Status. The HTTP response code. Type. The resource type. Initiator. What caused a resource to be requested. Clicking a link in the Initiator column takes you to the source code that caused the request. Time. How long the request took. Waterfall. A graphical representation of the different stages of the request. Hover over a Waterfall to see a breakdown. detail The Headers tab is shown. Use this tab to inspect HTTP headers. the Preview tab. A basic rendering of the HTML is shown. the Response tab. The HTML source code is shown. the Timing tab. A breakdown of the network activity for this resource is shown. http request headercontent-type: internet media type MIMEHTML –&gt; text/htmlGIF –&gt; image/gifJSON –&gt; application/jsonxml –&gt; text/xmlform file –&gt; multipart/form-dataform data –&gt; application/x-www-form-urlencoded http response Information responses100 ContinueThis interim response indicates that the client should continue the request or ignore the response if the request is already finished. 101 Switching ProtocolsThis code is sent in response to an Upgrade request header from the client and indicates the protocol the server is switching to. 102 Processing (WebDAV)This code indicates that the server has received and is processing the request, but no response is available yet. 103 Early HintsThis status code is primarily intended to be used with the Link header, letting the user agent start preloading resources while the server prepares a response or preconnect to an origin from which the page will need resources. Successful responses200 OKThe request succeeded. The result meaning of “success” depends on the HTTP method: GET: The resource has been fetched and transmitted in the message body.HEAD: The representation headers are included in the response without any message body.PUT or POST: The resource describing the result of the action is transmitted in the message body.TRACE: The message body contains the request message as received by the server.201 CreatedThe request succeeded, and a new resource was created as a result. This is typically the response sent after POST requests, or some PUT requests. 202 AcceptedThe request has been received but not yet acted upon. It is noncommittal, since there is no way in HTTP to later send an asynchronous response indicating the outcome of the request. It is intended for cases where another process or server handles the request, or for batch processing. 203 Non-Authoritative InformationThis response code means the returned metadata is not exactly the same as is available from the origin server, but is collected from a local or a third-party copy. This is mostly used for mirrors or backups of another resource. Except for that specific case, the 200 OK response is preferred to this status. 204 No ContentThere is no content to send for this request, but the headers may be useful. The user agent may update its cached headers for this resource with the new ones. 205 Reset ContentTells the user agent to reset the document which sent this request. 206 Partial ContentThis response code is used when the Range header is sent from the client to request only part of a resource. 207 Multi-Status (WebDAV)Conveys information about multiple resources, for situations where multiple status codes might be appropriate. 208 Already Reported (WebDAV)Used inside a dav:propstat response element to avoid repeatedly enumerating the internal members of multiple bindings to the same collection. 226 IM Used (HTTP Delta encoding)The server has fulfilled a GET request for the resource, and the response is a representation of the result of one or more instance-manipulations applied to the current instance. Redirection messages300 Multiple ChoicesThe request has more than one possible response. The user agent or user should choose one of them. (There is no standardized way of choosing one of the responses, but HTML links to the possibilities are recommended so the user can pick.) 301 Moved PermanentlyThe URL of the requested resource has been changed permanently. The new URL is given in the response. 302 FoundThis response code means that the URI of requested resource has been changed temporarily. Further changes in the URI might be made in the future. Therefore, this same URI should be used by the client in future requests. 303 See OtherThe server sent this response to direct the client to get the requested resource at another URI with a GET request. 304 Not ModifiedThis is used for caching purposes. It tells the client that the response has not been modified, so the client can continue to use the same cached version of the response. 305 Use Proxy DeprecatedDefined in a previous version of the HTTP specification to indicate that a requested response must be accessed by a proxy. It has been deprecated due to security concerns regarding in-band configuration of a proxy. 306 unusedThis response code is no longer used; it is just reserved. It was used in a previous version of the HTTP/1.1 specification. 307 Temporary RedirectThe server sends this response to direct the client to get the requested resource at another URI with the same method that was used in the prior request. This has the same semantics as the 302 Found HTTP response code, with the exception that the user agent must not change the HTTP method used: if a POST was used in the first request, a POST must be used in the second request. 308 Permanent RedirectThis means that the resource is now permanently located at another URI, specified by the Location: HTTP Response header. This has the same semantics as the 301 Moved Permanently HTTP response code, with the exception that the user agent must not change the HTTP method used: if a POST was used in the first request, a POST must be used in the second request. Client error responses400 Bad RequestThe server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing). 401 UnauthorizedAlthough the HTTP standard specifies “unauthorized”, semantically this response means “unauthenticated”. That is, the client must authenticate itself to get the requested response. 402 Payment Required ExperimentalThis response code is reserved for future use. The initial aim for creating this code was using it for digital payment systems, however this status code is used very rarely and no standard convention exists. 403 ForbiddenThe client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client’s identity is known to the server. 404 Not FoundThe server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web. 405 Method Not AllowedThe request method is known by the server but is not supported by the target resource. For example, an API may not allow calling DELETE to remove a resource. 406 Not AcceptableThis response is sent when the web server, after performing server-driven content negotiation, doesn’t find any content that conforms to the criteria given by the user agent. 407 Proxy Authentication RequiredThis is similar to 401 Unauthorized but authentication is needed to be done by a proxy. 408 Request TimeoutThis response is sent on an idle connection by some servers, even without any previous request by the client. It means that the server would like to shut down this unused connection. This response is used much more since some browsers, like Chrome, Firefox 27+, or IE9, use HTTP pre-connection mechanisms to speed up surfing. Also note that some servers merely shut down the connection without sending this message. 409 ConflictThis response is sent when a request conflicts with the current state of the server. 410 GoneThis response is sent when the requested content has been permanently deleted from server, with no forwarding address. Clients are expected to remove their caches and links to the resource. The HTTP specification intends this status code to be used for “limited-time, promotional services”. APIs should not feel compelled to indicate resources that have been deleted with this status code. 411 Length RequiredServer rejected the request because the Content-Length header field is not defined and the server requires it. 412 Precondition FailedThe client has indicated preconditions in its headers which the server does not meet. 413 Payload Too LargeRequest entity is larger than limits defined by server. The server might close the connection or return an Retry-After header field. 414 URI Too LongThe URI requested by the client is longer than the server is willing to interpret. 415 Unsupported Media TypeThe media format of the requested data is not supported by the server, so the server is rejecting the request. 416 Range Not SatisfiableThe range specified by the Range header field in the request cannot be fulfilled. It’s possible that the range is outside the size of the target URI’s data. 417 Expectation FailedThis response code means the expectation indicated by the Expect request header field cannot be met by the server. 418 I’m a teapotThe server refuses the attempt to brew coffee with a teapot. 421 Misdirected RequestThe request was directed at a server that is not able to produce a response. This can be sent by a server that is not configured to produce responses for the combination of scheme and authority that are included in the request URI. 422 Unprocessable Content (WebDAV)The request was well-formed but was unable to be followed due to semantic errors. 423 Locked (WebDAV)The resource that is being accessed is locked. 424 Failed Dependency (WebDAV)The request failed due to failure of a previous request. 425 Too Early ExperimentalIndicates that the server is unwilling to risk processing a request that might be replayed. 426 Upgrade RequiredThe server refuses to perform the request using the current protocol but might be willing to do so after the client upgrades to a different protocol. The server sends an Upgrade header in a 426 response to indicate the required protocol(s). 428 Precondition RequiredThe origin server requires the request to be conditional. This response is intended to prevent the ‘lost update’ problem, where a client GETs a resource’s state, modifies it and PUTs it back to the server, when meanwhile a third party has modified the state on the server, leading to a conflict. 429 Too Many RequestsThe user has sent too many requests in a given amount of time (“rate limiting”). 431 Request Header Fields Too LargeThe server is unwilling to process the request because its header fields are too large. The request may be resubmitted after reducing the size of the request header fields. 451 Unavailable For Legal ReasonsThe user agent requested a resource that cannot legally be provided, such as a web page censored by a government. Server error responses500 Internal Server ErrorThe server has encountered a situation it does not know how to handle. 501 Not ImplementedThe request method is not supported by the server and cannot be handled. The only methods that servers are required to support (and therefore that must not return this code) are GET and HEAD. 502 Bad GatewayThis error response means that the server, while working as a gateway to get a response needed to handle the request, got an invalid response. 503 Service UnavailableThe server is not ready to handle the request. Common causes are a server that is down for maintenance or that is overloaded. Note that together with this response, a user-friendly page explaining the problem should be sent. This response should be used for temporary conditions and the Retry-After HTTP header should, if possible, contain the estimated time before the recovery of the service. The webmaster must also take care about the caching-related headers that are sent along with this response, as these temporary condition responses should usually not be cached. 504 Gateway TimeoutThis error response is given when the server is acting as a gateway and cannot get a response in time. 505 HTTP Version Not SupportedThe HTTP version used in the request is not supported by the server. 506 Variant Also NegotiatesThe server has an internal configuration error: the chosen variant resource is configured to engage in transparent content negotiation itself, and is therefore not a proper end point in the negotiation process. 507 Insufficient Storage (WebDAV)The method could not be performed on the resource because the server is unable to store the representation needed to successfully complete the request. 508 Loop Detected (WebDAV)The server detected an infinite loop while processing the request. 510 Not ExtendedFurther extensions to the request are required for the server to fulfill it. 511 Network Authentication RequiredIndicates that the client needs to authenticate to gain network access. response header content-type:application/x-javascript –&gt; javascirpt file web 基础html css js html domdocument object model css selector Selector Example Example description .class .intro Selects all elements with class=”intro” .class1.class2 .name1.name2 Selects all elements with both name1 and name2 set within its class attribute .class1 .class2 .name1 .name2 Selects all elements with name2 that is a descendant of an element with name1 #id #firstname Selects the element with id=”firstname” * * Selects all elements element p Selects all &lt;p&gt; elements element.class p.intro Selects all &lt;p&gt; elements with class=”intro” element,element div, p Selects all &lt;div&gt; elements and all &lt;p&gt; elements element element div p Selects all &lt;p&gt; elements inside &lt;div&gt; elements element&gt;element div &gt; p Selects all &lt;p&gt; elements where the parent is a &lt;div&gt; element element+element div + p Selects the first &lt;p&gt; element that is placed immediately after &lt;div&gt; elements element1~element2 p ~ ul Selects every &lt;ul&gt; element that is preceded by a &lt;p&gt; element [attribute] [target] Selects all elements with a target attribute [attribute=value] [target=”_blank”] Selects all elements with target=”_blank” [attribute~=value] [title~=”flower”] Selects all elements with a title attribute containing the word “flower” [attribute|=value] [lang|=”en”] Selects all elements with a lang attribute value equal to “en” or starting with “en-“ [attribute^=value] a[href^=”https”] Selects every &lt;a&gt; element whose href attribute value begins with “https” [attribute$=value] a[href$=”.pdf”] Selects every &lt;a&gt; element whose href attribute value ends with “.pdf” [attribute*=value] a[href*=”w3schools”] Selects every &lt;a&gt; element whose href attribute value contains the substring “w3schools” :active a:active Selects the active link ::after p::after Insert something after the content of each &lt;p&gt; element ::before p::before Insert something before the content of each &lt;p&gt; element :checked input:checked Selects every checked &lt;input&gt; element :default input:default Selects the default &lt;input&gt; element :disabled input:disabled Selects every disabled &lt;input&gt; element :empty p:empty Selects every &lt;p&gt; element that has no children (including text nodes) :enabled input:enabled Selects every enabled &lt;input&gt; element :first-child p:first-child Selects every &lt;p&gt; element that is the first child of its parent ::first-letter p::first-letter Selects the first letter of every &lt;p&gt; element ::first-line p::first-line Selects the first line of every &lt;p&gt; element :first-of-type p:first-of-type Selects every &lt;p&gt; element that is the first &lt;p&gt; element of its parent :focus input:focus Selects the input element which has focus :fullscreen :fullscreen Selects the element that is in full-screen mode :hover a:hover Selects links on mouse over :in-range input:in-range Selects input elements with a value within a specified range :indeterminate input:indeterminate Selects input elements that are in an indeterminate state :invalid input:invalid Selects all input elements with an invalid value :lang(language) p:lang(it) Selects every &lt;p&gt; element with a lang attribute equal to “it” (Italian) :last-child p:last-child Selects every &lt;p&gt; element that is the last child of its parent :last-of-type p:last-of-type Selects every &lt;p&gt; element that is the last &lt;p&gt; element of its parent :link a:link Selects all unvisited links ::marker ::marker Selects the markers of list items :not(selector) :not(p) Selects every element that is not a &lt;p&gt; element :nth-child(n) p:nth-child(2) Selects every &lt;p&gt; element that is the second child of its parent :nth-last-child(n) p:nth-last-child(2) Selects every &lt;p&gt; element that is the second child of its parent, counting from the last child :nth-last-of-type(n) p:nth-last-of-type(2) Selects every &lt;p&gt; element that is the second &lt;p&gt; element of its parent, counting from the last child :nth-of-type(n) p:nth-of-type(2) Selects every &lt;p&gt; element that is the second &lt;p&gt; element of its parent :only-of-type p:only-of-type Selects every &lt;p&gt; element that is the only &lt;p&gt; element of its parent :only-child p:only-child Selects every &lt;p&gt; element that is the only child of its parent :optional input:optional Selects input elements with no “required” attribute :out-of-range input:out-of-range Selects input elements with a value outside a specified range ::placeholder input::placeholder Selects input elements with the “placeholder” attribute specified :read-only input:read-only Selects input elements with the “readonly” attribute specified :read-write input:read-write Selects input elements with the “readonly” attribute NOT specified :required input:required Selects input elements with the “required” attribute specified :root :root Selects the document’s root element ::selection ::selection Selects the portion of an element that is selected by a user :target #news:target Selects the current active #news element (clicked on a URL containing that anchor name) :valid input:valid Selects all input elements with a valid value :visited a:visited Selects all visited links 12345678from urllib.request import urlopenurl = &quot;http://www.baidu.com&quot;resp = urlopen(url)html_body = resp.read().decode(&quot;utf-8&quot;)with open(&quot;mybaidu.html&quot;, mode=&quot;w&quot;) as f: f.write(html_body)# resp.close() 服务器渲染 在没有AJAX的时候，也就是web1.0时代，几乎所有应用都是服务端渲染（此时服务器渲染非现在的服务器渲染），那个时候的页面渲染大概是这样的，浏览器请求页面URL，然后服务器接收到请求之后，到数据库查询数据，将数据丢到后端的组件模板（php、asp、jsp等）中，并渲染成HTML片段，接着服务器在组装这些HTML片段，组成一个完整的HTML，最后返回给浏览器，这个时候，浏览器已经拿到了一个完整的被服务器动态组装出来的HTML文本，然后将HTML渲染到页面中 客户端渲染前后端分离之后，网页开始被当成了独立的应用程序（SPA，Single Page Application），前端团队接管了所有页面渲染的事，后端团队只负责提供所有数据查询与处理的API，大体流程是这样的：首先浏览器请求URL，前端服务器直接返回一个空的静态HTML文件（不需要任何查数据库和模板组装），这个HTML文件中加载了很多渲染页面需要的 JavaScript 脚本和 CSS 样式表，浏览器拿到 HTML 文件后开始加载脚本和样式表，并且执行脚本，这个时候脚本请求后端服务提供的API，获取数据，获取完成后将数据通过JavaScript脚本动态的将数据渲染到页面中，完成页面显示。 服务端渲染服务端渲染。大体流程与客户端渲染有些相似，首先是浏览器请求URL，前端服务器接收到URL请求之后，根据不同的URL，前端服务器向后端服务器请求数据，请求完成后，前端服务器会组装一个携带了具体数据的HTML文本，并且返回给浏览器，浏览器得到HTML之后开始渲染页面，同时，浏览器加载并执行 JavaScript 脚本，给页面上的元素绑定事件，让页面变得可交互，当用户与浏览器页面进行交互，如跳转到下一个页面时，浏览器会执行 JavaScript 脚本，向后端服务器请求数据，获取完数据之后再次执行 JavaScript 代码动态渲染页面。 响应头 cookie token 请求头 user-agent referer请求从那一页面来的（即上一页面地址） cookie GETPOST 123456789101112import requestsurl =&quot;https://sogou.com/web?query=周杰伦&quot;my_headers = { &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36&quot;}resp = requests.get(url, headers=my_headers)print(resp)html_resp = resp.textprint(html_resp)resp.close() 12345678910import requestsurl = &quot;https://fanyi.baidu.com/sug&quot;word = input(&quot;english world: &quot;)dat = { &quot;kw&quot;: word}resp = requests.post(url, data=dat)print(resp.json())resp.close() stringthe most common string methods s.lower(), s.upper() – returns the lowercase or uppercase version of the string s.strip() – returns a string with whitespace removed from the start and end s.isalpha()/s.isdigit()/s.isspace()… – tests if all the string chars are in the various character classes s.startswith(‘other’), s.endswith(‘other’) – tests if the string starts or ends with the given other string s.find(‘other’) – searches for the given other string (not a regular expression) within s, and returns the first index where it begins or -1 if not found s.replace(‘old’, ‘new’) – returns a string where all occurrences of ‘old’ have been replaced by ‘new’ s.split(‘delim’) – returns a list of substrings separated by the given delimiter. The delimiter is not a regular expression, it’s just text. ‘aaa,bbb,ccc’.split(‘,’) -&gt; [‘aaa’, ‘bbb’, ‘ccc’]. As a convenient special case s.split() (with no arguments) splits on all whitespace chars. s.join(list) – opposite of split(), joins the elements in the given list together using the string as the delimiter. e.g. ‘—‘.join([‘aaa’, ‘bbb’, ‘ccc’]) -&gt; aaa—bbb—ccc str.rsplit(sep=None, maxsplit=-1)Return a list of the words in the string, using sep as the delimiter string. If maxsplit is given, at most maxsplit splits are done, the rightmost ones. If sep is not specified or None, any whitespace string is a separator. Except for splitting from the right, rsplit() behaves like split() which is described in detail below. str.split(sep=None, maxsplit=- 1)Return a list of the words in the string, using sep as the delimiter string. If maxsplit is given, at most maxsplit splits are done (thus, the list will have at most maxsplit+1 elements). If maxsplit is not specified or -1, then there is no limit on the number of splits (all possible splits are made). If sep is given, consecutive delimiters are not grouped together and are deemed to delimit empty strings (for example, '1,,2'.split(',') returns ['1', '', '2']). The sep argument may consist of multiple characters (for example, '1&lt;&gt;2&lt;&gt;3'.split('&lt;&gt;') returns['1', '2', '3']). Splitting an empty string with a specified separator returns [‘’]. Strings (Unicode vs bytes)To convert a regular Python string to bytes, call the encode() method on the string. Going the other direction, the byte string decode() method converts encoded plain bytes to a unicode string: 1234567&gt; ustring = 'A unicode \\u018e string \\xf1'&gt; b = ustring.encode('utf-8')&gt; bb'A unicode \\xc6\\x8e string \\xc3\\xb1' ## bytes of utf-8 encoding. Note the b-prefix.&gt; t = b.decode('utf-8') ## Convert bytes back to a unicode string&gt; t == ustring ## It's the same as the original, yay!True urllib1234567891011121314from urllib import requesturl_1 = 'http://www.baidu.com/'resp = request.urlopen(url_1)print(resp)real_url = resp.geturl()print(real_url) # http://www.baidu.com/resp_code = resp.getcode()print(resp_code) # 200html_source_bytes = resp.read() # 字节串html_source = html_source_bytes.decode() # 字符串print(html_source) urllib.request headers1234567891011121314from urllib import requesturl_1 = 'http://httpbin.org/get'my_header = { 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36'}req = request.Request(url=url_1, headers=my_header)resp = request.urlopen(req)html_source_bytes = resp.read() # 字节串html_source = html_source_bytes.decode() # 字符串print(html_source) urllib.parse.urlencode123456789101112131415161718# 对URL编码# https://www.baidu.com/s?wd=%E8%B5%B5%E4%B8%BD%E9%A2%96# https://www.baidu.com/s?wd=赵丽颖from urllib import parse, requesturl_1 = 'http://www.baidu.com/s?'params_1 = { 'wd': '赵丽颖', 'ie': 'utf-8',}# Encode a dict or sequence of two-element tuples into a URL query stringparams_encoded = parse.urlencode(params_1)url_0 = url_1 + params_encodedprint(url_0)# http://www.baidu.com/s?wd=%E8%B5%B5%E4%B8%BD%E9%A2%96&amp;ie=utf-8# request.urlopen(url_0) example: baidutieba1234567891011121314151617181920212223242526272829303132333435363738394041424344454647from urllib import request, parseimport timeimport randomclass BaiduTiebaSpider(): def __init__(self): self.base_url = 'https://tieba.baidu.com/f?' self.params = { &quot;kw&quot;: &quot;赵丽颖吧&quot;, &quot;ie&quot;: &quot;utf-8&quot;, &quot;pn&quot;: 0, } self.my_header = { 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36' } self.data_folder = 'baidutieba_data' def get_html(self, url): req = request.Request(url, headers=self.my_header) resp = request.urlopen(req) html_source = resp.read().decode() return html_source def parse_html(self): pass def save_html(self, filename, content): with open(filename, 'w') as f: f.write(content) def run(self): name = input('tieba name:') start_page = int(input('start page:')) end_page = int(input('end page:')) self.params['kw'] = name for page in range(start_page, end_page + 1): self.params['pn'] = (page -1) * 50 params_encode = parse.urlencode(self.params) url_0 = self.base_url + params_encode html_content = self.get_html(url_0) self.save_html(f'{self.data_folder}/{name}_page_{page}.html',html_content) print(f'page {page} finished!') time.sleep(random.randint(1, 3))if __name__ == '__main__': spider = BaiduTiebaSpider() spider.run() requestsimport requests headers123456headers = { 'User-Agent': '', 'Cookie': '',}requests.get(url, headers=headers) get123456789101112131415params = { 'key1': 'value1'}## verify = True ## False### timeout## proxiesproxies = { 'http': 'http://IP:PORT', 'https': 'https://IP:PORT',}resp = request(url, params=params, verify=False, timeout=5, proxies=proxies) post12345data = { 'key1': 'value1',}requests.post(url, data=data) response12345678910resp = requests.get(url)resp.decoding = &quot;utf-8&quot;resp.text ## htmlresp.content ## b'asdfdsf'resp.content.decode()resp.json() # json字符串 -&gt; python dictdic = json.loads(resp.text) # json字符串 -&gt; python dict 解析re Method/Attribute Purpose match()Determine if the RE matches at the beginning of the string. search()Scan through a string, looking for any location where this RE matches. findall()Find all substrings where the RE matches, and returns them as a list. finditer()Find all substrings where the RE matches, and returns them as an iterator. Match object instances group()Return the string matched by the RE Method/Attribute Purpose start()Return the starting position of the match end()Return the ending position of the match span()Return a tuple containing the (start, end) positions of the match Compilation flags let you modify some aspects of how regular expressions work. Flags are available in the re module under two names, a long name such as IGNORECASE and a short, one-letter form such as I re.Sre.DOTALLMakes the ‘.’ special character match any character at all, including a newline; without this flag, ‘.’ will match anything except a newline. named groups: instead of referring to them by numbers, groups can be referenced by a name.The syntax for a named group is one of the Python-specific extensions: (?P&lt;name&gt;...). name is, obviously, the name of the group. The match object methods that deal with capturing groups all accept either integers that refer to the group by number or strings that contain the desired group’s name. 123456p = re.compile(r'(?P&lt;word&gt;\\b\\w+\\b)')m = p.search( '(((( Lots of punctuation )))' )m.group('word')# 'Lots'm.group(1)# 'Lots' 1234import reresult_list = re.findall(r&quot;\\d+&quot;, &quot;我的电话号码是：10086&quot;)print(result_list) 效率不高 1234# iteratorit = re.finditer(r&quot;\\d+&quot;, &quot;我的电话号码是：10086&quot;)for i in it: print(i.group()) 123# match object group() return the first results = re.search(r&quot;\\d+&quot;, &quot;我的电话号码是：10086，我女友的电话是：10010&quot;)print(s.group()) 正则预加载 12345obj = re.compile(r&quot;\\d+&quot;)it = obj.finditer(&quot;10086，我女友的电话是：10010&quot;)for i in it: print(i.group()) 提取字符段 12345678910111213# 提取字符段s = &quot;&quot;&quot;&lt;div class='jay'&gt;&lt;span id='1'&gt;郭麒麟&lt;/span&gt;&lt;/div&gt;&lt;div class='jj'&gt;&lt;span id='2'&gt;宋铁&lt;/span&gt;&lt;/div&gt;&lt;div class='jolin'&gt;&lt;span id='3'&gt;大聪明&lt;/span&gt;&lt;/div&gt;&quot;&quot;&quot;# re.S 让.能匹配换行符obj = re.compile(r&quot;&lt;div class='.*?'&gt;&lt;span id='(?P&lt;id&gt;\\d+)'&gt;(?P&lt;name&gt;.*?)&lt;/span&gt;&lt;/div&gt;&quot;, re.S)result = obj.finditer(s)for it in result: print(it.group(&quot;name&quot;)) print(it.group(&quot;id&quot;)) Python 3 the file must be opened in untranslated text mode with the parameters 'w', newline=''(empty string) or it will write \\r\\r\\n on Windows, where the default text mode will translate each \\n into \\r\\n. 123456789import csvit = obj.finditer(html_content)with open(&quot;data05.csv&quot;, mode=&quot;w&quot;, newline='') as f: csvwriter = csv.writer(f) for i in it: dic = i.groupdict() dic[&quot;year&quot;] = dic['year'].strip() print(dic.values()) csvwriter.writerow(dic.values()) re123456789import recontent = 'ADBABDF ABVA BVAAB'r_list = re.findall(r'AB', content, re.S)print(r_list) # ['AB', 'AB', 'AB']re_pattern = re.compile(r'AB', re.S)result = re_pattern.findall(content)print(result) # ['AB', 'AB', 'AB'] “?”1234567891011121314html_content = &quot;&quot;&quot;&lt;div&gt;&lt;p&gt;hello world&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;p&gt;hello world!&lt;/p&gt;&lt;/div&gt;&quot;&quot;&quot;re_pattern_1 = re.compile(r'&lt;div&gt;&lt;p&gt;.*&lt;/p&gt;&lt;/div&gt;', re.S)result_1 = re_pattern_1.findall(html_content)print(result_1) # ['&lt;div&gt;&lt;p&gt;hello world&lt;/p&gt;&lt;/div&gt;\\n&lt;div&gt;&lt;p&gt;hello world!&lt;/p&gt;&lt;/div&gt;']re_pattern_2 = re.compile(r'&lt;div&gt;&lt;p&gt;.*?&lt;/p&gt;&lt;/div&gt;', re.S)result_2 = re_pattern_2.findall(html_content)print(result_2) # ['&lt;div&gt;&lt;p&gt;hello world&lt;/p&gt;&lt;/div&gt;', '&lt;div&gt;&lt;p&gt;hello world!&lt;/p&gt;&lt;/div&gt;'] group1234567891011121314html = 'A B C D'pattern = re.compile(r'\\w+\\s+\\w+')r_list = pattern.findall(html)print(r_list) # ['A B', 'C D']html = 'A B C D'pattern = re.compile(r'(\\w+)\\s+\\w+')r_list = pattern.findall(html)print(r_list) # ['A', 'C']html = 'A B C D'pattern = re.compile(r'(\\w+)\\s+(\\w+)')r_list = pattern.findall(html)print(r_list) # [('A', 'B'), ('C', 'D')] example123456789101112131415161718192021222324252627import rehtml = &quot;&quot;&quot;&lt;div class=&quot;animal&quot;&gt; &lt;p class=&quot;name&quot;&gt; &lt;a href=&quot;&quot; title=&quot;Tiger&quot;&gt;&lt;/a&gt; &lt;/p&gt; &lt;p class=&quot;content&quot;&gt; two tigers two tigers run fast &lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;animal&quot;&gt; &lt;p class=&quot;name&quot;&gt; &lt;a href=&quot;&quot; title=&quot;Rabbit&quot;&gt;&lt;/a&gt; &lt;/p&gt; &lt;p class=&quot;content&quot;&gt; small white rabbit white and white &lt;/p&gt;&lt;/div&gt;&quot;&quot;&quot;re_pattern = re.compile(r'&lt;div class=&quot;animal&quot;&gt;.*?&lt;a title=&quot;(.*?)&quot;.*?&lt;p class=&quot;content&quot;&gt;(.*?)&lt;/p&gt;.*?&lt;/div&gt;', re.S)tuple_s = re_pattern.findall(html)for t in tuple_s: result_1 = t[0] print(result_1) result_2 = t[1].strip() print(result_2) example: maoyan.com12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455import csvfrom urllib import requestimport reimport timeimport randomclass MaoyanSpider(): def __init__(self): self.base_url = 'https://movie.douban.com/top250?start=' self.start = &quot;0&quot;, self.my_header = { 'Referer': 'https://movie.douban.com/top250', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36' } self.data_folder = 'douban_data' self.f = open('douban_data/douban.csv', 'w', newline='') self.writer = csv.writer(self.f) # def get_html(self, url): req = request.Request(url, headers=self.my_header) resp = request.urlopen(req) html_source = resp.read().decode() return html_source def parse_html(self, html_content): regex = r&quot;&quot;&quot;&lt;div class=&quot;info&quot;&gt;.*?&lt;span class=&quot;title&quot;&gt;(?P&lt;title&gt;.*?)&lt;/span&gt;.*?&lt;p.*?&gt;(?P&lt;people&gt;.*?)&lt;br&gt;(?P&lt;meta_1&gt;.*?)&lt;/p&gt;.*?&lt;span class=&quot;rating_num&quot;.*?&gt;(?P&lt;stars&gt;.*?)&lt;/span&gt;.*?&lt;span&gt;(?P&lt;comments_n&gt;.*?)&lt;/span&gt;&quot;&quot;&quot; re_pattern =re.compile(regex, re.S) r_list = re_pattern.findall(html_content) return r_list def save_html(self, r_list): for r in r_list: l = [] for i in range(len(r)): l.append(r[i].strip()) self.writer.writerow(l) def run(self): for page in range(4): self.start = str(page * 25) url_0 = self.base_url + self.start html_content = self.get_html(url_0) r_list = self.parse_html(html_content) self.save_html(r_list) print(f'page {page} finished!') time.sleep(random.randint(1, 3)) self.f.close()if __name__ == '__main__': spider = MaoyanSpider() spider.run() 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667import csvfrom urllib import requestimport reimport timeimport randomclass MaoyanSpider(): def __init__(self): self.base_url = 'https://movie.douban.com/top250?start=' self.start = &quot;0&quot;, self.my_header = { 'Referer': 'https://movie.douban.com/top250', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36' } self.data_folder = 'douban_data' self.data = [] def get_html(self, url): req = request.Request(url, headers=self.my_header) resp = request.urlopen(req) html_source = resp.read().decode() return html_source def parse_html(self, html_content): regex = r&quot;&quot;&quot;&lt;div class=&quot;info&quot;&gt;.*?&lt;span class=&quot;title&quot;&gt;(?P&lt;title&gt;.*?)&lt;/span&gt;.*?&lt;p.*?&gt;(?P&lt;people&gt;.*?)&lt;br&gt;(?P&lt;meta_1&gt;.*?)&lt;/p&gt;.*?&lt;span class=&quot;rating_num&quot;.*?&gt;(?P&lt;stars&gt;.*?)&lt;/span&gt;.*?&lt;span&gt;(?P&lt;comments_n&gt;.*?)&lt;/span&gt;&quot;&quot;&quot; re_pattern =re.compile(regex, re.S) r_list = re_pattern.findall(html_content) for r in r_list: l = [] for i in range(len(r)): l.append(r[i].strip()) self.data.append(l) def save_html(self): # for r in r_list: # data_row = list(r) # print(data_row) # with open(filename, 'a', newline='') as f: # csv_writer = csv.writer(f) # csv_writer.writerow(data_row) # with open(filename, 'a', newline='') as f: # csv_writer = csv.writer(f) # csv_writer.writerows(r_list) with open('douban_data/douban.csv', 'w', newline='') as f: writer = csv.writer(f) writer.writerows(self.data) def run(self): for page in range(4): self.start = str(page * 25) url_0 = self.base_url + self.start html_content = self.get_html(url_0) self.parse_html(html_content) print(f'page {page} finished!') time.sleep(random.randint(1, 3)) self.save_html()if __name__ == '__main__': spider = MaoyanSpider() spider.run() example: baidu image12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364import os.pathimport reimport urllib.parseimport requestsimport timeimport randomclass BaiduImageSpider: def __init__(self): self.url = &quot;https://image.baidu.com/search/index?&quot; self.my_header = { 'Referer': 'https://www.baidu.com', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36' } self.cookies = { 'BIDUPSID': '08BC8B371D41816A15AD22D8AC4405C2', 'BDRCVFR[dG2JNJb_ajR]': 'mk3SLVN4HKm', 'BAIDUID': '08BC8B371D41816A13367C0125B857DA:FG=1', 'userFrom': 'null', 'BAIDUID_BFESS': '08BC8B371D41816A13367C0125B857DA:FG=1', 'BDRCVFR[-pGxjrCMryR]': 'mk3SLVN4HKm', 'ab_sr': '1.0.1_ZjRkZDI3ZDU5MTczYTFkMTNkMTZjM2ZiZDMxMWZiZDI3Y2M3ZTVlNTZlMjBhNDVkOWE0YmIzMzY3MjA2ZDNkYmU2NDU3ODIyYjkwZmExNWE5ZmM3NzI4ZTk3ZWU5MTQ3MTM5NzVlMTRhNThjNjYzYWRmMTcyZDAxOGMwZjM2MGE1YjE0ZjRmNzhkNzYyNGY1YWZkNTUxNDg2YTBmZTYyOA==', } self.n = 1 def run(self): key_word = input(&quot;keyword:&quot;) if not key_word: key_word = '赵丽颖' params = { &quot;tn&quot;: &quot;baiduimage&quot;, &quot;word&quot;: key_word, } params = urllib.parse.urlencode(params) url = f&quot;{self.url}{params}&quot; print(url) base_html = requests.get(url, headers=self.my_header, cookies=self.cookies) re_pattern_0 = re.compile(r&quot;'imgData'(.*?)'fcadData'&quot;, re.S) result_0 = re_pattern_0.search(base_html.text) re_pattern_1 = re.compile(r'&quot;thumbURL&quot;:.*?&quot;(.*?)&quot;.*?&quot;replaceUrl&quot;', re.S) thumb_url_list = re_pattern_1.findall(result_0.group()) for thumb_url in thumb_url_list: self.save_image(thumb_url, key_word) def save_image(self, url, key_word): print(url) resp = requests.get(url, headers=self.my_header, cookies=self.cookies) filename = f'{key_word}_{self.n}.jpg' directory_path = f'baidu_images/{key_word}/' if not os.path.exists(directory_path): os.makedirs(directory_path) with open(f&quot;{directory_path}{filename}&quot;, 'wb') as f: f.write(resp.content) self.n += 1 print(f&quot;{filename} downloaded&quot;) time.sleep(random.randint(1, 4))if __name__ == '__main__': spider = BaiduImageSpider() spider.run() lxml xpath123456789101112&lt;html&gt;&lt;head&gt; &lt;title&gt;My page&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h2&gt;Welcome to my page&lt;h2&gt; &lt;a href=&quot;www.example.com&quot;&gt;page&lt;/a&gt; &lt;p&gt;This is the first paragraph&lt;/p&gt; &lt;h2&gt;Hello World&lt;/h2&gt;&lt;/body&gt;&lt;/html&gt; For getting the text inside the &lt;p&gt; tag, XPath : html/body/p/text()Result : This is the first paragraph For getting a value inside the &lt;href&gt; attribute in the anchor or &lt;a&gt; tag, XPath : html/body/a/@hrefResult: www.example.com For getting the value inside the second &lt;h2&gt; tag, XPath : html/body/h2[2]/text()Result: Hello World 注意//h1/text()结果是个数组 Specifying a complete path with / as separatortitle = root.xpath('/html/body/div/div/div[2]/h1') is the full path to my blog title. Notice how we request the 2nd element of the third set of div elements using div[2] – xpath arrays are one-based, not zero-based. Specifying a path with wildcards using //This expression also finds the title but the preamble of /html/body/div/div is absorbed by the // wildcard match: title = root.xpath('//div[2]/h1') Specifying an element by attributeWe can select elements which have particular attribute values: tagcloud = root.xpath('//*[@class=&quot;tagcloud&quot;]') this selects the tag cloud on my blog by selecting elements which having the class attribute “tagcloud”. Select via a parent or sibling relationshipSometimes we want to select elements by their relationship to another element, for example: subtitle = root.xpath(‘//h1[contains(@class,”header_title”)]/../h2’) this selects the h1 title of my blog (SomeBeans) then navigates to the parent with .. and selects the sibling h2 element (the subtitle “the makings of a small casserole”). The same effect can be achieved with the following-sibling keyword: subtitle = root.xpath(‘//h1[contains(@class,”header_title”)]/following-sibling::h2’) 1234567891011121314151617from lxml import etreetree = etree.parse(&quot;data10.html&quot;)# result = tree.xpath(&quot;/html/body/ul/li[1]/a/text()&quot;) # the first is &quot;1&quot;# result = tree.xpath(&quot;/html/body/ol/li/a[@href='dapao']/text()&quot;) # the first is &quot;1&quot;# result = tree.xpath(&quot;/book/author//nick/text()&quot;)# result = tree.xpath(&quot;/book/author/*/nick/text()&quot;)print(result)result = tree.xpath(&quot;/html/body/ol/li&quot;) # the first is &quot;1&quot;for li in result: print(li.xpath(&quot;./a/text()&quot;)) print(li.xpath(&quot;./a/@href&quot;))print(result) The fromstring() functionThe fromstring() function is the easiest way to parse a string: some_xml_data = “data“ root = etree.fromstring(some_xml_data)print(root.tag)rootetree.tostring(root)b’data‘ The XML() functionThe XML() function behaves like the fromstring() function, but is commonly used to write XML literals right into the source: There is also a corresponding function HTML() for HTML literals. root = etree.HTML(&quot;&lt;p&gt;data&lt;/p&gt;&quot;) The parse() functionThe parse() function is used to parse from files and file-like objects. example123456from lxml import etreehtml = ''parse_html = etree.HTML(html)r_list = parse_html.xpath('//[@class=&quot;name&quot;]/text()')# div_list = parse_html.xpath('//[@class=&quot;name_1&quot;]/div')# r_list = div_list.xpath('.//[@class=&quot;name_2&quot;]/img/@src') xpath//tagnameat nay level of parent element//tagename[1]//tagname[@attributeName=&quot;value&quot;]contain()//tagname[contains(@attributeName,'value')]starts-with()and or//tagname[(expression 1)and(expression 2)] get text//h1/text() /the children//all the children within any level.current..parent*any elements css selector xpath: /html/body/pCSS selector: html &gt; body &gt; p Basic CSS Selectors Cheatsheet Selector Description Example Explanation Tag Selector Selects elements based on their tag name. p Selects all &lt;p&gt; elements. Class Selector Selects elements based on their class name. .example Selects all elements with the class name “example”. ID Selector Selects an element based on its ID. #example Selects the element with the ID “example”. Attribute Selector Selects elements based on their attribute and value. [type=”text”] Selects all elements with the attribute “type” and Descendant Selector Selects elements that are descendants of another element. div p Selects all &lt;p&gt; elements that are descendants of a &lt;div&gt; Child Selector Selects elements that are direct children of another element. ul &gt; li Selects all &lt;li&gt; elements that are direct children of a &lt;ul&gt; element. Pseudo-Class Selector Selects elements based on their state or position in the document. a:hover Selects all &lt;a&gt; elements when the mouse is There are many pseudo-class selectors, some of which are described in this table. Pseudo-class Selector Description :hover Selects an element when the mouse pointer :active Selects an element when it is being :visited Selects a link that has been visited by :focus Selects an element when it has focus (e.g. :first-child Selects the first child element of its :last-child Selects the last child element of its :nth-child(n) Selects the nth child element of its :nth-of-type(n) Selects the nth element of its type :last-of-type Selects the last occurrence of an The CSS expression below shows how to select the first div of the body element. html &gt; body &gt; div:nth-of-type(1) 1234567&lt;html&gt; &lt;body&gt; &lt;div&gt;This one&lt;/div&gt; &lt;div&gt;not This one&lt;/div&gt; &lt;div&gt;not This one&lt;/div&gt; &lt;/body&gt;&lt;/html&gt; The next-sibling combinator (+) separates two selectors and matches the second element only if it immediately follows the first element, and both are children of the same parent element. 123456&lt;ul&gt; &lt;li&gt;One&lt;/li&gt; &lt;li&gt;Two!&lt;/li&gt; &lt;li&gt;Three&lt;/li&gt;&lt;/ul&gt; select the &lt;li&gt;Two!&lt;/li&gt; 123li:first-of-type + li { color: red;} Select by attribute value containinginput[class*=&quot;example&quot;] Select by attribute value starting withinput[id^=&quot;example&quot;] Select by attribute value ending witha[href$=&quot;example&quot;] XPath to CSS Selector Conversion Equivalency XPath Notation CSS Selector Select by element type //div div Select by class name //div[@class=”example”] div.example Select by ID //*[@id=”example”] #example Select by attribute //input[@name=”example”] input[name=”example”] Select by attribute value containing //input[contains(@class, “example”)] input[class*=”example”] Select by attribute value starting with //input[starts-with(@id, “example”)] input[id^=”example”] Select by attribute value ending with //a[ends-with(@href, “example”)] a[href$=”example”] Select by sibling //div/following-sibling::p div + p Select by descendant //div//p div p Select by first child //div/p[1] div &gt; Select by last child //div/p[last()] div &gt; parsel.Selector$ pip install parsel .xpath() and .css() methods return a SelectorList instance, which is a list of new selectors. If you want to extract only the first matched element, you can call the selector .get() 1234567from parsel import Selectorhtml_text = &quot;&lt;html&gt;&lt;body&gt;&lt;h1&gt;Hello, Parsel!&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;&quot;html_selector = Selector(text=html_text)html_selector.css('h1')# [&lt;Selector query='descendant-or-self::h1' data='&lt;h1&gt;Hello, Parsel!&lt;/h1&gt;'&gt;]html_selector.xpath('//h1') # the same, but now with XPath# [&lt;Selector query='//h1' data='&lt;h1&gt;Hello, Parsel!&lt;/h1&gt;'&gt;] selecting the text inside the title tag: 12345selector.xpath('//title/text()')# [&lt;Selector query='//title/text()' data='Example website'&gt;]selector.css('title::text')# [&lt;Selector query='descendant-or-self::title/text()' data='Example website'&gt;] To actually extract the textual data, you must call the selector .get() or .getall() methods, as follows: 1234selector.xpath('//title/text()').getall()# ['Example website']selector.xpath('//title/text()').get()# 'Example website' query for attributes using .attrib property of a Selector: 12[img.attrib['src'] for img in selector.css('img')]# ['image1_thumb.jpg', 'image2_thumb.jpg', 'image3_thumb.jpg', 'image4_thumb.jpg', 'image5_thumb.jpg'] As a shortcut, .attrib is also available on SelectorList directly; it returns attributes for the first matching element: 12selector.css('img').attrib['src']# 'image1_thumb.jpg' 123from parsel import Selectorselector_1 = Selector(resp.text)text_1 = selector_1.css(&quot;//div[@class=&quot;example&quot;]&quot;).get() bs4123456789page = BeautifulSoup(content, &quot;html.parser&quot;)# div_item = page.find(&quot;div&quot;, class_=&quot;item&quot;)ol = page.find(&quot;ol&quot;, attrs={&quot;class&quot;: &quot;grid_view&quot;})# print(div_item)lis = ol.find_all(&quot;li&quot;)a = li.find(&quot;a&quot;)a.get(&quot;href&quot;) 1234567img = article.find_all(&quot;img&quot;)[0] img_src = img.get(&quot;src&quot;) img_resp = requests.get(img_src, headers=my_headers) img_resp.close() img_name = img_src.split(&quot;/&quot;)[-1] with open(f&quot;data08/{img_name}&quot;, mode=&quot;wb&quot;) as f1: f1.write(img_resp.content) bs4 lxml12345678910html = requests.get(&quot;https://www.google.com/search?q=minecraft&quot;, headers=headers)soup = BeautifulSoup(html.text, &quot;lxml&quot;)for result in soup.select(&quot;.tF2Cxc&quot;): title = result.select_one(&quot;.DKV0Md&quot;).text link = result.select_one(&quot;.yuRUbf a&quot;)[&quot;href&quot;] displayed_link = result.select_one(&quot;.lEBKkf span&quot;).text snippet = result.select_one(&quot;.lEBKkf span&quot;).text print(f&quot;{title}\\n{link}\\n{displayed_link}\\n{snippet}\\n&quot;) bs4 获取信息：123456789101112131415161718192021222324252627282930html = &quot;&quot;&quot;&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;baidu&lt;/title&gt;&lt;/head&gt;&lt;body link=&quot;#0000cc&quot;&gt; &lt;div id=&quot;wrapper&quot;&gt; &lt;div id=&quot;head&quot;&gt; &lt;div class=&quot;head_wrapper&quot;&gt; &lt;div id=&quot;u1&quot;&gt; &lt;a href=&quot;http://news.baidu.com&quot; class=&quot;mnav&quot; name=&quot;tj_trnews&quot;&gt;&lt;!--news--&gt;&lt;/a&gt; &lt;a href=&quot;http://news.baidu.com&quot; class=&quot;mnav&quot; name=&quot;tj_trnews&quot;&gt;news&lt;/a&gt; &lt;a href=&quot;https://www.hao123.com&quot; class=&quot;mnav&quot; name=&quot;tj_trhao123&quot;&gt;hao123&lt;/a&gt; &lt;a href=&quot;http://map.baidu.com&quot; class=&quot;mnav&quot; name=&quot;tj_trmap&quot;&gt;map&lt;/a&gt; &lt;a href=&quot;http://v.baidu.com&quot; class=&quot;mnav&quot; name=&quot;tj_trvideo&quot;&gt;video&lt;/a&gt; &lt;a href=&quot;http://tieba.baidu.com&quot; class=&quot;mnav&quot; name=&quot;tj_trtieba&quot;&gt;tieba&lt;/a&gt; &lt;a href=&quot;http://www.baidu.com/more/&quot; class=&quot;bri&quot; name=&quot;tj_briicon&quot; style=&quot;&quot;&gt;more&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&quot;&quot;&quot;bs = BeautifulSoup(html, &quot;lxml&quot;)first_a_link = bs.find(name=&quot;a&quot;)print(first_a_link)# &lt;a class=&quot;mnav&quot; href=&quot;http://news.baidu.com&quot; name=&quot;tj_trnews&quot;&gt;&lt;!--news--&gt;&lt;/a&gt; 节点名称print(first_a_link.name) # &quot;a&quot; 节点属性 12print(first_a_link.attrs) # dictinary : {'href': 'http://news.baidu.com', 'class': ['mnav'], 'name': 'tj_trnews'}print(first_a_link.attrs[&quot;href&quot;]) # http://news.baidu.com 节点文本内容print(first_a_link.string) # &quot;news&quot; 嵌套选择节点 123first_div_element = bs.find(name=&quot;div&quot;)a_in_div = first_div_element.find(name=&quot;a&quot;)print(a_in_div) #&lt;a class=&quot;mnav&quot; href=&quot;http://news.baidu.com&quot; name=&quot;tj_trnews&quot;&gt;&lt;!--news--&gt;&lt;/a&gt; find findallfindall(name=””, attrs={}, text=””) name节点名称attrs节点属性 常用属性id class 直接传入 12print(bs.find(id=&quot;head&quot;))print(bs.find(class_=&quot;mnav&quot;)) text节点文本内容 1234a_link = bs.find_all(&quot;a&quot;, attrs={&quot;href&quot;: &quot;http://news.baidu.com&quot;})# [&lt;a class=&quot;mnav&quot; href=&quot;http://news.baidu.com&quot; name=&quot;tj_trnews&quot;&gt;&lt;!--news--&gt;&lt;/a&gt;,# &lt;a class=&quot;mnav&quot; href=&quot;http://news.baidu.com&quot; name=&quot;tj_trnews&quot;&gt;news&lt;/a&gt;]print(a_link) # list beautifulsoupinstall packages: requestsbeautifulsoup4lxml bs412345678910111213141516import requestsfrom bs4 import BeautifulSoupurl = 'www.google.com'result = requests.get(url)content = result.textsoup = BeautifulSoup(content, 'lxml')# soup.find('tagname', class_='')# soup.find('tagname', id='')# soup.find('tagname')## soup.find_all('h2') subscript = soup.find('div', class_='full-script').get_text(separator=&quot;\\n&quot;, strip=True) def get_text(self, separator: str = “”, strip: bool = False, types: tuple[Type[NavigableString], …] = …) -&gt; strGet all child strings of this PageElement, concatenated using the given separator.Params:separator – Strings will be concatenated using this separator.strip – If True, strings will be stripped before being concatenated.types – A tuple of NavigableString subclasses. Any strings of a subclass not found in this list will be ignored. Although there are exceptions, the default behavior in most cases is to consider only NavigableString and CData objects. That means no comments, processing instructions, etc.Returns:A string. 12345movie_urls = movie_list.find_all('a', href=True)links = []for link in movie_urls: links.append(link['href']) subslikescript.com123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354import requestsfrom bs4 import BeautifulSouproot = 'https://subslikescript.com'# website = 'https://subslikescript.com/movies?page=2'website = f'{root}/movies'# website = 'https://subslikescript.com/movie/Titanic-120338'result = requests.get(website, timeout=5, verify=False)content = result.textsoup = BeautifulSoup(content, 'lxml')# print(soup.prettify())# paginationnav = soup.find('ul', class_='pagination')pages = nav.find_all('li', class_='page-item')[-2].get_text(strip=True)print(pages)pages = 2links = []for page in range(1, int(pages) + 1): website = f'{root}/movies?page={page}' result = requests.get(website, timeout=5, verify=False) content = result.text soup = BeautifulSoup(content, 'lxml') # print(soup.prettify()) movie_list = soup.find('ul', class_='scripts-list') movie_urls = movie_list.find_all('a', href=True) for link in movie_urls: links.append(link['href']) # print(links)for link in links: try: website = f&quot;{root}/{link}&quot; result = requests.get(website, timeout=10, verify=False) content = result.text soup = BeautifulSoup(content, 'lxml') article = soup.find('article', class_='main-article') title = article.find('h1').get_text() print(title) subscript = article.find('div', class_='full-script').get_text(separator=&quot;\\n&quot;, strip=True) # print(subscript) with open(f'subslikescript_com/{title}.txt', 'w') as file: file.write(subscript) except: pass css select12345print(bs.select(&quot;div&quot;))print(bs.select(&quot;div#head&quot;))print(bs.select(&quot;a.mnav&quot;))print(bs.select('a[class=&quot;mnav&quot;]'))print(bs.select('div a')) pandas12345678import pandasfilm_names = [&quot;无间道&quot;, &quot;霸王别姬&quot;, &quot;楚门的世界&quot;]film_scores = [&quot;9.38&quot;, &quot;9.0&quot;, &quot;9.1&quot;]df = pandas.DataFrame()df[&quot;电影名称&quot;] = film_namesdf[&quot;评分&quot;] = film_scoresdf.to_excel(&quot;films.xlsx&quot;, index = False) # index = False 去掉索引列 jsonjson_string = resp.text().decode() # 是 json格式字符串 json_dict = json.loads(json_string, encoding=’utf-8’) json dict -&gt; json stringjson.dumps() example123456789response = requests.post(url, data=data, headers=headers)json_dict = response.json()# json_list = response.json()fp = open('./dog.json', 'w', encoding='utf-8')json.dump(json_dict, fp=fp, ensure_ascii=False)# json.dump(json_list, fp=fp, ensure_ascii=False)fp.close() session12345678910111213141516import requestsurl = &quot;https://passport.17k.com/ck/user/login&quot;session = requests.session()data = { &quot;loginName&quot;: &quot;some username&quot;, &quot;password&quot;: &quot;some password&quot;,}login_resp = session.post(url, data=data)print(login_resp.cookies)shelf_resp = session.get(&quot;https://user.17k.com/ck/author2/shelf?page=1&amp;appKey=2406394919&quot;)print(shelf_resp.json())login_resp.close()shelf_resp.close() 12345678my_header = { &quot;Cookie&quot;: &quot;some cookie from web browser&quot;}shelf_d_resp = requests.get(&quot;https://user.17k.com/ck/author2/shelf?page=1&amp;appKey=2406394919&quot;, headers=my_header)print(shelf_d_resp.json())shelf_d_resp.close() referer1234my_headers = { &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36&quot;, &quot;Referer&quot;: url,} pycrypto 安装The Visual C++ Redistributable installs Microsoft C and C++ (MSVC) runtime libraries. These libraries are required by many applications built by using Microsoft C and C++ tools. If your app uses those libraries, a Microsoft Visual C++ Redistributable package must be installed on the target system before you install your app. Microsoft C++ 生成工具通过可编写脚本的独立安装程序提供 MSVC 工具集，无需使用 Visual Studio。 如果从命令行界面（例如，持续集成工作流中）生成面向 Windows 的 C++ 库和应用程序， 则推荐使用此工具。 Win7安装pycrypto报错ucrt\\inttypes.h(26): error C2061: syntax error: identifier ‘intmax_t‘1.将C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include下的stdint.h复制到C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\ucrt2.编辑C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\ucrt下的inttypes.h将#include &lt;stdint.h&gt;改为#include “stdint.h”, 目的是让它使用上面第一点复制的头文件stdint.h pycrypto is no longer maintained: see pycrypto.org pycryptodome is the modern maintained replacement for pycrypto 视频m3u8 https%3A%2F%2Fnew.1080pzy.co%2F20230116%2F34sxZOJQ%2Findex.m3u8 1234https://new.1080pzy.co/20230116/34sxZOJQ/index.m3u8#EXTM3U#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=1100000,RESOLUTION=960x540/20230116/34sxZOJQ/1100kb/hls/index.m3u8 123456789101112https://new.1080pzy.co/20230116/34sxZOJQ/1100kb/hls/index.m3u8#EXTM3U#EXT-X-VERSION:3#EXT-X-TARGETDURATION:4#EXT-X-PLAYLIST-TYPE:VOD#EXT-X-MEDIA-SEQUENCE:0#EXTINF:3.086,https://hey05.cjkypo.com/20230116/34sxZOJQ/1100kb/hls/c16ZdUp5.ts#EXTINF:2.085,https://hey05.cjkypo.com/20230116/34sxZOJQ/1100kb/hls/zAiBKR1T.ts#EXTINF:2.085,https://hey05.cjkypo.com/20230116/34sxZOJQ/1100kb/hls/na7WHAiK.ts The data is UTF-8 encoded bytes escaped with URL quoting, so you want to decode, with urllib.parse.unquote(), which handles decoding from percent-encoded data to UTF-8 bytes and then to text, transparently: 1234&gt;&gt;&gt; from urllib.parse import unquote&gt;&gt;&gt; url = 'example.com?title=%D0%BF%D1%80%D0%B0%D0%B2%D0%BE%D0%B2%D0%B0%D1%8F+%D0%B7%D0%B0%D1%89%D0%B8%D1%82%D0%B0'&gt;&gt;&gt; unquote(url)'example.com?title=правовая+защита' ffmpeg使用语法: 具体一点来说： -f concat，-f 一般设置输出文件的格式，如-f psp（输出psp专用格式），但是如果跟concat，则表示采用concat协议，对文件进行连接合并。 -safe 0，用于忽略一些文件名错误，如长路径、空格、非ANSIC字符 -i D:\\ProgramData\\study\\mov\\order.m3u8，-i后面加输入文件名，当然也可以加输入文件名组成的文件名，即order.m3u8，但是要满足文件格式，即类似于下面这种: file ‘D:\\ProgramData\\study\\mov\\tsfiles\\MQJ9iKoM.ts’file ‘D:\\ProgramData\\study\\mov\\tsfiles\\8LeDe7Wu.ts’ -c copy D:\\ProgramData\\study\\mov\\hello.mp4，-c表示输出文件采用的编码器，后面跟copy，表示直接复制，不重新编码。 并发1234567891011from threading import Threaddef func(): for i in range(1000): print(&quot;func&quot;, i)if __name__ == '__main__': thread_1 = Thread(target=func) thread_1.start() for i in range(1000): print(&quot;main&quot;, i) 123456789101112from threading import Threadclass MyThread(Thread): def run(self): for i in range(1000): print(&quot;child thread&quot;, i)if __name__ == '__main__': thread_1 = MyThread() thread_1.start() for i in range(1000): print(&quot;main&quot;, i) 池1234567891011121314from concurrent.futures import ThreadPoolExecutor, ProcessPoolExecutordef fn(name): for i in range(1000): print(name, i)if __name__ == '__main__': with ThreadPoolExecutor(8) as t_pool: for i in range(100): t_pool.submit(fn, name=f&quot;thread{i}&quot;) # 等待进程池中的任务全部完成是才向下执行 print(&quot;finished!&quot;) 协程coroutine阻塞requests.get(url)网络请求返回数据之前，处于阻塞状态。 协程：当程序遇见IO操作时，选择性的切换到其他任务微观上，单线程下，一个任务一个任务的进行切换，切换条件即IO操作宏观上，多个任务同时执行，即多任务异步操作。 DeprecationWarning: The explicit passing of coroutine objects to asyncio.wait() is deprecated since Python 3.8, and scheduled for removal in Python 3.11. The asyncio.wait() documentation obviously says nothing about this or what you’re supposed to do instead, but as far as I can figure out you replace asyncio.wait([a, b]) with asyncio.gather(a, b). 123456789101112131415161718192021222324252627282930313233343536373839404142import timeimport asyncioasync def func1(): print(&quot;hello world 1&quot;) # time.sleep(4) await asyncio.sleep(4) print(&quot;hello world 1&quot;)async def func2(): print(&quot;hello world 2&quot;) # time.sleep(3) await asyncio.sleep(3) print(&quot;hello world 2&quot;)async def func3(): print(&quot;hello world 3&quot;) # time.sleep(2) await asyncio.sleep(2) print(&quot;hello world 3&quot;)async def main(): # # Schedule three calls *concurrently*: # L = await asyncio.gather( # func1(), # func2(), # func3(), # ) # print(L) await asyncio.wait([ asyncio.create_task(func1()), asyncio.create_task(func2()), asyncio.create_task(func3()), ])t1 = time.time()asyncio.run(main())t2 = time.time()print(t2 - t1) 123456789101112131415161718192021222324252627282930313233import aiohttpimport asynciourls = [ &quot;https://p.qqan.com/up/2023-9/16951819146781660.jpg&quot;, &quot;https://p.qqan.com/up/2023-9/16950082886215315.jpg&quot;, &quot;https://p.qqan.com/up/2023-9/16957095513204923.jpg&quot;]async def aio_download(url): # &quot;sdfa&quot;.rsplit() name = url.rsplit(&quot;/&quot;, 1)[1] async with aiohttp.ClientSession() as session: async with session.get(url) as resp: # resp.text() # resp.json() # await resp.content.read() ## aiofiles 异步读写文件 with open(f&quot;data21/{name}&quot;, mode=&quot;wb&quot;) as f: f.write(await resp.content.read()) print(f&quot;{name}&quot;)async def main(): tasks = [] for url in urls: task = asyncio.create_task(aio_download(url)) tasks.append(task) await asyncio.wait(tasks)if __name__ == '__main__': asyncio.run(main()) aes 解密 TS1234567async def dec_ts(name, key): aes =AES.new(key=key, IV=b'0000000000000000', mode=AES.MODE_CBC) async with aiofiles.open(f&quot;data23/{name}&quot;, mode=&quot;rb&quot;) as f1,\\ aiofiles.open(f&quot;data23/temp_{name}&quot;, mode= &quot;wb&quot;) as f2: bs = await f1.read() await f2.write(aes.decrypt(bs)) print(f&quot;{name} decrypt finished&quot;) ts合并12345678910111213141516171819# mac osdef merge_ts(): file_list = [] with open(&quot;data15/temp2.m3u8&quot;, mode=&quot;r&quot;, encoding=&quot;utf-8&quot;) as f: for line in f : if line.startswith(&quot;#&quot;): continue line = line.strip() name = line.rsplit(&quot;/&quot;, 1)[1] file_list.append(f&quot;data23/temp_{name}&quot;) s = &quot; &quot;.join(file_list) os.system(f&quot;cat {s} &gt; movie.mp4&quot;)# windows os#文件夹下的ts文件的命名必须按照字母顺序排列, 否则合并文件后视频片段会产生混乱.（注意：名为‘10.ts’的文件的顺序会排在名为'9.ts'文件的前面，# 也就是说，这里的字母顺序是指字符串的顺序。如果要用字符数字来命名ts文件，那么就需要给某些数字加上前导0）def merge_ts2(): os.system('copy /b ' + r'C:\\Users\\lcf\\Documents\\learning\\xiaoyuan\\data23\\*.ts ' + r'C:\\Users\\lcf\\Documents\\learning\\xiaoyuan\\data23\\new.ts') print(&quot;合并成功&quot;) seleniumpip install selenium install chrome drivercopy to the python.exe and scripts folder if you have selenium above the 4.6.0 you don’t need to add executable_url and in the latest version of Selenium you don’t need to download webdriver.With latest selenium(v4.6.0 and onwards), its in-built tool known as SeleniumManger can download and handle the driver.exe if you do not specify. Selenium Manager provides automated driver management for: Google Chrome, Mozilla Firefox, Microsoft Edge.Selenium Manager is invoked transparently by the Selenium bindings when:No browser driver is detected on the PATHNo third party driver manager is being used 123456from selenium.webdriver import Chrome, ChromeOptionschrome_options = ChromeOptions()chrome_options.add_experimental_option(&quot;detach&quot;, True)web_browser = Chrome(options=chrome_options)web_browser.get(&quot;https://www.baidu.com&quot;)print(web_browser.title) With WebDriverWait, you don’t really have to take that into account. It will wait only as long as necessary until the desired element shows up (or it hits a timeout). A WebElement is a Selenium object representing an HTML element. There are many actions that you can perform on those objects, here are the most useful: Accessing the text of the element with the property element.textClicking the element with element.click()Accessing an attribute with element.get_attribute('class')Sending text to an input with element.send_keys('mypassword') WebDriver provides two main methods for finding elements. find_elementfind_elements Type Description DOM Sample Example By.ID Searches for elements based on their HTML ID &lt;div id=&quot;myID&quot;&gt; find_element(By.ID, “myID”) By.NAME Searches for elements based on their name attribute &lt;input name=&quot;myNAME&quot;&gt; find_element(By.NAME, “myNAME”) By.XPATH Searches for elements based on an XPath expression &lt;span&gt;My &lt;a&gt;Link&lt;/a&gt;&lt;/span&gt; find_element(By.XPATH, “//span/ By.LINK_TEXT Searches for anchor elements based on a match of their text content &lt;a&gt;My Link&lt;/a&gt; find_element(By.LINK_TEXT, “My Link”) By.PARTIAL_LINK_TEXT Searches for anchor elements based on a sub-string match of their text content &lt;a&gt;My Link&lt;/a&gt; find_element(By.PARTIAL_LINK_TEXT, “Link”) By.TAG_NAME Searches for elements based on their tag name &lt;h1&gt; find_element(By.TAG_NAME, “h1”) By.CLASS_NAME Searches for elements based on their HTML classes &lt;div class=&quot;myCLASS&quot;&gt; find_element(By.CLASSNAME, By.CSS_SELECTOR Searches for elements based on a CSS selector &lt;span&gt;My &lt;a&gt;Link&lt;/a&gt;&lt;/span&gt; find_element(By.CSS_SELECTOR, 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152# from selenium.webdriver import Chrome, ChromeOptionsimport timefrom selenium.webdriver.chrome.options import Optionsfrom selenium.webdriver import Chromefrom selenium.webdriver.common.by import Byfrom selenium.webdriver.common.keys import Keyschrome_options = Options()chrome_options.add_experimental_option(&quot;detach&quot;, True)web_browser = Chrome(options=chrome_options)url = &quot;https://www.lagou.com/&quot;web_browser.get(url)# print(web_browser.title)# 在selenium环境下可以大胆chrome复制XPATHlocation = web_browser.find_element(by=By.XPATH, value='//*[@id=&quot;changeCityBox&quot;]/p[1]/a')location.click()time.sleep(3)search_input = web_browser.find_element(by=By.XPATH, value='//*[@id=&quot;search_input&quot;]')search_input.send_keys(&quot;python&quot;, Keys.ENTER)## selenium 动态执行JSweb_browser.execute_script(&quot;&quot;&quot;let a = document.getElementsByClassName(&quot;un-login-banner&quot;)[0];if (a) {a.style.display = &quot;none&quot;;}&quot;&quot;&quot;)time.sleep(2)# //*[@id=&quot;jobList&quot;]/div[1]/div[1]/div[1]/div[2]/div[1]/ajobs = web_browser.find_elements(by=By.XPATH, value='//*[@id=&quot;jobList&quot;]/div[1]/div')for job in jobs: job_name = job.find_element(By.XPATH, './/*[@id=&quot;openWinPostion&quot;]') # company_name = job.find_element(By.XPATH, './div[1]/div[2]/div[1]/a') # print(job_name.text, company_name.text) job_name.click() ##切换 TAB time.sleep(2) web_browser.switch_to.window(web_browser.window_handles[-1]) job_detail = web_browser.find_element(By.XPATH,'//*[@id=&quot;job_detail&quot;]/dd[2]/div').text print(job_detail) ## close tab web_browser.close() web_browser.switch_to.window(web_browser.window_handles[0]) # break# web_browser.quit() 123456browser = Chrome()browser.get(&quot;&quot;)html_source = browser.page_source 123456from selenium.webdirver import ChromeOptionsoption = ChromeOptionsoption.add_experimental_option('excludeSwitches', ['enable-automation'])dirver = Chrome(options=option) selenium123456789101112131415161718192021222324252627282930313233343536373839404142434445from selenium import webdriverfrom selenium.webdriver.common.by import Byfrom selenium.webdriver.support.ui import Selectimport timeimport pandas as pdwebsite = 'https://www.adamchoi.co.uk/overs/detailed'country = 'Spain'driver = webdriver.Chrome()driver.get(website)time.sleep(5)all_matches_button = driver.find_element(by=By.XPATH, value=&quot;//label[@analytics-event='All matches']&quot;)all_matches_button.click()dropdown = Select(driver.find_element(by=By.ID, value='country'))dropdown.select_by_visible_text(country)time.sleep(5)matches = driver.find_elements(by=By.TAG_NAME, value='tr')dates = []home_team = []score = []away_team = []for match in matches: # print(match.text) date = match.find_element(by=By.XPATH, value='./td[1]').text print(date) dates.append(date) home_team.append(match.find_element(by=By.XPATH, value='./td[2]').text) score.append(match.find_element(by=By.XPATH, value='./td[3]').text) away_team.append(match.find_element(by=By.XPATH, value='./td[4]').text)df = pd.DataFrame({ 'date': dates, 'home_team': home_team, 'score': score, 'away_team': away_team,})df.to_csv(f&quot;www_adamchoi_co_uk/{country}_footbal_data.csv&quot;, index=False) headless mode123456from selenium import webdriverfrom selenium.webdriver.chrome.options import Optionsoptions = Options()options.add_argument('--headless=new')driver = webdriver.Chrome(CHROMEDRIVER_PATH, options=options) audible.com123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172import timefrom selenium import webdriverfrom selenium.webdriver.common.by import Byfrom selenium.webdriver.support.ui import WebDriverWaitfrom selenium.webdriver.support import expected_conditions# from selenium.webdriver.chrome.options import Optionsimport pandas# website = 'https://www.audible.com/search'website = 'https://www.audible.com/adblbestsellers'# options = Options()# options.add_argument('--headless=new')# options.add_argument('window-size=1920x1080')# driver = webdriver.Chrome(options=options)driver = webdriver.Chrome()driver.get(website)driver.maximize_window()# time.sleep(5)# paginationpagination_li_s = (WebDriverWait(driver,10) .until(expected_conditions.presence_of_all_elements_located( (By.XPATH, '//ul[contains(@class,&quot;pagingElements&quot;)]/li'))))# pagination_li_s = driver.find_elements(by=By.XPATH, value='//ul[contains(@class,&quot;pagingElements&quot;)]/li')last_page = int(pagination_li_s[-2].text)print(last_page)book_titles = []book_authors = []book_lengths = []for page in range(1, last_page + 1): # time.sleep(5) # container = (WebDriverWait(driver,10) # .until(expected_conditions.presence_of_element_located( # (By.XPATH, '//*[@id=&quot;center-3&quot;]/div/div/div/span[2]/ul')))) # book_list = container.find_elements(by=By.XPATH, value='./li') book_list = (WebDriverWait(driver, 5) .until(expected_conditions.presence_of_all_elements_located( (By.XPATH, '//*[@id=&quot;center-3&quot;]/div/div/div/span[2]/ul/li')))) # book_list = driver.find_elements(by=By.XPATH, value='//*[@id=&quot;center-3&quot;]/div/div/div/span[2]/ul/li') for book in book_list: title = book.find_element(by=By.XPATH, value=&quot;.//h3/a&quot;).text print(title) author = book.find_element(by=By.XPATH, value=&quot;.//li[contains(@class,'authorLabel')]/span&quot;).text length = book.find_element(by=By.XPATH, value=&quot;.//li[contains(@class,'runtimeLabel')]/span&quot;).text book_titles.append(title) book_authors.append(author) book_lengths.append(length) next_page = driver.find_element(By.XPATH, '//*[contains(@class,&quot;nextButton&quot;)]') next_page.click()df = pandas.DataFrame({ &quot;book_titles&quot;: book_titles, &quot;book_authors&quot;: book_authors, &quot;book_lengths&quot;: book_lengths,})df.to_csv('www_audible_com/books.csv', index=False) twitter.com login12345678910111213141516171819202122232425262728293031323334353637383940from selenium import webdriverfrom selenium.webdriver.common.by import Byimport timeweb = 'https://twitter.com/'driver = webdriver.Chrome()driver.get(web)time.sleep(3)login = driver.find_element(By.XPATH, '//*[@data-testid=&quot;loginButton&quot;]')login.click()time.sleep(5)username = driver.find_element(By.XPATH, '//*[@name=&quot;text&quot;]')username.send_keys(&quot;email@qq.com&quot;)next_btn = driver.find_element(By.XPATH, '//*[@role=&quot;dialog&quot;]/div/div/div[2]/div[2]/div/div/div/div[6]')next_btn.click()time.sleep(5)## 账号异常，需要输入用户名phone_n = driver.find_element(By.XPATH, '//*[@name=&quot;text&quot;]')phone_n.send_keys(&quot;username&quot;)next_btn = driver.find_element(By.XPATH, '//*[@role=&quot;dialog&quot;]/div/div/div[2]/div[2]/div[2]/div/div/div/div/div')next_btn.click()time.sleep(4)phone_n = driver.find_element(By.XPATH, '//*[@name=&quot;password&quot;]')phone_n.send_keys(&quot;password123&quot;)next_btn = driver.find_element(By.XPATH, '//*[@role=&quot;dialog&quot;]/div/div/div[2]/div[2]/div[2]/div/div[1]/div/div/div/div')next_btn.click()time.sleep(100) 快速生成由复制的文本生成 DICTregex: (.*): (.*)replace: &quot;$1&quot;: &quot;$2&quot;, 12345i: 好人from: autoto: dictResult: truekeyid: webfanyi 12345&quot;i&quot;: &quot;好人&quot;,&quot;from&quot;: &quot;auto&quot;,&quot;to&quot;: &quot;&quot;,&quot;dictResult&quot;: &quot;true&quot;,&quot;keyid&quot;: &quot;webfanyi&quot;, md5from hashlib import md5 def md5_string(string_0): s = md5() s.update(string_0.encode()) return s.hexdigest()","link":"/0004%20Formal%20science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%20Computer%20science/Software%20notations%C2%A0and%C2%A0tools/python/python_web_scraping/"}],"tags":[{"name":"历史学","slug":"历史学","link":"/tags/%E5%8E%86%E5%8F%B2%E5%AD%A6/"},{"name":"History","slug":"History","link":"/tags/History/"},{"name":"business","slug":"business","link":"/tags/business/"},{"name":"economic","slug":"economic","link":"/tags/economic/"},{"name":"stock","slug":"stock","link":"/tags/stock/"},{"name":"financial","slug":"financial","link":"/tags/financial/"},{"name":"math","slug":"math","link":"/tags/math/"},{"name":"primary school","slug":"primary-school","link":"/tags/primary-school/"},{"name":"html, css","slug":"html-css","link":"/tags/html-css/"},{"name":"html","slug":"html","link":"/tags/html/"},{"name":"web development","slug":"web-development","link":"/tags/web-development/"},{"name":"url, encoding","slug":"url-encoding","link":"/tags/url-encoding/"},{"name":"python","slug":"python","link":"/tags/python/"}],"categories":[{"name":"0001 Humanities","slug":"0001-Humanities","link":"/categories/0001-Humanities/"},{"name":"艺术学 Arts","slug":"0001-Humanities/艺术学-Arts","link":"/categories/0001-Humanities/%E8%89%BA%E6%9C%AF%E5%AD%A6-Arts/"},{"name":"历史学 History","slug":"0001-Humanities/历史学-History","link":"/categories/0001-Humanities/%E5%8E%86%E5%8F%B2%E5%AD%A6-History/"},{"name":"0002 Social science","slug":"0002-Social-science","link":"/categories/0002-Social-science/"},{"name":"0003 Natural science","slug":"0003-Natural-science","link":"/categories/0003-Natural-science/"},{"name":"语言学 Linguistics and languages","slug":"0002-Social-science/语言学-Linguistics-and-languages","link":"/categories/0002-Social-science/%E8%AF%AD%E8%A8%80%E5%AD%A6-Linguistics-and-languages/"},{"name":"经济管理学 Business and Economics","slug":"0002-Social-science/经济管理学-Business-and-Economics","link":"/categories/0002-Social-science/%E7%BB%8F%E6%B5%8E%E7%AE%A1%E7%90%86%E5%AD%A6-Business-and-Economics/"},{"name":"地球科学 Earth science","slug":"0003-Natural-science/地球科学-Earth-science","link":"/categories/0003-Natural-science/%E5%9C%B0%E7%90%83%E7%A7%91%E5%AD%A6-Earth-science/"},{"name":"0004 Formal science","slug":"0004-Formal-science","link":"/categories/0004-Formal-science/"},{"name":"数学 Mathematics","slug":"0004-Formal-science/数学-Mathematics","link":"/categories/0004-Formal-science/%E6%95%B0%E5%AD%A6-Mathematics/"},{"name":"计算机科学技术 Computer science","slug":"0004-Formal-science/计算机科学技术-Computer-science","link":"/categories/0004-Formal-science/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF-Computer-science/"},{"name":"0005 Applied science","slug":"0005-Applied-science","link":"/categories/0005-Applied-science/"},{"name":"工程与技术科学 Engineering and technology","slug":"0005-Applied-science/工程与技术科学-Engineering-and-technology","link":"/categories/0005-Applied-science/%E5%B7%A5%E7%A8%8B%E4%B8%8E%E6%8A%80%E6%9C%AF%E7%A7%91%E5%AD%A6-Engineering-and-technology/"},{"name":"机械工程 Mechanical engineering","slug":"0005-Applied-science/工程与技术科学-Engineering-and-technology/机械工程-Mechanical-engineering","link":"/categories/0005-Applied-science/%E5%B7%A5%E7%A8%8B%E4%B8%8E%E6%8A%80%E6%9C%AF%E7%A7%91%E5%AD%A6-Engineering-and-technology/%E6%9C%BA%E6%A2%B0%E5%B7%A5%E7%A8%8B-Mechanical-engineering/"},{"name":"category1 level1","slug":"category1-level1","link":"/categories/category1-level1/"},{"name":"category1 level2","slug":"category1-level1/category1-level2","link":"/categories/category1-level1/category1-level2/"},{"name":"jekyll update","slug":"jekyll-update","link":"/categories/jekyll-update/"}],"pages":[{"title":"about","text":"","link":"/about/index.html"}]}